IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_FEC_GETFECHAVEHLOCAL_NUEVALISTA_VEHICULOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_FEC_GETFECHAVEHLOCAL_NUEVALISTA_VEHICULOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_FEC_GETFECHAVEHLOCAL_VEHICULOS2]
(
  @PATENTE			NVARCHAR(6) = NULL
 ,@ID_DOC_FEC		INT = NULL
 ,@DIVCOD			NVARCHAR(4) = NULL
 ,@IDEMPRESA		NVARCHAR(11) = NULL
 ,@FECHA_DOC		NVARCHAR(8) OUTPUT

) AS
BEGIN
	DECLARE @ID_DOC_FEC_FEC INT = NULL
	DECLARE @EMP_COMUN	INT = NULL
	DECLARE @DIV_COMUN	INT  = NULL
	DECLARE @EXISTE_QUERY BIT = 0
	DECLARE @QUERY_STR NVARCHAR(500)

	SET @FECHA_DOC = NULL

	SELECT
		TOP 1
		@EXISTE_QUERY = 1,
		@ID_DOC_FEC_FEC = DF.ID_DOC_FEC,
		@EMP_COMUN = COALESCE(D.COMUN, 0),
		@DIV_COMUN = COALESCE(DF.COMUN, 0)
	FROM DOCS_FEC DF
	INNER JOIN DOCS D
		ON DF.ID_DOC_DEPEND = D.ID_DOC
	WHERE
		(DF.ID_DOC_FEC = @ID_DOC_FEC)

	IF @EXISTE_QUERY = 1
		BEGIN
			SET @QUERY_STR = 'SELECT TOP 1 @FECHA_DOC = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = ''' + @PATENTE + ''') AND (ID_DOC_FEC = ' + CONVERT(NVARCHAR(30), @ID_DOC_FEC) + ') '
			IF @EMP_COMUN = 0
				BEGIN
					IF @DIV_COMUN = 0
						BEGIN
							SET @QUERY_STR = @QUERY_STR + 'AND ( (DIVISION = ''' + @DIVCOD + ''') OR (ISNULL(DIVISION, ''AA'') = ''AA'') ) AND (EMPRESA = ''' + @IDEMPRESA +  ''')'
						END
					ELSE
						BEGIN
							SET @QUERY_STR = @QUERY_STR + 'AND (EMPRESA = ''' + @IDEMPRESA +  ''')'
						END
				END
			ELSE
				BEGIN
					IF @DIV_COMUN = 0
						BEGIN
							SET @QUERY_STR = @QUERY_STR + 'AND ( (DIVISION = ''' + @DIVCOD + ''') OR (ISNULL(DIVISION, ''AA'') = ''AA'') )'
						END
				END

			SET @QUERY_STR = @QUERY_STR + ' ORDER BY FECHAMOD DESC, HORAMOD DESC'
			EXECUTE sp_executesql @QUERY_STR, N'@FECHA_DOC NVARCHAR(8) OUTPUT',@FECHA_DOC = @FECHA_DOC OUTPUT
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_FEC_VALIDAFECHAS_VEHICULOS]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_FEC_VALIDAFECHAS_VEHICULOS]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_FEC_VALIDAFECHAS_VEHICULOS]
(@ID_DOC			INT = NULL
,@PATENTE			NVARCHAR(6) = NULL
,@IDEMPRESA			NVARCHAR(11) = NULL
,@DIVCOD			NVARCHAR(4) = NULL
,@RESPUESTA			INT OUTPUT)
AS
BEGIN
	
	SET @RESPUESTA = 1

	SELECT DF.ID_DOC_FEC
		 , DF.NOMBRE 
		 , '19000101' AS FECHA 
		 --, 0 AS VALIDO_MAYOR_HOY 
		 , [dbo].[hoy](GETDATE()) AS FECHAHOY
	INTO #TEMP
	FROM DOCS_FEC AS DF
	WHERE 
	(DF.ID_DOC_DEPEND =  @ID_DOC) AND 
	(ACTIVO = 'SI') AND
	VALIDO_MAYOR_HOY = 1
	ORDER BY ORDEN ASC

	DECLARE @ID_DOC_FEC			INT,
			@NOMBRE		NVARCHAR(100),
			@FECHA			NVARCHAR(8)
			--@VALIDO_MAYOR_HOY INT 
	DECLARE Fechas_DocsCtta CURSOR FOR
	SELECT ID_DOC_FEC , NOMBRE , FECHA --, VALIDO_MAYOR_HOY  
	FROM #TEMP 
	OPEN Fechas_DocsCtta

	FETCH Fechas_DocsCtta INTO    @ID_DOC_FEC , @NOMBRE , @FECHA --, @VALIDO_MAYOR_HOY

	WHILE (@@FETCH_STATUS = 0 )
		BEGIN
			DECLARE @EMP_COMUN INT = 0
			DECLARE @DIV_COMUN INT = 0
			SELECT @EMP_COMUN = D.COMUN 
				 , @DIV_COMUN = DF.COMUN  
			FROM DOCS_FEC AS DF 
			INNER JOIN DOCS AS D ON DF.ID_DOC_DEPEND = D.ID_DOC 
			WHERE  (DF.ID_DOC_FEC = @ID_DOC_FEC)

			DECLARE @VAL_FECHA NVARCHAR(8) = ''
			IF(@EMP_COMUN = 0)
				BEGIN
					IF(@DIV_COMUN = 0)
						BEGIN
							SELECT TOP 1 @VAL_FECHA = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @PATENTE ) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (DIVISION = @DIVCOD OR ISNULL(DIVISION,'AA') = 'AA') AND EMPRESA = @IDEMPRESA
						END
					ELSE
						BEGIN
							SELECT TOP 1 @VAL_FECHA = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @PATENTE) AND (ID_DOC_FEC = @ID_DOC_FEC) AND EMPRESA = @IDEMPRESA
						END
				END
			ELSE
				BEGIN
					IF(@DIV_COMUN = 0)
						BEGIN
							SELECT TOP 1 @VAL_FECHA = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @PATENTE) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (DIVISION = @DIVCOD OR ISNULL(DIVISION,'AA') = 'AA')
						END
					ELSE 
						BEGIN
							SELECT TOP 1 @VAL_FECHA = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @PATENTE) AND (ID_DOC_FEC = @ID_DOC_FEC)
						END
				END
			
			IF [dbo].[hoy](GETDATE())  > @VAL_FECHA
				SET @RESPUESTA = 0

			FETCH Fechas_DocsCtta INTO @ID_DOC_FEC , @NOMBRE , @FECHA --, @VALIDO_MAYOR_HOY

		END
	CLOSE Fechas_DocsCtta
	DEALLOCATE Fechas_DocsCtta

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_FGET_FEC_USER]' ) AND type IN ( N'P', N'FN' ))\nDROP FUNCTION [dbo].[V4MVC_FGET_FEC_USER]\nGO\nCREATE FUNCTION [dbo].[V4MVC_FGET_FEC_USER]  
(
	@RAW_FEC NVARCHAR(8)
)
RETURNS NVARCHAR(20)
AS
BEGIN
	DECLARE @RESULT NVARCHAR(20)
	DECLARE @FORMATO_SALIDA NVARCHAR(20) = 'dd-mmt-aaaa'
	DECLARE @MES NVARCHAR(3) = ''
	DECLARE @MES_EXPR NVARCHAR(6) = ''
	DECLARE @DIA NVARCHAR(3) = ''
	DECLARE @ANIO NVARCHAR(5) = ''
	IF(@RAW_FEC IS NOT NULL  AND @RAW_FEC <> '')
		BEGIN
			IF(LEN(@RAW_FEC) = 8)
				BEGIN
					SET @DIA = SUBSTRING(@RAW_FEC, 7, 2)
					SET @MES = SUBSTRING(@RAW_FEC, 5, 2)
					SET @ANIO = SUBSTRING(@RAW_FEC, 1, 4)

					IF(@FORMATO_SALIDA = 'dd-mmt-aaaa')
						BEGIN
							
							IF(@MES = '01')
								BEGIN
									SET @MES_EXPR = '-Ene-'
								END
							ELSE IF(@MES = '02')
								BEGIN
									SET @MES_EXPR = '-Feb-'
								END
							ELSE IF(@MES = '03')
								BEGIN
									SET @MES_EXPR = '-Mar-'
								END
							ELSE IF(@MES = '04')
								BEGIN
									SET @MES_EXPR = '-Abr-'
								END
							ELSE IF(@MES = '05')
								BEGIN
									SET @MES_EXPR = '-May-'
								END
							ELSE IF(@MES = '06')
								BEGIN
									SET @MES_EXPR = '-Jun-'
								END
							ELSE IF(@MES = '07')
								BEGIN
									SET @MES_EXPR = '-Jul-'
								END
							ELSE IF(@MES = '08')
								BEGIN
									SET @MES_EXPR = '-Ago-'
								END
							ELSE IF(@MES = '09')
								BEGIN
									SET @MES_EXPR = '-Sep-'
								END
							ELSE IF(@MES = '10')
								BEGIN
									SET @MES_EXPR = '-Oct-'
								END
							ELSE IF(@MES = '11')
								BEGIN
									SET @MES_EXPR = '-Nov-'
								END
							ELSE IF(@MES = '12')
								BEGIN
									SET @MES_EXPR = '-Dic-'
								END
							SET @RESULT = CONCAT(@DIA, @MES_EXPR, @ANIO)
						END
					ELSE
						BEGIN
							SET @RESULT = CONCAT(@DIA, '/', @MES_EXPR, '/',  @ANIO)
						END
				END
			ELSE
				BEGIN
					EXEC @RESULT = [dbo].[V4MVC_FGET_FEC_USER] @RAW_FEC = '19000101'
				END
		END
	ELSE
		BEGIN
			EXEC @RESULT = [dbo].[V4MVC_FGET_FEC_USER] @RAW_FEC = '19000101'
		END
	RETURN @RESULT
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_FSTR_RUT]' ) AND type IN ( N'P', N'FN' ))\nDROP FUNCTION [dbo].[V4MVC_FSTR_RUT]\nGO\nCREATE FUNCTION [dbo].[V4MVC_FSTR_RUT](
@RAW_RUT	NVARCHAR(11)) RETURNS NVARCHAR(20)
AS
BEGIN
	DECLARE @DV NVARCHAR(2) = ''
	DECLARE @RESTO NVARCHAR(20) = ''
	DECLARE @RESULT NVARCHAR(20)
	DECLARE @IDX INT = 1
	DECLARE @LARGO INT
	DECLARE @CLEN INT
	DECLARE @NNUEVO NVARCHAR(20) = ''

	SET @RESULT = @RAW_RUT
	IF(@RAW_RUT IS NOT NULL AND LEN(LTRIM(RTRIM(@RAW_RUT))) > 1)
		BEGIN
			SET @RAW_RUT = LTRIM(RTRIM(@RAW_RUT))
			SET @DV = SUBSTRING(@RAW_RUT, LEN(@RAW_RUT), 1)
			SET @RESTO = REPLACE(SUBSTRING(@RAW_RUT, 1, LEN(@RAW_RUT) - 1), '-', '')

			IF(ISNUMERIC(@RESTO) = 1)
				BEGIN
					SET @LARGO = LEN(@RESTO)
					SET @CLEN  = LEN(@RESTO)
					WHILE(@IDX <= @CLEN)
						BEGIN
							IF((@IDX - 1) % 3 = 0 AND @IDX > 1)
								BEGIN
									SET @NNUEVO = CONCAT(@NNUEVO, '.')
								END
							SET @NNUEVO = CONCAT(@NNUEVO, SUBSTRING(@RESTO, @LARGO, 1))
							SET @IDX = @IDX + 1
							SET @LARGO = @LARGO - 1
						END
					SET @RESULT = CONCAT(REVERSE(@NNUEVO), '-', @DV)
				END
			ELSE
				BEGIN
					SET @RESULT = CONCAT(@RESTO,@DV)
				END
		END
	RETURN @RESULT
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_RESUELVE_SOLO_RUT]' ) AND type IN ( N'P', N'FN' ))\nDROP FUNCTION [dbo].[V4MVC_RESUELVE_SOLO_RUT]\nGO\nCREATE FUNCTION [dbo].[V4MVC_RESUELVE_SOLO_RUT](
	@RUT	NVARCHAR(10)
) RETURNS NVARCHAR(10)
AS
BEGIN
	DECLARE @DIGITO NVARCHAR(1)
	DECLARE @PRIMER	NVARCHAR(1)
	DECLARE @RV_DV NVARCHAR(10)
	DECLARE @RV_RUT INT
	DECLARE @RV_SUMA INT
	DECLARE @RV_CONT INT

	IF(@RUT IS NULL OR @RUT = '')
		BEGIN
			RETURN '0'
		END
	ELSE
		BEGIN
			IF(ISNUMERIC(SUBSTRING(@RUT, 1 , 1)) = 1)
				BEGIN
					SET @RUT = CONCAT('X', @RUT)
				END

			IF(CONVERT(INT, LEN(@RUT)) > 9)
				BEGIN
					SET @RUT = SUBSTRING(@RUT, 1 , 10)
					SET @PRIMER = SUBSTRING(@RUT, 2 , 1)

					IF(ISNUMERIC(@PRIMER) = 1)
						BEGIN
							IF(@PRIMER = '0')
								BEGIN
									SET @RUT = SUBSTRING(@RUT, 2 , LEN(@RUT))
								END
							ELSE IF(@PRIMER = '1' OR @PRIMER = '2' OR @PRIMER = '3' OR @PRIMER = '4')
								BEGIN
									SET @RUT = @RUT + ''
								END
							ELSE
								BEGIN
									SET @RUT = SUBSTRING(@RUT, 1 , 9)
								END
						END
					ELSE
						BEGIN
							RETURN '0'
						END
				END
			ELSE
				BEGIN
					IF(CONVERT(INT, LEN(@RUT)) = 9)
						BEGIN
							SET @PRIMER = SUBSTRING(@RUT, 2 , 1)

							IF(ISNUMERIC(@PRIMER) = 1)
								BEGIN
									IF(@PRIMER = '0')
										BEGIN
											SET @RUT = SUBSTRING(@RUT, 2 , LEN(@RUT)) + '9'
										END
									ELSE IF(@PRIMER = '1' OR @PRIMER = '2' OR @PRIMER = '3' OR @PRIMER = '4')
										BEGIN
											SET @RUT = @RUT + '9'
										END
								END
							ELSE
								BEGIN
									RETURN '0'
								END
						END
					ELSE
						BEGIN
							IF(CONVERT(INT, LEN(@RUT)) = 8)
								BEGIN
									SET @PRIMER = SUBSTRING(@RUT, 2 , 1)

									IF(ISNUMERIC(@PRIMER) = 1)
										BEGIN
											IF(@PRIMER = '0')
												BEGIN
													RETURN '0'
												END
											ELSE
												BEGIN
													SET @RUT = @RUT + '9'
												END
										END
									ELSE
										BEGIN
											RETURN '0'
										END
								END
							ELSE
								BEGIN
									RETURN '0'
								END
						END
				END
		END

	SET @DIGITO = SUBSTRING(@RUT, LEN(@RUT), 1)
	SET @RUT = SUBSTRING(@RUT, 2, LEN(@RUT) - 2)

	IF(ISNUMERIC(@RUT) = 1)
		BEGIN
			SET @RV_RUT = CONVERT(INT, @RUT)
			SET @RV_SUMA = 0 
			SET @RV_CONT = 2
			WHILE(@RV_RUT > 0)
				BEGIN
					SET @RV_SUMA  = @RV_SUMA + ((@RV_RUT % 10) * @RV_CONT)
					SET @RV_RUT = @RV_RUT / 10
					SET @RV_CONT = @RV_CONT + 1
					IF(@RV_CONT = 8)
						BEGIN
							SET @RV_CONT = 2
						END
				END
			SET @RV_SUMA = @RV_SUMA % 11
			SET @RV_DV = CONVERT(NVARCHAR(10), 11 - @RV_SUMA)
			IF(@RV_DV = '10')
				BEGIN
					SET @RV_DV = 'K'
				END 
			IF(@RV_DV = '11')
				BEGIN
					SET @RV_DV = '0'
				END

			RETURN CONCAT(@RUT, @RV_DV)
		END
	ELSE
		BEGIN
			RETURN '0'
		END

	RETURN '0'
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC__F29_DELETE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC__F29_DELETE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC__F29_DELETE_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@PERIODO			NVARCHAR(6)
 ,@USUARIO			NVARCHAR(10)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @F29_EXISTS BIT = 0
	DECLARE @F29_EMPRESA NVARCHAR(20)
	DECLARE @F29_PERIODO NVARCHAR(6)

	DECLARE @F29_VENTAS	BIGINT
	DECLARE @F29_COMPRAS	BIGINT
	DECLARE @F29_REMANENTE	BIGINT
	DECLARE @F29_PPM	BIGINT
	DECLARE @F29_IRENTA	BIGINT
	DECLARE @F29_BHONORARIOS	BIGINT
	DECLARE @F29_IMP_PAGADO	BIGINT
	DECLARE @F29_REMMESANT	BIGINT
	DECLARE @F29_MULTAS	BIGINT
	DECLARE @F29_DEPRECIACION	BIGINT
	DECLARE @F29_DEPRECACUM	BIGINT
	DECLARE @F29_CAPITAL	BIGINT
	DECLARE @F29_ESTADOCERT	NVARCHAR(20)

	DECLARE @F29_VALIDADO NVARCHAR(2)
	DECLARE @F29_ID UNIQUEIDENTIFIER
	DECLARE @F29_OBSERVACION NVARCHAR(500)
	DECLARE @F29_USUARIO NVARCHAR(10)
	DECLARE @F29_FECHASUBE NVARCHAR(8)
	DECLARE @F29_HORASUBE NVARCHAR(8)
	DECLARE @F29_CERTUSUARIO NVARCHAR(20)
	DECLARE @F29_CERTFECHA NVARCHAR(8)
	DECLARE @F29_CERTHORA NVARCHAR(8)

	DECLARE @DSP_ID_DISPUTA INT
	DECLARE @DSP_ID_DOC INT
	DECLARE @DSP_ID UNIQUEIDENTIFIER
	DECLARE @DSP_USUARIO NVARCHAR(10)
	DECLARE @DSP_HORA NVARCHAR(8)
	DECLARE @DSP_OBSERVACION NVARCHAR(1000)
	DECLARE @DSP_CERTUSUARIO NVARCHAR(10)
	DECLARE @DSP_CERTFECHA NVARCHAR(8)
	DECLARE @DSP_CERTHORA NVARCHAR(8)
	DECLARE @DSP_ESTADO	NVARCHAR(2)
	DECLARE @DSP_REVALUSUARIO NVARCHAR(10)
	DECLARE @DSP_REVALFECHA	NVARCHAR(8)
	DECLARE @DSP_REVALHORA	NVARCHAR(8)
	DECLARE @DSP_OBSERVACION_REVAL	NVARCHAR(1000)
	DECLARE @DSP_VALIDADO NVARCHAR(2)
	DECLARE @DSP_PERIODO NVARCHAR(6)
	DECLARE @DSP_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0
	SET @DISPUTA_EMPRESA = ''
	SET @DISPUTA_FECHA = ''

	SELECT
		TOP 1
		@F29_EXISTS = 1,
		@F29_EMPRESA = EMPRESA,
		@F29_PERIODO = PERIODO,

		@F29_VENTAS  = VENTAS,
		@F29_COMPRAS  = COMPRAS,
		@F29_REMANENTE  = REMANENTE,
		@F29_PPM  = PPM,
		@F29_IRENTA  = IRENTA,
		@F29_BHONORARIOS  = BHONORARIOS,
		@F29_IMP_PAGADO  = IMP_PAGADO,
		@F29_REMMESANT  = REMMESANT,
		@F29_MULTAS  = MULTAS,
		@F29_DEPRECIACION  = DEPRECIACION,
		@F29_DEPRECACUM  = DEPRECACUM,
		@F29_CAPITAL  = CAPITAL,
		@F29_ESTADOCERT  = ESTADOCERT,

		@F29_VALIDADO = VALIDADO,
		@F29_ID = ID,
		@F29_OBSERVACION = OBSERVACION,
		@F29_USUARIO = USUARIO,
		@F29_FECHASUBE = FECHASUBE,
		@F29_HORASUBE = HORASUBE,
		@F29_CERTUSUARIO = CERTUSUARIO,
		@F29_CERTFECHA = CERTFECHA,
		@F29_CERTHORA = CERTHORA
	FROM _F29
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO

	IF(@F29_EXISTS = 1)
		BEGIN

			INSERT INTO _F29_LOG
						(
							EMPRESA,
							PERIODO,
							VENTAS,
							COMPRAS,
							REMANENTE,
							PPM,
							IRENTA,
							BHONORARIOS,
							IMP_PAGADO,
							REMMESANT,
							MULTAS,
							DEPRECIACION,
							DEPRECACUM,
							CAPITAL,
							ID,
							VALIDADO,
							OBSERVACION,
							ESTADOCERT,
							USUARIO,
							FECHASUBE,
							HORASUBE,
							CERTUSUARIO,
							CERTFECHA,
							CERTHORA,
							USUARIODEL,
							FECHADEL,
							HORADEL
						)
			VALUES
						(
							@F29_EMPRESA,
							@F29_PERIODO,
							@F29_VENTAS,
							@F29_COMPRAS,
							@F29_REMANENTE,
							@F29_PPM,
							@F29_IRENTA,
							@F29_BHONORARIOS,
							@F29_IMP_PAGADO,
							@F29_REMMESANT,
							@F29_MULTAS,
							@F29_DEPRECIACION,
							@F29_DEPRECACUM,
							@F29_CAPITAL,
							@F29_ID,
							@F29_VALIDADO,
							@F29_OBSERVACION,
							@F29_ESTADOCERT,
							@F29_USUARIO,
							@F29_FECHASUBE,
							@F29_HORASUBE,
							@F29_CERTUSUARIO,
							@F29_CERTFECHA,
							@F29_CERTHORA,
							@USUARIO,
							@CURR_FECHA,
							@CURR_TIEMPOFULL
						)
			
			/*--------------------------*/
			
			SELECT
				TOP 1
				@DISPUTA_EXISTE = 1,
				@DSP_ID_DISPUTA = ID_DISPUTA,
				@DISPUTA_EMPRESA = EMPRESA,
				@DSP_ID_DOC = ID_DOC,
				@DSP_ID = ID,
				@DSP_USUARIO = USUARIO,
				@DISPUTA_FECHA = FECHA,
				@DSP_HORA = HORA,
				@DSP_OBSERVACION = OBSERVACION,
				@DSP_CERTUSUARIO = CERTUSUARIO,
				@DSP_CERTFECHA = CERTFECHA,
				@DSP_CERTHORA = CERTHORA,
				@DSP_ESTADO = ESTADO,
				@DSP_REVALUSUARIO = REVALUSUARIO,
				@DSP_REVALFECHA = REVALFECHA,
				@DSP_REVALHORA = REVALHORA,
				@DSP_OBSERVACION_REVAL = OBSERVACION_REVAL,
				@DSP_VALIDADO = VALIDADO,
				@DSP_PERIODO = PERIODO,
				@DSP_ID_CERTIFICADO = ID_CERTIFICADO
			FROM DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'

			IF(@DISPUTA_EXISTE = 1)
				BEGIN
					INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
							(
								ID_DISPUTA,
								EMPRESA,
								ID_DOC,
								ID,
								USUARIO,
								FECHA,
								HORA,
								OBSERVACION,
								CERTUSUARIO,
								CERTFECHA,
								CERTHORA,
								ESTADO,
								REVALUSUARIO,
								REVALFECHA,
								REVALHORA,
								OBSERVACION_REVAL,
								VALIDADO,
								PERIODO,
								ID_CERTIFICADO,
								USRMOD,
								FECHAMOD,
								HORAMOD,
								ACCION
							)
					VALUES (
								@DSP_ID_DISPUTA,
								@DISPUTA_EMPRESA,
								@DSP_ID_DOC,
								@DSP_ID,
								@DSP_USUARIO,
								@DISPUTA_FECHA,
								@DSP_HORA,
								@DSP_OBSERVACION,
								@DSP_CERTUSUARIO,
								@DSP_CERTFECHA,
								@DSP_CERTHORA,
								@DSP_ESTADO,
								@DSP_REVALUSUARIO,
								@DSP_REVALFECHA,
								@DSP_REVALHORA,
								@DSP_OBSERVACION_REVAL,
								@DSP_VALIDADO,
								@DSP_PERIODO,
								@DSP_ID_CERTIFICADO,
								@USUARIO,
								@CURR_FECHA,
								@CURR_TIEMPOFULL,
								'ELIMINADO'
							)

					DELETE DOCS_DISPUTA_CLABORAL WHERE ID_DISPUTA = @DISPUTA_ID AND ESTADO = 'NO'
				END

			DELETE FROM _F29 WHERE PERIODO = @PERIODO AND EMPRESA = @IDEMPRESA

		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC__F29_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC__F29_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC__F29_INSERT_CONTROLLABORAL_CTTA]
(
  @PERIODO			NVARCHAR(6)
 ,@IDEMPRESA		NVARCHAR(10)
 ,@VENTAS			BIGINT
 ,@COMPRAS			BIGINT
 ,@PPM				BIGINT
 ,@REMANENTE		BIGINT
 ,@IRENTA			BIGINT
 ,@BHONORARIOS		BIGINT
 ,@IMP_PAGADO		BIGINT
 ,@REMMESANT		BIGINT
 ,@MULTAS			BIGINT
 ,@ESTADOCERT		NVARCHAR(20)
 ,@POSTERGADO		INT
 ,@RET_CODE			INT OUTPUT
) AS
BEGIN
	SET @RET_CODE = -1
	IF(EXISTS(
			SELECT
				PERIODO
			FROM _F29
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 1  /*ERROR LOGICO; YA EXISTE*/
			RETURN
		END
	
	INSERT INTO _F29
			(
				EMPRESA,
				PERIODO,
				VENTAS,
				COMPRAS,
				PPM,
				REMANENTE,
				IRENTA,
				BHONORARIOS,
				IMP_PAGADO,
				REMMESANT,
				MULTAS,
				ESTADOCERT,
				POSTERGADO
			)
	VALUES
			(
				@IDEMPRESA,
				@PERIODO,
				@VENTAS,
				@COMPRAS,
				@PPM,
				@REMANENTE,
				@IRENTA,
				@BHONORARIOS,
				@IMP_PAGADO,
				@REMMESANT,
				@MULTAS,
				@ESTADOCERT,
				@POSTERGADO
			)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC__F29_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC__F29_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC__F29_SELECT_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(11)
) AS
BEGIN
	DECLARE @ID_DOC INT = 95
	SELECT
		SS.PERIODO,
		SS.VALIDADO,
		SS.EMPRESA,
		SS.ID,
		SS.UNIQUE_ID,
		SS.DOC_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		) AS DISPUTA_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ESTADO
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), ''
		) AS DISPUTA_ESTADO,
		IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		), 1 , 0) AS DISPUTA_EXISTE		
	FROM
	(
		SELECT
			PERIODO,
			VALIDADO,
			EMPRESA,
			ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS UNIQUE_ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS DOC_ID
		FROM _F29
		WHERE
			EMPRESA = @IDEMPRESA
		ORDER BY PERIODO DESC
		OFFSET 0 ROWS
	) SS	
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC__F29_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC__F29_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC__F29_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		VALIDADO,
		(CASE WHEN OBSERVACION IS NULL THEN STUFF(
													(
													  SELECT
															';' + TR.TIPO_RECHAZO
													  FROM DOCS_CLABORAL_EMP_RECHAZO MR
													  INNER JOIN DOCS_TIPO_RECHAZO TR
														ON MR.ID_TIPO_RECHAZO = TR.ID_TIPO_RECHAZO
													  WHERE ID = _F29.ID FOR XML PATH ('')
													 ), 1, 1, '')
		 ELSE OBSERVACION END) AS OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
					(
						SELECT
							TOP 1
							D.NOMBRE
						FROM DOCS D
						WHERE D.ID_DOC = @ID_DOC
					),''
				) AS NOM_DOC
	FROM _F29
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC__F29_SELECT_ONE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC__F29_SELECT_ONE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC__F29_SELECT_ONE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		CERTUSUARIO,
		CERTFECHA,
		CERTHORA,
		VALIDADO,
		EMPRESA,
		PERIODO
	FROM _F29
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC__F29_SELECT_ONE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC__F29_SELECT_ONE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC__F29_SELECT_ONE_V3_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		 EMPRESA,
		 PERIODO,
		 VENTAS,
		 COMPRAS,
		 PPM,
		 REMANENTE,
		 IRENTA,
		 BHONORARIOS,
		 IMP_PAGADO,
		 REMMESANT,
		 MULTAS,
		 ID,
		 VALIDADO,
		 ESTADOCERT,
		 OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = _F29.EMPRESA AND
					DD.PERIODO = _F29.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = _F29.ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		 ) AS DISPUTA_ID,
		 IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = _F29.EMPRESA AND
					DD.PERIODO = _F29.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = _F29.ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		 ), 1 , 0) AS DISPUTA_EXISTE,
		 COALESCE(
			(
				SELECT
					TOP 1
					ARCHIVO
				FROM ARCHIVOS A
				WHERE A.ID = _F29.ID
			), NULL
		 ) AS ADJUNTO_CONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					TIPOCONTENIDO
				FROM ARCHIVOS A
				WHERE A.ID = _F29.ID
			), NULL
		 ) AS ADJUNTO_TIPOCONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					NOMBRE
				FROM ARCHIVOS A
				WHERE A.ID = _F29.ID
			), NULL
		 ) AS ADJUNTO_NOMBRE		 	
	FROM _F29
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC__F29_UPDATE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC__F29_UPDATE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC__F29_UPDATE_CONTROLLABORAL_CTTA]
(
  @PERIODO			NVARCHAR(6)
 ,@IDEMPRESA		NVARCHAR(10)
 ,@VENTAS			BIGINT
 ,@COMPRAS			BIGINT
 ,@PPM				BIGINT
 ,@REMANENTE		BIGINT
 ,@IRENTA			BIGINT
 ,@BHONORARIOS		BIGINT
 ,@IMP_PAGADO		BIGINT
 ,@REMMESANT		BIGINT
 ,@MULTAS			BIGINT
 ,@ESTADOCERT		NVARCHAR(20)
 ,@RET_CODE			INT OUTPUT
) AS
BEGIN
	SET @RET_CODE = -1
	IF(NOT EXISTS(
			SELECT
				PERIODO
			FROM _F29
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 2  /*ERROR LOGICO; NO EXISTE*/
			RETURN
		END
	UPDATE _F29
	SET
		VENTAS = @VENTAS,
		COMPRAS = @COMPRAS,
		PPM = @PPM,
		REMANENTE = @REMANENTE,
		IRENTA = @IRENTA,
		BHONORARIOS = @BHONORARIOS,
		IMP_PAGADO = @IMP_PAGADO,
		REMMESANT = @REMMESANT,
		MULTAS = @MULTAS,
		ESTADOCERT = @ESTADOCERT
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC__F29_UPDATE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC__F29_UPDATE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC__F29_UPDATE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA			NVARCHAR(10)
 ,@PERIODO				NVARCHAR(6)
 ,@ID					UNIQUEIDENTIFIER
 ,@USUARIO				NVARCHAR(10)
 ,@DISPUTA_ID			INT
 ,@DISPUTA_EXISTE		INT OUTPUT
 ,@DISPUTA_EMPRESA		NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA		NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @DDC_ID_DISPUTA INT
	DECLARE @DDC_ID_DOC INT
	DECLARE @DDC_ID UNIQUEIDENTIFIER
	DECLARE @DDC_USUARIO NVARCHAR(10)
	DECLARE @DDC_HORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION NVARCHAR(1000)
	DECLARE @DDC_CERTUSUARIO NVARCHAR(10)
	DECLARE @DDC_CERTFECHA NVARCHAR(8)
	DECLARE @DDC_CERTHORA NVARCHAR(8)
	DECLARE @DDC_ESTADO NVARCHAR(2)
	DECLARE @DDC_REVALUSUARIO NVARCHAR(10)
	DECLARE @DDC_REVALFECHA NVARCHAR(8)
	DECLARE @DDC_REVALHORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION_REVAL NVARCHAR(1000)
	DECLARE @DDC_VALIDADO NVARCHAR(2)
	DECLARE @DDC_PERIODO NVARCHAR(6)
	DECLARE @DDC_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0

	SELECT
		TOP 1
		@DISPUTA_EXISTE = 1,
		@DDC_ID_DISPUTA = ID_DISPUTA,
		@DISPUTA_EMPRESA = EMPRESA,
		@DDC_ID_DOC = ID_DOC,
		@DDC_ID = ID,
		@DDC_USUARIO = USUARIO,
		@DISPUTA_FECHA = FECHA,
		@DDC_HORA = HORA,
		@DDC_OBSERVACION = OBSERVACION,
		@DDC_CERTUSUARIO = CERTUSUARIO,
		@DDC_CERTFECHA = CERTFECHA,
		@DDC_CERTHORA = CERTHORA,
		@DDC_ESTADO = ESTADO,
		@DDC_REVALUSUARIO = REVALUSUARIO,
		@DDC_REVALFECHA = REVALFECHA,
		@DDC_REVALHORA = REVALHORA,
		@DDC_OBSERVACION_REVAL = OBSERVACION_REVAL,
		@DDC_VALIDADO = VALIDADO,
		@DDC_PERIODO = PERIODO,
		@DDC_ID_CERTIFICADO = ID_CERTIFICADO
	FROM DOCS_DISPUTA_CLABORAL
	WHERE
		ID_DISPUTA = @DISPUTA_ID AND
		ESTADO = 'NO'

	IF(@DISPUTA_EXISTE = 1)
		BEGIN
			INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
				(
					ID_DISPUTA,
					EMPRESA,
					ID_DOC,
					ID,
					USUARIO,
					FECHA,
					HORA,
					OBSERVACION,
					CERTUSUARIO,
					CERTFECHA,
					CERTHORA,
					ESTADO,
					REVALUSUARIO,
					REVALFECHA,
					REVALHORA,
					OBSERVACION_REVAL,
					VALIDADO,
					PERIODO,
					ID_CERTIFICADO,
					USRMOD,
					FECHAMOD,
					HORAMOD,
					ACCION
				)
			VALUES 
				(
					@DDC_ID_DISPUTA,
					@DISPUTA_EMPRESA,
					@DDC_ID_DOC,
					@DDC_ID,
					@DDC_USUARIO,
					@DISPUTA_FECHA,
					@DDC_HORA,
					@DDC_OBSERVACION,
					@DDC_CERTUSUARIO,
					@DDC_CERTFECHA,
					@DDC_CERTHORA,
					@DDC_ESTADO,
					@DDC_REVALUSUARIO,
					@DDC_REVALFECHA,
					@DDC_REVALHORA,
					@DDC_OBSERVACION_REVAL,
					@DDC_VALIDADO,
					@DDC_PERIODO,
					@DDC_ID_CERTIFICADO,
					@USUARIO,
					@CURR_FECHA,
					@CURR_TIEMPOFULL,
					'ELIMINADO'
				)

			DELETE DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'
		END

		DELETE FROM ARCHIVOS
		WHERE ID = @ID

		UPDATE _F29
		SET
			ID = NULL,
			VALIDADO = 'NO'
		WHERE
			EMPRESA = @IDEMPRESA AND
			PERIODO = @PERIODO

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC__F29_UPDATE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC__F29_UPDATE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC__F29_UPDATE_V3_CONTROLLABORAL_CTTA]
(
  @ID			UNIQUEIDENTIFIER = NULL
 ,@USUARIO		NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	IF(@ID IS NOT NULL)
		BEGIN
			UPDATE _F29
			SET
				ID = @ID,
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHASUBE = @CURR_FECHA,
				HORASUBE = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO)
		END
	ELSE
		BEGIN
			UPDATE _F29
			SET
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHASUBE = @CURR_FECHA,
				HORASUBE = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO)
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A024_DIVISIONES_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A024_DIVISIONES_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A024_DIVISIONES_SELECT_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(10)
) AS
BEGIN
	SELECT
		DIVISION,
		DIVCOD
	FROM A024_DIVISIONES
	WHERE DIVCOD IN
					(
						SELECT
							OS.DIVISION
						FROM OSTDIVLOCAL AS OS, OSTSUBC AS OSC, OST
						WHERE
							OSC.EMPRESA = @IDEMPRESA  AND
							OST.NROOST = OS.OST AND
							OSC.OST = OST.NROOST
						GROUP BY OS.DIVISION
					)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A024_DIVISIONES_SELECT_GRID_FICHAEMPRESA_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A024_DIVISIONES_SELECT_GRID_FICHAEMPRESA_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A024_DIVISIONES_SELECT_GRID_FICHAEMPRESA_INFORMECONSULTARAPIDA_CTTA]
(
  @EMPRESA NVARCHAR(20)
) AS 
BEGIN

SELECT  D.DIVISION
, D.DIVCOD 
,(SELECT COUNT (DISTINCT RUT) AS CUENTA FROM VW_WL_NOMINA WHERE EMPRESA = @EMPRESA AND DIVISION = D.DIVCOD) AS FUNCIONARIOS_NOMINA
,(SELECT COUNT (DISTINCT RUT) AS CUENTA FROM VW_WL_ACREDITADO WHERE EMPRESA = @EMPRESA AND DIVISION = D.DIVCOD ) AS FUNCIONARIOS_AUTORIZADOS
,(SELECT COUNT (PATENTE) AS CUENTA FROM TRANSPORT WHERE EMPRESA = @EMPRESA  AND AUTOR <> D.DIVCOD) AS VEHICULOS
,(SELECT COUNT(DISTINCT OSTARBOL.OST) AS CUENTA FROM OSTARBOL INNER JOIN OSTDIVLOCAL ON OSTARBOL.OST = OSTDIVLOCAL.OST 
  WHERE (OSTARBOL.EMPRESA = @EMPRESA) AND (OSTDIVLOCAL.DIVISION = D.DIVCOD) AND (dbo.hoy(getdate()) BETWEEN OSTARBOL.FINICIO AND OSTARBOL.FTERMINO)) AS CONTRATOS_ACTIVOS
FROM A024_DIVISIONES as D 
WHERE  D.ACTIVO = 'SI' 
ORDER BY D.DIVISION 

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A024_DIVISIONES_SELECT_GRID_HISTORICOBLOQUEOSVEHICULO_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A024_DIVISIONES_SELECT_GRID_HISTORICOBLOQUEOSVEHICULO_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A024_DIVISIONES_SELECT_GRID_HISTORICOBLOQUEOSVEHICULO_INFORMECONSULTARAPIDA_CTTA]
(
@PATENTE  NVARCHAR(8)      = NULL,
@DIVISION  NVARCHAR(2)     = NULL
) AS
BEGIN


SELECT PATENTE,OBSERVACION,BLOQUEA,USRBLOQUEA,FECBLOQUEA,HORABLOQUEA,D.DIVISION,A.NOMBRE,A.ID 
	 							FROM CERT_DESAUTORIZACION_TRANSPORT T 
								INNER JOIN A024_DIVISIONES D ON D.DIVCOD = T.DIVISION 
								LEFT JOIN ARCHIVOS A ON A.ID = T.ID_ARCHIVO 
 								WHERE T.PATENTE = @PATENTE AND T.DIVISION=@DIVISION ORDER BY FECBLOQUEA DESC ,HORABLOQUEA DESC

END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A024_DIVISIONES_SELECT_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A024_DIVISIONES_SELECT_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A024_DIVISIONES_SELECT_INFORMECONSULTARAPIDA_CTTA]
(
 @PATENTE NVARCHAR(8) 
) AS 
BEGIN
DECLARE @TIPO INT
DECLARE @IDEMPRESA NVARCHAR(11)
SELECT @IDEMPRESA = E.IDEMPRESA, @TIPO = T.TIPO
	   FROM  TRANSPORT T LEFT OUTER JOIN TYPETRANS TP ON T.TIPO=TP.IDTIPO 
						 LEFT OUTER JOIN ENTERPRISE E ON E.IDEMPRESA=T.EMPRESA 
	   WHERE PATENTE=@PATENTE

 SELECT DISTINCT 
   D.DIVCOD
 , D.DIVISION 
 , CASE WHEN (SELECT COUNT(*) FROM A024_DIVISIONES WHERE ISNULL(PASES_VEHICULARES,'NO') = 'SI' AND DIVCOD =  D.DIVCOD) > 0 THEN (SELECT TD.EMPRESA FROM TRANSPORT_DIVISION_PASES AS TD  WHERE (TD.PATENTE = @PATENTE) AND (TD.DIVISION = D.DIVCOD)  AND (dbo.hoy(GETDATE()) BETWEEN FINIPASE AND FFINPASE) AND (AUTOR IN ('SI','NO')))  ELSE @IDEMPRESA END AS EMPRESA
 , (SELECT [dbo].[fn_cert_veh2] (@PATENTE , @IDEMPRESA , @TIPO, D.DIVCOD , dbo.hoy(getdate()))) AS CERT
 FROM TRANSPORT_DIVISION TD  INNER JOIN A024_DIVISIONES D ON TD.DIVISION = D.DIVCOD  
 WHERE ACTIVO = 'SI' AND PATENTE=@PATENTE
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A024_DIVISIONES_SELECT_ONE_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A024_DIVISIONES_SELECT_ONE_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A024_DIVISIONES_SELECT_ONE_PASES_CTTA]
(
  @OST			NVARCHAR(14)
 ,@DIVCOD		NVARCHAR(4)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@M_APR		BIT OUTPUT
 ,@M_ARRANQUE	BIT OUTPUT
 ,@OK			BIT OUTPUT
) AS
BEGIN
	DECLARE @CONTROL_SEGURIDAD NVARCHAR(2) = ''
	DECLARE @ESTADO NVARCHAR(2) = ''
	DECLARE @VALIDA_CARRANQUE NVARCHAR(2) = ''
	
	SET @M_APR = 0
	SET @M_ARRANQUE = 0
	SET @OK = 1

	SELECT
		@CONTROL_SEGURIDAD = ISNULL(CONTROL_SEGURIDAD, 'NO')
	FROM A024_DIVISIONES
	WHERE DIVCOD = @DIVCOD
	
	IF(@CONTROL_SEGURIDAD <> '')
		BEGIN
			IF(@CONTROL_SEGURIDAD = 'SI')
				BEGIN
					SELECT
						@ESTADO = ISNULL(ESTADO, 'NO')
					FROM DOCS_OST_PREVENCIONISTA
					WHERE OST = @OST

					IF(@ESTADO <> '')
						BEGIN
							IF(@ESTADO <> 'SI')
								BEGIN
									SET @M_APR = 1
								END
						END
					ELSE
						BEGIN
							SET @M_APR = 1
						END

					SELECT
						@VALIDA_CARRANQUE = ISNULL(VALIDA_CARRANQUE,'NO')
					FROM OSTARBOL
					WHERE EMPRESA = @IDEMPRESA AND OST = @OST

					IF(@VALIDA_CARRANQUE <> '')
						BEGIN
							IF(@VALIDA_CARRANQUE <> 'SI')
								BEGIN
									SET @M_ARRANQUE = 1
								END
						END
					ELSE
						BEGIN
							SET @M_ARRANQUE = 1
						END
				END
		END
	
	IF(@M_APR = 1 OR @M_ARRANQUE = 1)
		BEGIN
			SET @OK = 0
		END
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A027_MANDANTES_SELECT_BY_EMPRESA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A027_MANDANTES_SELECT_BY_EMPRESA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A027_MANDANTES_SELECT_BY_EMPRESA]
(
 @EMPRESA	NVARCHAR(10) = NULL
)
AS
BEGIN

	SELECT MANDANTE		,OST		,ACTIVO 
	FROM A027_MANDANTES 
	WHERE MANDANTE = @EMPRESA

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A027_MANDANTES_SELECT_VALICACION_DOCUMENTOS_CURSOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A027_MANDANTES_SELECT_VALICACION_DOCUMENTOS_CURSOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A027_MANDANTES_SELECT_VALICACION_DOCUMENTOS_CURSOS_CTTA]
/*
EXEC V4MVC_A027_MANDANTES_SELECT_VALICACION_DOCUMENTOS_CURSOS_CTTA 1, '108','89526892'
*/
@RESTRICCIONES			INT = NULL
,@EMPRESA				NVARCHAR(20) = NULL
,@RUT					NVARCHAR(20) = NULL
AS			
BEGIN
DECLARE @VALOR2		NVARCHAR(1000)
DECLARE @VALOR3		NVARCHAR(1000)
DECLARE @VALOR2_Q2	NVARCHAR(1000)
DECLARE @VALOR3_Q2	NVARCHAR(1000)
DECLARE @IDDOCS_LT	NVARCHAR(1000)
DECLARE @IDDOCS_LB	NVARCHAR(1000)
DECLARE @IDDOCS_ES	NVARCHAR(1000)
DECLARE @IDDOCS_CH	NVARCHAR(1000)

CREATE TABLE #VALIDACIONDOCUMENTO 
(ID_DOC						NVARCHAR(50) COLLATE DATABASE_DEFAULT NOT NULL
,DIVISION					NVARCHAR(8) COLLATE DATABASE_DEFAULT NOT NULL)

CREATE TABLE #MENSAJES
(MENSAJE					NVARCHAR(MAX) COLLATE DATABASE_DEFAULT NOT NULL
,DIVISION_MENSAJE			NVARCHAR(8) COLLATE DATABASE_DEFAULT NOT NULL)

DECLARE @ID_DOC				NVARCHAR(50)
DECLARE @DIVISION			NVARCHAR(8)

DECLARE @NOMBRE				NVARCHAR(100)
DECLARE @EMP_COMUN			INT
DECLARE @DIV_COMUN			NVARCHAR(4)
DECLARE @SUBEDOC			NVARCHAR(4)	
DECLARE @ID_DOC_ONE			INT

DECLARE @CONTADOR_WHILE		INT
DECLARE @MAX_TABLA			INT
DECLARE @FILTRO				NVARCHAR(100)

DECLARE @TOTAL_MENSAJES_LT	INT	= 0
DECLARE @TOTAL_MENSAJES_LB	INT	= 0
DECLARE @TOTAL_MENSAJES_ES	INT	= 0
DECLARE @TOTAL_MENSAJES_CH	INT	= 0
			

	IF NOT EXISTS (SELECT * FROM A027_MANDANTES WHERE MANDANTE = @EMPRESA)
	BEGIN 
		
		IF @RESTRICCIONES = 1
			SELECT @VALOR2 = ISNULL(Valor2,'')		,@VALOR3 = ISNULL(Valor3,'')	FROM PARAMETROS_V2 WHERE Descripcion  = 'Cursos Persona Nueva'
			SELECT @VALOR2_Q2 = ISNULL(Valor2,'')	,@VALOR3_Q2 = ISNULL(Valor3,'') FROM PARAMETROS_V2 WHERE Descripcion  = 'Cursos Persona Nueva 2'
		IF @RESTRICCIONES = 2
			SELECT @VALOR2 = ISNULL(Valor2,'')		,@VALOR3 = ISNULL(Valor3,'')	FROM PARAMETROS_V2 WHERE Descripcion  = 'Cursos A1' 
			SELECT @VALOR2_Q2 = ISNULL(Valor2,'')	,@VALOR3_Q2 = ISNULL(Valor3,'') FROM PARAMETROS_V2 WHERE Descripcion  = 'Cursos A1 2'
	
		SELECT @IDDOCS_LT = REPLACE (@VALOR2 ,'-',',')
		SELECT @IDDOCS_LB = REPLACE (@VALOR3 ,'-',',')
		SELECT @IDDOCS_ES = REPLACE (@VALOR2_Q2 ,'-',',') 
		SELECT @IDDOCS_CH = REPLACE (@VALOR3_Q2 ,'-',',')
		
		INSERT INTO #VALIDACIONDOCUMENTO(ID_DOC,DIVISION)
		VALUES (@IDDOCS_LT,'LT'),(@IDDOCS_LB,'LB'),(@IDDOCS_ES,'ES'),(@IDDOCS_CH,'CH')
		--SELECT * FROM #VALIDACIONDOCUMENTO
		DECLARE CURSORDIVICIONES  CURSOR  READ_ONLY FOR 
			SELECT * FROM #VALIDACIONDOCUMENTO	
		OPEN CURSORDIVICIONES 
		FETCH NEXT FROM CURSORDIVICIONES INTO @ID_DOC ,@DIVISION 
		WHILE @@FETCH_STATUS = 0
			BEGIN
				DECLARE @QUERY nVARCHAR(MAX)
	
				IF OBJECT_ID('TEMPDB.DBO.#LISTADODOCUMENTOS') IS NOT NULL
					DROP TABLE #LISTADODOCUMENTOS
	
				CREATE TABLE #LISTADODOCUMENTOS
				(ID			INT
				,ID_DOC		INT
				,NOMBRE		NVARCHAR(100)
				,EMP_COMUN	INT
				,DIV_COMUN	NVARCHAR(4)
				,SUBEDOC	NVARCHAR(4))	
	
				EXEC ('  
				IF EXISTS (
					SELECT  ID_DOC FROM DOCS WHERE  ID_DOC IN (' + @ID_DOC + ' ) ) 
				BEGIN 
					INSERT INTO #LISTADODOCUMENTOS
					SELECT ROW_NUMBER() OVER(ORDER BY ID_DOC ASC) AS id, ID_DOC, NOMBRE, COMUN AS EMP_COMUN, ISNULL(COMUN_DIV,''NO'') AS DIV_COMUN, SUBEDOC FROM DOCS WHERE ID_DOC IN (' + @ID_DOC + ' ) 
				END ')
					--SELECT * FROM #LISTADODOCUMENTOS
					SELECT @MAX_TABLA = MAX(ID) FROM #LISTADODOCUMENTOS
				
					SET @CONTADOR_WHILE = 1
					WHILE (@CONTADOR_WHILE < = @MAX_TABLA)
					BEGIN 
						SET @FILTRO = ''
						SELECT	@ID_DOC_ONE=ID_DOC		,@NOMBRE=NOMBRE	 ,@SUBEDOC= SUBEDOC		,@EMP_COMUN=EMP_COMUN		
								,@DIV_COMUN = DIV_COMUN  
						FROM #LISTADODOCUMENTOS
						WHERE ID = @CONTADOR_WHILE
						SET @CONTADOR_WHILE = @CONTADOR_WHILE + 1
						IF (@SUBEDOC  =  'SI' ) 
						BEGIN
							IF (@DIV_COMUN = 'NO')
								SET @FILTRO  = ' AND (DIVISION = ''' + convert (varchar ,@DIVISION) +''')'
							IF (@EMP_COMUN = 0)
								SET @FILTRO  = ' AND (EMPRESA = ' + convert(varchar, @EMPRESA)  +')'
							SET @QUERY = (
								'IF NOT EXISTS (
									SELECT VALIDADO FROM DOCS_WORKERS DW 
									INNER JOIN ( SELECT MAX(ID_DOCS_WORKERS) AS ID_DOCS_WORKERS FROM DOCS_WORKERS
									WHERE (RUT = ''' + @RUT + ''') AND (ID_DOC = ' + CAST(@ID_DOC_ONE AS NVARCHAR) +')  '+ @FILTRO + '
									GROUP BY EMPRESA, DIVISION ) DWL ON DW.ID_DOCS_WORKERS = DWL.ID_DOCS_WORKERS 
									WHERE ISNULL(DW.VALIDADO,''NO'') = ''SI'' 
								)BEGIN
								PRINT ''''
								END
								ELSE 
								BEGIN
									INSERT INTO #MENSAJES (MENSAJE,DIVISION_MENSAJE) VALUES 
									( '''+ convert (varchar ,@NOMBRE)  +''' , ''' + convert (varchar ,@DIVISION) + ''')
								END')
							--PRINT @QUERY
							EXEC (@QUERY)
						END
					
					END
					FETCH NEXT FROM CURSORDIVICIONES INTO @ID_DOC,@DIVISION  
			END
		CLOSE CURSORDIVICIONES
		DEALLOCATE CURSORDIVICIONES
	
		SELECT @TOTAL_MENSAJES_LT = COUNT(1)  FROM #MENSAJES
		WHERE DIVISION_MENSAJE = 'LT'
		SELECT @TOTAL_MENSAJES_LB = COUNT(1)  FROM #MENSAJES
		WHERE DIVISION_MENSAJE = 'LB'
		SELECT @TOTAL_MENSAJES_ES = COUNT(1)  FROM #MENSAJES
		WHERE DIVISION_MENSAJE = 'ES'
		SELECT @TOTAL_MENSAJES_CH = COUNT(1)  FROM #MENSAJES
		WHERE DIVISION_MENSAJE = 'CH'
	
		IF (@TOTAL_MENSAJES_LT != 0 AND @TOTAL_MENSAJES_LB != 0 AND @TOTAL_MENSAJES_ES != 0 AND @TOTAL_MENSAJES_CH !=0)
		BEGIN
			IF (@RESTRICCIONES = 1)
				SELECT 'PERSONANUEVA' AS MENSAJE	
			ELSE
				SELECT 'A1RIESGOS' AS MENSAJE		
		END
		ELSE
		BEGIN 
			SELECT '' AS MENSAJE		
		END
	END
	ELSE
		SELECT '' AS MENSAJE
	
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A036_CURSOPARAMETROS_BY_PARAMETRO_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A036_CURSOPARAMETROS_BY_PARAMETRO_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A036_CURSOPARAMETROS_BY_PARAMETRO_CTTA]
(
 @PARAMETRO		INT
)
AS
BEGIN

	SELECT	ID_PARAMETRO	,NOMBRE		,VALOR
	FROM	A036_CURSOPARAMETROS 
	WHERE	ID_PARAMETRO = @PARAMETRO

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A036_CURSOPROG_DOCS_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A036_CURSOPROG_DOCS_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A036_CURSOPROG_DOCS_SELECT]
(
 @CODIGO	INT	= NULL
)
AS
BEGIN

	SELECT ID_DOC_CHARLA, ID, NOMBRE, BYTES, CODIGO
	FROM A036_CURSOPROG_DOCS 
	WHERE CODIGO = ISNULL(@CODIGO, CODIGO)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A036_CURSOPROG_SELECT_CHARLASYRESERVAS_INFORMEFUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A036_CURSOPROG_SELECT_CHARLASYRESERVAS_INFORMEFUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A036_CURSOPROG_SELECT_CHARLASYRESERVAS_INFORMEFUNCIONARIOS_CTTA]
(
  @RUT NVARCHAR(10)
) AS 
BEGIN

 SELECT DISTINCT COUNT(DISTINCT CR.RUT) AS PARTICIPANTES_REPORTE	,D.DIVISION			, D.DIVCOD			, CP.CODIGO																	
                 , CH.CHARLA										, CP.FECHA			,  CP.HORA			, CP.FINALIZADO		
				 , COUNT(CASE WHEN CR.NOTA>=CH.PORCENTAJE THEN 1 ELSE null END) AS CUENTASI_REPORTE    
				 , COUNT(CASE WHEN CR.NOTA<CH.PORCENTAJE  THEN 1 ELSE null END) AS CUENTANO_REPORTE 
 FROM A036_CURSORESERVA AS CR   INNER JOIN A036_CURSOPROG AS CP ON CR.CODIGO = CP.CODIGO   
                                INNER JOIN CHARLAS AS CH ON CP.CURSO = CH.IDCHARLA   
								INNER JOIN CHARLAS_DIVISION AS CHD ON CH.IDCHARLA = CHD.IDCHARLA   
								INNER JOIN A024_DIVISIONES AS D ON CHD.DIVISION = D.DIVCOD   
								INNER JOIN ENTERPRISE AS E ON CR.EMPRESA = E.IDEMPRESA 
 WHERE 1 = 1  AND CR.RUT = @RUT AND ASISTIO = 'SI' 
 GROUP BY D.DIVISION,D.DIVCOD, CP.CODIGO, CH.CHARLA, CP.FECHA, CP.HORA, CP.FINALIZADO  
 ORDER BY CP.FECHA, CP.HORA ASC 

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A036_CURSORESERVA_DELETE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A036_CURSORESERVA_DELETE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A036_CURSORESERVA_DELETE]
(
 @CODIGO	INT
,@RUT		NVARCHAR(10)
) AS
BEGIN
	
   DELETE FROM A036_CURSORESERVA
   WHERE	CODIGO		= @CODIGO
   AND		RUT			= @RUT

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A036_CURSORESERVA_INSERT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A036_CURSORESERVA_INSERT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A036_CURSORESERVA_INSERT]  
(  
 @CODIGO		INT				= NULL
,@RUT			NVARCHAR(10)    
,@EMPRESA		NVARCHAR(10)	= NULL   
,@FECHARES		NVARCHAR(8)		= NULL  
,@HORARES		NVARCHAR(8)		= NULL  
,@WHOMAKE		NVARCHAR(10)	= NULL     
,@ASISTIO		NVARCHAR(2)		= NULL     
,@APROBO		NVARCHAR(2)		= NULL       
,@OBS			NVARCHAR(100)	= NULL       
,@ORADOR		NVARCHAR(10)	= NULL  
,@NOTA			INT				= NULL    
,@FECHARESP		NVARCHAR(8)		= NULL    
,@HORARESP		NVARCHAR(8)		= NULL     
,@AREA			INT				= NULL     
,@ROLLAB		INT				= NULL  
,@TURNO			NVARCHAR(20)	= NULL  
,@LOCALTRABAJO	NVARCHAR(12)	= NULL  
,@NOTAQV		INT				= NULL  
) AS  
  
BEGIN  
  
	 INSERT INTO [A036_CURSORESERVA]  
	 (  
	   CODIGO    ,RUT    ,EMPRESA    ,FECHARES    ,HORARES  
	  ,WHOMAKE   ,ASISTIO   ,APROBO     ,OBS     ,ORADOR  
	  ,NOTA    ,FECHARESP   ,HORARESP    ,AREA     ,ROLLAB  
	  ,TURNO    ,LOCALTRABAJO  ,NOTAQV  
	 )  
	 VALUES  
	 (  
	   @CODIGO		,@RUT			,@EMPRESA		,DBO.HOY(GETDATE())		,DBO.AHORA(GETDATE()) 
	  ,@WHOMAKE		,@ASISTIO		,@APROBO		,@OBS					,@ORADOR  
	  ,@NOTA		,@FECHARESP		,@HORARESP		,@AREA					,@ROLLAB  
	  ,@TURNO		,@LOCALTRABAJO  ,@NOTAQV  
	 )  
  
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A054_MOTIVOFINIQUITO_SELECT_ALL]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A054_MOTIVOFINIQUITO_SELECT_ALL]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A054_MOTIVOFINIQUITO_SELECT_ALL]
AS
BEGIN
	SELECT MF.MOTIVO , MF.GLOSA , MF.ACTIVO 
	FROM A054_MOTIVOFINIQUITO AS MF
	WHERE MF.ACTIVO = 'SI'
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A054_MOTIVOFINIQUITO_SELECT_CERTIFICACION]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A054_MOTIVOFINIQUITO_SELECT_CERTIFICACION]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A054_MOTIVOFINIQUITO_SELECT_CERTIFICACION]
(@RUT		NVARCHAR(10) = NULL
,@ID_DOC	INT = NULL
,@DIVCOD	NVARCHAR(50) = NULL
,@IDEMPRESA	NVARCHAR(10) = NULL)AS
BEGIN

	SELECT MF.MOTIVO , MF.GLOSA , MF.ACTIVO , CASE WHEN WF.MOTIVO IS NOT NULL THEN 'true' ELSE 'false' END AS CHECKED 
	FROM A054_MOTIVOFINIQUITO AS MF
	LEFT JOIN (SELECT WMF.MOTIVO FROM WORKERS_MOTIVOFINIQUITO AS WMF 
				INNER JOIN ( 
				SELECT TOP 1 RUT, EMPRESA, ID FROM DOCS_WORKERS DW 
				WHERE DW.RUT = @RUT AND DW.EMPRESA = @IDEMPRESA AND DW.ID_DOC = @ID_DOC AND DW.DIVISION = @DIVCOD
				ORDER BY ID_DOCS_WORKERS DESC) DW2 ON WMF.RUT = DW2.RUT AND WMF.EMPRESA = DW2.EMPRESA AND WMF.IDARCHIVO = DW2.ID) WF ON MF.MOTIVO = WF.MOTIVO
	WHERE MF.ACTIVO = 'SI'

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A054_MOTIVOFINIQUITO_SELECT_FUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A054_MOTIVOFINIQUITO_SELECT_FUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A054_MOTIVOFINIQUITO_SELECT_FUNCIONARIOS_CTTA]
(
  @RUT			NVARCHAR(8) = ''
 ,@DIVCOD		NVARCHAR(4) = ''
 ,@IDEMPRESA	NVARCHAR(11) = ''
)
AS
BEGIN
	DECLARE @ID_DOC INT = 18
	SELECT
		MF.MOTIVO,
		MF.GLOSA,
		MF.ACTIVO,
		[dbo].[V4MVC_FGET_MOTIVO_ULTIMO](MF.MOTIVO, @RUT, @IDEMPRESA, @DIVCOD, @ID_DOC) AS CCHECKED
	FROM A054_MOTIVOFINIQUITO MF
	WHERE MF.ACTIVO = 'SI'
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM30_DELETE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM30_DELETE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM30_DELETE_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@ID_CERTIFICADO	INT
 ,@USUARIO			NVARCHAR(10)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @F30_EXISTS BIT = 0
	DECLARE @F30_EMPRESA NVARCHAR(10)
	DECLARE @F30_ID_CERTIFICADO INT

	DECLARE @F30_REGION NVARCHAR(3)
	DECLARE @F30_INSPECCION NVARCHAR(4)
	DECLARE @F30_ANIO INT
	DECLARE @F30_CERTIFICADO BIGINT
	DECLARE @F30_CLAVE NVARCHAR(30)
	DECLARE @F30_VIGENCIA NVARCHAR(8)
	DECLARE @F30_MULT_NEJ INT 
	DECLARE @F30_MULT_EJ INT

	DECLARE @F30_SANC_12M	INT
	DECLARE @F30_DP_NRO	INT
	DECLARE @F30_DP_MTO_PESO	INT
	DECLARE @F30_RM_NRO	INT
	DECLARE @F30_RM_MTO_PESO	INT
	DECLARE @F30_FECHAMOD	NVARCHAR(8)
	DECLARE @F30_HORAMOD	NVARCHAR(8)
	DECLARE @F30_QUIEN	NVARCHAR(10)
	DECLARE @F30_ID_DOC	INT
	DECLARE @F30_PERIODO	NVARCHAR(6)
	
	DECLARE @F30_VALIDADO NVARCHAR(2)
	DECLARE @F30_ID UNIQUEIDENTIFIER
	DECLARE @F30_OBSERVACION NVARCHAR(500)
	DECLARE @F30_USUARIO NVARCHAR(10)
	DECLARE @F30_FECHASUBE NVARCHAR(8)
	DECLARE @F30_HORASUBE NVARCHAR(8)
	DECLARE @F30_CERTUSUARIO NVARCHAR(10)
	DECLARE @F30_CERTFECHA NVARCHAR(8)
	DECLARE @F30_CERTHORA NVARCHAR(8)

	
	DECLARE @DSP_ID_DISPUTA INT
	
	DECLARE @DSP_ID_DOC INT
	DECLARE @DSP_ID UNIQUEIDENTIFIER
	DECLARE @DSP_USUARIO NVARCHAR(10)
	DECLARE @DSP_HORA NVARCHAR(8)
	DECLARE @DSP_OBSERVACION NVARCHAR(1000)
	DECLARE @DSP_CERTUSUARIO NVARCHAR(10)
	DECLARE @DSP_CERTFECHA NVARCHAR(8)
	DECLARE @DSP_CERTHORA NVARCHAR(8)
	DECLARE @DSP_ESTADO	NVARCHAR(2)
	DECLARE @DSP_REVALUSUARIO NVARCHAR(10)
	DECLARE @DSP_REVALFECHA	NVARCHAR(8)
	DECLARE @DSP_REVALHORA	NVARCHAR(8)
	DECLARE @DSP_OBSERVACION_REVAL	NVARCHAR(1000)
	DECLARE @DSP_VALIDADO NVARCHAR(2)
	DECLARE @DSP_PERIODO NVARCHAR(6)
	DECLARE @DSP_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0
	SET @DISPUTA_EMPRESA = ''
	SET @DISPUTA_FECHA = ''

	SELECT
		TOP 1
		@F30_EXISTS = 1,
		@F30_EMPRESA = EMPRESA,
		@F30_ID_CERTIFICADO = ID_CERTIFICADO,

		@F30_REGION = REGION,
		@F30_INSPECCION = INSPECCION,
		@F30_ANIO = ANIO,
		@F30_CERTIFICADO = CERTIFICADO,
		@F30_CLAVE = CLAVE,
		@F30_VIGENCIA = VIGENCIA,
		@F30_MULT_NEJ = MULT_NEJ,
		@F30_MULT_EJ = MULT_EJ,
		@F30_SANC_12M = SANC_12M,
		@F30_DP_NRO = DP_NRO,
		@F30_DP_MTO_PESO = DP_MTO_PESO,
		@F30_RM_NRO = RM_NRO,
		@F30_RM_MTO_PESO = RM_MTO_PESO,
		@F30_FECHAMOD = FECHAMOD,
		@F30_HORAMOD = HORAMOD,
		@F30_QUIEN = QUIEN,
		@F30_ID_DOC = ID_DOC,
		@F30_PERIODO = PERIODO,

		@F30_VALIDADO = VALIDADO,
		@F30_ID = ID,
		@F30_OBSERVACION = OBSERVACION,
		@F30_USUARIO = USUARIO,
		@F30_FECHASUBE = FECHASUBE,
		@F30_HORASUBE = HORASUBE,
		@F30_CERTUSUARIO = CERTUSUARIO,
		@F30_CERTFECHA = CERTFECHA,
		@F30_CERTHORA = CERTHORA
	FROM A056_FORM30
	WHERE
		EMPRESA = @IDEMPRESA AND
		ID_CERTIFICADO = @ID_CERTIFICADO

	IF(@F30_EXISTS = 1)
		BEGIN
			INSERT INTO A056_FORM30_LOG
						(
							ID_CERTIFICADO,
							EMPRESA,
							REGION,
							INSPECCION,
							ANIO,
							CERTIFICADO,
							CLAVE,
							VIGENCIA,
							MULT_NEJ,
							MULT_EJ,
							SANC_12M,
							DP_NRO,
							DP_MTO_PESO,
							RM_NRO,
							RM_MTO_PESO,
							FECHAMOD,
							HORAMOD,
							QUIEN,
							VALIDADO,
							ID_DOC,
							OBSERVACION,
							ID,
							PERIODO,
							USUARIO,
							FECHASUBE,
							HORASUBE,
							CERTUSUARIO,
							CERTFECHA,
							CERTHORA,
							USUARIODEL,
							FECHADEL,
							HORADEL
						)
			VALUES
						(
							@F30_ID_CERTIFICADO,
							@F30_EMPRESA,
							@F30_REGION, 
							@F30_INSPECCION,
							@F30_ANIO,
							@F30_CERTIFICADO, 
							@F30_CLAVE,
							@F30_VIGENCIA,
							@F30_MULT_NEJ,
							@F30_MULT_EJ,
							@F30_SANC_12M,
							@F30_DP_NRO,
							@F30_DP_MTO_PESO,
							@F30_RM_NRO,
							@F30_RM_MTO_PESO, 
							@F30_FECHAMOD,
							@F30_HORAMOD,
							@F30_QUIEN,
							@F30_VALIDADO,
							@F30_ID_DOC,
							@F30_OBSERVACION,
							@F30_ID, 
							@F30_PERIODO,
							@F30_USUARIO,
							@F30_FECHASUBE,
							@F30_HORASUBE,
							@F30_CERTUSUARIO, 
							@F30_CERTFECHA,
							@F30_CERTHORA,
							@USUARIO,
							@CURR_FECHA,
							@CURR_TIEMPOFULL
						)

			/*--------------------------*/

			SELECT
				TOP 1
				@DISPUTA_EXISTE = 1,
				@DSP_ID_DISPUTA = ID_DISPUTA,
				@DISPUTA_EMPRESA = EMPRESA,
				@DSP_ID_DOC = ID_DOC,
				@DSP_ID = ID,
				@DSP_USUARIO = USUARIO,
				@DISPUTA_FECHA = FECHA,
				@DSP_HORA = HORA,
				@DSP_OBSERVACION = OBSERVACION,
				@DSP_CERTUSUARIO = CERTUSUARIO,
				@DSP_CERTFECHA = CERTFECHA,
				@DSP_CERTHORA = CERTHORA,
				@DSP_ESTADO = ESTADO,
				@DSP_REVALUSUARIO = REVALUSUARIO,
				@DSP_REVALFECHA = REVALFECHA,
				@DSP_REVALHORA = REVALHORA,
				@DSP_OBSERVACION_REVAL = OBSERVACION_REVAL,
				@DSP_VALIDADO = VALIDADO,
				@DSP_PERIODO = PERIODO,
				@DSP_ID_CERTIFICADO = ID_CERTIFICADO
			FROM DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'

			IF(@DISPUTA_EXISTE = 1)
				BEGIN
					INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
							(
								ID_DISPUTA,
								EMPRESA,
								ID_DOC,
								ID,
								USUARIO,
								FECHA,
								HORA,
								OBSERVACION,
								CERTUSUARIO,
								CERTFECHA,
								CERTHORA,
								ESTADO,
								REVALUSUARIO,
								REVALFECHA,
								REVALHORA,
								OBSERVACION_REVAL,
								VALIDADO,
								PERIODO,
								ID_CERTIFICADO,
								USRMOD,
								FECHAMOD,
								HORAMOD,
								ACCION
							)
					VALUES (
								@DSP_ID_DISPUTA,
								@DISPUTA_EMPRESA,
								@DSP_ID_DOC,
								@DSP_ID,
								@DSP_USUARIO,
								@DISPUTA_FECHA,
								@DSP_HORA,
								@DSP_OBSERVACION,
								@DSP_CERTUSUARIO,
								@DSP_CERTFECHA,
								@DSP_CERTHORA,
								@DSP_ESTADO,
								@DSP_REVALUSUARIO,
								@DSP_REVALFECHA,
								@DSP_REVALHORA,
								@DSP_OBSERVACION_REVAL,
								@DSP_VALIDADO,
								@DSP_PERIODO,
								@DSP_ID_CERTIFICADO,
								@USUARIO,
								@CURR_FECHA,
								@CURR_TIEMPOFULL,
								'ELIMINADO'
							)

					DELETE DOCS_DISPUTA_CLABORAL WHERE ID_DISPUTA = @DISPUTA_ID AND ESTADO = 'NO'
				END

			DELETE FROM A056_FORM30 WHERE ID_CERTIFICADO = @ID_CERTIFICADO AND EMPRESA = @IDEMPRESA

		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM30_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM30_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM30_INSERT_CONTROLLABORAL_CTTA]
(
  @PERIODO			NVARCHAR(6)
 ,@IDEMPRESA		NVARCHAR(10)
 ,@INSPECCION		NVARCHAR(4)
 ,@ANIO				INT
 ,@CERTIFICADO		BIGINT
 ,@USUARIO			NVARCHAR(10)
 ,@CLAVE			NVARCHAR(30)
 ,@REGION			NVARCHAR(3)
 ,@VIGENCIA			NVARCHAR(8)
 ,@MULT_NEJ			INT
 ,@MULT_EJ			INT
 ,@SANC_6M			INT
 ,@SANC_12M			INT
 ,@DP_NRO			INT
 ,@DP_MTO_UTM		FLOAT
 ,@DP_MTO_PESO		INT
 ,@RM_NRO			INT
 ,@RM_MTO_PESO		INT
 ,@RET_CODE			INT OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	SET @RET_CODE = -1

	IF(EXISTS(
			SELECT
				*
			FROM A056_FORM30
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO AND
				INSPECCION = @INSPECCION AND
				ANIO = @ANIO AND
				CERTIFICADO = @CERTIFICADO
	))
		BEGIN
			SET @RET_CODE = 1  /*ERROR LOGICO; YA EXISTE*/
			RETURN
		END
	
	INSERT INTO A056_FORM30
			(
				EMPRESA,
				REGION,
				INSPECCION,
				ANIO,
				CERTIFICADO,
				CLAVE,
				VIGENCIA,
				MULT_NEJ,
				MULT_EJ,
				SANC_6M,
				SANC_12M,
				DP_NRO,
				DP_MTO_UTM,
				DP_MTO_PESO,
				RM_NRO,
				RM_MTO_PESO,
				FECHAMOD,
				HORAMOD,
				QUIEN,
				ID,
				PERIODO,
				VALIDADO,
				USUARIO,
				FECHASUBE,
				HORASUBE
			)
	VALUES
			(
				@IDEMPRESA,
				@REGION,
				@INSPECCION,
				@ANIO,
				@CERTIFICADO,
				@CLAVE,
				@VIGENCIA,
				@MULT_NEJ,
				@MULT_EJ,
				@SANC_6M,
				@SANC_12M,
				@DP_NRO,
				@DP_MTO_UTM,
				@DP_MTO_PESO,
				@RM_NRO,
				@RM_MTO_PESO,
				@CURR_FECHA,
				@CURR_TIEMPOFULL,
				@USUARIO,
				NULL,
				@PERIODO,
				'NO',
				@USUARIO,
				@CURR_FECHA,
				@CURR_TIEMPOFULL
			)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM30_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM30_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM30_SELECT_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(11)
) AS
BEGIN
	DECLARE @ID_DOC INT = 92
	SELECT
		SS.ID,
		SS.TIPOCONTENIDO,
		SS.ID_CERTIFICADO,
		SS.EMPRESA,
		SS.ACRONIMO,
		SS.REGION,
		SS.INSPECCION,
		SS.ANIO,
		SS.CERTIFICADO,
		SS.CLAVE,
		SS.VIGENCIA,
		SS.VALIDADO,
		SS.PERIODO,
		SS.UNIQUE_ID,
		SS.DOC_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		) AS DISPUTA_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ESTADO
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), ''
		) AS DISPUTA_ESTADO,
		IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		), 1 , 0) AS DISPUTA_EXISTE		
	FROM
	(
		SELECT
			F30D.ID,
			F30D.TIPOCONTENIDO,
			F30.ID_CERTIFICADO,
			F30.EMPRESA,
			VE.ACRONIMO,
			F30.REGION,
			F30.INSPECCION,
			F30.ANIO,
			F30.CERTIFICADO,
			F30.CLAVE,
			F30.VIGENCIA,
			F30.VALIDADO,
			F30.PERIODO,
			IIF(F30D.ID IS NULL OR CONVERT(NVARCHAR(40), F30D.ID) = '', NULL, F30D.ID) AS UNIQUE_ID,
			IIF(F30D.ID IS NULL OR CONVERT(NVARCHAR(40), F30D.ID) = '', NULL, F30D.ID) AS DOC_ID
		FROM A056_FORM30 F30
		INNER JOIN V_ENTERPRISE VE
			ON F30.EMPRESA = VE.IDEMPRESA
		LEFT OUTER JOIN ARCHIVOS F30D
			ON F30.ID = F30D.ID
		WHERE F30.EMPRESA = @IDEMPRESA
		ORDER BY F30.CERTIFICADO ASC
		OFFSET 0 ROWS
	) SS	
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM30_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM30_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM30_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@ID_CERTIFICADO INT
) AS
BEGIN
	SELECT
		VALIDADO,
		(CASE WHEN OBSERVACION IS NULL THEN STUFF(
													(
													  SELECT
															';' + TR.TIPO_RECHAZO
													  FROM DOCS_CLABORAL_EMP_RECHAZO MR
													  INNER JOIN DOCS_TIPO_RECHAZO TR
														ON MR.ID_TIPO_RECHAZO = TR.ID_TIPO_RECHAZO
													  WHERE ID = A056_FORM30.ID FOR XML PATH ('')
													 ), 1, 1, '')
		 ELSE OBSERVACION END) AS OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
					(
						SELECT
							TOP 1
							D.NOMBRE
						FROM DOCS D
						WHERE D.ID_DOC = @ID_DOC
					),''
				) AS NOM_DOC
	FROM A056_FORM30
	WHERE
		ID_CERTIFICADO = @ID_CERTIFICADO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM30_SELECT_ONE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM30_SELECT_ONE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM30_SELECT_ONE_V2_CONTROLLABORAL_CTTA]
(
  @ID_CERTIFICADO INT
) AS
BEGIN
	SELECT
		CERTUSUARIO,
		CERTFECHA,
		CERTHORA,
		VALIDADO
	FROM A056_FORM30
	WHERE
		ID_CERTIFICADO = @ID_CERTIFICADO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM30_SELECT_ONE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM30_SELECT_ONE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM30_SELECT_ONE_V3_CONTROLLABORAL_CTTA]
(
  @ID		UNIQUEIDENTIFIER
) AS
BEGIN
	SELECT
		(CASE WHEN OBSERVACION IS NULL THEN STUFF(
													(
													  SELECT
															';' + TR.TIPO_RECHAZO
													  FROM DOCS_CLABORAL_EMP_RECHAZO MR
													  INNER JOIN DOCS_TIPO_RECHAZO TR
														ON MR.ID_TIPO_RECHAZO = TR.ID_TIPO_RECHAZO
													  WHERE ID = A056_FORM30.ID FOR XML PATH ('')
													 ), 1, 1, '')
		 ELSE OBSERVACION END) AS OBSERVACION
	FROM A056_FORM30
	WHERE
		ID = @ID
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM30_SELECT_ONE_V4_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM30_SELECT_ONE_V4_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM30_SELECT_ONE_V4_CONTROLLABORAL_CTTA]
(
  @ID_DOC			INT
 ,@IDEMPRESA		NVARCHAR(10)
 ,@CERTIFICADO_ID	INT
) AS
BEGIN
	SELECT
		 PERIODO,
		 EMPRESA,
		 ID_CERTIFICADO,
		 REGION,
		 INSPECCION,
		 ANIO,
		 CLAVE,
		 CERTIFICADO,
		 VIGENCIA,
		 MULT_NEJ,
		 MULT_EJ,
		 SANC_6M,
		 SANC_12M,
		 DP_NRO,
		 DP_MTO_UTM,
		 DP_MTO_PESO,
		 RM_NRO,
		 RM_MTO_PESO,
		 ID,
		 VALIDADO,
		 OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = A056_FORM30.EMPRESA AND
					DD.PERIODO = A056_FORM30.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = A056_FORM30.ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		 ) AS DISPUTA_ID,
		 IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = A056_FORM30.EMPRESA AND
					DD.PERIODO = A056_FORM30.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = A056_FORM30.ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		 ), 1 , 0) AS DISPUTA_EXISTE,
		 COALESCE(
			(
				SELECT
					TOP 1
					ARCHIVO
				FROM ARCHIVOS A
				WHERE A.ID = A056_FORM30.ID
			), NULL
		 ) AS ADJUNTO_CONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					TIPOCONTENIDO
				FROM ARCHIVOS A
				WHERE A.ID = A056_FORM30.ID
			), NULL
		 ) AS ADJUNTO_TIPOCONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					NOMBRE
				FROM ARCHIVOS A
				WHERE A.ID = A056_FORM30.ID
			), NULL
		 ) AS ADJUNTO_NOMBRE		
	FROM A056_FORM30
	WHERE
		EMPRESA = @IDEMPRESA AND
		ID_CERTIFICADO = @CERTIFICADO_ID
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM30_UPDATE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM30_UPDATE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM30_UPDATE_CONTROLLABORAL_CTTA]
(
  @PERIODO			NVARCHAR(6)
 ,@IDEMPRESA		NVARCHAR(10)
 ,@INSPECCION		NVARCHAR(4)
 ,@ANIO				INT
 ,@ID_CERTIFICADO	INT
 ,@CERTIFICADO		BIGINT
 ,@USUARIO			NVARCHAR(10)
 ,@CLAVE			NVARCHAR(30)
 ,@REGION			NVARCHAR(3)
 ,@VIGENCIA			NVARCHAR(8)
 ,@MULT_NEJ			INT
 ,@MULT_EJ			INT
 ,@SANC_6M			INT
 ,@SANC_12M			INT
 ,@DP_NRO			INT
 ,@DP_MTO_UTM		FLOAT
 ,@DP_MTO_PESO		INT
 ,@RM_NRO			INT
 ,@RM_MTO_PESO		INT
 ,@VALIDADO			NVARCHAR(2)
 ,@RET_CODE			INT OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	SET @RET_CODE = -1

	IF(NOT EXISTS(
			SELECT
				*
			FROM A056_FORM30
			WHERE
				EMPRESA = @IDEMPRESA AND
				REGION = @REGION AND
				INSPECCION = @INSPECCION AND
				ANIO = @ANIO AND
				CERTIFICADO = @CERTIFICADO
	))
		BEGIN
			SET @RET_CODE = 2  /*ERROR LOGICO; NO EXISTE*/
			RETURN
		END
	UPDATE A056_FORM30
	SET
		REGION = @REGION,
		INSPECCION = @INSPECCION,
		ANIO = @ANIO,
		CERTIFICADO = @CERTIFICADO,
		CLAVE = @CLAVE,
		VIGENCIA = @VIGENCIA,
		MULT_NEJ = @MULT_NEJ,
		MULT_EJ = @MULT_EJ,
		SANC_6M = @SANC_6M,
		SANC_12M = @SANC_12M,
		DP_NRO = @DP_NRO,
		DP_MTO_UTM = @DP_MTO_UTM,
		DP_MTO_PESO = @DP_MTO_PESO,
		RM_NRO = @RM_NRO,
		RM_MTO_PESO = @RM_MTO_PESO,
		FECHAMOD = @CURR_FECHA,
		HORAMOD = @CURR_TIEMPOFULL,
		QUIEN = @USUARIO,
		VALIDADO = IIF(@VALIDADO = '', 'NO', @VALIDADO),
		PERIODO = @PERIODO
	WHERE
		ID_CERTIFICADO = @ID_CERTIFICADO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM30_UPDATE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM30_UPDATE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM30_UPDATE_V2_CONTROLLABORAL_CTTA]
(
  @EMPRESA				NVARCHAR(10)
 ,@ID_CERTIFICADO		INT
 ,@ID					UNIQUEIDENTIFIER
 ,@USUARIO				NVARCHAR(10)
 ,@DISPUTA_ID			INT
 ,@DISPUTA_EXISTE		INT OUTPUT
 ,@DISPUTA_EMPRESA		NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA		NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @DDC_ID_DISPUTA INT
	DECLARE @DDC_ID_DOC INT
	DECLARE @DDC_ID UNIQUEIDENTIFIER
	DECLARE @DDC_USUARIO NVARCHAR(10)
	DECLARE @DDC_HORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION NVARCHAR(1000)
	DECLARE @DDC_CERTUSUARIO NVARCHAR(10)
	DECLARE @DDC_CERTFECHA NVARCHAR(8)
	DECLARE @DDC_CERTHORA NVARCHAR(8)
	DECLARE @DDC_ESTADO NVARCHAR(2)
	DECLARE @DDC_REVALUSUARIO NVARCHAR(10)
	DECLARE @DDC_REVALFECHA NVARCHAR(8)
	DECLARE @DDC_REVALHORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION_REVAL NVARCHAR(1000)
	DECLARE @DDC_VALIDADO NVARCHAR(2)
	DECLARE @DDC_PERIODO NVARCHAR(6)
	DECLARE @DDC_ID_CERTIFICADO INT

	DECLARE @AF30_EXISTE BIT = 0
	DECLARE @AF30_ID_CERTIFICADO INT
	DECLARE @AF30_EMPRESA NVARCHAR(10)
	DECLARE @AF30_REGION NVARCHAR(3)
	DECLARE @AF30_INSPECCION NVARCHAR(4)
	DECLARE @AF30_ANIO INT
	DECLARE @AF30_CERTIFICADO BIGINT
	DECLARE @AF30_CLAVE NVARCHAR(30)
	DECLARE @AF30_VIGENCIA NVARCHAR(8)
	DECLARE @AF30_MULT_NEJ INT
	DECLARE @AF30_MULT_EJ INT
	DECLARE @AF30_SANC_12M INT
	DECLARE @AF30_DP_NRO INT
	DECLARE @AF30_DP_MTO_PESO INT
	DECLARE @AF30_RM_NRO INT
	DECLARE @AF30_RM_MTO_PESO INT
	DECLARE @AF30_FECHAMOD NVARCHAR(8)
	DECLARE @AF30_HORAMOD NVARCHAR(8)
	DECLARE @AF30_QUIEN NVARCHAR(10)
	DECLARE @AF30_VALIDADO NVARCHAR(2)
	DECLARE @AF30_ID_DOC INT
	DECLARE @AF30_OBSERVACION NVARCHAR(500)
	DECLARE @AF30_ID UNIQUEIDENTIFIER
	DECLARE @AF30_PERIODO NVARCHAR(6)
	DECLARE @AF30_USUARIO NVARCHAR(10)
	DECLARE @AF30_FECHASUBE NVARCHAR(8)
	DECLARE @AF30_HORASUBE NVARCHAR(8)
	DECLARE @AF30_CERTUSUARIO NVARCHAR(10)
	DECLARE @AF30_CERTFECHA NVARCHAR(8)
	DECLARE @AF30_CERTHORA NVARCHAR(8)

	SET @DISPUTA_EXISTE = 0

	SELECT
		TOP 1
		@AF30_EXISTE = 1,
		@AF30_ID_CERTIFICADO = ID_CERTIFICADO,
		@AF30_EMPRESA = EMPRESA,
		@AF30_REGION = REGION,
		@AF30_INSPECCION = INSPECCION,
		@AF30_ANIO = ANIO,
		@AF30_CERTIFICADO = CERTIFICADO,
		@AF30_CLAVE = CLAVE,
		@AF30_VIGENCIA = VIGENCIA,
		@AF30_MULT_NEJ = MULT_NEJ,
		@AF30_MULT_EJ = MULT_EJ,
		@AF30_SANC_12M = SANC_12M,
		@AF30_DP_NRO = DP_NRO,
		@AF30_DP_MTO_PESO = DP_MTO_PESO,
		@AF30_RM_NRO = RM_NRO,
		@AF30_RM_MTO_PESO = RM_MTO_PESO,
		@AF30_FECHAMOD = FECHAMOD,
		@AF30_HORAMOD = HORAMOD,
		@AF30_QUIEN = QUIEN,
		@AF30_VALIDADO = VALIDADO,
		@AF30_ID_DOC = ID_DOC,
		@AF30_OBSERVACION = OBSERVACION,
		@AF30_ID = ID,
		@AF30_PERIODO = PERIODO,
		@AF30_USUARIO = USUARIO,
		@AF30_FECHASUBE = FECHASUBE,
		@AF30_HORASUBE = HORASUBE,
		@AF30_CERTUSUARIO = CERTUSUARIO,
		@AF30_CERTFECHA = CERTFECHA,
		@AF30_CERTHORA = CERTHORA
	FROM A056_FORM30
	WHERE
		EMPRESA = @EMPRESA AND
		ID_CERTIFICADO = @ID_CERTIFICADO

	IF(@AF30_EXISTE = 1)
		BEGIN
			INSERT INTO A056_FORM30_LOG
					(
						ID_CERTIFICADO,
						EMPRESA,
						REGION,
						INSPECCION,
						ANIO,
						CERTIFICADO,
						CLAVE,
						VIGENCIA,
						MULT_NEJ,
						MULT_EJ,
						SANC_12M,
						DP_NRO,
						DP_MTO_PESO,
						RM_NRO,
						RM_MTO_PESO,
						FECHAMOD,
						HORAMOD,
						QUIEN,
						VALIDADO,
						ID_DOC,
						OBSERVACION,
						ID,
						PERIODO,
						USUARIO,
						FECHASUBE,
						HORASUBE,
						CERTUSUARIO,
						CERTFECHA,
						CERTHORA,
						USUARIODEL,
						FECHADEL,
						HORADEL
					
				    )
					VALUES(
						@AF30_ID_CERTIFICADO,
						@AF30_EMPRESA,
						@AF30_REGION,
						@AF30_INSPECCION,
						@AF30_ANIO,
						@AF30_CERTIFICADO,
						@AF30_CLAVE,
						@AF30_VIGENCIA,
						@AF30_MULT_NEJ,
						@AF30_MULT_EJ,
						@AF30_SANC_12M,
						@AF30_DP_NRO,
						@AF30_DP_MTO_PESO,
						@AF30_RM_NRO,
						@AF30_RM_MTO_PESO,
						@AF30_FECHAMOD,
						@AF30_HORAMOD,
						@AF30_QUIEN,
						@AF30_VALIDADO,
						@AF30_ID_DOC,
						@AF30_OBSERVACION,
						@AF30_ID,
						@AF30_PERIODO,
						@AF30_USUARIO,
						@AF30_FECHASUBE,
						@AF30_HORASUBE,
						@AF30_CERTUSUARIO,
						@AF30_CERTFECHA,
						@AF30_CERTHORA,
						@AF30_USUARIO,
						@CURR_FECHA,
						@CURR_TIEMPOFULL
					)			
		END

	SELECT
		TOP 1
		@DISPUTA_EXISTE = 1,
		@DDC_ID_DISPUTA = ID_DISPUTA,
		@DISPUTA_EMPRESA = EMPRESA,
		@DDC_ID_DOC = ID_DOC,
		@DDC_ID = ID,
		@DDC_USUARIO = USUARIO,
		@DISPUTA_FECHA = FECHA,
		@DDC_HORA = HORA,
		@DDC_OBSERVACION = OBSERVACION,
		@DDC_CERTUSUARIO = CERTUSUARIO,
		@DDC_CERTFECHA = CERTFECHA,
		@DDC_CERTHORA = CERTHORA,
		@DDC_ESTADO = ESTADO,
		@DDC_REVALUSUARIO = REVALUSUARIO,
		@DDC_REVALFECHA = REVALFECHA,
		@DDC_REVALHORA = REVALHORA,
		@DDC_OBSERVACION_REVAL = OBSERVACION_REVAL,
		@DDC_VALIDADO = VALIDADO,
		@DDC_PERIODO = PERIODO,
		@DDC_ID_CERTIFICADO = ID_CERTIFICADO
	FROM DOCS_DISPUTA_CLABORAL
	WHERE
		ID_DISPUTA = @DISPUTA_ID AND
		ESTADO = 'NO'

	IF(@DISPUTA_EXISTE = 1)
		BEGIN
			INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
				(
					ID_DISPUTA,
					EMPRESA,
					ID_DOC,
					ID,
					USUARIO,
					FECHA,
					HORA,
					OBSERVACION,
					CERTUSUARIO,
					CERTFECHA,
					CERTHORA,
					ESTADO,
					REVALUSUARIO,
					REVALFECHA,
					REVALHORA,
					OBSERVACION_REVAL,
					VALIDADO,
					PERIODO,
					ID_CERTIFICADO,
					USRMOD,
					FECHAMOD,
					HORAMOD,
					ACCION
				)
			VALUES 
				(
					@DDC_ID_DISPUTA,
					@DISPUTA_EMPRESA,
					@DDC_ID_DOC,
					@DDC_ID,
					@DDC_USUARIO,
					@DISPUTA_FECHA,
					@DDC_HORA,
					@DDC_OBSERVACION,
					@DDC_CERTUSUARIO,
					@DDC_CERTFECHA,
					@DDC_CERTHORA,
					@DDC_ESTADO,
					@DDC_REVALUSUARIO,
					@DDC_REVALFECHA,
					@DDC_REVALHORA,
					@DDC_OBSERVACION_REVAL,
					@DDC_VALIDADO,
					@DDC_PERIODO,
					@DDC_ID_CERTIFICADO,
					@USUARIO,
					@CURR_FECHA,
					@CURR_TIEMPOFULL,
					'ELIMINADO'
				)

			DELETE DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'
		END

		DELETE FROM ARCHIVOS
		WHERE ID = @ID

		UPDATE A056_FORM30
		SET
			ID = NULL,
			VALIDADO = 'NO'
		WHERE
			ID_CERTIFICADO = @ID_CERTIFICADO

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM30_UPDATE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM30_UPDATE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM30_UPDATE_V3_CONTROLLABORAL_CTTA]
(
  @ID				UNIQUEIDENTIFIER = NULL
 ,@USUARIO			NVARCHAR(10)
 ,@ID_CERTIFICADO	INT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	IF(@ID IS NOT NULL)
		BEGIN
			UPDATE A056_FORM30
			SET
				ID = @ID,
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHASUBE = @CURR_FECHA,
				HORASUBE = @CURR_TIEMPOFULL
			WHERE
				ID_CERTIFICADO = @ID_CERTIFICADO
		END
	ELSE
		BEGIN
			UPDATE A056_FORM30
			SET
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHASUBE = @CURR_FECHA,
				HORASUBE = @CURR_TIEMPOFULL
			WHERE
				ID_CERTIFICADO = @ID_CERTIFICADO
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM301_DELETE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM301_DELETE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM301_DELETE_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@ID_CERTIFICADO	INT
 ,@USUARIO			NVARCHAR(10)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
 ,@DISPUTA_USUARIO  NVARCHAR(10) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @F30_1_EXISTS BIT = 0
	DECLARE @F30_1_ID_CERTIFICADO INT
	DECLARE @F30_1_EMPRESA NVARCHAR(10)
	DECLARE @F30_1_REGION NVARCHAR(5)
	DECLARE @F30_1_INSPECCION NVARCHAR(4)
	DECLARE @F30_1_ANIO INT
	DECLARE @F30_1_CERTIFICADO BIGINT
	DECLARE @F30_1_CLAVE NVARCHAR(50)
	DECLARE @F30_1_TRA_DECL INT
	DECLARE @F30_1_TRA_DESV INT
	DECLARE @F30_1_TRA_VIGE INT
	DECLARE @F30_1_COT_PAG NVARCHAR(1)
	DECLARE @F30_1_COT_NPAG NVARCHAR(1)
	DECLARE @F30_1_ADJ_NOM NVARCHAR(1)
	DECLARE @F30_1_IND_AP_P INT
	DECLARE @F30_1_IND_AP_MTO INT
	DECLARE @F30_1_IND_AP_NP INT
	DECLARE @F30_1_IND_AS_P INT
	DECLARE @F30_1_IND_AS_MTO INT
	DECLARE @F30_1_IND_AS_NP INT
	DECLARE @F30_1_PERIODO_INI NVARCHAR(6)
	DECLARE @F30_1_PERIODO_FIN NVARCHAR(6)
	DECLARE @F30_1_FECHAMOD NVARCHAR(8)
	DECLARE @F30_1_HORAMOD NVARCHAR(8)
	DECLARE @F30_1_QUIEN NVARCHAR(10)
	DECLARE @F30_1_VALIDADO NVARCHAR(2)
	DECLARE @F30_1_ID_DOC INT
	DECLARE @F30_1_OBSERVACION NVARCHAR(500)
	DECLARE @F30_1_ID UNIQUEIDENTIFIER
	DECLARE @F30_1_PERIODO NVARCHAR(6)
	DECLARE @F30_1_USUARIO NVARCHAR(10)
	DECLARE @F30_1_FECHASUBE NVARCHAR(8)
	DECLARE @F30_1_HORASUBE NVARCHAR(8)
	DECLARE @F30_1_CERTUSUARIO NVARCHAR(10)
	DECLARE @F30_1_CERTFECHA NVARCHAR(8)
	DECLARE @F30_1_CERTHORA NVARCHAR(8)
	DECLARE @F30_1_OST NVARCHAR(50)

	DECLARE @F30_1_DET_ID_CERTIFICADO	NVARCHAR(10)
	DECLARE @F30_1_DET_PERIODO			NVARCHAR(8)
	DECLARE @F30_1_DET_NRO_TRAB_PAG		INT
	DECLARE @F30_1_DET_MONTO_PAGADO		BIGINT
	DECLARE @F30_1_DET_NRO_TRAB_NOPAG	INT
	DECLARE @F30_1_DET_EMPRESA			NVARCHAR(10)

	
	DECLARE @DSP_ID_DISPUTA INT
	DECLARE @DSP_ID_DOC INT
	DECLARE @DSP_ID UNIQUEIDENTIFIER
	DECLARE @DSP_HORA NVARCHAR(8)
	DECLARE @DSP_OBSERVACION NVARCHAR(1000)
	DECLARE @DSP_CERTUSUARIO NVARCHAR(10)
	DECLARE @DSP_CERTFECHA NVARCHAR(8)
	DECLARE @DSP_CERTHORA NVARCHAR(8)
	DECLARE @DSP_ESTADO	NVARCHAR(2)
	DECLARE @DSP_REVALUSUARIO NVARCHAR(10)
	DECLARE @DSP_REVALFECHA	NVARCHAR(8)
	DECLARE @DSP_REVALHORA	NVARCHAR(8)
	DECLARE @DSP_OBSERVACION_REVAL	NVARCHAR(1000)
	DECLARE @DSP_VALIDADO NVARCHAR(2)
	DECLARE @DSP_PERIODO NVARCHAR(6)
	DECLARE @DSP_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0
	SET @DISPUTA_EMPRESA = ''
	SET @DISPUTA_FECHA = ''

	SELECT
		TOP 1
		@F30_1_EXISTS = 1,
		@F30_1_ID_CERTIFICADO = ID_CERTIFICADO,
		@F30_1_EMPRESA = EMPRESA,
		@F30_1_REGION = REGION,
		@F30_1_INSPECCION = INSPECCION,
		@F30_1_ANIO = ANIO,
		@F30_1_CERTIFICADO = CERTIFICADO,
		@F30_1_CLAVE = CLAVE,
		@F30_1_TRA_DECL = TRA_DECL,
		@F30_1_TRA_DESV = TRA_DESV,
		@F30_1_TRA_VIGE = TRA_VIGE,
		@F30_1_COT_PAG = COT_PAG,
		@F30_1_COT_NPAG = COT_NPAG,
		@F30_1_ADJ_NOM = ADJ_NOM,
		@F30_1_IND_AP_P = IND_AP_P,
		@F30_1_IND_AP_MTO = IND_AP_MTO,
		@F30_1_IND_AP_NP = IND_AP_NP,
		@F30_1_IND_AS_P = IND_AS_P,
		@F30_1_IND_AS_MTO = IND_AS_MTO,
		@F30_1_IND_AS_NP = IND_AS_NP,
		@F30_1_PERIODO_INI = PERIODO_INI,
		@F30_1_PERIODO_FIN = PERIODO_FIN,
		@F30_1_FECHAMOD = FECHAMOD,
		@F30_1_HORAMOD = HORAMOD,
		@F30_1_QUIEN = QUIEN,
		@F30_1_VALIDADO = VALIDADO,
		@F30_1_ID_DOC = ID_DOC,
		@F30_1_OBSERVACION = OBSERVACION,
		@F30_1_ID = ID,
		@F30_1_PERIODO = PERIODO,
		@F30_1_USUARIO = USUARIO,
		@F30_1_FECHASUBE = FECHASUBE,
		@F30_1_HORASUBE = HORASUBE,
		@F30_1_CERTUSUARIO = CERTUSUARIO,
		@F30_1_CERTFECHA = CERTFECHA,
		@F30_1_CERTHORA = CERTHORA,
		@F30_1_OST = OST
	FROM A056_FORM301
	WHERE
		EMPRESA = @IDEMPRESA AND
		ID_CERTIFICADO = @ID_CERTIFICADO
	
	IF(@F30_1_EXISTS = 1)
		BEGIN
			DECLARE cursor_f301 CURSOR
			FOR
			SELECT
				ID_CERTIFICADO,
				PERIODO,
				NRO_TRAB_PAG,
				MONTO_PAGADO,
				NRO_TRAB_NOPAG,
				EMPRESA
			FROM A056_FORM301_DET
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(ID_CERTIFICADO = @ID_CERTIFICADO)

			OPEN cursor_f301

			FETCH NEXT FROM cursor_f301 INTO 
				@F30_1_DET_ID_CERTIFICADO, 
				@F30_1_DET_PERIODO,
				@F30_1_DET_NRO_TRAB_PAG,
				@F30_1_DET_MONTO_PAGADO,
				@F30_1_DET_NRO_TRAB_NOPAG,
				@F30_1_DET_EMPRESA

			WHILE @@FETCH_STATUS = 0
				BEGIN
					INSERT INTO A056_FORM301_DET_LOG
							(
								ID_CERTIFICADO,
								PERIODO,
								NRO_TRAB_PAG,
								MONTO_PAGADO,
								NRO_TRAB_NOPAG,
								EMPRESA
							)
					VALUES
							(
								@F30_1_DET_ID_CERTIFICADO,
								@F30_1_DET_PERIODO,
								@F30_1_DET_NRO_TRAB_PAG,
								@F30_1_DET_MONTO_PAGADO,
								@F30_1_DET_NRO_TRAB_NOPAG,
								@F30_1_DET_EMPRESA
							)

					FETCH NEXT FROM cursor_f301 INTO 
						@F30_1_DET_ID_CERTIFICADO, 
						@F30_1_DET_PERIODO,
						@F30_1_DET_NRO_TRAB_PAG,
						@F30_1_DET_MONTO_PAGADO,
						@F30_1_DET_NRO_TRAB_NOPAG,
						@F30_1_DET_EMPRESA
				END

			CLOSE cursor_f301

			DEALLOCATE cursor_f301
			
			DELETE FROM A056_FORM301_DET
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(ID_CERTIFICADO = @ID_CERTIFICADO)

			INSERT INTO A056_FORM301_LOG
						(
							ID_CERTIFICADO,
							EMPRESA,
							REGION,
							INSPECCION,
							ANIO,
							CERTIFICADO,
							CLAVE,
							TRA_DECL,
							TRA_DESV,
							TRA_VIGE,
							COT_PAG,
							COT_NPAG,
							ADJ_NOM,
							IND_AP_P,
							IND_AP_MTO,
							IND_AP_NP,
							IND_AS_P,
							IND_AS_MTO,
							IND_AS_NP,
							PERIODO_INI,
							PERIODO_FIN,
							FECHAMOD,
							HORAMOD,
							QUIEN,
							VALIDADO,
							ID_DOC,
							OBSERVACION,
							ID,
							PERIODO,
							USUARIO,
							FECHASUBE,
							HORASUBE,
							CERTUSUARIO,
							CERTFECHA,
							CERTHORA,
							OST,
							USUARIODEL,
							FECHADEL,
							HORADEL
						)
			VALUES
						(
							@F30_1_ID_CERTIFICADO,
							@F30_1_EMPRESA,
							@F30_1_REGION,
							@F30_1_INSPECCION,
							@F30_1_ANIO,
							@F30_1_CERTIFICADO,
							@F30_1_CLAVE,
							@F30_1_TRA_DECL,
							@F30_1_TRA_DESV,
							@F30_1_TRA_VIGE,
							@F30_1_COT_PAG,
							@F30_1_COT_NPAG,
							@F30_1_ADJ_NOM,
							@F30_1_IND_AP_P,
							@F30_1_IND_AP_MTO,
							@F30_1_IND_AP_NP,
							@F30_1_IND_AS_P,
							@F30_1_IND_AS_MTO,
							@F30_1_IND_AS_NP,
							@F30_1_PERIODO_INI,
							@F30_1_PERIODO_FIN,
							@F30_1_FECHAMOD,
							@F30_1_HORAMOD,
							@F30_1_QUIEN,
							@F30_1_VALIDADO,
							@F30_1_ID_DOC,
							@F30_1_OBSERVACION,
							@F30_1_ID,
							@F30_1_PERIODO,
							@F30_1_USUARIO,
							@F30_1_FECHASUBE,
							@F30_1_HORASUBE,
							@F30_1_CERTUSUARIO,
							@F30_1_CERTFECHA,
							@F30_1_CERTHORA,
							@F30_1_OST,
							@USUARIO,
							@CURR_FECHA,
							@CURR_TIEMPOFULL
						)
			/*--------------------------*/
			
			SELECT
				TOP 1
				@DISPUTA_EXISTE = 1,
				@DSP_ID_DISPUTA = ID_DISPUTA,
				@DISPUTA_EMPRESA = EMPRESA,
				@DSP_ID_DOC = ID_DOC,
				@DSP_ID = ID,
				@DISPUTA_USUARIO = USUARIO,
				@DISPUTA_FECHA = FECHA,
				@DSP_HORA = HORA,
				@DSP_OBSERVACION = OBSERVACION,
				@DSP_CERTUSUARIO = CERTUSUARIO,
				@DSP_CERTFECHA = CERTFECHA,
				@DSP_CERTHORA = CERTHORA,
				@DSP_ESTADO = ESTADO,
				@DSP_REVALUSUARIO = REVALUSUARIO,
				@DSP_REVALFECHA = REVALFECHA,
				@DSP_REVALHORA = REVALHORA,
				@DSP_OBSERVACION_REVAL = OBSERVACION_REVAL,
				@DSP_VALIDADO = VALIDADO,
				@DSP_PERIODO = PERIODO,
				@DSP_ID_CERTIFICADO = ID_CERTIFICADO
			FROM DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'

			IF(@DISPUTA_EXISTE = 1)
				BEGIN
					INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
							(
								ID_DISPUTA,
								EMPRESA,
								ID_DOC,
								ID,
								USUARIO,
								FECHA,
								HORA,
								OBSERVACION,
								CERTUSUARIO,
								CERTFECHA,
								CERTHORA,
								ESTADO,
								REVALUSUARIO,
								REVALFECHA,
								REVALHORA,
								OBSERVACION_REVAL,
								VALIDADO,
								PERIODO,
								ID_CERTIFICADO,
								USRMOD,
								FECHAMOD,
								HORAMOD,
								ACCION
							)
					VALUES (
								@DSP_ID_DISPUTA,
								@DISPUTA_EMPRESA,
								@DSP_ID_DOC,
								@DSP_ID,
								@DISPUTA_USUARIO,
								@DISPUTA_FECHA,
								@DSP_HORA,
								@DSP_OBSERVACION,
								@DSP_CERTUSUARIO,
								@DSP_CERTFECHA,
								@DSP_CERTHORA,
								@DSP_ESTADO,
								@DSP_REVALUSUARIO,
								@DSP_REVALFECHA,
								@DSP_REVALHORA,
								@DSP_OBSERVACION_REVAL,
								@DSP_VALIDADO,
								@DSP_PERIODO,
								@DSP_ID_CERTIFICADO,
								@USUARIO,
								@CURR_FECHA,
								@CURR_TIEMPOFULL,
								'ELIMINADO'
							)

					DELETE DOCS_DISPUTA_CLABORAL WHERE ID_DISPUTA = @DISPUTA_ID AND ESTADO = 'NO'
				END

			DELETE FROM A056_FORM301 WHERE (EMPRESA = @IDEMPRESA) AND (ID_CERTIFICADO = @ID_CERTIFICADO)

		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM301_DET_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM301_DET_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM301_DET_INSERT_CONTROLLABORAL_CTTA]
(
  @ID_CERTIFICADO	NVARCHAR(10)
 ,@PERIODO			NVARCHAR(8)
 ,@EMPRESA			NVARCHAR(10)
 ,@NRO_TRAB_PAG		INT
 ,@MONTO_PAGADO		BIGINT
 ,@NRO_TRAB_NOPAG	INT
) AS
BEGIN
	IF(NOT EXISTS(
			SELECT
				ID_CERTIFICADO
			FROM A056_FORM301_DET
			WHERE
				ID_CERTIFICADO = @ID_CERTIFICADO AND
				PERIODO = @PERIODO
	))
		BEGIN
			INSERT INTO A056_FORM301_DET
						(
							EMPRESA,
							ID_CERTIFICADO,
							PERIODO,
							NRO_TRAB_PAG,
							MONTO_PAGADO,
							NRO_TRAB_NOPAG
						) VALUES
						(
							@EMPRESA,
							@ID_CERTIFICADO,
							@PERIODO,
							@NRO_TRAB_PAG,
							@MONTO_PAGADO,
							@NRO_TRAB_NOPAG
						)
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM301_DET_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM301_DET_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM301_DET_SELECT_CONTROLLABORAL_CTTA]
(
  @EMPRESA			NVARCHAR(10)
 ,@ID_CERTIFICADO	NVARCHAR(10)
) AS
BEGIN
	SELECT
		PERIODO,
		NRO_TRAB_PAG,
		MONTO_PAGADO,
		NRO_TRAB_NOPAG
	FROM A056_FORM301_DET
	WHERE
		(EMPRESA = @EMPRESA) AND
		(ID_CERTIFICADO = @ID_CERTIFICADO )
	ORDER BY PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM301_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM301_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM301_INSERT_CONTROLLABORAL_CTTA]
(
  @PERIODO			NVARCHAR(6)
 ,@EMPRESA			NVARCHAR(10)
 ,@DIVISION			NVARCHAR(4)
 ,@OST				NVARCHAR(50)
 ,@USUARIO			NVARCHAR(10)
 ,@CLAVE			NVARCHAR(50)
 ,@REGION			NVARCHAR(5)
 ,@INSPECCION		NVARCHAR(4)
 ,@ANIO				INT
 ,@CERTIFICADO		BIGINT
 ,@PERIODO_INI		NVARCHAR(6)
 ,@PERIODO_FIN		NVARCHAR(6)
 ,@TRA_DECL			INT
 ,@TRA_DESV			INT
 ,@TRA_VIGE			INT
 ,@COT_PAG			NVARCHAR(1)
 ,@COT_NPAG			NVARCHAR(1)
 ,@ADJ_NOM			NVARCHAR(1)
 ,@IND_AP_P			INT
 ,@IND_AP_MTO		INT
 ,@IND_AP_NP		INT
 ,@IND_AS_P			INT
 ,@IND_AS_MTO		INT
 ,@IND_AS_NP		INT
 ,@TIPO				NVARCHAR(10)
 ,@ID_CERTIFICADO	INT
 ,@RET_CODE			INT OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	SET @RET_CODE = -1

	IF(EXISTS(
			SELECT
				REGION
			FROM A056_FORM301
			WHERE
				EMPRESA = @EMPRESA AND
				DIVISION = @DIVISION AND
				OST = @OST AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 1  /*ERROR LOGICO; YA EXISTE*/
			RETURN
		END
	
	INSERT INTO  A056_FORM301
				(
					EMPRESA,
					CLAVE,
					REGION,
					INSPECCION,
					ANIO,
					CERTIFICADO,
					PERIODO_INI,
					PERIODO_FIN,
					TRA_DECL,
					TRA_DESV,
					TRA_VIGE,
					COT_PAG,
					COT_NPAG,
					ADJ_NOM,
					IND_AP_P,
					IND_AP_MTO,
					IND_AP_NP,
					IND_AS_P,
					IND_AS_MTO,
					IND_AS_NP,
					FECHAMOD,
					HORAMOD,
					QUIEN,
					VALIDADO,
					PERIODO,
					OST,
					TIPO, 
					DIVISION
				)
				VALUES
				(
					@EMPRESA,
					@CLAVE,
					@REGION,
					@INSPECCION,
					@ANIO,
					@CERTIFICADO,
					@PERIODO_INI,
					@PERIODO_FIN,
					@TRA_DECL,
					@TRA_DESV,
					@TRA_VIGE,
					@COT_PAG,
					@COT_NPAG,
					IIF(@ADJ_NOM = 'S', 'N', 'S'),
					@IND_AP_P,
					@IND_AP_MTO,
					@IND_AP_NP,
					@IND_AS_P,
					@IND_AS_MTO,
					@IND_AS_NP,
					@CURR_FECHA,
					@CURR_TIEMPOFULL,
					@EMPRESA,
					'NO',
					@PERIODO,
					@OST,
					@TIPO,
					@DIVISION
				)

		IF(@ID_CERTIFICADO = 0)
			BEGIN
				SELECT
					TOP 1
					@ID_CERTIFICADO = ID_CERTIFICADO
				FROM A056_FORM301
				WHERE
					(EMPRESA = @EMPRESA) AND
					(DIVISION = @DIVISION) AND
					(OST = @OST) AND
					(PERIODO = @PERIODO)
			END

		DELETE
		FROM A056_FORM301_DET
		WHERE
			(EMPRESA = @EMPRESA) AND
			(ID_CERTIFICADO = @ID_CERTIFICADO)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM301_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM301_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM301_SELECT_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(11)
) AS
BEGIN
	DECLARE @ID_DOC INT = 93
	SELECT
		SS.ID,
		SS.ID_CERTIFICADO,
		SS.EMPRESA,
		SS.ACRONIMO,
		SS.REGION,
		SS.INSPECCION,
		SS.ANIO,
		SS.CERTIFICADO,
		SS.CLAVE,
		SS.PERIODO_INI,
		SS.PERIODO_FIN,
		SS.VALIDADO,
		SS.PERIODO,
		SS.OST,
		SS.DIVISION,
		SS.UNIQUE_ID,
		SS.DOC_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		) AS DISPUTA_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ESTADO
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), ''
		) AS DISPUTA_ESTADO,
		IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		), 1 , 0) AS DISPUTA_EXISTE		
	FROM
	(
		SELECT
			F301D.ID,
			F301.ID_CERTIFICADO,
			F301.EMPRESA,
			VE.ACRONIMO,
			F301.REGION,
			F301.INSPECCION,
			F301.ANIO,
			F301.CERTIFICADO,
			F301.CLAVE,
			F301.PERIODO_INI,
			F301.PERIODO_FIN,
			F301.VALIDADO,
			F301.PERIODO,
			F301.OST,
			F301.DIVISION,
			IIF(F301D.ID IS NULL OR CONVERT(NVARCHAR(40), F301D.ID) = '', NULL, F301D.ID) AS UNIQUE_ID,
			IIF(F301D.ID IS NULL OR CONVERT(NVARCHAR(40), F301D.ID) = '', NULL, F301D.ID) AS DOC_ID
			FROM A056_FORM301 F301
			INNER JOIN V_ENTERPRISE VE
				ON F301.EMPRESA = VE.IDEMPRESA
			LEFT OUTER JOIN ARCHIVOS F301D
				ON F301.ID = F301D.ID
			WHERE (F301.EMPRESA = @IDEMPRESA)
			ORDER BY F301.CERTIFICADO ASC
		OFFSET 0 ROWS
	) SS	
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM301_SELECT_ONE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM301_SELECT_ONE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM301_SELECT_ONE_V2_CONTROLLABORAL_CTTA]
(
  @ID_CERTIFICADO INT
) AS
BEGIN
	SELECT
		CERTUSUARIO,
		CERTFECHA,
		CERTHORA,
		VALIDADO,
		ID_CERTIFICADO
	FROM A056_FORM301
	WHERE
		ID_CERTIFICADO = @ID_CERTIFICADO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM301_SELECT_ONE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM301_SELECT_ONE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM301_SELECT_ONE_V3_CONTROLLABORAL_CTTA]
(
  @ID		UNIQUEIDENTIFIER
) AS
BEGIN
	SELECT
		(CASE WHEN OBSERVACION IS NULL THEN STUFF(
													(
													  SELECT
															';' + TR.TIPO_RECHAZO
													  FROM DOCS_CLABORAL_EMP_RECHAZO MR
													  INNER JOIN DOCS_TIPO_RECHAZO TR
														ON MR.ID_TIPO_RECHAZO = TR.ID_TIPO_RECHAZO
													  WHERE ID = A056_FORM301.ID FOR XML PATH ('')
													 ), 1, 1, '')
		 ELSE OBSERVACION END) AS OBSERVACION
	FROM A056_FORM301
	WHERE
		ID = @ID
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM301_SELECT_ONE_V4_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM301_SELECT_ONE_V4_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM301_SELECT_ONE_V4_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@ID_CERTIFICADO INT
) AS
BEGIN
	SELECT
		REGION,
		INSPECCION,
		ANIO,
		CLAVE,
		CERTIFICADO,
		PERIODO_INI,
		PERIODO_FIN,
		TRA_DECL,
		TRA_DESV,
		TRA_VIGE,
		COT_PAG,
		COT_NPAG,
		ADJ_NOM,
		IND_AP_P,
		IND_AP_MTO,
		IND_AP_NP,
		IND_AS_P,
		IND_AS_MTO,
		IND_AS_NP,
		ID,
		PERIODO,
		OBSERVACION,
		OST,
		DIVISION,
		VALIDADO,
		ID_CERTIFICADO,
		COALESCE(
			(
				SELECT
					TOP 1
						O.DESCRIPOST
				FROM OST O
				WHERE O.NROOST = A056_FORM301.OST
			), ''
		) AS GLOSA,
		COALESCE(
				(
					SELECT
						TOP 1
						E.ACRONIMO
					FROM ENTERPRISE E
					WHERE E.IDEMPRESA = @IDEMPRESA
				), ''
			) AS ACRO_EMPRESA,
		[dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = A056_FORM301.EMPRESA AND
					DD.PERIODO = A056_FORM301.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = A056_FORM301.ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		) AS DISPUTA_ID,
		IIF(EXISTS(
			SELECT * 
			FROM DOCS_DISPUTA_CLABORAL DD
			WHERE
				DD.EMPRESA = A056_FORM301.EMPRESA AND
				DD.PERIODO = A056_FORM301.PERIODO AND
				DD.ID_DOC = @ID_DOC AND
				DD.ID = A056_FORM301.ID
			ORDER BY DD.ID_DISPUTA DESC
			OFFSET 0 ROWS
		), 1 , 0) AS DISPUTA_EXISTE,
			COALESCE(
			(
				SELECT
					TOP 1
					D.NOMBRE
				FROM DOCS D
				WHERE D.ID_DOC = @ID_DOC
			),''
		) AS NOM_DOC,
		 COALESCE(
			(
				SELECT
					TOP 1
					ARCHIVO
				FROM ARCHIVOS A
				WHERE A.ID = A056_FORM301.ID
			), NULL
		 ) AS ADJUNTO_CONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					TIPOCONTENIDO
				FROM ARCHIVOS A
				WHERE A.ID = A056_FORM301.ID
			), NULL
		 ) AS ADJUNTO_TIPOCONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					NOMBRE
				FROM ARCHIVOS A
				WHERE A.ID = A056_FORM301.ID
			), NULL
		 ) AS ADJUNTO_NOMBRE
	FROM A056_FORM301
	WHERE
		ID_CERTIFICADO = @ID_CERTIFICADO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM301_UPDATE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM301_UPDATE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM301_UPDATE_CONTROLLABORAL_CTTA]
(
  @PERIODO			NVARCHAR(6)
 ,@EMPRESA			NVARCHAR(10)
 ,@DIVISION			NVARCHAR(4)
 ,@OST				NVARCHAR(50)
 ,@USUARIO			NVARCHAR(10)
 ,@CLAVE			NVARCHAR(50)
 ,@REGION			NVARCHAR(5)
 ,@INSPECCION		NVARCHAR(4)
 ,@ANIO				INT
 ,@CERTIFICADO		BIGINT
 ,@PERIODO_INI		NVARCHAR(6)
 ,@PERIODO_FIN		NVARCHAR(6)
 ,@TRA_DECL			INT
 ,@TRA_DESV			INT
 ,@TRA_VIGE			INT
 ,@COT_PAG			NVARCHAR(1)
 ,@COT_NPAG			NVARCHAR(1)
 ,@ADJ_NOM			NVARCHAR(1)
 ,@IND_AP_P			INT
 ,@IND_AP_MTO		INT
 ,@IND_AP_NP		INT
 ,@IND_AS_P			INT
 ,@IND_AS_MTO		INT
 ,@IND_AS_NP		INT
 ,@ID_CERTIFICADO	INT
 ,@RET_CODE			INT OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	SET @RET_CODE = -1

	IF(NOT EXISTS(
			SELECT
				REGION
			FROM A056_FORM301
			WHERE
				EMPRESA = @EMPRESA AND
				DIVISION = @DIVISION AND
				OST = @OST AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 2  /*ERROR LOGICO; NO EXISTE*/
			RETURN
		END

	UPDATE A056_FORM301
	SET
		REGION = @REGION,
		INSPECCION = @INSPECCION,
		ANIO = @ANIO,
		CERTIFICADO = @CERTIFICADO,
		CLAVE = @CLAVE,
		PERIODO_INI = @PERIODO_INI,
		PERIODO_FIN = @PERIODO_FIN,
		TRA_DECL = @TRA_DECL,
		TRA_DESV = @TRA_DESV,
		TRA_VIGE = @TRA_VIGE,
		COT_PAG = @COT_PAG,
		COT_NPAG = @COT_NPAG,
		ADJ_NOM = IIF(@ADJ_NOM = 'S', 'N', 'S'),
		IND_AP_P = @IND_AP_P,
		IND_AP_MTO = @IND_AP_MTO,
		IND_AP_NP = @IND_AP_NP,
		IND_AS_P = @IND_AS_P,
		IND_AS_MTO = @IND_AS_MTO,
		IND_AS_NP = @IND_AS_NP,
		QUIEN = @EMPRESA,
		VALIDADO = 'NO',
		FECHAMOD = @CURR_FECHA,
		HORAMOD = @CURR_TIEMPOFULL,
		PERIODO = @PERIODO,
		OST = @OST,
		DIVISION = @DIVISION
	WHERE 
		(EMPRESA = @EMPRESA) AND
		(ID_CERTIFICADO = @ID_CERTIFICADO) AND
		(DIVISION = @DIVISION) AND
		(OST = @OST) AND
		(PERIODO = @PERIODO)

	IF(@ID_CERTIFICADO = 0)
		BEGIN
			SELECT
				TOP 1
				@ID_CERTIFICADO = ID_CERTIFICADO
			FROM A056_FORM301
			WHERE
				(EMPRESA = @EMPRESA) AND
				(DIVISION = @DIVISION) AND
				(OST = @OST) AND
				(PERIODO = @PERIODO)
		END

	DELETE
	FROM A056_FORM301_DET
	WHERE
		(EMPRESA = @EMPRESA) AND
		(ID_CERTIFICADO = @ID_CERTIFICADO)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM301_UPDATE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM301_UPDATE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM301_UPDATE_V2_CONTROLLABORAL_CTTA]
(
  @EMPRESA				NVARCHAR(10)
 ,@PERIODO				NVARCHAR(6)
 ,@DIVISION				NVARCHAR(4)
 ,@OST					NVARCHAR(50)
 ,@USUARIO				NVARCHAR(10)
 ,@DISPUTA_ID			INT
 ,@ID_CERTIFICADO		INT
 ,@ID					UNIQUEIDENTIFIER
 ,@DISPUTA_EXISTE		INT OUTPUT
 ,@DISPUTA_EMPRESA		NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA		NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @DDC_ID_DISPUTA INT
	DECLARE @DDC_ID_DOC INT
	DECLARE @DDC_ID UNIQUEIDENTIFIER
	DECLARE @DDC_USUARIO NVARCHAR(10)
	DECLARE @DDC_HORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION NVARCHAR(1000)
	DECLARE @DDC_CERTUSUARIO NVARCHAR(10)
	DECLARE @DDC_CERTFECHA NVARCHAR(8)
	DECLARE @DDC_CERTHORA NVARCHAR(8)
	DECLARE @DDC_ESTADO NVARCHAR(2)
	DECLARE @DDC_REVALUSUARIO NVARCHAR(10)
	DECLARE @DDC_REVALFECHA NVARCHAR(8)
	DECLARE @DDC_REVALHORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION_REVAL NVARCHAR(1000)
	DECLARE @DDC_VALIDADO NVARCHAR(2)
	DECLARE @DDC_PERIODO NVARCHAR(6)
	DECLARE @DDC_ID_CERTIFICADO INT
	
	DECLARE @AF_EXISTE BIT = 0
	DECLARE @AF_ID_CERTIFICADO	INT
	DECLARE @AF_EMPRESA	NVARCHAR(10)
	DECLARE @AF_REGION	NVARCHAR(5)
	DECLARE @AF_INSPECCION	NVARCHAR(4)
	DECLARE @AF_ANIO	INT
	DECLARE @AF_CERTIFICADO	BIGINT
	DECLARE @AF_CLAVE	NVARCHAR(50)
	DECLARE @AF_TRA_DECL	INT
	DECLARE @AF_TRA_DESV	INT
	DECLARE @AF_TRA_VIGE	INT
	DECLARE @AF_COT_PAG		NVARCHAR(1)
	DECLARE @AF_COT_NPAG	NVARCHAR(1)
	DECLARE @AF_ADJ_NOM		NVARCHAR(1)
	DECLARE @AF_IND_AP_P	INT
	DECLARE @AF_IND_AP_MTO	INT
	DECLARE @AF_IND_AP_NP	INT
	DECLARE @AF_IND_AS_P	INT
	DECLARE @AF_IND_AS_MTO	INT
	DECLARE @AF_IND_AS_NP	INT
	DECLARE @AF_PERIODO_INI	NVARCHAR(6)
	DECLARE @AF_PERIODO_FIN	NVARCHAR(6)
	DECLARE @AF_FECHAMOD	NVARCHAR(8)
	DECLARE @AF_HORAMOD		NVARCHAR(8)
	DECLARE @AF_QUIEN		NVARCHAR(10)
	DECLARE @AF_VALIDADO	NVARCHAR(2)
	DECLARE @AF_ID_DOC		INT
	DECLARE @AF_OBSERVACION	NVARCHAR(500)
	DECLARE @AF_ID			UNIQUEIDENTIFIER
	DECLARE @AF_PERIODO		NVARCHAR(6)
	DECLARE @AF_USUARIO		NVARCHAR(10)
	DECLARE @AF_FECHASUBE	NVARCHAR(8)
	DECLARE @AF_HORASUBE	NVARCHAR(8)
	DECLARE @AF_CERTUSUARIO	NVARCHAR(10)
	DECLARE @AF_CERTFECHA	NVARCHAR(8)
	DECLARE @AF_CERTHORA	NVARCHAR(8)
	DECLARE @AF_OST			NVARCHAR(50)
	DECLARE @AF_DIVISION	NVARCHAR(4)

	SET @DISPUTA_EXISTE = 0

	SELECT
		@AF_EXISTE = 1,
		@AF_ID_CERTIFICADO = ID_CERTIFICADO,
		@AF_EMPRESA = EMPRESA,
		@AF_REGION = REGION,
		@AF_INSPECCION = INSPECCION,
		@AF_ANIO = ANIO,
		@AF_CERTIFICADO = CERTIFICADO,
		@AF_CLAVE = CLAVE,
		@AF_TRA_DECL = TRA_DECL,
		@AF_TRA_DESV = TRA_DESV,
		@AF_TRA_VIGE = TRA_VIGE,
		@AF_COT_PAG = COT_PAG,
		@AF_COT_NPAG = COT_NPAG,
		@AF_ADJ_NOM = ADJ_NOM,
		@AF_IND_AP_P = IND_AP_P,
		@AF_IND_AP_MTO = IND_AP_MTO,
		@AF_IND_AP_NP = IND_AP_NP,
		@AF_IND_AS_P = IND_AS_P,
		@AF_IND_AS_MTO = IND_AS_MTO,
		@AF_IND_AS_NP = IND_AS_NP,
		@AF_PERIODO_INI = PERIODO_INI,
		@AF_PERIODO_FIN = PERIODO_FIN,
		@AF_FECHAMOD = FECHAMOD,
		@AF_HORAMOD = HORAMOD,
		@AF_QUIEN = QUIEN,
		@AF_VALIDADO = VALIDADO,
		@AF_ID_DOC = ID_DOC,
		@AF_OBSERVACION = OBSERVACION,
		@AF_ID = ID,
		@AF_PERIODO = PERIODO,
		@AF_USUARIO = USUARIO,
		@AF_FECHASUBE = FECHASUBE,
		@AF_HORASUBE = HORASUBE,
		@AF_CERTUSUARIO = CERTUSUARIO,
		@AF_CERTFECHA = CERTFECHA,
		@AF_CERTHORA = CERTHORA,
		@AF_OST = OST,
		@AF_DIVISION = DIVISION
	FROM A056_FORM301
	WHERE
		(EMPRESA = @EMPRESA) AND
		(ID_CERTIFICADO = @ID_CERTIFICADO)

	IF(@AF_EXISTE = 1)
		BEGIN
			INSERT INTO A056_FORM301_LOG
							(
								ID_CERTIFICADO,
								EMPRESA,
								REGION,
								INSPECCION,
								ANIO,
								CERTIFICADO,
								CLAVE,
								TRA_DECL,
								TRA_DESV,
								TRA_VIGE,
								COT_PAG,
								COT_NPAG,
								ADJ_NOM,
								IND_AP_P,
								IND_AP_MTO,
								IND_AP_NP,
								IND_AS_P,
								IND_AS_MTO,
								IND_AS_NP,
								PERIODO_INI,
								PERIODO_FIN,
								FECHAMOD,
								HORAMOD,
								QUIEN,
								VALIDADO,
								ID_DOC,
								OBSERVACION,
								ID,
								PERIODO,
								USUARIO,
								FECHASUBE,
								HORASUBE,
								CERTUSUARIO,
								CERTFECHA,
								CERTHORA,
								OST,
								USUARIODEL,
								FECHADEL,
								HORADEL,
								DIVISION
							)
					VALUES (
								@AF_ID_CERTIFICADO,
								@AF_EMPRESA,
								@AF_REGION,
								@AF_INSPECCION,
								@AF_ANIO,
								@AF_CERTIFICADO,
								@AF_CLAVE,
								@AF_TRA_DECL,
								@AF_TRA_DESV,
								@AF_TRA_VIGE,
								@AF_COT_PAG,
								@AF_COT_NPAG,
								@AF_ADJ_NOM,
								@AF_IND_AP_P,
								@AF_IND_AP_MTO,
								@AF_IND_AP_NP,
								@AF_IND_AS_P,
								@AF_IND_AS_MTO,
								@AF_IND_AS_NP,
								@AF_PERIODO_INI,
								@AF_PERIODO_FIN,
								@AF_FECHAMOD,
								@AF_HORAMOD,
								@AF_QUIEN,
								@AF_VALIDADO,
								@AF_ID_DOC,
								@AF_OBSERVACION,
								@AF_ID,
								@AF_PERIODO,
								@AF_USUARIO,
								@AF_FECHASUBE,
								@AF_HORASUBE,
								@AF_CERTUSUARIO,
								@AF_CERTFECHA,
								@AF_CERTHORA,
								@AF_OST,
								@USUARIO,
								@CURR_FECHA,
								@CURR_TIEMPOFULL,
								@AF_DIVISION
							)
		END

	SELECT
		TOP 1
		@DISPUTA_EXISTE = 1,
		@DDC_ID_DISPUTA = ID_DISPUTA,
		@DISPUTA_EMPRESA = EMPRESA,
		@DDC_ID_DOC = ID_DOC,
		@DDC_ID = ID,
		@DDC_USUARIO = USUARIO,
		@DISPUTA_FECHA = FECHA,
		@DDC_HORA = HORA,
		@DDC_OBSERVACION = OBSERVACION,
		@DDC_CERTUSUARIO = CERTUSUARIO,
		@DDC_CERTFECHA = CERTFECHA,
		@DDC_CERTHORA = CERTHORA,
		@DDC_ESTADO = ESTADO,
		@DDC_REVALUSUARIO = REVALUSUARIO,
		@DDC_REVALFECHA = REVALFECHA,
		@DDC_REVALHORA = REVALHORA,
		@DDC_OBSERVACION_REVAL = OBSERVACION_REVAL,
		@DDC_VALIDADO = VALIDADO,
		@DDC_PERIODO = PERIODO,
		@DDC_ID_CERTIFICADO = ID_CERTIFICADO
	FROM DOCS_DISPUTA_CLABORAL
	WHERE
		ID_DISPUTA = @DISPUTA_ID AND
		ESTADO = 'NO'

	IF(@DISPUTA_EXISTE = 1)
		BEGIN
			INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
				(
					ID_DISPUTA,
					EMPRESA,
					ID_DOC,
					ID,
					USUARIO,
					FECHA,
					HORA,
					OBSERVACION,
					CERTUSUARIO,
					CERTFECHA,
					CERTHORA,
					ESTADO,
					REVALUSUARIO,
					REVALFECHA,
					REVALHORA,
					OBSERVACION_REVAL,
					VALIDADO,
					PERIODO,
					ID_CERTIFICADO,
					USRMOD,
					FECHAMOD,
					HORAMOD,
					ACCION
				)
			VALUES 
				(
					@DDC_ID_DISPUTA,
					@DISPUTA_EMPRESA,
					@DDC_ID_DOC,
					@DDC_ID,
					@DDC_USUARIO,
					@DISPUTA_FECHA,
					@DDC_HORA,
					@DDC_OBSERVACION,
					@DDC_CERTUSUARIO,
					@DDC_CERTFECHA,
					@DDC_CERTHORA,
					@DDC_ESTADO,
					@DDC_REVALUSUARIO,
					@DDC_REVALFECHA,
					@DDC_REVALHORA,
					@DDC_OBSERVACION_REVAL,
					@DDC_VALIDADO,
					@DDC_PERIODO,
					@DDC_ID_CERTIFICADO,
					@USUARIO,
					@CURR_FECHA,
					@CURR_TIEMPOFULL,
					'ELIMINADO'
				)

			DELETE DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'
		END

		DELETE FROM ARCHIVOS WHERE ID = @ID

		UPDATE A056_FORM301
		SET
			ID = NULL,
			VALIDADO = 'NO'
		WHERE
			EMPRESA = @EMPRESA AND
			ID_CERTIFICADO = @ID_CERTIFICADO AND
			PERIODO = @PERIODO AND
			DIVISION = @DIVISION AND
			OST = @OST

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A056_FORM301_UPDATE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A056_FORM301_UPDATE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A056_FORM301_UPDATE_V3_CONTROLLABORAL_CTTA]
(
  @ID				UNIQUEIDENTIFIER
 ,@USUARIO			NVARCHAR(10)
 ,@EMPRESA			NVARCHAR(10)
 ,@DIVISION			NVARCHAR(4)
 ,@ID_CERTIFICADO	INT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	UPDATE A056_FORM301
	SET
		ID = @ID,
		VALIDADO = 'NO',
		USUARIO = @USUARIO,
		FECHASUBE = @CURR_FECHA,
		HORASUBE = @CURR_TIEMPOFULL
	WHERE
		(EMPRESA = @EMPRESA) AND
		(ID_CERTIFICADO = @ID_CERTIFICADO) AND
		(DIVISION = @DIVISION)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A141_CURSOS_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A141_CURSOS_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A141_CURSOS_SELECT]    
(
@CODIGO INT  
)
AS
BEGIN    
	SELECT T1.CODIGO		,T1.CURSO			,T1.FECHA			,T1.HORA
		  ,T1.LUGAR			,T1.SALA			,T1.ACTIVO			,T1.CAPACIDAD
		  ,T1.UBICACION		,T1.ACTIVA			,T1.CHARLA			,T1.DESCRIP
		  ,T1.HORAS			,T1.VENCIMIENTO		,T1.CANTIDAD		,T1.REALIZADO
		  ,T1.ORADOR		,T1.HORATERMINO		,T1.FINALIZADO		,T1.OBSERVACION
		  ,T1.OBLIGATORIO	,T1.NOTAORADOR		,T1.DIVISION		,T1.TIPOCURSO
		  ,STUFF((    SELECT ',' + DP.DIVISION   
			   FROM (SELECT DISTINCT D.DIVISION  
				 FROM CHARLAS_DIVISION AS CD  
				 INNER JOIN A024_DIVISIONES AS D ON D.DIVCOD = CD.DIVISION  
				 WHERE  CD.IDCHARLA = T1.CURSO  
				) AS DP  
			   ORDER BY DP.DIVISION  
			   FOR XML PATH('')  
			   ), 1, 1, '' ) AS DIVISIONES  
	FROM A141_CURSOS AS T1 
	WHERE T1.CODIGO = @CODIGO
END 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A141_CURSOS_SELECT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A141_CURSOS_SELECT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A141_CURSOS_SELECT_CTTA]  
( 
 @ORADOR        NVARCHAR(11) = NULL   
,@IDEMPRESA		NVARCHAR(11) = NULL  
) 
AS  
BEGIN  

	 SELECT DISTINCT	ACUR.CODIGO		,ACUR.FECHA			,ACUR.HORA			,ACUR.LUGAR,   
						ACUR.SALA		,ACUR.CHARLA		,ACUR.CAPACIDAD		,ACUR.CANTIDAD
						,ACUR.CURSO,    ISNULL(ACUR.TIPOCURSO,'PUBLICO') AS TIPOCURSO--,CE.EMPRESA,ACUR.ORADOR  
						,STUFF((SELECT ',' + DP.DIVISION   
									FROM (SELECT DISTINCT D.DIVISION  
									FROM CHARLAS_DIVISION AS CD  
									INNER JOIN A024_DIVISIONES AS D ON D.DIVCOD = CD.DIVISION  
									WHERE  CD.IDCHARLA = ACUR.CURSO  
								) AS DP  
							   ORDER BY DP.DIVISION  
							   FOR XML PATH('')  
							   ), 1, 1, '' ) AS DIVISIONES  
  
	 FROM A141_CURSOS AS ACUR    
	 LEFT JOIN CURSOS_EMPHABILITADAS CE ON ACUR.CODIGO= CE.IDCURSOPROG 
	 AND CE.EMPRESA = @IDEMPRESA  
	 WHERE CASE WHEN (ISNULL(ACUR.TIPOCURSO,'PUBLICO') ='PRIVADO' 
	 AND CE.EMPRESA IS NULL 
	 AND ( ACUR.ORADOR <> @ORADOR OR ACUR.ORADOR IS NULL)) THEN '0' ELSE '1' END <>'0' 
	 AND (FECHA + HORA  >= [dbo].[hoy](GETDATE()) + [dbo].[ahora](GETDATE())) 
	 AND ACUR.ACTIVO='SI' 
 
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A142_RESERVAS_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A142_RESERVAS_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A142_RESERVAS_SELECT]      
(  
@CODIGO INT    
)  
AS  
BEGIN      

	SELECT		RUT			,NOMBRES	,APELLIDOS  ,ACRONIMO  
				,FECHARES	,HORARES	,ACTIVO		,CODIGO
				,EMPRESA
	FROM A142_RESERVAS  
	WHERE CODIGO = @CODIGO  

END 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A142_RESERVAS_VALIDAR_FUNCIONARIO_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A142_RESERVAS_VALIDAR_FUNCIONARIO_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A142_RESERVAS_VALIDAR_FUNCIONARIO_CTTA]
(
 @RUT			NVARCHAR(10)
,@NOMBRES		NVARCHAR(50)
,@APELLIDOS		NVARCHAR(50)
,@EMPRESA		NVARCHAR(10)
,@CURSO			INT
,@CODIGO		INT
,@FECHA			NVARCHAR(8)
)
AS
BEGIN

	DECLARE @DATE_FECHA						DATETIME		= @FECHA
	DECLARE @MENSAJE						NVARCHAR(MAX)	= ''
	DECLARE @FECHARES						NVARCHAR(8)
	DECLARE @HORARES						NVARCHAR(8)
	DECLARE @DIAS_RETOMAR_REPROBADO			INT				= 0
	DECLARE @MESES_ANTES_RENOVACION			INT				= 0
	DECLARE @LIMITE_VECES_REPROBAR_ANIO		INT				= 0
	DECLARE @PARAMETRO						INT				= 0

	IF EXISTS(SELECT VALOR FROM A036_CURSOPARAMETROS WHERE (ID_PARAMETRO = 1))
	BEGIN SET @DIAS_RETOMAR_REPROBADO =  (SELECT VALOR FROM A036_CURSOPARAMETROS WHERE (ID_PARAMETRO = 1)) END

	IF EXISTS(SELECT VALOR FROM A036_CURSOPARAMETROS WHERE (ID_PARAMETRO = 2))
	BEGIN SET @MESES_ANTES_RENOVACION =  (SELECT VALOR FROM A036_CURSOPARAMETROS WHERE (ID_PARAMETRO = 2)) END

	IF EXISTS(SELECT VALOR FROM A036_CURSOPARAMETROS WHERE (ID_PARAMETRO = 3))
	BEGIN SET @LIMITE_VECES_REPROBAR_ANIO =  (SELECT VALOR FROM A036_CURSOPARAMETROS WHERE (ID_PARAMETRO = 3)) END

	IF NOT EXISTS (SELECT AUTOR FROM WORKERS WHERE RUT = @RUT)
	BEGIN
		INSERT INTO WORKERS (RUT, NOMBRES, APELLIDOS, EMPRESA) VALUES (@RUT, @NOMBRES, @APELLIDOS, @EMPRESA)
	END
		
	IF EXISTS (SELECT RUT FROM A142_RESERVAS WHERE (RUT=@RUT) AND (CURSO=@CURSO) AND (FINALIZADO = 'NO')  AND CODIGO = @CODIGO)
	BEGIN

		DECLARE @VAR_NOMBRES		NVARCHAR(50)
		DECLARE @VAR_APELLIDOS		NVARCHAR(50)
		DECLARE @VAR_FECHA			NVARCHAR(8)
		DECLARE @VAR_FECHAFINAL		NVARCHAR(8)
		DECLARE @VAR_HORA			NVARCHAR(8)

		SELECT	 @VAR_NOMBRES	= NOMBRES
				,@VAR_APELLIDOS = APELLIDOS 
				,@VAR_FECHA		= FECHA
				,@VAR_HORA		= HORA
		FROM	A142_RESERVAS 
		WHERE	RUT		=	@RUT 
		AND		CURSO	=	@CURSO 
		AND		FINALIZADO = 'NO'  
		AND		CODIGO = @CODIGO

		SET @MENSAJE = @MENSAJE + 'Reserva para ' + @VAR_NOMBRES + ' ' + @VAR_APELLIDOS + ' ya existe, para el curso con fecha'
		SET @FECHARES = @VAR_FECHA
		SET @HORARES = @VAR_HORA
		SET @PARAMETRO = 1

	END
	ELSE
	BEGIN

		IF EXISTS(	SELECT RUT 
					FROM	A142_RESERVAS 
					WHERE	RUT			=	@RUT 
					AND		CURSO		=	@CURSO 
					AND		FINALIZADO	= 'SI' 
					AND		ASISTIO		= 'NO' 
					AND		APROBO		= 'NO' 
					AND		FECHA		BETWEEN (SELECT CONVERT(NVARCHAR(8),DATEADD(DAY,(@DIAS_RETOMAR_REPROBADO * -1),@FECHA),112)) AND @FECHA)
		BEGIN
				SET @MENSAJE =  @RUT + ' ' + @NOMBRES + ' ' + @APELLIDOS + ' No puede reservar nuevamente para el mismo curso al que no asistio en periodo de ' + CAST(@DIAS_RETOMAR_REPROBADO AS VARCHAR) + ' Días.'
				SET @PARAMETRO = 2
		END

		IF EXISTS(	SELECT COUNT(*) 
					FROM		A142_RESERVAS 
					WHERE		RUT		=	@RUT 
					AND			CURSO	=	@CURSO 
					AND			ASISTIO =	'NO' 
					AND			APROBO =	'NO' 
					AND			FINALIZADO = 'SI' 
					AND			FECHA LIKE ''  + SUBSTRING(@FECHA,1,4) + '%'
		
		)
		BEGIN
			IF((SELECT COUNT(*) AS CUENTA 
					FROM		A142_RESERVAS 
					WHERE		RUT		=	@RUT 
					AND			CURSO	=	@CURSO 
					AND			ASISTIO =	'NO' 
					AND			APROBO =	'NO' 
					AND			FINALIZADO = 'SI' 
					AND			FECHA LIKE ''  + SUBSTRING(@FECHA,1,4) + '%') >= @LIMITE_VECES_REPROBAR_ANIO )
					BEGIN
						SET @MENSAJE = @RUT + ' ' + @NOMBRES +' '+ @APELLIDOS + ' No puede reservar para el mismo curso realizado y reprobado en el mismo año mas de ' + CAST(@LIMITE_VECES_REPROBAR_ANIO AS VARCHAR) + ' veces'
						SET @PARAMETRO = 3
					END
		END


		IF EXISTS(	SELECT RUT
					FROM	A142_RESERVAS 
					WHERE	RUT= @RUT 
					AND		APROBO	= 'SI' 
					AND		CURSO	= @CURSO 
					AND		FINALIZADO = 'SI' 
					AND		dbo.hoy(DATEADD(m,VENCIMIENTO - @MESES_ANTES_RENOVACION,FECHA)) > @FECHA)
		BEGIN
			SET @VAR_FECHAFINAL = ( SELECT dbo.hoy(DATEADD(m,VENCIMIENTO,FECHA)) 
									FROM A142_RESERVAS WHERE (RUT= @RUT) AND (APROBO = 'SI') AND (CURSO= @CURSO) AND (FINALIZADO = 'SI')    
									AND dbo.hoy(DATEADD(m,VENCIMIENTO - @MESES_ANTES_RENOVACION,FECHA)) > @FECHA  
								   )
			SET @MENSAJE = @RUT + ' ' + @NOMBRES + ' ' + @APELLIDOS + ' No puede reservar para el mismo curso realizado anteriormente que aun esta vigente hasta el ' + @VAR_FECHAFINAL + ' ,puede reservar ' + CAST(@MESES_ANTES_RENOVACION AS VARCHAR) + ' mes(es) antes que cumpla el vencimiento.'
 			SET @PARAMETRO = 4
		END

	END

	IF(@PARAMETRO = 0)
	BEGIN SELECT @PARAMETRO AS PARAMETRO END

	IF(@PARAMETRO = 1)
	BEGIN	SELECT @PARAMETRO AS PARAMETRO ,@MENSAJE AS MENSAJE ,@FECHARES AS FECHA, @HORARES AS HORA	END

	IF(@PARAMETRO = 2 OR @PARAMETRO = 3)
	BEGIN	SELECT @PARAMETRO AS PARAMETRO, @MENSAJE AS MENSAJE    END

	IF(@PARAMETRO = 4)
	BEGIN	SELECT @PARAMETRO AS PARAMETRO, @MENSAJE AS MENSAJE, @VAR_FECHAFINAL AS FECHA, @MESES_ANTES_RENOVACION AS MESES_RENOVACION  END

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A142_RESERVAS_VALIDAR_RUT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A142_RESERVAS_VALIDAR_RUT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A142_RESERVAS_VALIDAR_RUT]  
(  
 @RUT		NVARCHAR(10)	= NULL  
,@CURSO		INT				= NULL  
,@CODIGO	INT				= NULL  
,@FECHA		NVARCHAR(8)		= NULL
)  
AS  
BEGIN  
    
	DECLARE @A DATETIME  
	DECLARE @B DATETIME  
	DECLARE @C NVARCHAR(8)  
	DECLARE @FECHA_ANIO NVARCHAR(4)  
	DECLARE @VECES_REPROBO_ANIO INT  
	DECLARE @FECHA_FINAL NVARCHAR(8)  
	DECLARE @MENSAJE NVARCHAR(MAX)
  
	SET @A = CAST(@FECHA AS DATETIME)   
	SET @B = DATEADD(day, -14, @A)  
	SET @C = CONVERT(VARCHAR(8), @B, 112);  
	SET @FECHA_ANIO = SUBSTRING(@FECHA,1,4)  
  
	IF EXISTS(  
	SELECT * FROM A142_RESERVAS   
	WHERE RUT = @RUT   
	AND CURSO = @CURSO   
	AND ASISTIO = 'NO'   
	AND APROBO = 'NO'   
	AND FINALIZADO = 'SI'   
	AND FECHA BETWEEN @C AND @FECHA  
	)  
	BEGIN  
	SET  @MENSAJE = 'No puede reservar nuevamente para el mismo curso al que no asistio en periodo de ' + (SELECT VALOR FROM A036_CURSOPARAMETROS WHERE ID_PARAMETRO=1) +' Dias.'
	SELECT (@MENSAJE) AS MENSAJE
	END  
  
	SET @VECES_REPROBO_ANIO = (  
	SELECT COUNT(*) AS CUENTA FROM A142_RESERVAS   
	WHERE RUT = @RUT   
	AND CURSO= @CURSO   
	AND ASISTIO = 'NO'   
	AND APROBO = 'NO'   
	AND FINALIZADO = 'SI'   
	AND FECHA LIKE '%' + @FECHA_ANIO + '%'  
	)  

	IF(@VECES_REPROBO_ANIO >= (SELECT VALOR FROM A036_CURSOPARAMETROS WHERE ID_PARAMETRO=3))  
	BEGIN  
	SET @MENSAJE = 'No puede reservar para el mismo curso realizado y reprobado en el mismo año mas de '+ (SELECT VALOR FROM A036_CURSOPARAMETROS WHERE ID_PARAMETRO=3) + ' veces'
	SELECT (@MENSAJE) AS MENSAJE
	END  
  
	SET @FECHA_FINAL = (  
	SELECT dbo.hoy(DATEADD(m,VENCIMIENTO,FECHA)) FROM A142_RESERVAS    
	WHERE (RUT= @RUT)   
	AND (APROBO = 'SI')   
	AND (CURSO= @CURSO)   
	AND (FINALIZADO = 'SI')    
	AND dbo.hoy(DATEADD(m,VENCIMIENTO - (SELECT VALOR FROM A036_CURSOPARAMETROS WHERE ID_PARAMETRO=2),FECHA)) > @FECHA  
	)
  
	IF(@FECHA_FINAL IS NOT NULL)  
	BEGIN  
	SET @MENSAJE = 'No puede reservar para el mismo curso realizado anteriormente que aun esta vigente hasta el '+  @FECHA_FINAL +' , puede reservar '+ (SELECT VALOR FROM A036_CURSOPARAMETROS WHERE ID_PARAMETRO=2) + ' mes(es) antes que cumpla el vencimiento.'
	SELECT (@MENSAJE) AS MENSAJE
	END  

END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A203_BUS_PAS_SELECT_BUSESRESERVA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A203_BUS_PAS_SELECT_BUSESRESERVA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A203_BUS_PAS_SELECT_BUSESRESERVA_CTTA]
(@DIAS NVARCHAR(20) = NULL) AS
BEGIN
	DECLARE @strSQL as nvarchar(MAX)

	SET @strSQL= 'SELECT			BT.IDPROG											, BT.PATENTE																						, BT.FECHA					, BT.HORA
								  , BT.ORIGEN											, BT.DESTINO																						, BT.DISPONIBLES			, BT.RESERVAS
								  , BT.DURACION											,(SELECT DIVISION FROM A024_DIVISIONES WHERE (ACTIVO = ''SI'') AND DIVCOD = BT.DIVISION) AS DIVISION, BT.FLOTA					, BT.DESCRIPCION
								  , ISNULL(BT.CAPACIDAD_LIBERA, 90) AS CAPACIDAD_LIBERA	, CASE WHEN (CONVERT(VARCHAR(16), (BT.FECHA+'' ''+BT.HORA), 102) >= CONVERT(VARCHAR(16), DATEADD(hh, 0, GETDATE()),120)) THEN 1 ELSE 0 END AS PERMITIDO
	FROM A203_BUS_PAS BT 
	WHERE (FECHA <= CONVERT(VARCHAR(8),DATEADD(d, 45, GETDATE()),112)) AND (FECHA >= CONVERT(VARCHAR(8),GETDATE(), 112))'  

	IF @Dias <> ''
	BEGIN
		Set @strSQL = @strSQL + N' AND DATEPART(DW, FECHA) IN (' + @Dias + ')'
	END

	SET @strSQL = @strSQL + N' ORDER BY FECHA, HORA, ORIGEN, DESTINO, RESERVAS DESC, PATENTE'
	EXEC sp_executesql @strSQL  
	PRINT @strSQL
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A203_BUS_PAS_SELECT_VIAJE_BUSESRESERVA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A203_BUS_PAS_SELECT_VIAJE_BUSESRESERVA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A203_BUS_PAS_SELECT_VIAJE_BUSESRESERVA_CTTA]
(@IDPROG NUMERIC(18,0) = NULL) AS
BEGIN

	SELECT DISTINCT B.IDPROG				, B.FECHA				, B.HORA				, B.PATENTE
				  , B.ORIGEN				, B.DESTINO				, B.MARCA				, B.MODELO
				  , B.TIPO					, B.RESERVAS			, B.ASIENTOS			, B.DESCRIPCION
	,CASE WHEN (CONVERT(VARCHAR(16), (FECHA+' '+HORA), 102) >= CONVERT(VARCHAR(16), DATEADD(hh, ISNULL(P.TIEMPO_CANCELA
	, 0),GETDATE()),120)) THEN 1 ELSE 0 END AS PERMITIDO
	, ISNULL(P.TIEMPO_CANCELA, 0) AS TIEMPO_CANCELA
	, CASE WHEN CONVERT(DATETIME,B.FECHA+' '+B.HORA, 121) > GETDATE() THEN 'NO' ELSE 'SI' END AS REALIZADO 
	FROM A203_BUS_PAS AS B 
	LEFT OUTER JOIN VIAJES_PARAMETROS P ON 1=1 
	WHERE (IDPROG = @IDPROG)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A400_AUDITORIA_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A400_AUDITORIA_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A400_AUDITORIA_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @EMPRESA	NVARCHAR(20)  = ''
 ,@PERIODO	NVARCHAR(6)   = ''
 ,@DIVISION	NVARCHAR(2)   = ''
 ,@OST		NVARCHAR(20)  = ''
 ,@IDDOC	INT			  = 0
) AS
BEGIN
	SELECT
		*
	FROM dbo.Evaluacion_auditoria(@EMPRESA, @PERIODO, @DIVISION, @OST, @IDDOC)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_A407_DOTACION_DOCS_EMP_2_SELECT_INFORME_DOCUMENTOSCARGADOSAUDITORIALABORALMENSUAL_INFORME_CONTROLLABAROAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_A407_DOTACION_DOCS_EMP_2_SELECT_INFORME_DOCUMENTOSCARGADOSAUDITORIALABORALMENSUAL_INFORME_CONTROLLABAROAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_A407_DOTACION_DOCS_EMP_2_SELECT_INFORME_DOCUMENTOSCARGADOSAUDITORIALABORALMENSUAL_INFORME_CONTROLLABAROAL_CTTA]
(
@PERIODO  NVARCHAR(6)       = NULL,
@EMPRESA  NVARCHAR(10)       = NULL
) AS
BEGIN

DECLARE @FECHA NVARCHAR(8);
DECLARE @PERIODOA NVARCHAR(6);
DECLARE @strSQL as nvarchar(MAX)

SET @FECHA = @PERIODO + '01'
SET @PERIODOA = SUBSTRING(CONVERT(NVARCHAR(8),DATEADD(MONTH,-1,@FECHA ),112),0,7)

 SET @strSQL='SELECT	 A.OST						,A.DIVISION			,A.PERIODO						,A.DOTACION			,A.REMPREVIRED
						,A.PORC_CALC_REMU			,A.IVA				,A.EMPRESA						,A.PERIODO			,A.DIVISION
						,A.F_29						,A.F_29_DOC			,A.F_30							,A.F_30_DOC			,A.F_30_1
						,A.F_30_1_DOC				,A.PAGO_BANCO		,A.PAGO_BANCO_DOC				,A.IMPOSICION		,A.IMPOSICION_DOC
						,A.FOLIADO					,A.FOLIADO_DOC		,A.BONOITC						,A.BONOIS			,A.BONOIP
						,A.POLSALUD					,A.POLSALUD_DOC		,A.POLMUERTE					,A.POLMUERTE_DOC	,A.POLNATURAL
						,A.PORC_AUDITORIA			,A.PROC_EJEC		,A.VALIDA_JEFE					,E.ACRONIMO			,O.NIVEL
						,A.FINIQUITOS 
						,(SELECT TOP 1 UPPER([TIPO_AUDITORIA]) AS TIPO_AUDITORIA FROM CERT_AUDITORIA WHERE PERIODO = ''' + @PERIODO + ''' AND IDEMPRESA = ''' + @EMPRESA + ''' AND NCONTRATO = A.OST AND DIVISION = A.DIVISION ORDER BY TIPO_AUDITORIA) AS TIPO_AUDITORIA
						,(SELECT TOP 1 [PORCENTAJE_APROBACION] FROM CERT_AUDITORIA WHERE PERIODO = ''' + @PERIODO + ''' AND IDEMPRESA = ''' + @EMPRESA + ''' AND NCONTRATO = A.OST AND DIVISION = A.DIVISION ORDER BY TIPO_AUDITORIA) AS PORCENTAJE_APROBACION
						,(SELECT TOP 1 ID FROM CERT_AUDITORIA WHERE PERIODO = ''' + @PERIODO + ''' AND IDEMPRESA = ''' + @EMPRESA + ''' AND NCONTRATO = A.OST AND DIVISION = A.DIVISION ORDER BY TIPO_AUDITORIA) AS ID
						,(SELECT TOP 1 VALIDA_JEFE FROM CERT_AUDITORIA WHERE PERIODO = ''' + @PERIODO + ''' AND IDEMPRESA = ''' + @EMPRESA + ''' AND NCONTRATO = A.OST AND DIVISION = A.DIVISION ORDER BY TIPO_AUDITORIA) AS VALIDA_JEFE
FROM A400_AUDITORIA A INNER JOIN ENTERPRISE E ON A.EMPRESA = E.IDEMPRESA 
                      INNER JOIN OSTSUBC AS O ON A.OST = O.OST AND A.EMPRESA = O.EMPRESA 
WHERE PERIODO= ''' + @PERIODO + ''''

	IF @EMPRESA <> '' OR @EMPRESA <> NULL
	BEGIN
		Set @strSQL = @strSQL + N' AND A.EMPRESA = ''' + @EMPRESA + ''''
	END			           

	exec sp_executesql @strSQL  
	PRINT @strSQL
 
END	

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ACREDITACION_VEHICULAR_SELECT_FECHAS_ACREDITACIONVEHICULARCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ACREDITACION_VEHICULAR_SELECT_FECHAS_ACREDITACIONVEHICULARCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ACREDITACION_VEHICULAR_SELECT_FECHAS_ACREDITACIONVEHICULARCTTA]
(
@EMPRESA  NVARCHAR(10) = NULL
) AS
BEGIN
DECLARE @HorasD1 INT,@HorasD2 INT,@HorasM2 INT,@HorasT2 INT,@EXPD INT,@HORAINI NVARCHAR(8),@HORAINI_COL NVARCHAR(8),@HORAFIN NVARCHAR(8),@HORAFIN_COL NVARCHAR(8),@LUN NVARCHAR(4),@MAR NVARCHAR(4),@MIE NVARCHAR(4)
       ,@JUE NVARCHAR(4),@VIE NVARCHAR(4),@SAB NVARCHAR(4),@DOM NVARCHAR(4),@LIMITE NVARCHAR(8),@strSQL as nvarchar(MAX),@DIAS NVARCHAR(100)

SELECT @EXPD=EXPD
      ,@HORAINI=HORAINI
	  ,@HORAINI_COL=HORAINI_COL
	  ,@HORAFIN=HORAFIN
	  ,@HORAFIN_COL=HORAFIN_COL 
	  ,@LUN=LUN 
	  ,@MAR=MAR 
	  ,@MIE=MIE 
	  ,@JUE=JUE 
	  ,@VIE=VIE 
	  ,@SAB=SAB 
      ,@DOM=DOM 
FROM TAB_REVISIONVEH WHERE ACTIVO='SI'
SET @LIMITE = CONVERT(varchar,DATEADD(hour,1,GETDATE()),8)
SET @DIAS = '0'


		SET @HorasD1 = (DATEDIFF(HOUR,@HORAINI,@HORAINI_COL) + DATEDIFF(HOUR,@HORAFIN_COL,@HORAFIN) )*@EXPD 
		IF @HORAINI<@LIMITE And @HORAINI_COL<@LIMITE
		BEGIN
			SET @HorasM2=0
		END
		ELSE
		BEGIN
			IF @HORAINI<@LIMITE And @LIMITE<@HORAINI_COL 
			BEGIN	
				SET @HorasM2=DATEDIFF(HOUR,@LIMITE,@HORAINI_COL) 
			END
			ELSE
			BEGIN
				SET @HorasM2=DATEDIFF(HOUR,@HORAINI,@HORAINI_COL)
			END
		END
		
		IF @HORAFIN_COL<@LIMITE And @HORAFIN< @LIMITE 
		BEGIN
			SET @HorasT2=0
		END
		ELSE
		BEGIN
			IF @HORAFIN_COL<@LIMITE And @LIMITE<@HORAFIN 
			BEGIN
				SET @HorasT2 = DATEDIFF(HOUR,@LIMITE,@HORAFIN)
			END
			ELSE
			BEGIN
				SET @HorasT2 = DATEDIFF(HOUR,@HORAFIN_COL,@HORAFIN)
			END
		END
		SET @HorasD2 = (@HorasM2+@HorasT2)*@EXPD 
	
SET @strSQL='SELECT DISTINCT CONVERT(VARCHAR(8),X.[Date],112) AS FECHARES, CONVERT(VARCHAR(8),X.[Date],112) AS FECHARES_LETRA,
    CASE WHEN GETDATE() = X.[Date] THEN ' + convert(varchar(10),@HorasD2) + '-ISNULL(SUM(t.MINUTOS),0)/60
         ELSE ' + convert(varchar(10),@HorasD1) + '-ISNULL(SUM(t.MINUTOS),0)/60 END AS DISPONIBLES,
		 COUNT(t2.ID) AS COUNT_RESERVAS,X.[Date]
    FROM 
    (SELECT [Date] = DATEADD(Day,Number,GETDATE())  
    FROM  master..spt_values  
    WHERE Type=''P''
    AND DATEADD(day,Number,GETDATE()) <= DATEADD(YEAR,1,GETDATE())'
    IF @LUN = 'SI'
	BEGIN
		Set @DIAS = @DIAS + N',1'
	END	
    IF @MAR = 'SI'
	BEGIN
		Set @DIAS = @DIAS + N',2'
	END	
    IF @MIE = 'SI'
	BEGIN
		Set @DIAS = @DIAS + N',3'
	END	
    IF @JUE = 'SI'
	BEGIN
	    Set @DIAS = @DIAS + N',4'
	END	
    IF @VIE = 'SI'
	BEGIN
		Set @DIAS = @DIAS + N',5'
	END	
    IF @SAB = 'SI'
	BEGIN
		Set @DIAS = @DIAS + N',6'
	END	
    IF @DOM = 'SI'
	BEGIN
		Set @DIAS = @DIAS + N',7'
	END	
	Set @strSQL = @strSQL + N' AND DATEPART(DW, DATEADD(Day,Number,GETDATE())) IN (' + @DIAS + ')'
	Set @strSQL = @strSQL + N' AND NOT EXISTS(SELECT * FROM TABFERIADOS WHERE FECHA LIKE ''20%''+FORMAT(DATEADD(Day,Number,GETDATE()),''MMdd''))'
 	Set @strSQL = @strSQL + N' )X LEFT JOIN  RESERVAS_REVISION_VEHICULAR t ON CONVERT(VARCHAR(8),X.[Date],112) = t.FECHARES
	                              LEFT JOIN  RESERVAS_REVISION_VEHICULAR t2 ON CONVERT(VARCHAR(8),X.[Date],112) = t2.FECHARES AND t2.EMPRESA=''' + @EMPRESA + ''' AND t2.FECHASOL=t2.FECHAMOD AND t2.HORASOL=t2.HORAMOD
								  GROUP BY X.[Date],t2.ID
								  ORDER BY X.[Date] ASC'
	
    exec sp_executesql @strSQL  
	PRINT @strSQL


END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ADMIN_DIVISIONES_SELECT_MDTE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ADMIN_DIVISIONES_SELECT_MDTE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ADMIN_DIVISIONES_SELECT_MDTE]  
(  @ADMRUT NVARCHAR(10) = NULL   )  
AS        
BEGIN     
  
	DECLARE @STRING_DIVISIONES NVARCHAR(100);  
  
	SET @STRING_DIVISIONES = (SELECT REPLACE(REPLACE(ADMDIVISION,'''',''),' ','') FROM ADMIN WHERE ADMRUT=@ADMRUT)  
  
	SELECT S.value AS DIVCOD ,D.DIVISION
	FROM string_split(@STRING_DIVISIONES,',') S
	INNER JOIN A024_DIVISIONES D ON S.value = D.DIVCOD
	ORDER BY DIVCOD ASC  
  
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ADMIN_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ADMIN_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ADMIN_SELECT]  
( @ADMRUT         nvarchar(10) = NULL ) AS  
BEGIN  
  
   SELECT ADM.ADMRUT        , ADM.ADMCLAVE  , ADM.ADMTIPO    , ADM.ADMEMAIL     
        , ADM.ADMRUTEMPRESA , ADM.ADMLOCAL  , ADM.ADMLUGAR   , ADM.ADMPUERTOS   
        , ADM.ADMUSERID     , ADM.ADMRUTVER , ADM.ADMSUP     , ADM.FECHAMOD     
        , ADM.HORAMOD       , ADM.GRABO     , ADM.ACTIVO     , ADM.ADMDIVISION  
        , ADM.FECHAVENCE    , ADM.IDSYNC    , ADM.ADMADLOGIN , ADM.APRUEBA_COND 
		, W.NOMBRES			, W.APELLIDOS
     FROM ADMIN ADM
	INNER JOIN WORKERS W ON ADM.ADMRUT = W.RUT
    WHERE ADM.ADMRUT = ISNULL( @ADMRUT, ADM.ADMRUT )  
  
END  
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ADMIN_VALIDAR_LOGIN]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ADMIN_VALIDAR_LOGIN]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ADMIN_VALIDAR_LOGIN]
( @ADMRUT         nvarchar(10) = NULL
, @ADMCLAVE		  nvarchar(50) = NULL) AS
BEGIN

   SELECT * , DATEDIFF(d,getdate(), FECHAVENCE) as EXPIRA 
   FROM ADMIN  
   WHERE UPPER(ADMRUT) = Replace(@ADMRUT, '', '''')
   AND (ADMCLAVE = SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('SHA1', convert(nvarchar(50),@ADMCLAVE))), 3, 32) 
		OR ADMCLAVE = @ADMCLAVE)

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_APROBACION_SUBCONTRATOS_DELETE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_APROBACION_SUBCONTRATOS_DELETE]\nGO\nCREATE PROCEDURE V4MVC_APROBACION_SUBCONTRATOS_DELETE
( @ID  INT = NULL) AS             
BEGIN      
   DELETE FROM APROBACION_SUBCONTRATOS WHERE  ID = @ID
END  
  
  
  
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_APROBACION_SUBCONTRATOS_DELETE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_APROBACION_SUBCONTRATOS_DELETE_CTTA]\nGO\n
CREATE PROCEDURE [dbo].[V4MVC_APROBACION_SUBCONTRATOS_DELETE_CTTA]  
(  
 @ID				INT = NULL
 ,@USR_SOLICITA		NVARCHAR(30)=NULL 
)  
AS  
BEGIN
	BEGIN TRY
		BEGIN TRAN 

		

			INSERT INTO APROBACION_SUBCONTRATOS_LOG 
			([ID]					,[MADRE]				,[EMPRESA]					,[OST]					,[NIVEL]
			,[FINICIO]				,[FTERMINO]				,[MONTO]					,[DOTACION]				,[DOTACION_VEHI]
			,[ADMIN_CTTA]			,[CORREO_ADM_CTTA]		,[TELEFONO]					,[ID_ARCHIVO]			,[LICITACION]
			,[VALIDADO]				,[USR_SOLICITA]			,[FEC_SOLICITA]				,[HORA_SOLICITA]		,[ADM_VALIDA_ESTADO]
			,[ADM_VALIDA]			,[FEC_ADM_VALIDA]		,[HORA_ADM_VALIDA]			,[OBS_ADM_VALIDA]		,[ADM_SUPCHAIN_ESTADO]
			,[ADM_SUPCHAIN_VALIDA]	,[FEC_SUPCHAIN_VALIDA]	,[HORA_SUPCHAIN_VALIDA]		,[OBS_SUPCHAIN_VALIDA]	,[ADM_GSEGURIDAD_ESTADO]
			,[ADM_GSEGURIDAD_VALIDA],[FEC_GSEGURIDAD_VALIDA],[HORA_GSEGURIDAD_VALIDA]	,[OBS_GSEGURIDAD_VALIDA],[USRMOD]
			,[FECMOD]				,[HORAMOD]				,[ACCION]) 
			SELECT	
			[ID]					,[MADRE]				,[EMPRESA]					,[OST]						,[NIVEL]					
			,[FINICIO]				,[FTERMINO]				,[MONTO]					,[DOTACION]					,[DOTACION_VEHI]			
			,[ADMIN_CTTA]			,[CORREO_ADM_CTTA]		,[TELEFONO]					,[ID_ARCHIVO]				,[LICITACION]				
			,[VALIDADO]				,[USR_SOLICITA]			,[FEC_SOLICITA]				,[HORA_SOLICITA]			,[ADM_VALIDA_ESTADO]		
			,[ADM_VALIDA]			,[FEC_ADM_VALIDA]		,[HORA_ADM_VALIDA]			,[OBS_ADM_VALIDA]			,[ADM_SUPCHAIN_ESTADO]		
			,[ADM_SUPCHAIN_VALIDA]	,[FEC_SUPCHAIN_VALIDA]	,[HORA_SUPCHAIN_VALIDA]		,[OBS_SUPCHAIN_VALIDA]		,[ADM_GSEGURIDAD_ESTADO]	
			,[ADM_GSEGURIDAD_VALIDA],[FEC_GSEGURIDAD_VALIDA],[HORA_GSEGURIDAD_VALIDA]	,[OBS_GSEGURIDAD_VALIDA]	,@USR_SOLICITA				
			,DBO.HOY(GETDATE())		,DBO.AHORA(GETDATE())	,'ELIMINA'
			FROM APROBACION_SUBCONTRATOS
			WHERE ID = @ID


			DELETE APROBACION_SUBCONTRATOS
			WHERE ID = @ID
		
			COMMIT TRAN
 
		END TRY
	BEGIN CATCH 
		ROLLBACK 
END CATCH		
END  
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_APROBACION_SUBCONTRATOS_INSERT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_APROBACION_SUBCONTRATOS_INSERT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_APROBACION_SUBCONTRATOS_INSERT_CTTA]
(
@MADRE				NVARCHAR(30) = NULL
,@OST				NVARCHAR(100) = NULL
,@EMPRESA			NVARCHAR(30) = NULL
,@DOTACION			INT = NULL
,@DOTACION_VEHI		INT = NULL
,@FINICIO			NVARCHAR(16) = NULL
,@FTERMINO			NVARCHAR(16) = NULL
,@MONTO				INT = NULL
,@NIVEL				INT = NULL
,@ADMIN_CTTA		NVARCHAR(20) = NULL
,@CORREO_ADM_CTTA	NVARCHAR(100) =  NULL
,@TELEFONO			NVARCHAR(30) = NULL
,@ACRONIMO			NVARCHAR(100)=NULL
,@ID_ARCHIVO		uniqueidentifier
,@LICITACION		CHAR(2)=NULL
,@USR_SOLICITA		NVARCHAR(30)=NULL 
)
AS
BEGIN
	BEGIN TRANSACTION TRANSACCION
	BEGIN TRY

		IF NOT  EXISTS(SELECT IDEMPRESA FROM ENTERPRISE WHERE IDEMPRESA = @EMPRESA)
		BEGIN
			INSERT INTO ENTERPRISE	(IDEMPRESA,ACRONIMO,NOMBRE,AUTOR) 
			VALUES					(@EMPRESA,@ACRONIMO,@ACRONIMO, 'SI')
		END
		ELSE
		BEGIN
			UPDATE ENTERPRISE SET AUTOR = 'SI' WHERE IDEMPRESA =@EMPRESA
		END

		IF NOT EXISTS(SELECT Rut FROM COLAB_USUARIO WHERE RUT = @ADMIN_CTTA AND IDEMPRESA=@EMPRESA AND ACTIVO='SI')
		BEGIN
			INSERT INTO COLAB_USUARIO(IDEMPRESA			,RUT			,CLAVE			,Correo_Electronico
									  ,TipoUsuario		,Activo			,Fecha_Creacion) 
			VALUES(@EMPRESA			,@ADMIN_CTTA		,@ADMIN_CTTA		,@CORREO_ADM_CTTA
					,'ADMIN'		,'SI'				,GETDATE() )
		END
			
		INSERT INTO APROBACION_SUBCONTRATOS (MADRE,	 EMPRESA,	OST,	NIVEL
											 ,FINICIO,	FTERMINO,	MONTO,	 DOTACION	
											 ,DOTACION_VEHI,		ADMIN_CTTA,		CORREO_ADM_CTTA,	TELEFONO	
											 ,ID_ARCHIVO,	LICITACION,		VALIDADO,		USR_SOLICITA
											 ,FEC_SOLICITA,		HORA_SOLICITA 
											 )
									VALUES  (@MADRE,	@EMPRESA,	@OST,	@NIVEL
											 ,@FINICIO,	@FTERMINO,	@MONTO,	@DOTACION
											 ,@DOTACION_VEHI,	@ADMIN_CTTA,	@CORREO_ADM_CTTA,	@TELEFONO
											 ,@ID_ARCHIVO,		@LICITACION,	'NO',		@USR_SOLICITA 
											 ,DBO.HOY(GETDATE()),	DBO.AHORA(GETDATE()) 
											 )

	COMMIT TRANSACTION TRANSACCION
	END TRY
	BEGIN CATCH	
			ROLLBACK TRANSACTION TRANSACCION
	END CATCH
									 
END
  
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_APROBACION_SUBCONTRATOS_SELECT_ENPROCESO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_APROBACION_SUBCONTRATOS_SELECT_ENPROCESO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_APROBACION_SUBCONTRATOS_SELECT_ENPROCESO]    
(@IDEMPRESA  NVARCHAR(11) = NULL)    
AS    
BEGIN    
 SELECT  A.EMPRESA			,A.OST				,A.FINICIO											,A.FTERMINO  
   ,A.MONTO					,A.DOTACION			,A.ID												,E.ACRONIMO  
   ,A.NIVEL					,A.VALIDADO			,ISNULL(ADM_VALIDA_ESTADO,'NO') ADM_VALIDA_ESTADO	,ISNULL(ADM_SUPCHAIN_ESTADO,'NO')  ADM_SUPCHAIN_ESTADO
   ,ISNULL(ADM_GSEGURIDAD_ESTADO,'NO') ADM_GSEGURIDAD_ESTADO
 FROM APROBACION_SUBCONTRATOS A   
 INNER JOIN ENTERPRISE E ON E.IDEMPRESA = A.EMPRESA  
 WHERE ISNULL(A.ADM_VALIDA,'')<>'' AND ISNULL(A.ADM_GSEGURIDAD_VALIDA,'')='' AND A.MADRE=@IDEMPRESA  

 
ENDIF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_APROBACION_SUBCONTRATOS_SELECT_ONE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_APROBACION_SUBCONTRATOS_SELECT_ONE_CTTA]\nGO\n
CREATE PROCEDURE [dbo].[V4MVC_APROBACION_SUBCONTRATOS_SELECT_ONE_CTTA]  
(@ID  INT = NULL)  
AS  
BEGIN  
	SELECT  AP.USR_SOLICITA, A.NOMBRE AS NOMBRE_ARCHIVO, AP.MADRE, AP.EMPRESA  
			,AP.OST, AP.NIVEL, AP.FINICIO, AP.FTERMINO  
			,AP.MONTO, AP.DOTACION, AP.DOTACION_VEHI, AP.ADMIN_CTTA 
			,AP.CORREO_ADM_CTTA, AP.TELEFONO, AP.ID_ARCHIVO, AP.LICITACION  
			,E.ACRONIMO
			,ISNULL(AP.ADM_VALIDA_ESTADO,'NO') AS ADM_VALIDA_ESTADO 
			,AP.ADM_VALIDA, AP.FEC_ADM_VALIDA, AP.HORA_ADM_VALIDA, AP.OBS_ADM_VALIDA 
			,ISNULL (W2.NOMBRES + ' '+  W2.APELLIDOS ,'-') AS  NOMBRES_ADM_VALIDA
				
			,ISNULL(ADM_SUPCHAIN_ESTADO,'NO') AS ADM_SUPCHAIN_ESTADO 
			,ADM_SUPCHAIN_VALIDA, FEC_SUPCHAIN_VALIDA, HORA_SUPCHAIN_VALIDA, OBS_SUPCHAIN_VALIDA 
			,ISNULL (W3.NOMBRES + ' '+ W3.APELLIDOS ,'-') AS  NOMBRES_ADM_SUPCHAIN_VALIDA
  
			,ISNULL(ADM_GSEGURIDAD_ESTADO,'NO') AS ADM_GSEGURIDAD_ESTADO 
			,ADM_GSEGURIDAD_VALIDA,FEC_GSEGURIDAD_VALIDA, HORA_GSEGURIDAD_VALIDA, OBS_GSEGURIDAD_VALIDA 
			,ISNULL (W4.NOMBRES + ' '+ W4.APELLIDOS ,'-') AS  NOMBRES_ADM_GSEGURIDAD_VALIDA

			,AP.ID,	W.NOMBRES AS NOMBRES_ADMIN_CTTA
			,W.APELLIDOS AS APELLIDOS_ADMIN_CTTA
  
	FROM APROBACION_SUBCONTRATOS AP INNER JOIN ARCHIVOS A ON A.ID=AP.ID_ARCHIVO 
	LEFT JOIN WORKERS AS W  ON W.RUT = AP.ADMIN_CTTA
	LEFT JOIN WORKERS AS W2 ON W2.RUT = AP.ADM_VALIDA
	LEFT JOIN WORKERS AS W3 ON W3.RUT = AP.ADM_SUPCHAIN_VALIDA
	LEFT JOIN WORKERS AS W4 ON W4.RUT = AP.ADM_GSEGURIDAD_VALIDA
	INNER JOIN ENTERPRISE AS E ON E.IDEMPRESA = AP.EMPRESA   
   WHERE AP.ID = @ID 
END  

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_APROBACION_SUBCONTRATOS_SELECT_PENDIENTES]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_APROBACION_SUBCONTRATOS_SELECT_PENDIENTES]\nGO\n  
CREATE PROCEDURE [dbo].[V4MVC_APROBACION_SUBCONTRATOS_SELECT_PENDIENTES]
(@IDEMPRESA		NVARCHAR(11) = NULL)
AS
BEGIN
	SELECT	 A.EMPRESA	, A.OST			, A.FINICIO	, A.FTERMINO
			,A.MONTO	, A.DOTACION	, A.ID		, E.ACRONIMO
			,A.NIVEL    , A.MADRE
	FROM APROBACION_SUBCONTRATOS AS A 
	INNER JOIN ENTERPRISE AS E ON E.IDEMPRESA = A.EMPRESA 
	WHERE ISNULL(ADM_VALIDA,'')='' 
	AND A.MADRE = @IDEMPRESA 
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_APROBACION_SUBCONTRATOS_SELECT_PROCESADAS]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_APROBACION_SUBCONTRATOS_SELECT_PROCESADAS]\nGO\nCREATE PROCEDURE V4MVC_APROBACION_SUBCONTRATOS_SELECT_PROCESADAS
(@IDEMPRESA  NVARCHAR(11) = NULL)  
AS  
BEGIN  
 SELECT  A.EMPRESA , A.OST   , A.FINICIO , A.FTERMINO  
   ,A.MONTO , A.DOTACION , A.ID  , E.ACRONIMO  
   ,A.NIVEL , 
   CASE WHEN A.ADM_GSEGURIDAD_ESTADO  ='SI' THEN 'APROBADA' ELSE
   CASE WHEN A.ADM_GSEGURIDAD_ESTADO  ='NO' THEN 'PENDIENTE' ELSE
   CASE WHEN A.ADM_GSEGURIDAD_ESTADO  ='RE' THEN 'RECHAZADA' END END END ADM_GSEGURIDAD_ESTADO
 FROM APROBACION_SUBCONTRATOS AS A   
 INNER JOIN ENTERPRISE AS E ON E.IDEMPRESA = A.EMPRESA   
 WHERE ISNULL(A.ADM_GSEGURIDAD_VALIDA,'')<>''   
 AND A.MADRE = @IDEMPRESA   
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_APROBACION_SUBCONTRATOS_UPDATE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_APROBACION_SUBCONTRATOS_UPDATE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_APROBACION_SUBCONTRATOS_UPDATE_CTTA]
(
@ID					INT =NULL
,@MADRE				NVARCHAR(30) = NULL
,@OST				NVARCHAR(100) = NULL
,@EMPRESA			NVARCHAR(30) = NULL
,@DOTACION			INT = NULL
,@DOTACION_VEHI		INT = NULL
,@FINICIO			NVARCHAR(16) = NULL
,@FTERMINO			NVARCHAR(16) = NULL
,@MONTO				INT = NULL
,@NIVEL				INT = NULL
,@ADMIN_CTTA		NVARCHAR(20) = NULL
,@CORREO_ADM_CTTA	NVARCHAR(100) =  NULL
,@TELEFONO			NVARCHAR(30) = NULL
,@ID_ARCHIVO		uniqueidentifier
,@LICITACION		CHAR(2)=NULL
,@USR_SOLICITA		NVARCHAR(30)=NULL 
)
AS
BEGIN
	BEGIN TRANSACTION TRANSACCION
	BEGIN TRY

		
		UPDATE ENTERPRISE SET AUTOR = 'SI' WHERE IDEMPRESA =@EMPRESA
	

		IF NOT EXISTS(SELECT Rut FROM COLAB_USUARIO WHERE RUT = @ADMIN_CTTA AND IDEMPRESA=@EMPRESA AND ACTIVO='SI')
		BEGIN	
			INSERT INTO COLAB_USUARIO(IDEMPRESA,	RUT,	CLAVE,	Correo_Electronico,
										TipoUsuario,	Activo,	Fecha_Creacion) 
									VALUES(@EMPRESA,	@ADMIN_CTTA,	@ADMIN_CTTA,	@CORREO_ADM_CTTA, 
										'ADMIN',	'SI',	 GETDATE() )
		END
		ELSE
		BEGIN
			UPDATE COLAB_USUARIO SET Correo_Electronico=@CORREO_ADM_CTTA WHERE IDEMPRESA = @EMPRESA AND RUT = @ADMIN_CTTA
		END
			
		UPDATE APROBACION_SUBCONTRATOS
		SET 
		FINICIO				=@FINICIO
		,FTERMINO			=@FTERMINO
		,MONTO				=@MONTO
		,DOTACION			=@DOTACION
		,DOTACION_VEHI		=@DOTACION_VEHI
		,ADMIN_CTTA			=@ADMIN_CTTA
		,ID_ARCHIVO			=@ID_ARCHIVO
		,CORREO_ADM_CTTA	=@CORREO_ADM_CTTA
		,TELEFONO			=@TELEFONO
		,LICITACION			=@LICITACION
		WHERE ID = @ID								

		INSERT INTO APROBACION_SUBCONTRATOS_LOG 
			([ID]					,[MADRE]				,[EMPRESA]					,[OST]					,[NIVEL]
			,[FINICIO]				,[FTERMINO]				,[MONTO]					,[DOTACION]				,[DOTACION_VEHI]
			,[ADMIN_CTTA]			,[CORREO_ADM_CTTA]		,[TELEFONO]					,[ID_ARCHIVO]			,[LICITACION]
			,[VALIDADO]				,[USR_SOLICITA]			,[FEC_SOLICITA]				,[HORA_SOLICITA]		,[ADM_VALIDA_ESTADO]
			,[ADM_VALIDA]			,[FEC_ADM_VALIDA]		,[HORA_ADM_VALIDA]			,[OBS_ADM_VALIDA]		,[ADM_SUPCHAIN_ESTADO]
			,[ADM_SUPCHAIN_VALIDA]	,[FEC_SUPCHAIN_VALIDA]	,[HORA_SUPCHAIN_VALIDA]		,[OBS_SUPCHAIN_VALIDA]	,[ADM_GSEGURIDAD_ESTADO]
			,[ADM_GSEGURIDAD_VALIDA],[FEC_GSEGURIDAD_VALIDA],[HORA_GSEGURIDAD_VALIDA]	,[OBS_GSEGURIDAD_VALIDA],[USRMOD]
			,[FECMOD]				,[HORAMOD]				,[ACCION]) 
			SELECT	
			[ID]					,[MADRE]				,[EMPRESA]					,[OST]						,[NIVEL]					
			,[FINICIO]				,[FTERMINO]				,[MONTO]					,[DOTACION]					,[DOTACION_VEHI]			
			,[ADMIN_CTTA]			,[CORREO_ADM_CTTA]		,[TELEFONO]					,[ID_ARCHIVO]				,[LICITACION]				
			,[VALIDADO]				,[USR_SOLICITA]			,[FEC_SOLICITA]				,[HORA_SOLICITA]			,[ADM_VALIDA_ESTADO]		
			,[ADM_VALIDA]			,[FEC_ADM_VALIDA]		,[HORA_ADM_VALIDA]			,[OBS_ADM_VALIDA]			,[ADM_SUPCHAIN_ESTADO]		
			,[ADM_SUPCHAIN_VALIDA]	,[FEC_SUPCHAIN_VALIDA]	,[HORA_SUPCHAIN_VALIDA]		,[OBS_SUPCHAIN_VALIDA]		,[ADM_GSEGURIDAD_ESTADO]	
			,[ADM_GSEGURIDAD_VALIDA],[FEC_GSEGURIDAD_VALIDA],[HORA_GSEGURIDAD_VALIDA]	,[OBS_GSEGURIDAD_VALIDA]	,@USR_SOLICITA				
			,DBO.HOY(GETDATE())		,DBO.AHORA(GETDATE())	,'EDICION'
			FROM APROBACION_SUBCONTRATOS
			WHERE ID = @ID

	COMMIT TRANSACTION TRANSACCION
	END TRY
	BEGIN CATCH	
			ROLLBACK TRANSACTION TRANSACCION
	END CATCH
									 
END
  


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ARCHIVOS_INSERT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ARCHIVOS_INSERT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ARCHIVOS_INSERT]
( @ID             uniqueidentifier = NULL OUTPUT
, @NOMBRE         nvarchar(255) = NULL
, @TIPOCONTENIDO  nvarchar(50) = NULL
, @FECHAMOD       nvarchar(8) = NULL
, @HORAMOD        nvarchar(8) = NULL
, @USUARIO        nvarchar(10) = NULL
, @ARCHIVO        image = NULL ) AS 
BEGIN

	SELECT @ID = NEWID() FROM SYSOBJECTS
	
   INSERT INTO [ARCHIVOS]
        ( ID      , NOMBRE  , TIPOCONTENIDO , FECHAMOD
        , HORAMOD , USUARIO , ARCHIVO       )
   VALUES
        ( @ID      , @NOMBRE  , @TIPOCONTENIDO , DBO.HOY(GETDATE())
        , DBO.AHORA(GETDATE()) , @USUARIO , @ARCHIVO       )

END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ARCHIVOS_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ARCHIVOS_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ARCHIVOS_SELECT]
(@ID	 uniqueidentifier = NULL ) AS
BEGIN

   SELECT ID      , NOMBRE  , TIPOCONTENIDO , FECHAMOD
        , HORAMOD , USUARIO , ARCHIVO      
    FROM ARCHIVOS
	WHERE ID = @ID

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ARCHIVOS_SELECT_FOTOFUNCIONARIO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ARCHIVOS_SELECT_FOTOFUNCIONARIO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ARCHIVOS_SELECT_FOTOFUNCIONARIO]
( @ID           nvarchar(11) = NULL) AS
BEGIN

	SELECT TOP 1 ARCHIVOS.ARCHIVO, ARCHIVOS.TIPOCONTENIDO 
	FROM ARCHIVOS 
	INNER JOIN DOCS_WORKERS ON ARCHIVOS.ID = DOCS_WORKERS.ID 
	WHERE ( dbo.DOCS_WORKERS.RUT = @ID) AND 
	(dbo.DOCS_WORKERS.ID_DOC = 16) ORDER BY DOCS_WORKERS.FECHA_MOD DESC

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_BONOSVALOR_SELECT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_BONOSVALOR_SELECT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_BONOSVALOR_SELECT_CTTA]
(
 @TIPO_BONO NVARCHAR(20)
,@PERIODO	NVARCHAR(6)
,@DIVISION	NVARCHAR(4)
)

AS
BEGIN

	SELECT		BV.PERIODOINI	,BV.PERIODOFIN		,BV.PORCASISTENCIA 
	FROM		BONOSVALOR BV
	INNER JOIN	BONOSPACTADOS BP	ON	BV.ID_BONO = BP.ID		
	AND			BP.TIPOBONO			IN	(@TIPO_BONO)
	WHERE		PAGO_FUNC			=	@PERIODO				
	AND			DIVISION			=	@DIVISION
	AND			ACTIVO				=	'SI'

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CAL_TURNO_SELECT_CALENDARIO_TURNOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CAL_TURNO_SELECT_CALENDARIO_TURNOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CAL_TURNO_SELECT_CALENDARIO_TURNOS_CTTA]
(
  @IDTURNO			INT				= NULL 
, @IDEMPRESA		NVARCHAR(11)	= NULL 
, @TURNO			NVARCHAR(20)    = NULL 
, @ANIO				NVARCHAR(4)		= NULL 
, @MES				NVARCHAR(2)		= NULL 
)AS

BEGIN

	DECLARE @PRIMER_DIA_MES				NVARCHAR(8)		= @ANIO	+ @MES + '01'
	DECLARE @FORMATO_PRIMER_DIA			NVARCHAR(10)	= @ANIO+'-'+@MES+'-'+'01'
	DECLARE @ULTIMO_DIA_MES				DATETIME		= (SELECT EOMONTH(@FORMATO_PRIMER_DIA))
	DECLARE @FECHA_FIN					NVARCHAR(8)
	DECLARE @FECHAINI_MENOS_DIAS		DATETIME
	DECLARE @FECHAFIN_MAS_DIAS			DATETIME

	SET @FECHA_FIN = (SELECT CONVERT(NVARCHAR(8),@ULTIMO_DIA_MES,112))

	SET @FECHAINI_MENOS_DIAS = (SELECT DATEADD(DAY,-3,@PRIMER_DIA_MES))
	SET @FECHAFIN_MAS_DIAS = (SELECT DATEADD(DAY,3,@FECHA_FIN))

	IF EXISTS (SELECT ID_CALTURNO FROM CAL_TURNO WHERE IDTURNO = @IDTURNO AND EMPRESA = @IDEMPRESA)
		BEGIN 
			SELECT CASE WHEN TIPO = 'D' THEN 'D' WHEN TIPO = 'N' THEN 'N' ELSE ''  END AS TIPO  
			, FECHA , CASE WHEN TIPO = 'D' THEN '#FFCC00' WHEN TIPO = 'N' THEN '#000000' ELSE '' END AS COLOR  
			FROM CAL_TURNO WHERE IDTURNO = @IDTURNO AND EMPRESA = @IDEMPRESA AND FECHA BETWEEN @FECHAINI_MENOS_DIAS AND @FECHAFIN_MAS_DIAS ORDER BY FECHA;
		END 
	ELSE 
		BEGIN 
			SELECT CASE WHEN TIPO = 'D' THEN 'D' WHEN TIPO = 'N' THEN 'N' ELSE ''  END AS TIPO  
			, FECHA , CASE WHEN TIPO = 'D' THEN '#FFCC00' WHEN TIPO = 'N' THEN '#000000' ELSE '' END AS COLOR  
			FROM CAL_TURNO WHERE TURNO = @TURNO AND EMPRESA = @IDEMPRESA AND FECHA BETWEEN @FECHAINI_MENOS_DIAS AND @FECHAFIN_MAS_DIAS AND IDTURNO IS NULL ORDER BY FECHA; 
	END 
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CASINO_FECHAS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CASINO_FECHAS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CASINO_FECHAS_CTTA]
(
 @FECHAINI NVARCHAR(8)
,@FECHAFIN NVARCHAR(8)
)
AS
BEGIN

	CREATE TABLE #FECHAS
	(
		FECHA NVARCHAR(8)  COLLATE DATABASE_DEFAULT NOT NULL
	)

	DECLARE @CONTADOR		INT   
	DECLARE @DATE1			DATETIME
	DECLARE @DATE2			DATETIME
	DECLARE @DATE_DIF		INT
	DECLARE @FECHA			NVARCHAR(8)

	SET		@DATE1		=	@FECHAINI
	SET		@DATE2		=	@FECHAFIN
	SET		@DATE_DIF	=	(SELECT DATEDIFF(DAY, @DATE1,@DATE2))

	SET @CONTADOR = 0
	WHILE ( @CONTADOR <= @DATE_DIF )
	BEGIN

		SET @FECHA = CONVERT(NVARCHAR(8), @DATE1,112)
		INSERT INTO #FECHAS VALUES (@FECHA)
		SET @DATE1 = (SELECT DATEADD(DAY,1,@DATE1))
		SET @CONTADOR = @CONTADOR +1  

	END

	SELECT FECHA FROM #FECHAS
	ORDER BY FECHA ASC

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CASINO_LOCAL_SERVICIO_FECHA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CASINO_LOCAL_SERVICIO_FECHA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CASINO_LOCAL_SERVICIO_FECHA_CTTA]
(
 @EMPRESA	NVARCHAR(10)
,@LOCALES	NVARCHAR(MAX)
,@DIVCOD	NVARCHAR(4)
,@FECHAINI	NVARCHAR(8)
,@FECHAFIN	NVARCHAR(8)
)
AS
BEGIN

	SELECT VALUE AS LOCAL INTO #TEMP_SPLIT_LOCALES
	FROM STRING_SPLIT(@LOCALES,',')

	SELECT LOCAL,SERVICIO,FECHA,SUM(CANTIDAD) AS CANTIDAD FROM WC3_VISTA_CASINO
	WHERE EMPRESA = @EMPRESA
	AND FECHA BETWEEN @FECHAINI AND @FECHAFIN
	AND DIVISION = @DIVCOD
	AND ISNULL(ERROR,'') = ''
	AND LOCAL IN (SELECT LOCAL FROM #TEMP_SPLIT_LOCALES)
	GROUP BY LOCAL,SERVICIO,FECHA

END

--EXEC V4MVC_CASINO_LOCAL_SERVICIO_FECHA_CTTA '761264907','CAS_PCALDERA,CAS_CONFLUEN','LB','20190101','20201125'
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CASINO_LOCALES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CASINO_LOCALES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CASINO_LOCALES_CTTA]
(
 @EMPRESA	NVARCHAR(10)
,@LOCALES	NVARCHAR(MAX)
,@DIVCOD	NVARCHAR(4)
,@FECHAINI	NVARCHAR(8)
,@FECHAFIN	NVARCHAR(8)
)
AS
BEGIN

	SELECT VALUE AS LOCAL INTO #TEMP_SPLIT_LOCALES
	FROM STRING_SPLIT(@LOCALES,',')

	SELECT DISTINCT LOCAL FROM WC3_VISTA_CASINO
	WHERE EMPRESA = @EMPRESA
	AND FECHA BETWEEN @FECHAINI AND @FECHAFIN
	AND DIVISION = @DIVCOD
	AND ISNULL(ERROR,'') = ''
	AND LOCAL IN (SELECT LOCAL FROM #TEMP_SPLIT_LOCALES)
	ORDER BY LOCAL

END

--EXEC V4MVC_CASINO_LOCALES_CTTA '761264907','CAS_CH_CONF2,CAS_CH_DONOS,CAS_CH_LIXI,CAS_CH_PLACA,CAS_CH_SANFR,CAS_CH_SNFR2,CAS_CHO_220,CAS_CHO_CONF,CAS_CHO_INF,CAS_CHO_INFI,CAS_CHO_VEG1,CAS_CHO_VEG2,CAS_CHOPEREZ,CAS_CONFLUEN,CAS_DOS,CAS_LAERMITA,CAS_LIX2,CAS_PCALDERA,CAS_PLACA,CAS_PLACA2,CAS_SAG,CAS_SAG2,CAS_SAN_FRAN,CAS_TITAN,CAS_TITAN2,CAS_UNO,CAS_VEGAT','LB','20170101','20201130'
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CASINO_SELECT_CONSUMO_CASINO_MESACTUAL_INFORMEFUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CASINO_SELECT_CONSUMO_CASINO_MESACTUAL_INFORMEFUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CASINO_SELECT_CONSUMO_CASINO_MESACTUAL_INFORMEFUNCIONARIOS_CTTA]
(
  @RUT NVARCHAR(10)
) AS 
BEGIN

SELECT DISTINCT   C.SERVICIO			, C.LOCAL						, C.RUT			, C.EMPRESA
				, C.ACRONIMO			, C.FECHA						, C.HORA		, C.CANTIDAD AS CANTIDAD_REPORTE
				, (CASE WHEN ISNULL(C.ERROR, '') <> '' THEN ISNULL(M.MSG_REPORT, 'ERROR') ELSE '' END  ) AS ERROR
				, C.CCOSTO				, C.COD_PDA						, W.NOMBRES		, W.APELLIDOS
				, D.DIVISION			, D.DIVCOD						, C.COD_PDA		, C.USUARIO
				, ADMINOST				, EE.ACRONIMO AS CONTRATISTA	, C.OST			, W2.NOMBRES + ' ' + W2.APELLIDOS AS ADMINOSTNOM 
FROM WC3_VISTA_CASINO  AS C LEFT OUTER JOIN WORKERS AS W ON C.RUT = W.RUT 
                            LEFT OUTER JOIN MULTASTTO AS M ON C.ERROR = M.CODMULTA 
							INNER JOIN A024_DIVISIONES D ON C.DIVISION = D.DIVCOD 
							LEFT OUTER JOIN OSTDIVLOCAL AS O ON C.OST = O.OST AND C.DIVISION = O.DIVISION AND O.MANDANTE IN (SELECT MANDANTE FROM A027_MANDANTES WHERE ACTIVO = 'SI') 
							LEFT OUTER JOIN WORKERS AS W2 ON O.ADMINOST = W2.RUT 
							LEFT OUTER JOIN ENTERPRISE AS EE ON EE.IDEMPRESA = O.EMPRESA 
WHERE C.SERVICIO <> '' AND ISNULL(C.ERROR, '') = ''  AND (C.RUT = @RUT)  AND (C.FECHA  Like SUBSTRING(CONVERT(NVARCHAR(8),GETDATE(),112),1,6)+'%')   
ORDER BY C.SERVICIO, C.LOCAL, C.FECHA, C.HORA  ASC 
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CASINO_SELECT_MDTE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CASINO_SELECT_MDTE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CASINO_SELECT_MDTE]          
AS          
BEGIN          
    
	DECLARE @CASINOMES NVARCHAR(12)    
	DECLARE @FECHA NVARCHAR(8)    
          
	SET @CASINOMES = 'CASINO' +  SUBSTRING(DBO.HOY(GETDATE()),5,2)
	SET @FECHA = DBO.HOY(GETDATE())       
    
	EXEC ('SELECT DISTINCT SERVICIO' + ' ' +      
	  'FROM' + ' ' + @CASINOMES + ' ' +      
	  'WHERE FECHA =' + N'''' +@FECHA + N'''' +' ' +       
	  'AND ISNULL(ERROR,'+ N'''' + N'''' +')'+ '=' + N'''' + N'''' + ' '+          
	  'AND ISNULL(SERVICIO,'+ N'''' + N'''' +')'+ '<>' + N'''' + N'''' + ' ' +
	  'ORDER BY SERVICIO ASC;'
	  )     
        
END

--EXEC [V4MVC_CASINO_SELECT_MDTE]IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CASINO_SELECT_SERVICIOEMPRESA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CASINO_SELECT_SERVICIOEMPRESA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CASINO_SELECT_SERVICIOEMPRESA_CTTA]
(
 @FECHAINI		NVARCHAR(8)		= NULL
,@FECHAFIN		NVARCHAR(8)		= NULL
,@DIVCOD		NVARCHAR(4)		= NULL
,@LOCALES		NVARCHAR(MAX)	= NULL
,@IDEMPRESA		NVARCHAR(10)	= NULL
,@OPTION		NVARCHAR(1)		= NULL
)
AS
BEGIN

	SELECT value AS ID_LOCAL INTO #TEMP_SPLIT_LOCALES      
	FROM string_split(@LOCALES,',')   

	IF(@OPTION = 'B')
	BEGIN

		(SELECT  SERVICIO, COUNT(CANTIDAD) AS CANTIDAD
		FROM WC3_VISTA_CASINO 
		WHERE  (FECHA BETWEEN @FECHAINI AND @FECHAFIN) 
		AND (ISNULL(ERROR, '') = '') 
		AND EMPRESA = @IDEMPRESA
		AND DIVISION = @DIVCOD
		AND LOCAL IN (SELECT ID_LOCAL FROM #TEMP_SPLIT_LOCALES)
		GROUP BY EMPRESA, ACRONIMO, SERVICIO)
		UNION ALL
		(SELECT 'TOTAL', COUNT(CANTIDAD) AS CANTIDAD
		FROM WC3_VISTA_CASINO 
		WHERE  (FECHA BETWEEN @FECHAINI AND @FECHAFIN) 
		AND (ISNULL(ERROR, '') = '') 
		AND EMPRESA = @IDEMPRESA
		AND DIVISION = @DIVCOD
		AND LOCAL IN (SELECT ID_LOCAL FROM #TEMP_SPLIT_LOCALES))
		UNION ALL
		(SELECT 'ERROR' , SUM(CANTIDAD) AS CANTIDAD
		FROM WC3_VISTA_CASINO
		WHERE (FECHA BETWEEN @FECHAINI AND @FECHAFIN) 
		AND SERVICIO = 'ERROR'
		AND EMPRESA = @IDEMPRESA
		AND DIVISION = @DIVCOD
		AND LOCAL IN (SELECT ID_LOCAL FROM #TEMP_SPLIT_LOCALES))
		ORDER BY SERVICIO

	END

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CASINO_SERVICIO_LOCAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CASINO_SERVICIO_LOCAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CASINO_SERVICIO_LOCAL_CTTA]
(
 @EMPRESA	NVARCHAR(10)
,@LOCALES	NVARCHAR(MAX)
,@DIVCOD	NVARCHAR(4)
,@FECHAINI	NVARCHAR(8)
,@FECHAFIN	NVARCHAR(8)
)
AS
BEGIN

	CREATE TABLE #LOCALES
	(
		LOCAL	NVARCHAR(50)  COLLATE DATABASE_DEFAULT NOT NULL
	)

	SELECT VALUE AS LOCAL INTO #TEMP_SPLIT_LOCALES
	FROM STRING_SPLIT(@LOCALES,',')

	SELECT DISTINCT LOCAL,SERVICIO FROM WC3_VISTA_CASINO
	WHERE EMPRESA = @EMPRESA
	AND FECHA BETWEEN @FECHAINI AND @FECHAFIN
	AND DIVISION = @DIVCOD
	AND ISNULL(ERROR,'') = ''
	AND LOCAL IN (SELECT LOCAL FROM #TEMP_SPLIT_LOCALES)
	ORDER BY LOCAL

ENDIF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CASINO_SUBTOTAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CASINO_SUBTOTAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CASINO_SUBTOTAL_CTTA]
(
 @EMPRESA	NVARCHAR(10)
,@LOCALES	NVARCHAR(MAX)
,@DIVCOD	NVARCHAR(4)
,@FECHAINI	NVARCHAR(8)
,@FECHAFIN	NVARCHAR(8)
)
AS
BEGIN

	SELECT VALUE AS LOCAL INTO #TEMP_SPLIT_LOCALES
	FROM STRING_SPLIT(@LOCALES,',')
	
	SELECT LOCAL,FECHA,SUM(CANTIDAD) AS CANTIDAD FROM WC3_VISTA_CASINO
	WHERE EMPRESA = @EMPRESA
	AND FECHA BETWEEN @FECHAINI AND @FECHAFIN
	AND DIVISION = @DIVCOD
	AND ISNULL(ERROR,'') = ''
	AND LOCAL IN (SELECT LOCAL FROM #TEMP_SPLIT_LOCALES)
	GROUP BY LOCAL,FECHA
	ORDER BY LOCAL ASC

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CASINO_TOTAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CASINO_TOTAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CASINO_TOTAL_CTTA]
(
 @EMPRESA	NVARCHAR(10)
,@LOCALES	NVARCHAR(MAX)
,@DIVCOD	NVARCHAR(4)
,@FECHAINI	NVARCHAR(8)
,@FECHAFIN	NVARCHAR(8)
)
AS
BEGIN

	SELECT VALUE AS LOCAL INTO #TEMP_SPLIT_LOCALES
	FROM STRING_SPLIT(@LOCALES,',')
	
	SELECT FECHA,SUM(CANTIDAD) AS CANTIDAD FROM WC3_VISTA_CASINO
	WHERE EMPRESA = @EMPRESA
	AND FECHA BETWEEN @FECHAINI AND @FECHAFIN
	AND DIVISION = @DIVCOD
	AND ISNULL(ERROR,'') = ''
	AND LOCAL IN (SELECT LOCAL FROM #TEMP_SPLIT_LOCALES)
	GROUP BY FECHA
	ORDER BY FECHA

END


--EXEC V4MVC_CASINO_SUBTOTAL_CTTA '761264907','CAS_PCALDERA,CAS_VEGAT','LB','20170101','20201126'
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CASINOMES_SELECT_MDTE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CASINOMES_SELECT_MDTE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CASINOMES_SELECT_MDTE]         
AS      
BEGIN   

	DECLARE @MAXIMO							INT               
	DECLARE @CONTADOR						INT				    = 1 
	DECLARE @DATO							VARCHAR(30)  
	DECLARE @STRING_SQL						NVARCHAR(MAX)		=''	
	DECLARE @STRING_SQL_CONVERT				NVARCHAR(MAX)		=''
	DECLARE @STRING_SQL_SUBSTRING			NVARCHAR(MAX)		=''
	DECLARE @STRING_SQL_CONVERT_SUBSTRING	NVARCHAR(MAX)  

	DECLARE @CASINOMES						NVARCHAR(12)		= 'CASINO' +  SUBSTRING(DBO.HOY(GETDATE()),5,2)
	DECLARE @FECHA							NVARCHAR(8)			= DBO.HOY(GETDATE())
    
	CREATE TABLE #TEMP_ABC (  
	SERVICIO VARCHAR(50)   COLLATE DATABASE_DEFAULT NOT NULL
	)  
  
	INSERT INTO #TEMP_ABC   
	EXEC V4MVC_CASINO_SELECT_MDTE
  
	SELECT  ROW_NUMBER() OVER(ORDER BY SERVICIO ASC) AS ID , * INTO #TEMP_SERVICIO_A FROM              
	#TEMP_ABC        
        

	WHILE ( @CONTADOR <= (SELECT MAX(ID) FROM #TEMP_SERVICIO_A ) )               
	BEGIN               
		SELECT @DATO =[SERVICIO] FROM #TEMP_SERVICIO_A              
		WHERE ID = @CONTADOR              
              
		SET @STRING_SQL +='['+ @DATO + '],';   
		SET @STRING_SQL_CONVERT  += 'CONVERT(VARCHAR,[' + @DATO + '])+' + N''''+',' +N''''+'+';    
              
		SET @CONTADOR = @CONTADOR +1               
	END   
  
	SET @STRING_SQL_SUBSTRING = SUBSTRING(@STRING_SQL, 0, LEN(@STRING_SQL))    
	SET @STRING_SQL_CONVERT_SUBSTRING =SUBSTRING(@STRING_SQL_CONVERT, 0, LEN(@STRING_SQL_CONVERT)-4)    
  
	EXEC (    
		'SELECT DIVISION,' + @STRING_SQL_SUBSTRING + ' '+' INTO #TEMP_DATA' + ' ' +  
		'FROM (' + ' ' +  
		'SELECT RUT,DIVISION,SERVICIO FROM (SELECT DISTINCT RUT,DIVISION,SERVICIO, HORA' + ' '+  
		'FROM' +' '+ @CASINOMES + ' ' +        
		'WHERE FECHA =' + N'''' +@FECHA + N'''' +' ' +     
		'AND ISNULL(ERROR,'+ N'''' + N'''' +')'+ '=' + N'''' + N'''' + ')'+ ' ' +'AS CC' + ' ' +       
		') src' +' '+        
		'pivot' +        
		'(' +        
		'COUNT(RUT) for [SERVICIO] in (' + @STRING_SQL_SUBSTRING + ')' +        
		') AS PIV' + ' '+  
		'SELECT DIVISION,('+ @STRING_SQL_CONVERT_SUBSTRING +') AS DATA_GRAFIC FROM #TEMP_DATA ORDER BY DIVISION ASC' + ' '   
		)    


END  


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CATEGORIACONTRATISTA_SELECT_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CATEGORIACONTRATISTA_SELECT_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CATEGORIACONTRATISTA_SELECT_PASES_CTTA]
AS
BEGIN
	SELECT
		Id,
		CODIGO,
		UPPER(CATEGORIA) AS CATEGORIA,
		UPPER(DESCRIPCION) AS DESCRIPCION,
		ACTIVO,
		FECREGISTRO,
		HORAREGISTRO,
		USRREGISTRO
	FROM CATEGORIACONTRATISTA
	ORDER BY CATEGORIA ASC
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CCOSTOS_ENTERPRISE_SAVE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CCOSTOS_ENTERPRISE_SAVE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CCOSTOS_ENTERPRISE_SAVE_CTTA]
(
 @EMPRESA		NVARCHAR(10)
,@CCOSTO		NVARCHAR(14)
,@ACTIVO		NVARCHAR(2)
,@DESCRIPCION	NVARCHAR(50)
)
AS
BEGIN

	IF EXISTS	(
		SELECT		CCOSTO 
		FROM		CCOSTOS
		WHERE		CCOSTO			=	@CCOSTO
		AND			EMPRESA			=	@EMPRESA  )
	BEGIN
		UPDATE		CCOSTOS
		SET			ACTIVO			=	@ACTIVO
					,DESCRIPCION	=	@DESCRIPCION
		WHERE		CCOSTO			=	@CCOSTO
		AND			EMPRESA			=	@EMPRESA
	END
	ELSE
	BEGIN
			INSERT INTO CCOSTOS	(	EMPRESA		,CCOSTO		,DESCRIPCION		,ACTIVO	 )
						VALUES	(	@EMPRESA	,@CCOSTO	,@DESCRIPCION		,@ACTIVO )
	END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CCOSTOS_SELECT_ENTERPRISE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CCOSTOS_SELECT_ENTERPRISE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CCOSTOS_SELECT_ENTERPRISE_CTTA]
(
 @EMPRESA		NVARCHAR(10) = NULL
,@CCOSTO		NVARCHAR(14) = NULL
)
AS
BEGIN

	SELECT		EMPRESA				,CCOSTO		,DESCRIPCION	,ACTIVO
			   ,FECHAMOD			,HORAMOD	,GRABO			,RESPONSABLE
			   ,LOCALASISTENCIA
	FROM		CCOSTOS 
	WHERE		CCOSTO = ISNULL( @CCOSTO, CCOSTO)
	AND			EMPRESA = @EMPRESA

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_AUDITORIA_SELECT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_AUDITORIA_SELECT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_AUDITORIA_SELECT_CTTA]
(
 @IDEMPRESA NVARCHAR(10) = NULL
)
AS
BEGIN

	SELECT   T1.ID_CERT_AUDITORIA		,T1.IDEMPRESA			,T1.PERIODO					,T1.FECHA
			,T1.ID						,T1.TIPO_AUDITORIA		,T1.PORCENTAJE_APROBACION	,T1.CANT_PERSONAS
			,T1.VALIDADO				,T1.OBSERVACION			,T1.USUARIO					,T1.FECHASUBE
			,T1.HORASUBE				,T1.CERTUSUARIO			,T1.CERTFECHA				,T1.CERTHORA
			,T1.USUARIOMOD				,T1.FECHAMOD			,T1.HORAMOD					,T1.NCONTRATO
			,T1.DIVISION				,T1.COD_INTERNO_CERT	,T1.ID_FOLIO				,T2.ACRONIMO
	FROM CERT_AUDITORIA T1
	INNER JOIN ENTERPRISE T2 ON T1.IDEMPRESA = T2.IDEMPRESA
	WHERE T1.IDEMPRESA= @IDEMPRESA

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_DEUDAS_DELETE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_DELETE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_DELETE_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@PERIODO			NVARCHAR(6)
 ,@USUARIO			NVARCHAR(10)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @CD_EXISTS BIT = 0
	DECLARE @CD_EMPRESA NVARCHAR(10)
	DECLARE @CD_PERIODO NVARCHAR(6)
	DECLARE @CD_MONTO INT
	DECLARE @CD_VALIDADO NVARCHAR(2)
	DECLARE @CD_ID UNIQUEIDENTIFIER
	DECLARE @CD_OBSERVACION NVARCHAR(500)
	DECLARE @CD_USUARIO NVARCHAR(10)
	DECLARE @CD_FECHASUBE NVARCHAR(8)
	DECLARE @CD_HORASUBE NVARCHAR(8)
	DECLARE @CD_CERTUSUARIO NVARCHAR(10)
	DECLARE @CD_CERTFECHA NVARCHAR(8)
	DECLARE @CD_CERTHORA NVARCHAR(8)
	
	DECLARE @DSP_ID_DISPUTA INT
	DECLARE @DSP_ID_DOC INT
	DECLARE @DSP_ID UNIQUEIDENTIFIER
	DECLARE @DSP_USUARIO NVARCHAR(10)
	DECLARE @DSP_HORA NVARCHAR(8)
	DECLARE @DSP_OBSERVACION NVARCHAR(1000)
	DECLARE @DSP_CERTUSUARIO NVARCHAR(10)
	DECLARE @DSP_CERTFECHA NVARCHAR(8)
	DECLARE @DSP_CERTHORA NVARCHAR(8)
	DECLARE @DSP_ESTADO	NVARCHAR(2)
	DECLARE @DSP_REVALUSUARIO NVARCHAR(10)
	DECLARE @DSP_REVALFECHA	NVARCHAR(8)
	DECLARE @DSP_REVALHORA	NVARCHAR(8)
	DECLARE @DSP_OBSERVACION_REVAL	NVARCHAR(1000)
	DECLARE @DSP_VALIDADO NVARCHAR(2)
	DECLARE @DSP_PERIODO NVARCHAR(6)
	DECLARE @DSP_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0
	SET @DISPUTA_EMPRESA = ''
	SET @DISPUTA_FECHA = ''

	SELECT
		TOP 1
		@CD_EXISTS = 1,
		@CD_EMPRESA = EMPRESA,
		@CD_PERIODO = PERIODO,
		@CD_MONTO = MONTO,
		@CD_VALIDADO = VALIDADO,
		@CD_ID = ID,
		@CD_OBSERVACION = OBSERVACION,
		@CD_USUARIO = USUARIO,
		@CD_FECHASUBE = FECHASUBE,
		@CD_HORASUBE = HORASUBE,
		@CD_CERTUSUARIO = CERTUSUARIO,
		@CD_CERTFECHA = CERTFECHA,
		@CD_CERTHORA = CERTHORA
	FROM CERT_DEUDAS
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO

	IF(@CD_EXISTS = 1)
		BEGIN
			INSERT INTO CERT_DEUDAS_LOG
						(
							EMPRESA,
							PERIODO,
							MONTO,
							VALIDADO,
							ID,
							OBSERVACION,
							USUARIO,
							FECHASUBE,
							HORASUBE,
							CERTUSUARIO,
							CERTFECHA,
							CERTHORA,
							USUARIODEL,
							FECHADEL,
							HORADEL
						)
			VALUES
						(
							@CD_EMPRESA,
							@CD_PERIODO,
							@CD_MONTO,
							@CD_VALIDADO,
							@CD_ID,
							@CD_OBSERVACION,
							@CD_USUARIO,
							@CD_FECHASUBE,
							@CD_HORASUBE,
							@CD_CERTUSUARIO,
							@CD_CERTFECHA,
							@CD_CERTHORA,
							@USUARIO,
							@CURR_FECHA,
							@CURR_TIEMPOFULL
						)

			/*--------------------------*/

			
			SELECT
				TOP 1
				@DISPUTA_EXISTE = 1,
				@DSP_ID_DISPUTA = ID_DISPUTA,
				@DISPUTA_EMPRESA = EMPRESA,
				@DSP_ID_DOC = ID_DOC,
				@DSP_ID = ID,
				@DSP_USUARIO = USUARIO,
				@DISPUTA_FECHA = FECHA,
				@DSP_HORA = HORA,
				@DSP_OBSERVACION = OBSERVACION,
				@DSP_CERTUSUARIO = CERTUSUARIO,
				@DSP_CERTFECHA = CERTFECHA,
				@DSP_CERTHORA = CERTHORA,
				@DSP_ESTADO = ESTADO,
				@DSP_REVALUSUARIO = REVALUSUARIO,
				@DSP_REVALFECHA = REVALFECHA,
				@DSP_REVALHORA = REVALHORA,
				@DSP_OBSERVACION_REVAL = OBSERVACION_REVAL,
				@DSP_VALIDADO = VALIDADO,
				@DSP_PERIODO = PERIODO,
				@DSP_ID_CERTIFICADO = ID_CERTIFICADO
			FROM DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'

			IF(@DISPUTA_EXISTE = 1)
				BEGIN
					INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
							(
								ID_DISPUTA,
								EMPRESA,
								ID_DOC,
								ID,
								USUARIO,
								FECHA,
								HORA,
								OBSERVACION,
								CERTUSUARIO,
								CERTFECHA,
								CERTHORA,
								ESTADO,
								REVALUSUARIO,
								REVALFECHA,
								REVALHORA,
								OBSERVACION_REVAL,
								VALIDADO,
								PERIODO,
								ID_CERTIFICADO,
								USRMOD,
								FECHAMOD,
								HORAMOD,
								ACCION
							)
					VALUES (
								@DSP_ID_DISPUTA,
								@DISPUTA_EMPRESA,
								@DSP_ID_DOC,
								@DSP_ID,
								@DSP_USUARIO,
								@DISPUTA_FECHA,
								@DSP_HORA,
								@DSP_OBSERVACION,
								@DSP_CERTUSUARIO,
								@DSP_CERTFECHA,
								@DSP_CERTHORA,
								@DSP_ESTADO,
								@DSP_REVALUSUARIO,
								@DSP_REVALFECHA,
								@DSP_REVALHORA,
								@DSP_OBSERVACION_REVAL,
								@DSP_VALIDADO,
								@DSP_PERIODO,
								@DSP_ID_CERTIFICADO,
								@USUARIO,
								@CURR_FECHA,
								@CURR_TIEMPOFULL,
								'ELIMINADO'
							)

					DELETE DOCS_DISPUTA_CLABORAL WHERE ID_DISPUTA = @DISPUTA_ID AND ESTADO = 'NO'
				END

			DELETE FROM CERT_DEUDAS WHERE PERIODO = @PERIODO AND EMPRESA = @IDEMPRESA

		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_DEUDAS_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_INSERT_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@MONTO		INT
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN
	SET @RET_CODE = -1

	IF(EXISTS(
			SELECT
				PERIODO
			FROM CERT_DEUDAS
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 1  /*ERROR LOGICO; YA EXISTE*/
			RETURN
		END
	INSERT INTO CERT_DEUDAS(PERIODO, EMPRESA, MONTO)
	VALUES (@PERIODO, @IDEMPRESA, @MONTO)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_DEUDAS_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_SELECT_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(10)
) AS
BEGIN
	DECLARE @ID_DOC INT = 98
	SELECT
		SS.PERIODO,
		SS.VALIDADO,
		SS.EMPRESA,
		SS.MONTO,
		SS.ID,
		SS.UNIQUE_ID,
		SS.DOC_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		) AS DISPUTA_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ESTADO
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), ''
		) AS DISPUTA_ESTADO,
		IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		), 1 , 0) AS DISPUTA_EXISTE		
	FROM
	(
		SELECT
			PERIODO,
			VALIDADO,
			EMPRESA,
			MONTO,
			ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS UNIQUE_ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS DOC_ID
		FROM CERT_DEUDAS
		WHERE
			EMPRESA = @IDEMPRESA
		ORDER BY PERIODO DESC
		OFFSET 0 ROWS
	) SS
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_DEUDAS_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		VALIDADO,
		(CASE WHEN OBSERVACION IS NULL THEN STUFF(
													(
													  SELECT
															';' + TR.TIPO_RECHAZO
													  FROM DOCS_CLABORAL_EMP_RECHAZO MR
													  INNER JOIN DOCS_TIPO_RECHAZO TR
														ON MR.ID_TIPO_RECHAZO = TR.ID_TIPO_RECHAZO
													  WHERE ID = CERT_DEUDAS.ID FOR XML PATH ('')
													 ), 1, 1, '')
		 ELSE OBSERVACION END) AS OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
					(
						SELECT
							TOP 1
							D.NOMBRE
						FROM DOCS D
						WHERE D.ID_DOC = @ID_DOC
					),''
				) AS NOM_DOC
	FROM CERT_DEUDAS
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_DEUDAS_SELECT_ONE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_SELECT_ONE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_SELECT_ONE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		TOP 1
		CERTUSUARIO,
		CERTFECHA,
		CERTHORA,
		VALIDADO
	FROM CERT_DEUDAS
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_DEUDAS_SELECT_ONE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_SELECT_ONE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_SELECT_ONE_V3_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		 PERIODO,
		 EMPRESA,
		 MONTO,
		 ID,
		 VALIDADO,
		 OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = CERT_DEUDAS.EMPRESA AND
					DD.PERIODO = CERT_DEUDAS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = CERT_DEUDAS.ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		 ) AS DISPUTA_ID,
		 IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = CERT_DEUDAS.EMPRESA AND
					DD.PERIODO = CERT_DEUDAS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = CERT_DEUDAS.ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		 ), 1 , 0) AS DISPUTA_EXISTE,
		 COALESCE(
			(
				SELECT
					TOP 1
					ARCHIVO
				FROM ARCHIVOS A
				WHERE A.ID = CERT_DEUDAS.ID
			), NULL
		 ) AS ADJUNTO_CONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					TIPOCONTENIDO
				FROM ARCHIVOS A
				WHERE A.ID = CERT_DEUDAS.ID
			), NULL
		 ) AS ADJUNTO_TIPOCONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					NOMBRE
				FROM ARCHIVOS A
				WHERE A.ID = CERT_DEUDAS.ID
			), NULL
		 ) AS ADJUNTO_NOMBRE	
	FROM CERT_DEUDAS
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_DEUDAS_UPDATE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_UPDATE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_UPDATE_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@MONTO		INT
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN
	SET @RET_CODE = -1

	IF(NOT EXISTS(
			SELECT
				PERIODO
			FROM CERT_DEUDAS
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 2  /*ERROR LOGICO; NO EXISTE*/
			RETURN
		END
	UPDATE CERT_DEUDAS
	SET
		MONTO = @MONTO
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_DEUDAS_UPDATE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_UPDATE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_UPDATE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@PERIODO			NVARCHAR(6)
 ,@ID				UNIQUEIDENTIFIER
 ,@USUARIO			NVARCHAR(10)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @DDC_ID_DISPUTA INT
	DECLARE @DDC_ID_DOC INT
	DECLARE @DDC_ID UNIQUEIDENTIFIER
	DECLARE @DDC_USUARIO NVARCHAR(10)
	DECLARE @DDC_HORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION NVARCHAR(1000)
	DECLARE @DDC_CERTUSUARIO NVARCHAR(10)
	DECLARE @DDC_CERTFECHA NVARCHAR(8)
	DECLARE @DDC_CERTHORA NVARCHAR(8)
	DECLARE @DDC_ESTADO NVARCHAR(2)
	DECLARE @DDC_REVALUSUARIO NVARCHAR(10)
	DECLARE @DDC_REVALFECHA NVARCHAR(8)
	DECLARE @DDC_REVALHORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION_REVAL NVARCHAR(1000)
	DECLARE @DDC_VALIDADO NVARCHAR(2)
	DECLARE @DDC_PERIODO NVARCHAR(6)
	DECLARE @DDC_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0

	SELECT
		TOP 1
		@DISPUTA_EXISTE = 1,
		@DDC_ID_DISPUTA = ID_DISPUTA,
		@DISPUTA_EMPRESA = EMPRESA,
		@DDC_ID_DOC = ID_DOC,
		@DDC_ID = ID,
		@DDC_USUARIO = USUARIO,
		@DISPUTA_FECHA = FECHA,
		@DDC_HORA = HORA,
		@DDC_OBSERVACION = OBSERVACION,
		@DDC_CERTUSUARIO = CERTUSUARIO,
		@DDC_CERTFECHA = CERTFECHA,
		@DDC_CERTHORA = CERTHORA,
		@DDC_ESTADO = ESTADO,
		@DDC_REVALUSUARIO = REVALUSUARIO,
		@DDC_REVALFECHA = REVALFECHA,
		@DDC_REVALHORA = REVALHORA,
		@DDC_OBSERVACION_REVAL = OBSERVACION_REVAL,
		@DDC_VALIDADO = VALIDADO,
		@DDC_PERIODO = PERIODO,
		@DDC_ID_CERTIFICADO = ID_CERTIFICADO
	FROM DOCS_DISPUTA_CLABORAL
	WHERE
		ID_DISPUTA = @DISPUTA_ID AND
		ESTADO = 'NO'

	IF(@DISPUTA_EXISTE = 1)
		BEGIN
			INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
				(
					ID_DISPUTA,
					EMPRESA,
					ID_DOC,
					ID,
					USUARIO,
					FECHA,
					HORA,
					OBSERVACION,
					CERTUSUARIO,
					CERTFECHA,
					CERTHORA,
					ESTADO,
					REVALUSUARIO,
					REVALFECHA,
					REVALHORA,
					OBSERVACION_REVAL,
					VALIDADO,
					PERIODO,
					ID_CERTIFICADO,
					USRMOD,
					FECHAMOD,
					HORAMOD,
					ACCION
				)
			VALUES 
				(
					@DDC_ID_DISPUTA,
					@DISPUTA_EMPRESA,
					@DDC_ID_DOC,
					@DDC_ID,
					@DDC_USUARIO,
					@DISPUTA_FECHA,
					@DDC_HORA,
					@DDC_OBSERVACION,
					@DDC_CERTUSUARIO,
					@DDC_CERTFECHA,
					@DDC_CERTHORA,
					@DDC_ESTADO,
					@DDC_REVALUSUARIO,
					@DDC_REVALFECHA,
					@DDC_REVALHORA,
					@DDC_OBSERVACION_REVAL,
					@DDC_VALIDADO,
					@DDC_PERIODO,
					@DDC_ID_CERTIFICADO,
					@USUARIO,
					@CURR_FECHA,
					@CURR_TIEMPOFULL,
					'ELIMINADO'
				)

			DELETE DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'
		END

		DELETE FROM ARCHIVOS
		WHERE ID = @ID

		UPDATE CERT_DEUDAS
		SET
			ID = NULL,
			VALIDADO = 'NO'
		WHERE
			EMPRESA = @IDEMPRESA AND
			PERIODO = @PERIODO

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_DEUDAS_UPDATE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_UPDATE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_DEUDAS_UPDATE_V3_CONTROLLABORAL_CTTA]
(
  @ID			UNIQUEIDENTIFIER = NULL
 ,@USUARIO		NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	IF(@ID IS NOT NULL)
		BEGIN
			UPDATE CERT_DEUDAS
			SET
				ID = @ID,
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHASUBE = @CURR_FECHA,
				HORASUBE = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO)
		END
	ELSE
		BEGIN
			UPDATE CERT_DEUDAS
			SET
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHASUBE = @CURR_FECHA,
				HORASUBE = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO)
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_NO_DEUDA_DELETE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_DELETE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_DELETE_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@PERIODO			NVARCHAR(6)
 ,@OST				NVARCHAR(14)
 ,@USUARIO			NVARCHAR(10)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @CND_EXISTS BIT = 0
	DECLARE @CND_EMPRESA NVARCHAR(10)
	DECLARE @CND_PERIODO NVARCHAR(6)

	DECLARE @CND_OST NVARCHAR(14)
	
	DECLARE @CND_VALIDADO NVARCHAR(2)
	DECLARE @CND_ID UNIQUEIDENTIFIER
	DECLARE @CND_OBSERVACION NVARCHAR(500)
	DECLARE @CND_USUARIO NVARCHAR(10)
	DECLARE @CND_FECHASUBE NVARCHAR(8)
	DECLARE @CND_HORASUBE NVARCHAR(8)
	DECLARE @CND_CERTUSUARIO NVARCHAR(10)
	DECLARE @CND_CERTFECHA NVARCHAR(8)
	DECLARE @CND_CERTHORA NVARCHAR(8)

	DECLARE @DSP_ID_DISPUTA INT
	DECLARE @DSP_ID_DOC INT
	DECLARE @DSP_ID UNIQUEIDENTIFIER
	DECLARE @DSP_USUARIO NVARCHAR(10)
	DECLARE @DSP_HORA NVARCHAR(8)
	DECLARE @DSP_OBSERVACION NVARCHAR(1000)
	DECLARE @DSP_CERTUSUARIO NVARCHAR(10)
	DECLARE @DSP_CERTFECHA NVARCHAR(8)
	DECLARE @DSP_CERTHORA NVARCHAR(8)
	DECLARE @DSP_ESTADO	NVARCHAR(2)
	DECLARE @DSP_REVALUSUARIO NVARCHAR(10)
	DECLARE @DSP_REVALFECHA	NVARCHAR(8)
	DECLARE @DSP_REVALHORA	NVARCHAR(8)
	DECLARE @DSP_OBSERVACION_REVAL	NVARCHAR(1000)
	DECLARE @DSP_VALIDADO NVARCHAR(2)
	DECLARE @DSP_PERIODO NVARCHAR(6)
	DECLARE @DSP_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0
	SET @DISPUTA_EMPRESA = ''
	SET @DISPUTA_FECHA = ''

	SELECT
		TOP 1
		@CND_EXISTS = 1,
		@CND_EMPRESA = EMPRESA,
		@CND_PERIODO = PERIODO,

		@CND_OST = OST,

		@CND_VALIDADO = VALIDADO,
		@CND_ID = ID,
		@CND_OBSERVACION = OBSERVACION,
		@CND_USUARIO = USUARIO,
		@CND_FECHASUBE = FECHASUBE,
		@CND_HORASUBE = HORASUBE,
		@CND_CERTUSUARIO = CERTUSUARIO,
		@CND_CERTFECHA = CERTFECHA,
		@CND_CERTHORA = CERTHORA
	FROM CERT_NO_DEUDA
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO

	IF(@CND_EXISTS = 1)
		BEGIN
			INSERT INTO CERT_NO_DEUDA_LOG
						(
							EMPRESA,
							PERIODO,
							OST,
							ID,
							USUARIO,
							FECHASUBE,
							HORASUBE,
							VALIDADO,
							OBSERVACION,
							CERTUSUARIO,
							CERTFECHA,
							CERTHORA,
							USUARIODEL,
							FECHADEL,
							HORADEL
						)
			VALUES
						(
							@CND_EMPRESA,
							@CND_PERIODO,
							@OST,
							@CND_ID,
							@CND_USUARIO,
							@CND_FECHASUBE,
							@CND_HORASUBE,
							@CND_VALIDADO,
							@CND_OBSERVACION,
							@CND_CERTUSUARIO,
							@CND_CERTFECHA,
							@CND_CERTHORA,
							@USUARIO,
							@CURR_FECHA,
							@CURR_TIEMPOFULL
						)
			/*--------------------------*/

			
			SELECT
				TOP 1
				@DISPUTA_EXISTE = 1,
				@DSP_ID_DISPUTA = ID_DISPUTA,
				@DISPUTA_EMPRESA = EMPRESA,
				@DSP_ID_DOC = ID_DOC,
				@DSP_ID = ID,
				@DSP_USUARIO = USUARIO,
				@DISPUTA_FECHA = FECHA,
				@DSP_HORA = HORA,
				@DSP_OBSERVACION = OBSERVACION,
				@DSP_CERTUSUARIO = CERTUSUARIO,
				@DSP_CERTFECHA = CERTFECHA,
				@DSP_CERTHORA = CERTHORA,
				@DSP_ESTADO = ESTADO,
				@DSP_REVALUSUARIO = REVALUSUARIO,
				@DSP_REVALFECHA = REVALFECHA,
				@DSP_REVALHORA = REVALHORA,
				@DSP_OBSERVACION_REVAL = OBSERVACION_REVAL,
				@DSP_VALIDADO = VALIDADO,
				@DSP_PERIODO = PERIODO,
				@DSP_ID_CERTIFICADO = ID_CERTIFICADO
			FROM DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'

			IF(@DISPUTA_EXISTE = 1)
				BEGIN
					INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
							(
								ID_DISPUTA,
								EMPRESA,
								ID_DOC,
								ID,
								USUARIO,
								FECHA,
								HORA,
								OBSERVACION,
								CERTUSUARIO,
								CERTFECHA,
								CERTHORA,
								ESTADO,
								REVALUSUARIO,
								REVALFECHA,
								REVALHORA,
								OBSERVACION_REVAL,
								VALIDADO,
								PERIODO,
								ID_CERTIFICADO,
								USRMOD,
								FECHAMOD,
								HORAMOD,
								ACCION
							)
					VALUES (
								@DSP_ID_DISPUTA,
								@DISPUTA_EMPRESA,
								@DSP_ID_DOC,
								@DSP_ID,
								@DSP_USUARIO,
								@DISPUTA_FECHA,
								@DSP_HORA,
								@DSP_OBSERVACION,
								@DSP_CERTUSUARIO,
								@DSP_CERTFECHA,
								@DSP_CERTHORA,
								@DSP_ESTADO,
								@DSP_REVALUSUARIO,
								@DSP_REVALFECHA,
								@DSP_REVALHORA,
								@DSP_OBSERVACION_REVAL,
								@DSP_VALIDADO,
								@DSP_PERIODO,
								@DSP_ID_CERTIFICADO,
								@USUARIO,
								@CURR_FECHA,
								@CURR_TIEMPOFULL,
								'ELIMINADO'
							)

					DELETE DOCS_DISPUTA_CLABORAL WHERE ID_DISPUTA = @DISPUTA_ID AND ESTADO = 'NO'
				END

			DELETE FROM CERT_NO_DEUDA
			WHERE
				PERIODO = @PERIODO AND
				EMPRESA = @IDEMPRESA AND
				OST = @OST

		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_NO_DEUDA_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_INSERT_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@OST			NVARCHAR(14)
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN
	SET @RET_CODE = -1

	IF(EXISTS(
			SELECT
				PERIODO
			FROM CERT_NO_DEUDA
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO AND
				OST = @OST
	))
		BEGIN
			SET @RET_CODE = 1  /*ERROR LOGICO; YA EXISTE*/
			RETURN
		END
	INSERT INTO CERT_NO_DEUDA(PERIODO, EMPRESA, OST)
	VALUES (@PERIODO, @IDEMPRESA, @OST)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_NO_DEUDA_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_SELECT_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(10)
) AS
BEGIN
	DECLARE @ID_DOC INT = 160
	SELECT
		SS.PERIODO,
		SS.VALIDADO,
		SS.EMPRESA,
		SS.OST,
		SS.ID,
		SS.UNIQUE_ID,
		SS.DOC_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		) AS DISPUTA_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ESTADO
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), ''
		) AS DISPUTA_ESTADO,
		IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		), 1 , 0) AS DISPUTA_EXISTE		
	FROM
	(
		SELECT
			PERIODO,
			VALIDADO,
			EMPRESA,
			OST,
			ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS UNIQUE_ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS DOC_ID
		FROM CERT_NO_DEUDA
		WHERE
			EMPRESA = @IDEMPRESA
		ORDER BY PERIODO DESC
		OFFSET 0 ROWS
	) SS
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_NO_DEUDA_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@ID			UNIQUEIDENTIFIER
) AS
BEGIN
	SELECT
		CND.VALIDADO,
		STUFF(
				(
					SELECT ';' + TR.TIPO_RECHAZO
					FROM DOCS_CLABORAL_EMP_RECHAZO MR
					INNER JOIN DOCS_TIPO_RECHAZO TR
						ON MR.ID_TIPO_RECHAZO = TR.ID_TIPO_RECHAZO
					WHERE ID = CND.ID FOR XML PATH ('')
				)
				, 1, 1, '') AS OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
					(
						SELECT
							TOP 1
							D.NOMBRE
						FROM DOCS D
						WHERE D.ID_DOC = @ID_DOC
					),''
				) AS NOM_DOC
	FROM CERT_NO_DEUDA CND
	WHERE
		CND.EMPRESA = @IDEMPRESA AND
		CND.PERIODO = @PERIODO AND
		CND.ID = @ID
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_NO_DEUDA_SELECT_ONE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_SELECT_ONE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_SELECT_ONE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@ID			UNIQUEIDENTIFIER
) AS
BEGIN
	SELECT
		CERTUSUARIO,
		CERTFECHA,
		CERTHORA,
		VALIDADO
	FROM CERT_NO_DEUDA
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO AND
		ID = @ID
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_NO_DEUDA_SELECT_ONE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_SELECT_ONE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_SELECT_ONE_V3_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@OST			NVARCHAR(14)
) AS
BEGIN
	SELECT
		 PERIODO,
		 EMPRESA,
		 ID,
		 VALIDADO,
		 OBSERVACION,
		 OST,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = CERT_NO_DEUDA.EMPRESA AND
					DD.PERIODO = CERT_NO_DEUDA.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = CERT_NO_DEUDA.ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		 ) AS DISPUTA_ID,
		 IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = CERT_NO_DEUDA.EMPRESA AND
					DD.PERIODO = CERT_NO_DEUDA.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = CERT_NO_DEUDA.ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		 ), 1 , 0) AS DISPUTA_EXISTE,
		 COALESCE(
			(
				SELECT
					TOP 1
					ARCHIVO
				FROM ARCHIVOS A
				WHERE A.ID = CERT_NO_DEUDA.ID
			), NULL
		 ) AS ADJUNTO_CONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					TIPOCONTENIDO
				FROM ARCHIVOS A
				WHERE A.ID = CERT_NO_DEUDA.ID
			), NULL
		 ) AS ADJUNTO_TIPOCONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					NOMBRE
				FROM ARCHIVOS A
				WHERE A.ID = CERT_NO_DEUDA.ID
			), NULL
		 ) AS ADJUNTO_NOMBRE		 	
	FROM CERT_NO_DEUDA
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO AND
		OST = @OST
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_NO_DEUDA_UPDATE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_UPDATE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_UPDATE_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@OST			NVARCHAR(14)
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN

	SET @RET_CODE = -1

	IF(NOT EXISTS(
			SELECT
				PERIODO
			FROM CERT_NO_DEUDA
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO AND
				OST = @OST
	))
		BEGIN
			SET @RET_CODE = 2  /*ERROR LOGICO; NO EXISTE*/
			RETURN
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_NO_DEUDA_UPDATE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_UPDATE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_UPDATE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@PERIODO			NVARCHAR(6)
 ,@ID				UNIQUEIDENTIFIER
 ,@USUARIO			NVARCHAR(10)
 ,@OST				NVARCHAR(14)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @DDC_ID_DISPUTA INT
	DECLARE @DDC_ID_DOC INT
	DECLARE @DDC_ID UNIQUEIDENTIFIER
	DECLARE @DDC_USUARIO NVARCHAR(10)
	DECLARE @DDC_HORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION NVARCHAR(1000)
	DECLARE @DDC_CERTUSUARIO NVARCHAR(10)
	DECLARE @DDC_CERTFECHA NVARCHAR(8)
	DECLARE @DDC_CERTHORA NVARCHAR(8)
	DECLARE @DDC_ESTADO NVARCHAR(2)
	DECLARE @DDC_REVALUSUARIO NVARCHAR(10)
	DECLARE @DDC_REVALFECHA NVARCHAR(8)
	DECLARE @DDC_REVALHORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION_REVAL NVARCHAR(1000)
	DECLARE @DDC_VALIDADO NVARCHAR(2)
	DECLARE @DDC_PERIODO NVARCHAR(6)
	DECLARE @DDC_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0

	SELECT
		TOP 1
		@DISPUTA_EXISTE = 1,
		@DDC_ID_DISPUTA = ID_DISPUTA,
		@DISPUTA_EMPRESA = EMPRESA,
		@DDC_ID_DOC = ID_DOC,
		@DDC_ID = ID,
		@DDC_USUARIO = USUARIO,
		@DISPUTA_FECHA = FECHA,
		@DDC_HORA = HORA,
		@DDC_OBSERVACION = OBSERVACION,
		@DDC_CERTUSUARIO = CERTUSUARIO,
		@DDC_CERTFECHA = CERTFECHA,
		@DDC_CERTHORA = CERTHORA,
		@DDC_ESTADO = ESTADO,
		@DDC_REVALUSUARIO = REVALUSUARIO,
		@DDC_REVALFECHA = REVALFECHA,
		@DDC_REVALHORA = REVALHORA,
		@DDC_OBSERVACION_REVAL = OBSERVACION_REVAL,
		@DDC_VALIDADO = VALIDADO,
		@DDC_PERIODO = PERIODO,
		@DDC_ID_CERTIFICADO = ID_CERTIFICADO
	FROM DOCS_DISPUTA_CLABORAL
	WHERE
		ID_DISPUTA = @DISPUTA_ID AND
		ESTADO = 'NO'

	IF(@DISPUTA_EXISTE = 1)
		BEGIN
			INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
				(
					ID_DISPUTA,
					EMPRESA,
					ID_DOC,
					ID,
					USUARIO,
					FECHA,
					HORA,
					OBSERVACION,
					CERTUSUARIO,
					CERTFECHA,
					CERTHORA,
					ESTADO,
					REVALUSUARIO,
					REVALFECHA,
					REVALHORA,
					OBSERVACION_REVAL,
					VALIDADO,
					PERIODO,
					ID_CERTIFICADO,
					USRMOD,
					FECHAMOD,
					HORAMOD,
					ACCION
				)
			VALUES 
				(
					@DDC_ID_DISPUTA,
					@DISPUTA_EMPRESA,
					@DDC_ID_DOC,
					@DDC_ID,
					@DDC_USUARIO,
					@DISPUTA_FECHA,
					@DDC_HORA,
					@DDC_OBSERVACION,
					@DDC_CERTUSUARIO,
					@DDC_CERTFECHA,
					@DDC_CERTHORA,
					@DDC_ESTADO,
					@DDC_REVALUSUARIO,
					@DDC_REVALFECHA,
					@DDC_REVALHORA,
					@DDC_OBSERVACION_REVAL,
					@DDC_VALIDADO,
					@DDC_PERIODO,
					@DDC_ID_CERTIFICADO,
					@USUARIO,
					@CURR_FECHA,
					@CURR_TIEMPOFULL,
					'ELIMINADO'
				)

			DELETE DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'
		END

		DELETE FROM ARCHIVOS
		WHERE ID = @ID

		UPDATE CERT_NO_DEUDA
		SET
			ID = NULL,
			VALIDADO = 'NO',
			USUARIO = @USUARIO,
			FECHASUBE = @CURR_FECHA,
			HORASUBE = @CURR_TIEMPOFULL
		WHERE
			EMPRESA = @IDEMPRESA AND
			PERIODO = @PERIODO AND
			OST = @OST

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_NO_DEUDA_UPDATE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_UPDATE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_NO_DEUDA_UPDATE_V3_CONTROLLABORAL_CTTA]
(
  @ID			UNIQUEIDENTIFIER = NULL
 ,@USUARIO		NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@OST			NVARCHAR(14)
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	IF(@ID IS NOT NULL)
		BEGIN
			UPDATE CERT_NO_DEUDA
			SET
				ID = @ID,
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHASUBE = @CURR_FECHA,
				HORASUBE = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO) AND
				(OST = @OST)
		END
	ELSE
		BEGIN
			UPDATE CERT_NO_DEUDA
			SET
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHASUBE = @CURR_FECHA,
				HORASUBE = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO) AND
				(OST = @OST)
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_TASAS_DELETE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_TASAS_DELETE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_TASAS_DELETE_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@PERIODO			NVARCHAR(6)
 ,@USUARIO			NVARCHAR(10)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @CT_EXISTS BIT = 0
	DECLARE @CT_EMPRESA NVARCHAR(10)
	DECLARE @CT_PERIODO NVARCHAR(6)

	DECLARE @CT_FOLIO BIGINT
	DECLARE @CT_NRO_ACCIDENTES INT
	DECLARE @CT_DIAS_ACCIDENTES INT
	DECLARE @CT_DIAS_ENFERMEDAD INT
	DECLARE @CT_NRO_ENFERMEDAD INT
	DECLARE @CT_DIAS_INCAPACIDAD INT
	DECLARE @CT_DIAS_FATALES INT 
	DECLARE @CT_TOTAL_PERDIDOS INT
	
	DECLARE @CT_VALIDADO NVARCHAR(2)
	DECLARE @CT_ID UNIQUEIDENTIFIER
	DECLARE @CT_OBSERVACION NVARCHAR(500)
	DECLARE @CT_USUARIO NVARCHAR(10)
	DECLARE @CT_FECHASUBE NVARCHAR(8)
	DECLARE @CT_HORASUBE NVARCHAR(8)
	DECLARE @CT_CERTUSUARIO NVARCHAR(10)
	DECLARE @CT_CERTFECHA NVARCHAR(8)
	DECLARE @CT_CERTHORA NVARCHAR(8)

	
	DECLARE @DSP_ID_DISPUTA INT
	DECLARE @DSP_ID_DOC INT
	DECLARE @DSP_ID UNIQUEIDENTIFIER
	DECLARE @DSP_USUARIO NVARCHAR(10)
	DECLARE @DSP_HORA NVARCHAR(8)
	DECLARE @DSP_OBSERVACION NVARCHAR(1000)
	DECLARE @DSP_CERTUSUARIO NVARCHAR(10)
	DECLARE @DSP_CERTFECHA NVARCHAR(8)
	DECLARE @DSP_CERTHORA NVARCHAR(8)
	DECLARE @DSP_ESTADO	NVARCHAR(2)
	DECLARE @DSP_REVALUSUARIO NVARCHAR(10)
	DECLARE @DSP_REVALFECHA	NVARCHAR(8)
	DECLARE @DSP_REVALHORA	NVARCHAR(8)
	DECLARE @DSP_OBSERVACION_REVAL	NVARCHAR(1000)
	DECLARE @DSP_VALIDADO NVARCHAR(2)
	DECLARE @DSP_PERIODO NVARCHAR(6)
	DECLARE @DSP_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0
	SET @DISPUTA_EMPRESA = ''
	SET @DISPUTA_FECHA = ''

	SELECT
		TOP 1
		@CT_EXISTS = 1,
		@CT_EMPRESA = EMPRESA,
		@CT_PERIODO = PERIODO,

		@CT_FOLIO = FOLIO,
		@CT_NRO_ACCIDENTES = NRO_ACCIDENTES,
		@CT_DIAS_ACCIDENTES = DIAS_ACCIDENTES,
		@CT_DIAS_ENFERMEDAD = DIAS_ENFERMEDAD,
		@CT_NRO_ENFERMEDAD = NRO_ENFERMEDAD,
		@CT_DIAS_INCAPACIDAD = DIAS_INCAPACIDAD,
		@CT_DIAS_FATALES = DIAS_FATALES,
		@CT_TOTAL_PERDIDOS = TOTAL_PERDIDOS,

		@CT_VALIDADO = VALIDADO,
		@CT_ID = ID,
		@CT_OBSERVACION = OBSERVACION,
		@CT_USUARIO = USUARIO,
		@CT_FECHASUBE = FECHASUBE,
		@CT_HORASUBE = HORASUBE,
		@CT_CERTUSUARIO = CERTUSUARIO,
		@CT_CERTFECHA = CERTFECHA,
		@CT_CERTHORA = CERTHORA
	FROM CERT_TASAS
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO

	IF(@CT_EXISTS = 1)
		BEGIN
			INSERT INTO CERT_TASAS_LOG
						(
							PERIODO,
							EMPRESA,
							FOLIO,
							NRO_ACCIDENTES,
							DIAS_ACCIDENTES,
							DIAS_ENFERMEDAD,
							NRO_ENFERMEDAD,
							DIAS_INCAPACIDAD,
							DIAS_FATALES,
							TOTAL_PERDIDOS,
							VALIDADO,
							ID,
							OBSERVACION,
							USUARIO,
							FECHASUBE,
							HORASUBE,
							CERTUSUARIO,
							CERTFECHA,
							CERTHORA,
							USUARIODEL,
							FECHADEL,
							HORADEL
						)
			VALUES
						(
							@CT_PERIODO,
							@CT_EMPRESA,
							@CT_FOLIO,
							@CT_NRO_ACCIDENTES,
							@CT_DIAS_ACCIDENTES,
							@CT_DIAS_ENFERMEDAD,
							@CT_NRO_ENFERMEDAD,
							@CT_DIAS_INCAPACIDAD,
							@CT_DIAS_FATALES,
							@CT_TOTAL_PERDIDOS,
							@CT_VALIDADO, 
							@CT_ID,
							@CT_OBSERVACION,
							@CT_USUARIO,
							@CT_FECHASUBE,
							@CT_HORASUBE,
							@CT_CERTUSUARIO,
							@CT_CERTFECHA,
							@CT_CERTHORA, 
							@USUARIO,
							@CURR_FECHA,
							@CURR_TIEMPOFULL
						)

			/*--------------------------*/

			
			SELECT
				TOP 1
				@DISPUTA_EXISTE = 1,
				@DSP_ID_DISPUTA = ID_DISPUTA,
				@DISPUTA_EMPRESA = EMPRESA,
				@DSP_ID_DOC = ID_DOC,
				@DSP_ID = ID,
				@DSP_USUARIO = USUARIO,
				@DISPUTA_FECHA = FECHA,
				@DSP_HORA = HORA,
				@DSP_OBSERVACION = OBSERVACION,
				@DSP_CERTUSUARIO = CERTUSUARIO,
				@DSP_CERTFECHA = CERTFECHA,
				@DSP_CERTHORA = CERTHORA,
				@DSP_ESTADO = ESTADO,
				@DSP_REVALUSUARIO = REVALUSUARIO,
				@DSP_REVALFECHA = REVALFECHA,
				@DSP_REVALHORA = REVALHORA,
				@DSP_OBSERVACION_REVAL = OBSERVACION_REVAL,
				@DSP_VALIDADO = VALIDADO,
				@DSP_PERIODO = PERIODO,
				@DSP_ID_CERTIFICADO = ID_CERTIFICADO
			FROM DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'

			IF(@DISPUTA_EXISTE = 1)
				BEGIN
					INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
							(
								ID_DISPUTA,
								EMPRESA,
								ID_DOC,
								ID,
								USUARIO,
								FECHA,
								HORA,
								OBSERVACION,
								CERTUSUARIO,
								CERTFECHA,
								CERTHORA,
								ESTADO,
								REVALUSUARIO,
								REVALFECHA,
								REVALHORA,
								OBSERVACION_REVAL,
								VALIDADO,
								PERIODO,
								ID_CERTIFICADO,
								USRMOD,
								FECHAMOD,
								HORAMOD,
								ACCION
							)
					VALUES (
								@DSP_ID_DISPUTA,
								@DISPUTA_EMPRESA,
								@DSP_ID_DOC,
								@DSP_ID,
								@DSP_USUARIO,
								@DISPUTA_FECHA,
								@DSP_HORA,
								@DSP_OBSERVACION,
								@DSP_CERTUSUARIO,
								@DSP_CERTFECHA,
								@DSP_CERTHORA,
								@DSP_ESTADO,
								@DSP_REVALUSUARIO,
								@DSP_REVALFECHA,
								@DSP_REVALHORA,
								@DSP_OBSERVACION_REVAL,
								@DSP_VALIDADO,
								@DSP_PERIODO,
								@DSP_ID_CERTIFICADO,
								@USUARIO,
								@CURR_FECHA,
								@CURR_TIEMPOFULL,
								'ELIMINADO'
							)

					DELETE DOCS_DISPUTA_CLABORAL WHERE ID_DISPUTA = @DISPUTA_ID AND ESTADO = 'NO'
				END

			DELETE FROM CERT_TASAS WHERE PERIODO = @PERIODO AND EMPRESA = @IDEMPRESA

		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_TASAS_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_TASAS_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_TASAS_INSERT_CONTROLLABORAL_CTTA]
(
  @PERIODO				NVARCHAR(6)
 ,@IDEMPRESA			NVARCHAR(10)
 ,@FOLIO				BIGINT
 ,@NRO_ACCIDENTES		INT
 ,@DIAS_ACCIDENTES		INT
 ,@DIAS_ENFERMEDAD		INT
 ,@NRO_ENFERMEDAD		INT
 ,@DIAS_INCAPACIDAD		INT
 ,@DIAS_FATALES			INT
 ,@TOTAL_PERDIDOS		INT
 ,@RET_CODE				INT OUTPUT
) AS
BEGIN
	
	SET @RET_CODE = -1

	IF(EXISTS(
			SELECT
				PERIODO
			FROM CERT_TASAS
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 1  /*ERROR LOGICO; YA EXISTE*/
			RETURN
		END
	INSERT INTO CERT_TASAS
		(
			PERIODO,
			EMPRESA,
			FOLIO,
			NRO_ACCIDENTES,
			DIAS_ACCIDENTES,
			DIAS_ENFERMEDAD,
			NRO_ENFERMEDAD,
			DIAS_INCAPACIDAD,
			DIAS_FATALES,
			TOTAL_PERDIDOS
		)
	VALUES
		(
			@PERIODO,
			@IDEMPRESA,
			@FOLIO,
			@NRO_ACCIDENTES,
			@DIAS_ACCIDENTES,
			@DIAS_ENFERMEDAD,
			@NRO_ENFERMEDAD,
			@DIAS_INCAPACIDAD,
			@DIAS_FATALES,
			@TOTAL_PERDIDOS
		)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_TASAS_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_TASAS_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_TASAS_SELECT_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(11)
) AS
BEGIN
	DECLARE @ID_DOC INT = 96
	SELECT
		SS.PERIODO,
		SS.FOLIO,
		SS.VALIDADO,
		SS.EMPRESA,
		SS.ID,
		SS.UNIQUE_ID,
		SS.DOC_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		) AS DISPUTA_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ESTADO
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), ''
		) AS DISPUTA_ESTADO,
		IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		), 1 , 0) AS DISPUTA_EXISTE		
	FROM
	(
		SELECT
			PERIODO,
			FOLIO,
			VALIDADO,
			EMPRESA,
			ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS UNIQUE_ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS DOC_ID
		FROM CERT_TASAS
		WHERE
			EMPRESA = @IDEMPRESA
		ORDER BY PERIODO DESC
		OFFSET 0 ROWS
	) SS	
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_TASAS_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_TASAS_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_TASAS_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		VALIDADO,
		(CASE WHEN OBSERVACION IS NULL THEN STUFF(
													(
													  SELECT
															';' + TR.TIPO_RECHAZO
													  FROM DOCS_CLABORAL_EMP_RECHAZO MR
													  INNER JOIN DOCS_TIPO_RECHAZO TR
														ON MR.ID_TIPO_RECHAZO = TR.ID_TIPO_RECHAZO
													  WHERE ID = CERT_TASAS.ID FOR XML PATH ('')
													 ), 1, 1, '')
		 ELSE OBSERVACION END) AS OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
					(
						SELECT
							TOP 1
							D.NOMBRE
						FROM DOCS D
						WHERE D.ID_DOC = @ID_DOC
					),''
				) AS NOM_DOC
	FROM CERT_TASAS
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_TASAS_SELECT_ONE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_TASAS_SELECT_ONE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_TASAS_SELECT_ONE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		CERTUSUARIO,
		CERTFECHA,
		CERTHORA,
		VALIDADO
	FROM CERT_TASAS
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_TASAS_SELECT_ONE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_TASAS_SELECT_ONE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_TASAS_SELECT_ONE_V3_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		 PERIODO,
		 EMPRESA,
		 FOLIO,
		 NRO_ACCIDENTES,
		 DIAS_ACCIDENTES,
		 DIAS_ENFERMEDAD,
		 NRO_ENFERMEDAD,
		 DIAS_INCAPACIDAD,
		 DIAS_FATALES,
		 TOTAL_PERDIDOS,
		 ID,
		 VALIDADO,
		 OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = C.EMPRESA AND
					DD.PERIODO = C.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = C.ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		 ) AS DISPUTA_ID,
		 IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = C.EMPRESA AND
					DD.PERIODO = C.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = C.ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		 ), 1 , 0) AS DISPUTA_EXISTE,
		 COALESCE(
			(
				SELECT
					TOP 1
					ARCHIVO
				FROM ARCHIVOS A
				WHERE A.ID = C.ID
			), NULL
		 ) AS ADJUNTO_CONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					TIPOCONTENIDO
				FROM ARCHIVOS A
				WHERE A.ID = C.ID
			), NULL
		 ) AS ADJUNTO_TIPOCONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					NOMBRE
				FROM ARCHIVOS A
				WHERE A.ID = C.ID
			), NULL
		 ) AS ADJUNTO_NOMBRE	
	FROM CERT_TASAS C
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_TASAS_UPDATE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_TASAS_UPDATE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_TASAS_UPDATE_CONTROLLABORAL_CTTA]
(
  @PERIODO				NVARCHAR(6)
 ,@IDEMPRESA			NVARCHAR(10)
 ,@FOLIO				BIGINT
 ,@NRO_ACCIDENTES		INT
 ,@DIAS_ACCIDENTES		INT
 ,@DIAS_ENFERMEDAD		INT
 ,@NRO_ENFERMEDAD		INT
 ,@DIAS_INCAPACIDAD		INT
 ,@DIAS_FATALES			INT
 ,@TOTAL_PERDIDOS		INT
 ,@RET_CODE				INT OUTPUT
) AS
BEGIN

	SET @RET_CODE = -1
	
	IF(NOT EXISTS(
			SELECT
				PERIODO
			FROM CERT_TASAS
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 2  /*ERROR LOGICO; NO EXISTE*/
			RETURN
		END

		UPDATE CERT_TASAS
		SET
			FOLIO = @FOLIO,
			NRO_ACCIDENTES = @NRO_ACCIDENTES,
			DIAS_ACCIDENTES = @DIAS_ACCIDENTES,
			DIAS_ENFERMEDAD = @DIAS_ENFERMEDAD,
			NRO_ENFERMEDAD = @NRO_ENFERMEDAD,
			DIAS_INCAPACIDAD = @DIAS_INCAPACIDAD,
			DIAS_FATALES = @DIAS_FATALES,
			TOTAL_PERDIDOS = @TOTAL_PERDIDOS
		WHERE
			EMPRESA = @IDEMPRESA AND
			PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_TASAS_UPDATE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_TASAS_UPDATE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_TASAS_UPDATE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@PERIODO			NVARCHAR(6)
 ,@ID				UNIQUEIDENTIFIER
 ,@USUARIO			NVARCHAR(10)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @DDC_ID_DISPUTA INT
	DECLARE @DDC_ID_DOC INT
	DECLARE @DDC_ID UNIQUEIDENTIFIER
	DECLARE @DDC_USUARIO NVARCHAR(10)
	DECLARE @DDC_HORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION NVARCHAR(1000)
	DECLARE @DDC_CERTUSUARIO NVARCHAR(10)
	DECLARE @DDC_CERTFECHA NVARCHAR(8)
	DECLARE @DDC_CERTHORA NVARCHAR(8)
	DECLARE @DDC_ESTADO NVARCHAR(2)
	DECLARE @DDC_REVALUSUARIO NVARCHAR(10)
	DECLARE @DDC_REVALFECHA NVARCHAR(8)
	DECLARE @DDC_REVALHORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION_REVAL NVARCHAR(1000)
	DECLARE @DDC_VALIDADO NVARCHAR(2)
	DECLARE @DDC_PERIODO NVARCHAR(6)
	DECLARE @DDC_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0

	SELECT
		TOP 1
		@DISPUTA_EXISTE = 1,
		@DDC_ID_DISPUTA = ID_DISPUTA,
		@DISPUTA_EMPRESA = EMPRESA,
		@DDC_ID_DOC = ID_DOC,
		@DDC_ID = ID,
		@DDC_USUARIO = USUARIO,
		@DISPUTA_FECHA = FECHA,
		@DDC_HORA = HORA,
		@DDC_OBSERVACION = OBSERVACION,
		@DDC_CERTUSUARIO = CERTUSUARIO,
		@DDC_CERTFECHA = CERTFECHA,
		@DDC_CERTHORA = CERTHORA,
		@DDC_ESTADO = ESTADO,
		@DDC_REVALUSUARIO = REVALUSUARIO,
		@DDC_REVALFECHA = REVALFECHA,
		@DDC_REVALHORA = REVALHORA,
		@DDC_OBSERVACION_REVAL = OBSERVACION_REVAL,
		@DDC_VALIDADO = VALIDADO,
		@DDC_PERIODO = PERIODO,
		@DDC_ID_CERTIFICADO = ID_CERTIFICADO
	FROM DOCS_DISPUTA_CLABORAL
	WHERE
		ID_DISPUTA = @DISPUTA_ID AND
		ESTADO = 'NO'

	IF(@DISPUTA_EXISTE = 1)
		BEGIN
			INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
				(
					ID_DISPUTA,
					EMPRESA,
					ID_DOC,
					ID,
					USUARIO,
					FECHA,
					HORA,
					OBSERVACION,
					CERTUSUARIO,
					CERTFECHA,
					CERTHORA,
					ESTADO,
					REVALUSUARIO,
					REVALFECHA,
					REVALHORA,
					OBSERVACION_REVAL,
					VALIDADO,
					PERIODO,
					ID_CERTIFICADO,
					USRMOD,
					FECHAMOD,
					HORAMOD,
					ACCION
				)
			VALUES 
				(
					@DDC_ID_DISPUTA,
					@DISPUTA_EMPRESA,
					@DDC_ID_DOC,
					@DDC_ID,
					@DDC_USUARIO,
					@DISPUTA_FECHA,
					@DDC_HORA,
					@DDC_OBSERVACION,
					@DDC_CERTUSUARIO,
					@DDC_CERTFECHA,
					@DDC_CERTHORA,
					@DDC_ESTADO,
					@DDC_REVALUSUARIO,
					@DDC_REVALFECHA,
					@DDC_REVALHORA,
					@DDC_OBSERVACION_REVAL,
					@DDC_VALIDADO,
					@DDC_PERIODO,
					@DDC_ID_CERTIFICADO,
					@USUARIO,
					@CURR_FECHA,
					@CURR_TIEMPOFULL,
					'ELIMINADO'
				)

			DELETE DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'
		END

		DELETE FROM ARCHIVOS
		WHERE ID = @ID

		UPDATE CERT_TASAS
		SET
			ID = NULL,
			VALIDADO = 'NO'
		WHERE
			EMPRESA = @IDEMPRESA AND
			PERIODO = @PERIODO

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CERT_TASAS_UPDATE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CERT_TASAS_UPDATE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CERT_TASAS_UPDATE_V3_CONTROLLABORAL_CTTA]
(
  @ID			UNIQUEIDENTIFIER = NULL
 ,@USUARIO		NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	IF(@ID IS NOT NULL)
		BEGIN
			UPDATE CERT_TASAS
			SET
				ID = @ID,
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHASUBE = @CURR_FECHA,
				HORASUBE = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO)
		END
	ELSE
		BEGIN
			UPDATE CERT_TASAS
			SET
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHASUBE = @CURR_FECHA,
				HORASUBE = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO)
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CHARLAS_SELECT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CHARLAS_SELECT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CHARLAS_SELECT_CTTA]
(
 @IDCHARLA	INT	= NULL
)
AS
BEGIN

	SELECT	IDCHARLA,	CHARLA,		DESCRIP 
	FROM	CHARLAS
	WHERE	IDCHARLA	=	ISNULL(@IDCHARLA,IDCHARLA)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CHARLAS_SELECT_DIVISION_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CHARLAS_SELECT_DIVISION_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CHARLAS_SELECT_DIVISION_CTTA]
(
 @DIVCOD	NVARCHAR(4)	= NULL
)
AS
BEGIN

	SELECT DISTINCT  CH.IDCHARLA,	CH.CHARLA,	CHD.DIVISION 
	FROM  dbo.CHARLAS AS CH,  dbo.CHARLAS_DIVISION AS CHD 
	WHERE CH.IDCHARLA = CHD.IDCHARLA
	AND CHD.DIVISION = @DIVCOD

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CHECK_SELECT_COMBO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CHECK_SELECT_COMBO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CHECK_SELECT_COMBO]  
(
@ID_TIPO NVARCHAR(3) = NULL
) AS                
BEGIN            
  SELECT ID_CHECK,NOMBRE FROM [CHECK] WHERE ID_TIPO = @ID_TIPO
END 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_INFORME_CHECKLIST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_INFORME_CHECKLIST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_INFORME_CHECKLIST_CTTA]
(
@PATENTE  NVARCHAR(50) = NULL,
@TIPOVEHICULO INT = NULL,
@ID_CHECK INT = NULL,
@FECHAINI  NVARCHAR(8)       = NULL,
@FECHAFIN  NVARCHAR(8)       = NULL,
@EMPRESA  NVARCHAR(10)       = NULL
) AS
BEGIN

DECLARE @strSQL as nvarchar(MAX)

 SET @strSQL='SELECT 
  COUNT(CHKNGH.ID_CHECKINGHEAD) OVER() TOTALREGISTROS,
  ROW_NUMBER() OVER(ORDER BY CHKNGH.FECCREA DESC) ROWNUMBER,	
  CHKNGH.ID_CHECKINGHEAD
 ,CHKNGH.ID_TIPO
 ,TP.NOMBRE AS TIPO
 ,CHKNGH.ID_CHECKING
 ,CHKNGH.ID_CHECK
 ,CHK.NOMBRE AS CHECKLIST
 ,CHKNGH.IDENTIFICADOR
 ,TR.TIPO AS TIPOVEHICULO
 ,TY.DSCTIPOV AS NOMBRE_IDENTIFICADOR
 ,TR.EMPRESA
 ,CHKNGH.FECHA
 ,ISNULL(CHKNGH.CORRECTO,''NO'') AS CORRECTO
 ,ISNULL(CHKNGH.VALIDADO,'''') AS VALIDADO
 ,(SELECT TOP 1 ID_ARCHIVO FROM CHECK_CARGA_DOCS WHERE ID_TIPO=CHKNGH.ID_TIPO AND ID_CHECK=CHKNGH.ID_CHECK
 AND ID_CHECKING=CHKNGH.ID_CHECKING AND ID_CHECKINGHEAD=CHKNGH.ID_CHECKINGHEAD ORDER BY ID DESC) AS ID_ARCHIVO
 ,(SELECT MIN(HORA) + ''  - '' + MAX(HORA) FROM [CHECK_CHECKINGDETAIL] WHERE ID_TIPO = CHKNGH.ID_TIPO AND ID_CHECK = CHKNGH.ID_CHECK AND ID_CHECKING = CHKNGH.ID_CHECKING AND ID_CHECKINGHEAD = CHKNGH.ID_CHECKINGHEAD ) AS HORA 
  ,(SELECT TOP 1 NOMBRE FROM CHECK_CARGA_DOCS WHERE ID_TIPO=CHKNGH.ID_TIPO AND ID_CHECK=CHKNGH.ID_CHECK
 AND ID_CHECKING=CHKNGH.ID_CHECKING AND ID_CHECKINGHEAD=CHKNGH.ID_CHECKINGHEAD ORDER BY ID DESC) AS NOMBREARCHIVO
 FROM CHECK_CHECKINGINGHEAD CHKNGH INNER JOIN [CHECK] CHK 	ON CHKNGH.ID_TIPO = CHK.ID_TIPO AND CHKNGH.ID_CHECK = CHK.ID_CHECK  
                                   INNER JOIN CHECK_TIPO TP ON CHK.ID_TIPO = TP.ID_TIPO 	
								   INNER JOIN TRANSPORT TR  ON CHKNGH.IDENTIFICADOR = TR.PATENTE 	
								   INNER JOIN TYPETRANS TY  ON TR.TIPO = TY.IDTIPO 	
WHERE CHKNGH.ID_TIPO=''VEH''' 


		            IF @PATENTE <> '' OR @PATENTE <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND IDENTIFICADOR = ''' + @PATENTE + ''''
		            END		
		            IF @TIPOVEHICULO <> '' OR @TIPOVEHICULO <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND TR.TIPO = ''' + CONVERT(NVARCHAR(10),@TIPOVEHICULO) + ''''
		            END							
		            IF @ID_CHECK <> '' OR @ID_CHECK <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND CHKNGH.ID_CHECK = ''' + CONVERT(NVARCHAR(10),@ID_CHECK)  + ''''
		            END	

					Set @strSQL = @strSQL + N' AND (FECHA  BETWEEN ''' + @FECHAINI + ''' AND ''' +  @FECHAFIN + ''')'	
					Set @strSQL = @strSQL + N' AND TR.EMPRESA = ''' + @EMPRESA + ''''	

					exec sp_executesql @strSQL  
					PRINT @strSQL

 
END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_PORPERIODOS_INFORME_CHECKLIST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_PORPERIODOS_INFORME_CHECKLIST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_PORPERIODOS_INFORME_CHECKLIST_CTTA]
(
@ID_CHECK INT = NULL,
@FECHAINI  NVARCHAR(7)       = NULL,
@FECHAFIN  NVARCHAR(7)       = NULL,
@EMPRESA  NVARCHAR(10)       = NULL
) AS
BEGIN
DECLARE @FECHA_INI DATE
DECLARE @FECHA_FIN DATE
--SET @FECHA_INI = @FECHAINI + '01'
--SET @FECHA_FIN = @FECHAFIN + '01'
SET @FECHA_INI = SUBSTRING(@FECHAINI,1,4) +SUBSTRING(@FECHAINI,6,2)+ '01'
SET @FECHA_FIN = SUBSTRING(@FECHAFIN,1,4) +SUBSTRING(@FECHAFIN,6,2) + '01'

IF @ID_CHECK = 1--TFS
BEGIN

 ;WITH vw AS  
 (  
SELECT PERIODO, COUNT(*) AS TOTAL
FROM   
      ( 
      SELECT SUBSTRING(CHKNGH.FECHA,0,7)+'NO' AS PERIODO 
      FROM CHECK_CHECKINGINGHEAD CHKNGH 
      INNER JOIN [CHECK] CHK ON CHKNGH.ID_TIPO = CHK.ID_TIPO AND CHKNGH.ID_CHECK = CHK.ID_CHECK 
      INNER JOIN CHECK_TIPO TP ON CHK.ID_TIPO = TP.ID_TIPO 
      INNER JOIN WORKERS W ON CHKNGH.USRCREA = W.RUT 
      INNER JOIN TRANSPORT TR ON CHKNGH.IDENTIFICADOR = TR.PATENTE 
      INNER JOIN TYPETRANS TY ON TR.TIPO = TY.IDTIPO 
      WHERE (SELECT [dbo].[ValidaCheckListItems](CHKNGH.ID_TIPO,CHKNGH.ID_CHECK,CHKNGH.ID_CHECKING,CHKNGH.ID_CHECKINGHEAD))='NO' AND TR.EMPRESA <>''
	  AND (FECHA  BETWEEN @FECHAINI AND @FECHAFIN) 
	  AND TR.EMPRESA = @EMPRESA
	  AND W.EMPRESA = @EMPRESA
	  AND CHKNGH.ID_CHECK = @ID_CHECK
	  UNION ALL 
      SELECT SUBSTRING(CHKNGH.FECHA,0,7)+'SI' AS PERIODO 
      FROM CHECK_CHECKINGINGHEAD CHKNGH 
      INNER JOIN [CHECK] CHK ON CHKNGH.ID_TIPO = CHK.ID_TIPO AND CHKNGH.ID_CHECK = CHK.ID_CHECK 
      INNER JOIN CHECK_TIPO TP ON CHK.ID_TIPO = TP.ID_TIPO 
      INNER JOIN WORKERS W ON CHKNGH.USRCREA = W.RUT 
      INNER JOIN TRANSPORT TR ON CHKNGH.IDENTIFICADOR = TR.PATENTE 
      INNER JOIN TYPETRANS TY ON TR.TIPO = TY.IDTIPO 
      WHERE (SELECT [dbo].[ValidaCheckListItems](CHKNGH.ID_TIPO,CHKNGH.ID_CHECK,CHKNGH.ID_CHECKING,CHKNGH.ID_CHECKINGHEAD))='SI' AND TR.EMPRESA <>''
	  AND (FECHA  BETWEEN @FECHAINI AND @FECHAFIN) 
	  AND TR.EMPRESA = @EMPRESA
	  AND W.EMPRESA = @EMPRESA
	  AND CHKNGH.ID_CHECK = @ID_CHECK     
	  ) AS SourceTable GROUP BY PERIODO
)   
SELECT 
X.[Period] AS PERIODO
,ISNULL(t.TOTAL,0) AS TOTAL
FROM 
    (
	SELECT [Period] = SUBSTRING(CONVERT(VARCHAR(8),DATEADD(Day,Number,@FECHA_INI),112),0,7)+'NO'  
    FROM  master..spt_values  
    WHERE Type='P' 
    AND DATEADD(day,Number,@FECHA_INI) <= @FECHA_FIN
	UNION 
	SELECT [Period] = SUBSTRING(CONVERT(VARCHAR(8),DATEADD(Day,Number,@FECHA_INI),112),0,7)+'SI'  
    FROM  master..spt_values  
    WHERE Type='P' 
    AND DATEADD(day,Number,@FECHA_INI) <= @FECHA_FIN
	) AS X LEFT JOIN  vw t ON X.[Period] = t.PERIODO

END
ELSE
BEGIN

 ;WITH vw AS  
 (  
SELECT PERIODO, COUNT(*) AS TOTAL
FROM   
      ( 
         SELECT SUBSTRING(CHKNGH.FECHA,0,7)+'NO' AS PERIODO 
         FROM TYPETRANS AS TY  
         INNER JOIN TRANSPORT AS TR ON TY.IDTIPO = TR.TIPO  
         RIGHT OUTER JOIN CHECK_CHECKINGINGHEAD AS CHKNGH  
         INNER JOIN [CHECK] AS CHK ON CHKNGH.ID_TIPO = CHK.ID_TIPO AND CHKNGH.ID_CHECK = CHK.ID_CHECK  
         INNER JOIN CHECK_TIPO AS TP ON CHK.ID_TIPO = TP.ID_TIPO ON TR.PATENTE = CHKNGH.IDENTIFICADOR  
         LEFT OUTER JOIN ENTERPRISE AS E ON TR.EMPRESA = E.IDEMPRESA  
         WHERE (SELECT [dbo].[ValidaCheckListItems](CHKNGH.ID_TIPO,CHKNGH.ID_CHECK,CHKNGH.ID_CHECKING,CHKNGH.ID_CHECKINGHEAD))='NO' AND TR.EMPRESA <>'' 
     	 AND (FECHA  BETWEEN @FECHAINI AND @FECHAFIN) 
		 AND TR.EMPRESA = @EMPRESA
	     AND CHKNGH.ID_CHECK = @ID_CHECK 
         UNION ALL 
         SELECT SUBSTRING(CHKNGH.FECHA,0,7)+'SI' AS PERIODO 
         FROM TYPETRANS AS TY  
         INNER JOIN TRANSPORT AS TR ON TY.IDTIPO = TR.TIPO  
         RIGHT OUTER JOIN CHECK_CHECKINGINGHEAD AS CHKNGH  
         INNER JOIN [CHECK] AS CHK ON CHKNGH.ID_TIPO = CHK.ID_TIPO AND CHKNGH.ID_CHECK = CHK.ID_CHECK  
         INNER JOIN CHECK_TIPO AS TP ON CHK.ID_TIPO = TP.ID_TIPO ON TR.PATENTE = CHKNGH.IDENTIFICADOR  
         LEFT OUTER JOIN ENTERPRISE AS E ON TR.EMPRESA = E.IDEMPRESA  
         WHERE (SELECT [dbo].[ValidaCheckListItems](CHKNGH.ID_TIPO,CHKNGH.ID_CHECK,CHKNGH.ID_CHECKING,CHKNGH.ID_CHECKINGHEAD))='SI' AND TR.EMPRESA <>''
	     AND (FECHA  BETWEEN @FECHAINI AND @FECHAFIN)  
	     AND TR.EMPRESA = @EMPRESA
	     AND CHKNGH.ID_CHECK = @ID_CHECK   
	  ) AS SourceTable GROUP BY PERIODO
)   
SELECT 
X.[Period] AS PERIODO
,ISNULL(t.TOTAL,0) AS TOTAL
FROM 
    (
	SELECT [Period] = SUBSTRING(CONVERT(VARCHAR(8),DATEADD(Day,Number,@FECHA_INI),112),0,7)+'NO'  
    FROM  master..spt_values  
    WHERE Type='P' 
    AND DATEADD(day,Number,@FECHA_INI) <= @FECHA_FIN
	UNION 
	SELECT [Period] = SUBSTRING(CONVERT(VARCHAR(8),DATEADD(Day,Number,@FECHA_INI),112),0,7)+'SI'  
    FROM  master..spt_values  
    WHERE Type='P' 
    AND DATEADD(day,Number,@FECHA_INI) <= @FECHA_FIN
	) AS X LEFT JOIN  vw t ON X.[Period] = t.PERIODO

END

 
END	



IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_TESTFATIGASOMNOLENCIA_INFORME_CHECKLIST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_TESTFATIGASOMNOLENCIA_INFORME_CHECKLIST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_TESTFATIGASOMNOLENCIA_INFORME_CHECKLIST_CTTA]
(
@RUT  NVARCHAR(50) = NULL,
@ID_CHECK INT = NULL,
@FECHAINI  NVARCHAR(8)       = NULL,
@FECHAFIN  NVARCHAR(8)       = NULL,
@EMPRESA  NVARCHAR(10)       = NULL,
@ESTADO  NVARCHAR(2)       = NULL
) AS
BEGIN

DECLARE @strSQL as nvarchar(MAX)

 SET @strSQL='SELECT 
    COUNT(CHKNGH.ID_CHECKINGHEAD) OVER() TOTALREGISTROS
  ,ROW_NUMBER() OVER(ORDER BY CHKNGH.FECCREA DESC) ROWNUMBER
  ,CHKNGH.ID_CHECKINGHEAD
  ,CHKNGH.ID_TIPO
  ,TP.NOMBRE AS TIPO
  ,CHKNGH.ID_CHECKING,CHKNGH.ID_CHECK
  ,CHK.NOMBRE AS CHECKLIST
  ,CHKNGH.IDENTIFICADOR
  ,W.RUT
  ,TR.TIPO AS TIPOVEHICULO
  ,TY.DSCTIPOV AS NOMBRE_IDENTIFICADOR
  ,ISNULL(W.NOMBRES+'', ''+ W.APELLIDOS,'''') AS NOMBRE_APELLIDOS
  ,ISNULL(W.EMPRESA,'''') AS EMPRESA
  ,TR.MARCA,CHKNGH.FECHA
  ,ISNULL(CHKNGH.CORRECTO,''NO'') AS CORRECTO
  ,ISNULL(CHKNGH.VALIDADO,'''') AS VALIDADO 
  ,(SELECT MIN(HORA) + ''  - '' + MAX(HORA) FROM [CHECK_CHECKINGDETAIL] WHERE ID_TIPO = CHKNGH.ID_TIPO AND ID_CHECK = CHKNGH.ID_CHECK AND ID_CHECKING = CHKNGH.ID_CHECKING AND ID_CHECKINGHEAD = CHKNGH.ID_CHECKINGHEAD ) AS HORA 
	FROM CHECK_CHECKINGINGHEAD CHKNGH INNER JOIN [CHECK] CHK 
	ON CHKNGH.ID_TIPO = CHK.ID_TIPO AND CHKNGH.ID_CHECK = CHK.ID_CHECK 
	INNER JOIN CHECK_TIPO TP ON CHK.ID_TIPO = TP.ID_TIPO 
	INNER JOIN WORKERS W  ON CHKNGH.USRCREA = W.RUT 
    INNER JOIN TRANSPORT TR  ON CHKNGH.IDENTIFICADOR = TR.PATENTE 
	INNER JOIN TYPETRANS TY  ON TR.TIPO = TY.IDTIPO 
	WHERE CHKNGH.ID_TIPO=''TFS''' 

		            IF @ESTADO <> '' OR @ESTADO <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (SELECT [dbo].[ValidaCheckListItems](CHKNGH.ID_TIPO,CHKNGH.ID_CHECK,CHKNGH.ID_CHECKING,CHKNGH.ID_CHECKINGHEAD))= ''' + @ESTADO + ''''
		            END	
		            IF @RUT <> '' OR @RUT <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND CHKNGH.USRCREA = ''' + @RUT + ''''
		            END				          				
		            IF @ID_CHECK <> '' OR @ID_CHECK <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND CHKNGH.ID_CHECK = ''' + CONVERT(NVARCHAR(10),@ID_CHECK)  + ''''
		            END	

					Set @strSQL = @strSQL + N' AND (FECHA  BETWEEN ''' + @FECHAINI + ''' AND ''' +  @FECHAFIN + ''')'	
					Set @strSQL = @strSQL + N' AND CHKNGH.EMPRESA = ''' + @EMPRESA + ''''	

					exec sp_executesql @strSQL  
					PRINT @strSQL




 
END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_TESTVEHICULO_INFORME_CHECKLIST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_TESTVEHICULO_INFORME_CHECKLIST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_TESTVEHICULO_INFORME_CHECKLIST_CTTA]
(
@PATENTE  NVARCHAR(50) = NULL,
@TIPOVEHICULO INT = NULL,
@ID_CHECK INT = NULL,
@FECHAINI  NVARCHAR(8)       = NULL,
@FECHAFIN  NVARCHAR(8)       = NULL,
@EMPRESA  NVARCHAR(10)       = NULL,
@ESTADO  NVARCHAR(2)       = NULL
) AS
BEGIN

DECLARE @strSQL as nvarchar(MAX)

 SET @strSQL='SELECT  
    COUNT(CHKNGH.ID_CHECKINGHEAD) OVER() TOTALREGISTROS
  ,ROW_NUMBER() OVER(ORDER BY CHKNGH.FECCREA) ROWNUMBER
  ,CHKNGH.ID_CHECKINGHEAD
  , TR.EMPRESA
  , E.ACRONIMO
  , CHKNGH.USRCREA
  , W.NOMBRES
  , W.APELLIDOS
  , CHKNGH.ID_TIPO
  , TP.NOMBRE AS TIPO
  , CHKNGH.ID_CHECKING
  , CHKNGH.ID_CHECK
  , CHK.NOMBRE AS CHECKLIST
  , CHKNGH.IDENTIFICADOR
  , TR.TIPO AS TIPOVEHICULO
  , TY.DSCTIPOV AS NOMBRE_IDENTIFICADOR
  , CHKNGH.FECHA
  , CASE WHEN (SELECT COUNT(*) FROM CHECK_DETAIL CHKDET1 
       INNER JOIN [CHECK_CHECKINGDETAIL] CHKNGDET1 ON CHKDET1.ID_TIPO = CHKNGDET1.ID_TIPO AND CHKDET1.ID_CHECK = CHKNGDET1.ID_CHECK AND CHKDET1.ID_CHECKDET = CHKNGDET1.ID_CHECKINGDET 
       WHERE CHKNGDET1.ID_TIPO = CHKNGH.ID_TIPO AND CHKNGDET1.ID_CHECK = CHKNGH.ID_CHECK AND CHKNGDET1.ID_CHECKING = CHKNGH.ID_CHECKING AND CHKNGDET1.ID_CHECKINGHEAD = CHKNGH.ID_CHECKINGHEAD)
	   =(SELECT COUNT(*) AS CANT FROM CHECK_DETAIL CHKDET2 
       INNER JOIN [CHECK_CHECKINGDETAIL] CHKNGDET2 ON CHKDET2.ID_TIPO = CHKNGDET2.ID_TIPO AND CHKDET2.ID_CHECK = CHKNGDET2.ID_CHECK AND CHKDET2.ID_CHECKDET = CHKNGDET2.ID_CHECKINGDET 
       WHERE CHKNGDET2.ID_TIPO = CHKNGH.ID_TIPO AND CHKNGDET2.ID_CHECK = CHKNGH.ID_CHECK AND CHKNGDET2.ID_CHECKING = CHKNGH.ID_CHECKING AND CHKNGDET2.ID_CHECKINGHEAD = CHKNGH.ID_CHECKINGHEAD AND CHKNGDET2.VALOR=''SI'') THEN ''SI'' ELSE ''NO'' END AS CORRECTO
  , ISNULL(CHKNGH.VALIDADO, ''N'') AS VALIDADO
   ,(SELECT MIN(HORA) + ''  - '' + MAX(HORA) FROM [CHECK_CHECKINGDETAIL] WHERE ID_TIPO = CHKNGH.ID_TIPO AND ID_CHECK = CHKNGH.ID_CHECK AND ID_CHECKING = CHKNGH.ID_CHECKING AND ID_CHECKINGHEAD = CHKNGH.ID_CHECKINGHEAD ) AS HORA 
	FROM TYPETRANS AS TY INNER JOIN 
	TRANSPORT AS TR ON TY.IDTIPO = TR.TIPO RIGHT OUTER JOIN 
	CHECK_CHECKINGINGHEAD AS CHKNGH INNER JOIN 
	[CHECK] AS CHK ON CHKNGH.ID_TIPO = CHK.ID_TIPO AND CHKNGH.ID_CHECK = CHK.ID_CHECK INNER JOIN 
	CHECK_TIPO AS TP ON CHK.ID_TIPO = TP.ID_TIPO ON TR.PATENTE = CHKNGH.IDENTIFICADOR LEFT OUTER JOIN 
	WORKERS AS W ON CHKNGH.USRCREA = W.RUT LEFT OUTER JOIN 
	ENTERPRISE AS E ON TR.EMPRESA = E.IDEMPRESA 
	WHERE CHKNGH.ID_TIPO=''TDV''' 

		            IF @ESTADO <> '' OR @ESTADO <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (SELECT [dbo].[ValidaCheckListItems](CHKNGH.ID_TIPO,CHKNGH.ID_CHECK,CHKNGH.ID_CHECKING,CHKNGH.ID_CHECKINGHEAD))= ''' + @ESTADO + ''''
		            END	
		            IF @PATENTE <> '' OR @PATENTE <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND IDENTIFICADOR = ''' + @PATENTE + ''''
		            END		
		            IF @TIPOVEHICULO <> '' OR @TIPOVEHICULO <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND TR.TIPO = ''' + CONVERT(NVARCHAR(10),@TIPOVEHICULO) + ''''
		            END							
		            IF @ID_CHECK <> '' OR @ID_CHECK <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND CHKNGH.ID_CHECK = ''' + CONVERT(NVARCHAR(10),@ID_CHECK)  + ''''
		            END	

					Set @strSQL = @strSQL + N' AND (FECHA  BETWEEN ''' + @FECHAINI + ''' AND ''' +  @FECHAFIN + ''')'	
					Set @strSQL = @strSQL + N' AND TR.EMPRESA = ''' + @EMPRESA + ''''	

					exec sp_executesql @strSQL  
					PRINT @strSQL




 
END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_TESTVEHICULO_INFORME_HEAD_CHECKLIST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_TESTVEHICULO_INFORME_HEAD_CHECKLIST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_TESTVEHICULO_INFORME_HEAD_CHECKLIST_CTTA]
(
@ID_TIPO  NVARCHAR(3) = NULL,
@ID_CHECK INT = NULL,
@ID_CHECKING INT = NULL,
@ID_CHECKINGHEAD INT = NULL
) AS
BEGIN


SELECT CHKNGH.ID_CHECKINGHEAD, CHKNGH.ID_TIPO, TP.NOMBRE AS TIPO, CHKNGH.ID_CHECK, CHK.NOMBRE AS CHECKLIST, CHKNGH.ID_CHECKING, 
		CHKNGH.IDENTIFICADOR,TR.TIPO AS TIPOVEHICULO,TY.DSCTIPOV AS NOMBRE_IDENTIFICADOR,TR.EMPRESA, 
		CHKNGH.FECHA, CHKNGH.IDENTIFICADOR, ISNULL(CHKNGH.CORRECTO,'NO') AS CORRECTO, ISNULL(CHKNGH.VALIDADO, '') AS VALIDADO, CHKNGH.USRCREA, W.NOMBRES, W.APELLIDOS 
		FROM CHECK_CHECKINGINGHEAD CHKNGH 
		INNER JOIN [CHECK] CHK ON CHKNGH.ID_TIPO = CHK.ID_TIPO AND CHKNGH.ID_CHECK = CHK.ID_CHECK 
		INNER JOIN CHECK_TIPO TP ON CHK.ID_TIPO = TP.ID_TIPO  
		INNER JOIN TRANSPORT TR  ON CHKNGH.IDENTIFICADOR = TR.PATENTE 
 		INNER JOIN TYPETRANS TY  ON TR.TIPO = TY.IDTIPO LEFT OUTER JOIN WORKERS AS W ON CHKNGH.USRCREA = W.RUT 
		WHERE CHKNGH.ID_TIPO = @ID_TIPO AND CHKNGH.ID_CHECK = @ID_CHECK AND CHKNGH.ID_CHECKING = @ID_CHECKING AND CHKNGH.ID_CHECKINGHEAD = @ID_CHECKINGHEAD
END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_TESTVEHICULODETALLE_INFORME_CHECKLIST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_TESTVEHICULODETALLE_INFORME_CHECKLIST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLIST_TESTVEHICULODETALLE_INFORME_CHECKLIST_CTTA]
(
@ID_TIPO NVARCHAR(3) = NULL,
@ID_CHECK INT = NULL,
@ID_CHECKING INT = NULL,
@ID_CHECKINGHEAD INT = NULL
) AS
BEGIN

DECLARE @strSQL as nvarchar(MAX)

 SELECT 
 ROW_NUMBER() OVER(ORDER BY CHKDET.ID_CHECKDET DESC) ROWNUMBER
,DESCRIPCION
,VALOR
,(SELECT HORA FROM CHECK_CHECKINGDETAIL WHERE ID_TIPO = CHKNGDET.ID_TIPO AND ID_CHECK = CHKNGDET.ID_CHECK AND ID_CHECKING = CHKNGDET.ID_CHECKING AND ID_CHECKINGHEAD = CHKNGDET.ID_CHECKINGHEAD AND ID_CHECKINGDET = CHKDET.ID_CHECKDET) AS HORA
,(SELECT OBSERVACION FROM CHECK_CHECKINGDETAIL WHERE ID_TIPO = CHKNGDET.ID_TIPO AND ID_CHECK = CHKNGDET.ID_CHECK AND ID_CHECKING = CHKNGDET.ID_CHECKING AND ID_CHECKINGHEAD = CHKNGDET.ID_CHECKINGHEAD AND ID_CHECKINGDET = CHKDET.ID_CHECKDET) AS OBSERVACION
 FROM CHECK_DETAIL CHKDET 
		  INNER JOIN [CHECK_CHECKINGDETAIL] CHKNGDET ON CHKDET.ID_TIPO = CHKNGDET.ID_TIPO AND CHKDET.ID_CHECK = CHKNGDET.ID_CHECK AND CHKDET.ID_CHECKDET = CHKNGDET.ID_CHECKINGDET 
		  WHERE CHKNGDET.ID_TIPO = @ID_TIPO 
		  AND CHKNGDET.ID_CHECK = @ID_CHECK
		  AND CHKNGDET.ID_CHECKING = @ID_CHECKING
		  AND CHKNGDET.ID_CHECKINGHEAD = @ID_CHECKINGHEAD

END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLISTDETALLE_INFORME_CHECKLIST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLISTDETALLE_INFORME_CHECKLIST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CHECKINGINGHEAD_SELECT_INFORME_CHECKLISTDETALLE_INFORME_CHECKLIST_CTTA]
(
@ID_CHECK INT = NULL,
@ID_CHECKING INT = NULL,
@ID_CHECKINGHEAD INT = NULL
) AS
BEGIN


SELECT 
 ROW_NUMBER() OVER(ORDER BY CHKDET.ID_CHECKDET DESC) ROWNUMBER
,DESCRIPCION
,VALOR
,HORA
,OBSERVACION
FROM CHECK_DETAIL CHKDET 
		  INNER JOIN [CHECK_CHECKINGDETAIL] CHKNGDET ON CHKDET.ID_TIPO = CHKNGDET.ID_TIPO AND CHKDET.ID_CHECK = CHKNGDET.ID_CHECK AND CHKDET.ID_CHECKDET = CHKNGDET.ID_CHECKINGDET 
		  WHERE CHKNGDET.ID_TIPO = 'VEH'
		  AND CHKNGDET.ID_CHECK = @ID_CHECK
		  AND CHKNGDET.ID_CHECKING = @ID_CHECKING
		  AND CHKNGDET.ID_CHECKINGHEAD = @ID_CHECKINGHEAD
 
END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CIUDAD_SELECT_BYREGION]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CIUDAD_SELECT_BYREGION]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CIUDAD_SELECT_BYREGION]
(@REGION NVARCHAR(5) = NULL)
AS
BEGIN
   SELECT DISTINCT CIUDAD  FROM CIUDAD  WHERE (REGION = @REGION)  ORDER BY CIUDAD
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CLABORAL_ULTIMO_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CLABORAL_ULTIMO_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CLABORAL_ULTIMO_SELECT_CONTROLLABORAL_CTTA]
(
  @ID_DOC    INT
 ,@IDEMPRESA NVARCHAR(10)
)
AS
BEGIN
	SELECT
		SS.EMPRESA,
		SS.PERIODO,
		SS.DIVISION,
		SS.OST,
		SS.CERTUSUARIO,
		SS.CERTFECHA,
		SS.CERTHORA,
		SS.VALIDADO,
		SS.ID
	FROM [dbo].[FN_CLABORAL_ULTIMO](@ID_DOC, @IDEMPRESA) SS
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_USUARIO_CAMBIOCLAVE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_CAMBIOCLAVE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_CAMBIOCLAVE_CTTA]
(
 @ID				NVARCHAR(10)
,@IDEMPRESA			NVARCHAR(10)
,@NUEVACLAVE		NVARCHAR(20)
)
AS
BEGIN

	UPDATE COLAB_USUARIO 
	SET  CLAVE = SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('SHA1', convert(nvarchar(50),@NUEVACLAVE))), 3, 32)
		,Fecha_Modificacion = DBO.HOY(GETDATE())
		,FechaVence = convert(nvarchar(8), dateadd(m, 3, getdate()), 112)  
	WHERE IDEMPRESA = @IDEMPRESA 
	AND RUT = @ID

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_USUARIO_CAMBIOCLAVE_HISTORICO_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_CAMBIOCLAVE_HISTORICO_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_CAMBIOCLAVE_HISTORICO_CTTA]
(
 @ID				NVARCHAR(10)
,@IDEMPRESA			NVARCHAR(11)
,@NUEVACLAVE		NVARCHAR(20)
,@IP				NVARCHAR(50)
)
AS
BEGIN

	INSERT INTO COLAB_USUARIO_HST (
									 RUT		
									,EMPRESA	
									,CLAVE	
									,FECHAMOD	
									,HORAMOD	
									,IP			) 
	VALUES						(
									 @ID	
									,@IDEMPRESA
									,SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('SHA1', convert(nvarchar(50),@NUEVACLAVE))), 3, 32)
									,dbo.hoy(getdate())
									,dbo.ahora(getdate())
									,@IP
								)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_USUARIO_CHANGEPASSWORD_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_CHANGEPASSWORD_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_CHANGEPASSWORD_CTTA]
(
 @IDEMPRESA		NVARCHAR(11) = NULL
,@RUT			NVARCHAR(10) = NULL
,@CLAVEACTUAL   NVARCHAR(10) = NULL
,@NUEVACLAVE	NVARCHAR(10) = NULL
)
AS
BEGIN

	DECLARE @IP NVARCHAR(15)

	IF EXISTS(
			    SELECT * FROM COLAB_USUARIO 
			    WHERE IDEMPRESA=@IDEMPRESA
			    AND RUT = @RUT
			    AND (CLAVE = @CLAVEACTUAL OR CLAVE = SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('SHA1', convert(nvarchar(50),@CLAVEACTUAL))), 3, 32))
			 )
	BEGIN
		IF NOT EXISTS(
						SELECT * FROM ( 
										SELECT TOP 5 CLAVE FROM COLAB_USUARIO_HST 
										WHERE RUT = @RUT 
										AND EMPRESA = @IDEMPRESA 
										ORDER BY FECHAMOD DESC
									  ) AS PASSWORDS 
						WHERE PASSWORDS.CLAVE = SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('SHA1', convert(nvarchar(50),@NUEVACLAVE))), 3, 32) 
					 )
		BEGIN
			UPDATE COLAB_USUARIO 
				SET CLAVE = SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('SHA1', convert(nvarchar(50),@NUEVACLAVE))), 3, 32)
				   ,Fecha_Modificacion = getdate()
				   ,FechaVence = convert(nvarchar(8), dateadd(m, 3, getdate()), 112)  
			WHERE IDEMPRESA = @IDEMPRESA AND RUT = @RUT

			SET @IP = (SELECT client_net_address FROM sys.dm_exec_connections WHERE session_id = @@SPID)

			INSERT INTO COLAB_USUARIO_HST 
				(
					 RUT		
					,EMPRESA	
					,CLAVE	
					,FECHAMOD	
					,HORAMOD	
					,IP
				) 
			VALUES 
				(
					 @RUT	
					,@IDEMPRESA
					,SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('SHA1', convert(nvarchar(50),@NUEVACLAVE))), 3, 32)
					,dbo.hoy(getdate())
					,dbo.ahora(getdate())
					,@IP
				)
		END
	END
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_USUARIO_DELETE_EMPUSUARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_DELETE_EMPUSUARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_DELETE_EMPUSUARIOS_CTTA]
(
@RUT NVARCHAR(10),
@IDEMPRESA NVARCHAR(10),
@USUARIO NVARCHAR(10)
)
AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DELETE FROM COLAB_USUARIO WHERE (Rut = @RUT)
	IF(NOT EXISTS(
		SELECT ACCION
		FROM COLAB_USUARIOSHIST
		WHERE
			EMPRESA = @IDEMPRESA AND
			USUARIO = @RUT AND
			FECHA = @CURR_FECHA AND
			HORA = @CURR_TIEMPOFULL
	))
		BEGIN
			INSERT INTO COLAB_USUARIOSHIST (EMPRESA, USUARIO, FECHA, HORA, QUIEN, ACCION)
			VALUES (@IDEMPRESA, @RUT, @CURR_FECHA, @CURR_TIEMPOFULL, @USUARIO, 'DEL')
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_USUARIO_EMAILS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_EMAILS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_EMAILS_CTTA]
(
 @IDEMPRESA		NVARCHAR(10)
)
AS
BEGIN
	
	SELECT STUFF((
       SELECT ';'+Correo_Electronico
       FROM			COLAB_USUARIO
	   WHERE		IDEMPRESA		=	@IDEMPRESA
	   AND			ACTIVO			=   'SI'
	   AND			ENVIOALERTAS	=	'SI' 
       FOR XML PATH('')
),1,1, '') AS Correo_Electronico

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_USUARIO_ENTERPRISE_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_ENTERPRISE_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_ENTERPRISE_SELECT]
(
@IDEMPRESA NVARCHAR(10)
)
AS
BEGIN

	SELECT DISTINCT
		CU.Rut,
		CU.Correo_Electronico,
		W.NOMBRES,
		W.APELLIDOS,
		CU.TipoUsuario,
		CU.Activo
	FROM COLAB_USUARIO CU
	INNER JOIN WORKERS AS W
		ON CU.RUT = W.RUT 
	WHERE IDEMPRESA = @IDEMPRESA
	ORDER BY CU.Rut DESC
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_USUARIO_INSERT_NEWENTERPRISECTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_INSERT_NEWENTERPRISECTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_INSERT_NEWENTERPRISECTTA]
(
 @IDEMPRESA NVARCHAR(10)
,@RUT NVARCHAR(10)
,@CLAVE NVARCHAR(50)
,@CORREO_ELECTRONICO NVARCHAR(100)
)
AS
BEGIN

	INSERT INTO [COLAB_USUARIO]
	(
		 IdEmpresa			,Rut		,Clave			,Correo_Electronico		
		,TipoUsuario		,Activo		,EnvioAlertas	,Fecha_Creacion
		,Fecha_Modificacion
	)
	VALUES
	(
		 @IDEMPRESA			,@RUT		,@CLAVE			,@CORREO_ELECTRONICO
		,'ADMIN'			,'SI'			,'SI'			,DBO.HOY(GETDATE())
		,DBO.HOY(GETDATE())
	)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_USUARIO_SELECT_USUARIO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_SELECT_USUARIO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_SELECT_USUARIO]  
( @IdEmpresa           NVARCHAR(10) = NULL  
, @Rut                 nvarchar(10) = NULL) AS  
BEGIN  
  
	SELECT CU.IdEmpresa          ,CU.Rut           ,CU.Clave        ,CU.Correo_Electronico  
		  ,CU.TipoUsuario        ,CU.Activo        ,CU.EnvioAlertas ,CU.Fecha_Creacion      
          ,CU.Fecha_Modificacion ,CU.Ultimo_Acceso ,CU.FechaVence   ,W.NOMBRES
		  ,W.APELLIDOS			 ,E.IDEMPRESA	   ,E.ACRONIMO		,E.NOMBRE
	FROM COLAB_USUARIO CU
	INNER JOIN WORKERS W ON CU.Rut = W.RUT
	INNER JOIN ENTERPRISE E ON CU.IdEmpresa = E.IDEMPRESA
	WHERE CU.IdEmpresa = @IdEmpresa
  AND CU.Rut = @Rut 
  
END 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_USUARIO_SELECT_V2_USUARIO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_SELECT_V2_USUARIO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_SELECT_V2_USUARIO]  
(
  @IdEmpresa   NVARCHAR(10) = NULL  
 ,@Rut         NVARCHAR(10) = NULL
) AS  
BEGIN  
  
	SELECT
		COALESCE(CU.IdEmpresa, W.EMPRESA) AS IdEmpresa,
		COALESCE(CU.Rut, W.RUT) AS Rut,
		CU.Clave,
		CU.Correo_Electronico,
		CU.TipoUsuario,
		CU.Activo,
		CU.EnvioAlertas,
		CU.Fecha_Creacion,
		CU.Fecha_Modificacion,
		CU.Ultimo_Acceso,
		CU.FechaVence,
		W.NOMBRES,
		W.APELLIDOS,
		COALESCE(E.IDEMPRESA, W.EMPRESA) AS IDEMPRESA,
		COALESCE(E.ACRONIMO, (SELECT TOP 1 E2.ACRONIMO FROM ENTERPRISE E2 WHERE E2.IDEMPRESA = @IdEmpresa)) AS ACRONIMO,
		COALESCE(E.NOMBRE, (SELECT TOP 1 E3.NOMBRE FROM ENTERPRISE E3 WHERE E3.IDEMPRESA = @IdEmpresa)) AS NOMBRE
	FROM  WORKERS W
	LEFT JOIN COLAB_USUARIO CU
		ON W.RUT = CU.Rut
	LEFT JOIN ENTERPRISE E
		ON CU.IdEmpresa = E.IDEMPRESA
	WHERE
		W.EMPRESA = @IdEmpresa AND
		W.RUT = @Rut 
  
END 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_USUARIO_UPSERT_EMPUSUARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_UPSERT_EMPUSUARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_UPSERT_EMPUSUARIOS_CTTA]
(
  @RUT				NVARCHAR(10)
 ,@NOMBRES			NVARCHAR(50)
 ,@APELLIDOS		NVARCHAR(50)
 ,@UCREADOR			NVARCHAR(10)
 ,@IDEMPRESA		NVARCHAR(10)
 ,@TIPOUSUARIO		NVARCHAR(10)
 ,@CLAVE			NVARCHAR(50)
 ,@ACTIVO			NVARCHAR(2)
 ,@ENVIO_ALERTAS	NVARCHAR(2)
 ,@EMAIL			NVARCHAR(100)
)
AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	IF(NOT EXISTS(
		(
			SELECT *
			FROM WORKERS
			WHERE RUT = @RUT
		)
	))
		BEGIN
			INSERT INTO WORKERS (RUT, NOMBRES, APELLIDOS, AUTOR, FECHAMOD, HORAMOD)
			VALUES (@RUT, @NOMBRES, @APELLIDOS, 'NO', @CURR_FECHA, @CURR_TIEMPOFULL)
		END

	IF(NOT EXISTS(
		SELECT *
		FROM COLAB_USUARIO
		WHERE
			(Rut = @RUT) AND
			(IdEmpresa = @IDEMPRESA)
	))
		BEGIN
			INSERT INTO COLAB_USUARIO
				(
					IdEmpresa, Rut, Clave, Correo_Electronico, TipoUsuario,
					Activo, EnvioAlertas, Fecha_Creacion, Fecha_Modificacion)
			VALUES
				(
					@IDEMPRESA, @RUT, @CLAVE, @EMAIL, @TIPOUSUARIO,
					@ACTIVO, @ENVIO_ALERTAS, getdate(), getdate())

			IF(NOT EXISTS(
				SELECT
					ACCION
				FROM COLAB_USUARIOSHIST
				WHERE
					EMPRESA = @IDEMPRESA AND
					USUARIO = @RUT AND
					FECHA = @CURR_FECHA AND
					HORA = @CURR_TIEMPOFULL
			))
				BEGIN
					INSERT INTO COLAB_USUARIOSHIST
					(
						EMPRESA, USUARIO, FECHA, HORA, QUIEN, ACCION, PERFIL)
					VALUES
					(
						@IDEMPRESA, @RUT, @CURR_FECHA, @CURR_TIEMPOFULL,
						@UCREADOR, 'INS', @TIPOUSUARIO)
				END
		END
	ELSE
		BEGIN
			UPDATE COLAB_USUARIO
			SET
				Clave = @CLAVE,
				Correo_Electronico = @EMAIL,
				TipoUsuario = @TIPOUSUARIO,
				Activo = @ACTIVO,
				EnvioAlertas = @ENVIO_ALERTAS,
				Fecha_Modificacion = getdate()
			WHERE
				(Rut = @RUT) AND
				(IdEmpresa = @IDEMPRESA)

			IF(NOT EXISTS(
				SELECT
					ACCION
				FROM COLAB_USUARIOSHIST
				WHERE
					EMPRESA = @IDEMPRESA AND
					USUARIO = @RUT AND
					FECHA = @CURR_FECHA AND
					HORA = @CURR_TIEMPOFULL
			))
				BEGIN
					INSERT INTO COLAB_USUARIOSHIST
						(
							EMPRESA, USUARIO, FECHA, HORA, QUIEN, ACCION, PERFIL)
					VALUES	
						(
							@IDEMPRESA, @RUT, @CURR_FECHA, @CURR_TIEMPOFULL,
							@UCREADOR, 'UPD', @TIPOUSUARIO)
				END
		END

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_USUARIO_VALIDAR_LOGIN]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_VALIDAR_LOGIN]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_VALIDAR_LOGIN]
( @IdEmpresa           nvarchar(10) = NULL
, @Rut                 nvarchar(10) = NULL
, @Clave               nvarchar(50) = NULL) AS
BEGIN

   SELECT CU.IdEmpresa as IDEMPRESA , CU.Rut , CU.TipoUsuario , CU.Activo , CU.EnvioAlertas , CU.Correo_Electronico
		, ISNULL(W.NOMBRES,'') AS NOMBRES, ISNULL(W.APELLIDOS,'') AS APELLIDOS
		, ISNULL(E.ACRONIMO,'') AS ACRONIMO , ISNULL(E.NOMBRE,'') AS NOMBRE
 		, DATEDIFF(d,getdate(), ISNULL(FechaVence, dbo.hoy(getdate()))) as EXPIRA 
   FROM COLAB_USUARIO AS CU
   LEFT JOIN WORKERS AS W ON W.RUT = CU.Rut
   LEFT JOIN ENTERPRISE AS E ON E.IDEMPRESA = CU.IdEmpresa
   WHERE (CU.Rut = @Rut) 
   AND (CU.IdEmpresa = @IdEmpresa) 
   AND ( (CU.Clave = @Clave) 
		OR  ( CU.Clave = SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('SHA1', convert(nvarchar(50),@Clave))), 3, 32)))

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_USUARIO_VALIDARCLAVE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_VALIDARCLAVE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_VALIDARCLAVE_CTTA]
(
 @ID			NVARCHAR(10)
,@IDEMPRESA		NVARCHAR(11)
,@CLAVE			NVARCHAR(20)
)
AS
BEGIN

		IF EXISTS(SELECT		Rut		,IdEmpresa
					FROM		COLAB_USUARIO 
					WHERE		IDEMPRESA		=		@IDEMPRESA
					AND			RUT				=		@ID
					AND		   (CLAVE = @CLAVE OR CLAVE = SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('SHA1', convert(nvarchar(50),@CLAVE))), 3, 32)))
			BEGIN
				SELECT 1 AS RESPUESTA
			END
		ELSE
			BEGIN
				SELECT 0 AS RESPUESTA
			END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_USUARIO_VALIDARCLAVEHISTORICO_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_VALIDARCLAVEHISTORICO_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_USUARIO_VALIDARCLAVEHISTORICO_CTTA]
(
 @ID		NVARCHAR(10) = NULL
,@IDEMPRESA	NVARCHAR(10) = NULL
,@CLAVE		NVARCHAR(50) = NULL
)
AS
BEGIN

	IF NOT EXISTS(
			SELECT TOP 5 CLAVE 
			FROM	COLAB_USUARIO_HST 
			WHERE	RUT					= @ID
			AND		EMPRESA				= @IDEMPRESA
			AND		CLAVE  = SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('SHA1', convert(nvarchar(50),@CLAVE))), 3, 32)
			ORDER BY FECHAMOD DESC
			)
		BEGIN
				SELECT 1 AS RESPUESTA
			END
		ELSE
			BEGIN
				SELECT 0 AS RESPUESTA
			END

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_WC_MENU_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_WC_MENU_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_WC_MENU_SELECT] AS
BEGIN

	SELECT CODMENU , DESCMENU
    FROM COLAB_WC_MENU
	ORDER BY COLAB_WC_MENU.CODMENU

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_WC_SUBMENU_SELECT_EMPUSUARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_WC_SUBMENU_SELECT_EMPUSUARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_WC_SUBMENU_SELECT_EMPUSUARIOS_CTTA]
(
  @RUT NVARCHAR(10)
)
AS
BEGIN
	SELECT
		DISTINCT
		DescMenu,
		Descripcion,
		Activo
	FROM dbo.A000_PANELECUSER
	WHERE
		(Permiso = 'TODOS') OR
		(Rut = @RUT)
	ORDER BY 1, 2
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COLAB_WC_SUBMENU_SELECT_MENU]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COLAB_WC_SUBMENU_SELECT_MENU]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COLAB_WC_SUBMENU_SELECT_MENU]
( @TIPOUSUARIO	nvarchar(10) = NULL) AS
BEGIN
	
	IF(@TIPOUSUARIO = 'ADMIN')
		BEGIN
			SELECT CODMENU,DESCMENU,CODSUBMENU,LINK,LinkV4,ICONO,DESCRIPCION,ACTIVO,PERMISO,TIPOUSUARIO FROM A000_ECPANEL 
			WHERE  (PERMISO IN ('ADMIN','IDENT','TODOS') AND Activo = 'SI') 
			AND  (TIPOUSUARIO= @TIPOUSUARIO) 
			AND LinkV4 IS NOT NULL
			ORDER BY 7
		END
	ELSE
		BEGIN
			SELECT CODMENU,DESCMENU,CODSUBMENU,LINK,LinkV4,ICONO,DESCRIPCION,ACTIVO,PERMISO,TIPOUSUARIO FROM A000_ECPANEL 
			WHERE  (PERMISO IN ('IDENT','TODOS') AND Activo = 'SI') 
			AND  (TIPOUSUARIO= @TIPOUSUARIO) 
			AND LinkV4 IS NOT NULL
			ORDER BY 7
		END 

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COMBOOST_CASCADA_SELECT_ACREDITACIONVEHICULARCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COMBOOST_CASCADA_SELECT_ACREDITACIONVEHICULARCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COMBOOST_CASCADA_SELECT_ACREDITACIONVEHICULARCTTA]
(
@EMPRESA  NVARCHAR(10) = NULL,
@DIVISION  NVARCHAR(10) = NULL
) AS
BEGIN
DECLARE @strSQL as nvarchar(MAX)
SET @strSQL='SELECT DISTINCT O.NROOST, OD.DIVISION 	FROM OST O 	INNER JOIN OSTDIVLOCAL OD ON O.NROOST = OD.OST 	
                                                    INNER JOIN OSTARBOL OA ON O.NROOST = OA.OST 	
WHERE O.FECTERM > getdate()	
AND OA.FTERMINO > getdate()'
IF @DIVISION='Ambas'
BEGIN
Set @strSQL = @strSQL + N' AND OD.DIVISION IN (''LB'',''LT'')'
END
ELSE
BEGIN
Set @strSQL = @strSQL + N' AND OD.DIVISION IN (''' + @DIVISION + ''')'
END
Set @strSQL = @strSQL + N' AND OA.EMPRESA = ''' + @EMPRESA + ''''
exec sp_executesql @strSQL  
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COMBOPATENTE_CASCADA_SELECT_ACREDITACIONVEHICULARCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COMBOPATENTE_CASCADA_SELECT_ACREDITACIONVEHICULARCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COMBOPATENTE_CASCADA_SELECT_ACREDITACIONVEHICULARCTTA]
(
@EMPRESA  NVARCHAR(10) = NULL,
@DIVISION  NVARCHAR(10) = NULL
) AS
BEGIN
	--SELECT T.PATENTE,
	--	CONVERT(NVARCHAR(9),T.TIPO) AS TIPO,
	--	T.MARCA,
	--	T.MODELO,
	--	[dbo].[fn_cert_veh2] (T.PATENTE , @EMPRESA , T.TIPO , @DIVISION , dbo.hoy(getdate())) AS CERTV
	--INTO #TEMP
	--FROM TRANSPORT AS T
	--INNER JOIN TRANSPORT_DIVISION AS TD ON TD.PATENTE = T.PATENTE
	--WHERE T.EMPRESA = @EMPRESA
	--AND TD.DIVISION = @DIVISION

	--SELECT * FROM #TEMP WHERE CERTV = 1

	CREATE TABLE #PATENTES (
	 PATENTE	VARCHAR(8)		  COLLATE DATABASE_DEFAULT NOT NULL,
	 MARCA		NVARCHAR(50)	  COLLATE DATABASE_DEFAULT NOT NULL,
	 MODELO		NVARCHAR(50) 	  COLLATE DATABASE_DEFAULT NOT NULL
	);

	DECLARE @PATENTE NVARCHAR(8)  
	DECLARE @TIPO INT
	DECLARE @MARCA NVARCHAR(50)
	DECLARE @MODELO NVARCHAR(50)

	DECLARE PATENTE_CURSOR CURSOR  
	FOR
		SELECT
			PATENTE,
			CONVERT(NVARCHAR(9),TIPO) AS TIPO,
			MARCA,
			MODELO
		FROM TRANSPORT
		WHERE
			EMPRESA = @EMPRESA
 
	OPEN PATENTE_CURSOR 
 
	FETCH NEXT FROM PATENTE_CURSOR INTO @PATENTE,@TIPO, @MARCA , @MODELO
 
	WHILE @@FETCH_STATUS = 0 
		BEGIN
		
		DECLARE @ID_DOC INT
		DECLARE @SUBEDOC NVARCHAR(2) 
		DECLARE @Continuar BIT
		SET @Continuar = 1
		

		DECLARE DOCS_CURSOR CURSOR  
		FOR
			SELECT
				D.ID_DOC,
				ISNULL(D.SUBEDOC,'NO') AS SUBEDOC 
			FROM DOCS D
			WHERE
				D.ID_TIPO_PROPIETARIO = 3 AND
				D.ACTIVO = 'SI' AND
				D.ID_DOC_OPCION = 1 AND
				D.ID_DOC IN
						(
						  SELECT
							DISTINCT ID_DOC
						  FROM DOCS_TIPOPASE
						  WHERE
							TIPOPASE = CAST(@TIPO AS NVARCHAR) AND
							(DIVISION IN(@DIVISION,'AA'))
						) AND
				D.ID_DOC <> '103'
 
		OPEN DOCS_CURSOR 
 
		FETCH NEXT FROM DOCS_CURSOR INTO @ID_DOC,@SUBEDOC
 
		WHILE @@FETCH_STATUS = 0 
			BEGIN
				
				DECLARE @DOCVALIDADO NVARCHAR(2) = NULL
				SELECT
					TOP 1
					@DOCVALIDADO = ISNULL(VALIDADO,'NO') 
				FROM DOCS_TRANSPORT DT 
				INNER JOIN DOCS D
					ON DT.ID_DOC = D.ID_DOC 
				WHERE
					(PATENTE = @PATENTE) AND 
					((DIVISION IN(@DIVISION)) OR (ISNULL(DIVISION, 'AA') = 'AA')) AND 
					(DT.ID_DOC = @ID_DOC) AND 
					(EMPRESA = (CASE WHEN D.COMUN=1 THEN EMPRESA ELSE @EMPRESA END))
				ORDER BY ID_DOCS_VEH DESC

				IF @DOCVALIDADO IS NOT NULL
					BEGIN		
						IF @DOCVALIDADO <> 'SI'
							BEGIN
								SET @Continuar = 0
								BREAK
							END
					END
				ELSE
					BEGIN
						IF @SUBEDOC <> 'NO' 
						BEGIN
							SET @Continuar = 0
							BREAK
						END
					END

				DECLARE @FECHAVALIDADA INT = 0
				EXEC [V4MVC_DOCS_FEC_VALIDAFECHAS_VEHICULOS] @ID_DOC,@PATENTE,@EMPRESA,@DIVISION,@FECHAVALIDADA OUTPUT

				IF @FECHAVALIDADA = 0
					BEGIN
						SET @Continuar = 0
						BREAK
					END
					
				FETCH NEXT FROM DOCS_CURSOR INTO @ID_DOC,@SUBEDOC 
 
			END

		CLOSE DOCS_CURSOR  
		DEALLOCATE DOCS_CURSOR 

			--CURSOR 2

		IF @Continuar = 1
			BEGIN
				INSERT INTO #PATENTES
				SELECT @PATENTE,@MARCA,@MODELO
			END

		FETCH NEXT FROM PATENTE_CURSOR INTO @PATENTE,@TIPO ,@MARCA,@MODELO
 
	END

	CLOSE PATENTE_CURSOR  
	DEALLOCATE PATENTE_CURSOR 

	SELECT * FROM #PATENTES

ENDIF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COMPROBANTE_SUELDO_DELETE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_DELETE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_DELETE_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@PERIODO			NVARCHAR(6)
 ,@USUARIO			NVARCHAR(10)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @CS_EXISTS BIT = 0
	DECLARE @CS_EMPRESA NVARCHAR(10)
	DECLARE @CS_PERIODO NVARCHAR(6)
	
	DECLARE @CS_VALIDADO NVARCHAR(2)
	DECLARE @CS_ID UNIQUEIDENTIFIER
	DECLARE @CS_OBSERVACION NVARCHAR(500)
	DECLARE @CS_USUARIO NVARCHAR(20)
	DECLARE @CS_FECHAMOD NVARCHAR(8)
	DECLARE @CS_HORAMOD NVARCHAR(8)
	DECLARE @CS_CERTUSUARIO NVARCHAR(20)
	DECLARE @CS_CERTFECHA NVARCHAR(8)
	DECLARE @CS_CERTHORA NVARCHAR(8)

	
	DECLARE @DSP_ID_DISPUTA INT
	DECLARE @DSP_ID_DOC INT
	DECLARE @DSP_ID UNIQUEIDENTIFIER
	DECLARE @DSP_USUARIO NVARCHAR(10)
	DECLARE @DSP_HORA NVARCHAR(8)
	DECLARE @DSP_OBSERVACION NVARCHAR(1000)
	DECLARE @DSP_CERTUSUARIO NVARCHAR(10)
	DECLARE @DSP_CERTFECHA NVARCHAR(8)
	DECLARE @DSP_CERTHORA NVARCHAR(8)
	DECLARE @DSP_ESTADO	NVARCHAR(2)
	DECLARE @DSP_REVALUSUARIO NVARCHAR(10)
	DECLARE @DSP_REVALFECHA	NVARCHAR(8)
	DECLARE @DSP_REVALHORA	NVARCHAR(8)
	DECLARE @DSP_OBSERVACION_REVAL	NVARCHAR(1000)
	DECLARE @DSP_VALIDADO NVARCHAR(2)
	DECLARE @DSP_PERIODO NVARCHAR(6)
	DECLARE @DSP_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0
	SET @DISPUTA_EMPRESA = ''
	SET @DISPUTA_FECHA = ''

	SELECT
		TOP 1
		@CS_EXISTS = 1,
		@CS_EMPRESA = EMPRESA,
		@CS_PERIODO = PERIODO,

		@CS_VALIDADO = VALIDADO,
		@CS_ID = ID,
		@CS_OBSERVACION = OBSERVACION,
		@CS_USUARIO = USUARIO,
		@CS_FECHAMOD = FECHAMOD,
		@CS_HORAMOD = HORAMOD,
		@CS_CERTUSUARIO = CERTUSUARIO,
		@CS_CERTFECHA = CERTFECHA,
		@CS_CERTHORA = CERTHORA
	FROM COMPROBANTE_SUELDO
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO

	IF(@CS_EXISTS = 1)
		BEGIN
			INSERT INTO COMPROBANTE_SUELDO_LOG
						(
							EMPRESA,
							PERIODO,
							ID,
							USUARIO,
							FECHAMOD,
							HORAMOD,
							VALIDADO,
							OBSERVACION,
							CERTUSUARIO,
							CERTFECHA,
							CERTHORA,
							USUARIODEL,
							FECHADEL,
							HORADEL
						)
			VALUES
						(
							@CS_EMPRESA,
							@CS_PERIODO,
							@CS_ID,
							@CS_USUARIO,
							@CS_FECHAMOD,
							@CS_HORAMOD,
							@CS_VALIDADO,
							@CS_OBSERVACION,
							@CS_CERTUSUARIO,
							@CS_CERTFECHA,
							@CS_CERTHORA,
							@USUARIO,
							@CURR_FECHA,
							@CURR_TIEMPOFULL
						)

			/*--------------------------*/
			
			SELECT
				TOP 1
				@DISPUTA_EXISTE = 1,
				@DSP_ID_DISPUTA = ID_DISPUTA,
				@DISPUTA_EMPRESA = EMPRESA,
				@DSP_ID_DOC = ID_DOC,
				@DSP_ID = ID,
				@DSP_USUARIO = USUARIO,
				@DISPUTA_FECHA = FECHA,
				@DSP_HORA = HORA,
				@DSP_OBSERVACION = OBSERVACION,
				@DSP_CERTUSUARIO = CERTUSUARIO,
				@DSP_CERTFECHA = CERTFECHA,
				@DSP_CERTHORA = CERTHORA,
				@DSP_ESTADO = ESTADO,
				@DSP_REVALUSUARIO = REVALUSUARIO,
				@DSP_REVALFECHA = REVALFECHA,
				@DSP_REVALHORA = REVALHORA,
				@DSP_OBSERVACION_REVAL = OBSERVACION_REVAL,
				@DSP_VALIDADO = VALIDADO,
				@DSP_PERIODO = PERIODO,
				@DSP_ID_CERTIFICADO = ID_CERTIFICADO
			FROM DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'

			IF(@DISPUTA_EXISTE = 1)
				BEGIN
					INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
							(
								ID_DISPUTA,
								EMPRESA,
								ID_DOC,
								ID,
								USUARIO,
								FECHA,
								HORA,
								OBSERVACION,
								CERTUSUARIO,
								CERTFECHA,
								CERTHORA,
								ESTADO,
								REVALUSUARIO,
								REVALFECHA,
								REVALHORA,
								OBSERVACION_REVAL,
								VALIDADO,
								PERIODO,
								ID_CERTIFICADO,
								USRMOD,
								FECHAMOD,
								HORAMOD,
								ACCION
							)
					VALUES (
								@DSP_ID_DISPUTA,
								@DISPUTA_EMPRESA,
								@DSP_ID_DOC,
								@DSP_ID,
								@DSP_USUARIO,
								@DISPUTA_FECHA,
								@DSP_HORA,
								@DSP_OBSERVACION,
								@DSP_CERTUSUARIO,
								@DSP_CERTFECHA,
								@DSP_CERTHORA,
								@DSP_ESTADO,
								@DSP_REVALUSUARIO,
								@DSP_REVALFECHA,
								@DSP_REVALHORA,
								@DSP_OBSERVACION_REVAL,
								@DSP_VALIDADO,
								@DSP_PERIODO,
								@DSP_ID_CERTIFICADO,
								@USUARIO,
								@CURR_FECHA,
								@CURR_TIEMPOFULL,
								'ELIMINADO'
							)

					DELETE DOCS_DISPUTA_CLABORAL WHERE ID_DISPUTA = @DISPUTA_ID AND ESTADO = 'NO'
				END

			DELETE FROM COMPROBANTE_SUELDO WHERE PERIODO = @PERIODO AND EMPRESA = @IDEMPRESA

		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COMPROBANTE_SUELDO_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_INSERT_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN
	
	SET @RET_CODE = -1

	IF(EXISTS(
			SELECT
				PERIODO
			FROM COMPROBANTE_SUELDO
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 1  /*ERROR LOGICO; YA EXISTE*/
			RETURN
		END
	INSERT INTO COMPROBANTE_SUELDO(PERIODO, EMPRESA)
	VALUES (@PERIODO, @IDEMPRESA)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COMPROBANTE_SUELDO_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_SELECT_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(11)
) AS
BEGIN
	DECLARE @ID_DOC INT = 107
	SELECT
		SS.PERIODO,
		SS.VALIDADO,
		SS.EMPRESA,
		SS.ID,
		SS.UNIQUE_ID,
		SS.DOC_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		) AS DISPUTA_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ESTADO
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), ''
		) AS DISPUTA_ESTADO,
		IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		), 1 , 0) AS DISPUTA_EXISTE		
	FROM
	(
		SELECT
			PERIODO,
			VALIDADO,
			EMPRESA,
			ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS UNIQUE_ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS DOC_ID
		FROM COMPROBANTE_SUELDO
		WHERE
			EMPRESA = @IDEMPRESA
		ORDER BY PERIODO DESC
		OFFSET 0 ROWS
	) SS	
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COMPROBANTE_SUELDO_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		VALIDADO,
		(CASE WHEN OBSERVACION IS NULL THEN STUFF(
													(
													  SELECT
															';' + TR.TIPO_RECHAZO
													  FROM DOCS_CLABORAL_EMP_RECHAZO MR
													  INNER JOIN DOCS_TIPO_RECHAZO TR
														ON MR.ID_TIPO_RECHAZO = TR.ID_TIPO_RECHAZO
													  WHERE ID = COMPROBANTE_SUELDO.ID FOR XML PATH ('')
													 ), 1, 1, '')
		 ELSE OBSERVACION END) AS OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
					(
						SELECT
							TOP 1
							D.NOMBRE
						FROM DOCS D
						WHERE D.ID_DOC = @ID_DOC
					),''
				) AS NOM_DOC
	FROM COMPROBANTE_SUELDO
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COMPROBANTE_SUELDO_SELECT_ONE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_SELECT_ONE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_SELECT_ONE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		CERTUSUARIO,
		CERTFECHA,
		CERTHORA,
		VALIDADO
	FROM COMPROBANTE_SUELDO
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COMPROBANTE_SUELDO_SELECT_ONE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_SELECT_ONE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_SELECT_ONE_V3_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		 PERIODO,
		 EMPRESA,
		 ID,
		 VALIDADO,
		 OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = COMPROBANTE_SUELDO.EMPRESA AND
					DD.PERIODO = COMPROBANTE_SUELDO.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = COMPROBANTE_SUELDO.ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		 ) AS DISPUTA_ID,
		 IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = COMPROBANTE_SUELDO.EMPRESA AND
					DD.PERIODO = COMPROBANTE_SUELDO.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = COMPROBANTE_SUELDO.ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		 ), 1 , 0) AS DISPUTA_EXISTE,
		 COALESCE(
			(
				SELECT
					TOP 1
					ARCHIVO
				FROM ARCHIVOS A
				WHERE A.ID = COMPROBANTE_SUELDO.ID
			), NULL
		 ) AS ADJUNTO_CONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					TIPOCONTENIDO
				FROM ARCHIVOS A
				WHERE A.ID = COMPROBANTE_SUELDO.ID
			), NULL
		 ) AS ADJUNTO_TIPOCONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					NOMBRE
				FROM ARCHIVOS A
				WHERE A.ID = COMPROBANTE_SUELDO.ID
			), NULL
		 ) AS ADJUNTO_NOMBRE		 	
	FROM COMPROBANTE_SUELDO
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COMPROBANTE_SUELDO_UPDATE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_UPDATE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_UPDATE_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN
	
	SET @RET_CODE = -1

	IF(NOT EXISTS(
			SELECT
				PERIODO
			FROM COMPROBANTE_SUELDO
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 2  /*ERROR LOGICO; NO EXISTE*/
			RETURN
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COMPROBANTE_SUELDO_UPDATE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_UPDATE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_UPDATE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA			NVARCHAR(10)
 ,@PERIODO				NVARCHAR(6)
 ,@ID					UNIQUEIDENTIFIER
 ,@USUARIO				NVARCHAR(10)
 ,@DISPUTA_ID			INT
 ,@DISPUTA_EXISTE		INT OUTPUT
 ,@DISPUTA_EMPRESA		NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA		NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @DDC_ID_DISPUTA INT
	DECLARE @DDC_ID_DOC INT
	DECLARE @DDC_ID UNIQUEIDENTIFIER
	DECLARE @DDC_USUARIO NVARCHAR(10)
	DECLARE @DDC_HORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION NVARCHAR(1000)
	DECLARE @DDC_CERTUSUARIO NVARCHAR(10)
	DECLARE @DDC_CERTFECHA NVARCHAR(8)
	DECLARE @DDC_CERTHORA NVARCHAR(8)
	DECLARE @DDC_ESTADO NVARCHAR(2)
	DECLARE @DDC_REVALUSUARIO NVARCHAR(10)
	DECLARE @DDC_REVALFECHA NVARCHAR(8)
	DECLARE @DDC_REVALHORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION_REVAL NVARCHAR(1000)
	DECLARE @DDC_VALIDADO NVARCHAR(2)
	DECLARE @DDC_PERIODO NVARCHAR(6)
	DECLARE @DDC_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0

	SELECT
		TOP 1
		@DISPUTA_EXISTE = 1,
		@DDC_ID_DISPUTA = ID_DISPUTA,
		@DISPUTA_EMPRESA = EMPRESA,
		@DDC_ID_DOC = ID_DOC,
		@DDC_ID = ID,
		@DDC_USUARIO = USUARIO,
		@DISPUTA_FECHA = FECHA,
		@DDC_HORA = HORA,
		@DDC_OBSERVACION = OBSERVACION,
		@DDC_CERTUSUARIO = CERTUSUARIO,
		@DDC_CERTFECHA = CERTFECHA,
		@DDC_CERTHORA = CERTHORA,
		@DDC_ESTADO = ESTADO,
		@DDC_REVALUSUARIO = REVALUSUARIO,
		@DDC_REVALFECHA = REVALFECHA,
		@DDC_REVALHORA = REVALHORA,
		@DDC_OBSERVACION_REVAL = OBSERVACION_REVAL,
		@DDC_VALIDADO = VALIDADO,
		@DDC_PERIODO = PERIODO,
		@DDC_ID_CERTIFICADO = ID_CERTIFICADO
	FROM DOCS_DISPUTA_CLABORAL
	WHERE
		ID_DISPUTA = @DISPUTA_ID AND
		ESTADO = 'NO'

	IF(@DISPUTA_EXISTE = 1)
		BEGIN
			INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
				(
					ID_DISPUTA,
					EMPRESA,
					ID_DOC,
					ID,
					USUARIO,
					FECHA,
					HORA,
					OBSERVACION,
					CERTUSUARIO,
					CERTFECHA,
					CERTHORA,
					ESTADO,
					REVALUSUARIO,
					REVALFECHA,
					REVALHORA,
					OBSERVACION_REVAL,
					VALIDADO,
					PERIODO,
					ID_CERTIFICADO,
					USRMOD,
					FECHAMOD,
					HORAMOD,
					ACCION
				)
			VALUES 
				(
					@DDC_ID_DISPUTA,
					@DISPUTA_EMPRESA,
					@DDC_ID_DOC,
					@DDC_ID,
					@DDC_USUARIO,
					@DISPUTA_FECHA,
					@DDC_HORA,
					@DDC_OBSERVACION,
					@DDC_CERTUSUARIO,
					@DDC_CERTFECHA,
					@DDC_CERTHORA,
					@DDC_ESTADO,
					@DDC_REVALUSUARIO,
					@DDC_REVALFECHA,
					@DDC_REVALHORA,
					@DDC_OBSERVACION_REVAL,
					@DDC_VALIDADO,
					@DDC_PERIODO,
					@DDC_ID_CERTIFICADO,
					@USUARIO,
					@CURR_FECHA,
					@CURR_TIEMPOFULL,
					'ELIMINADO'
				)

			DELETE DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'
		END

		DELETE FROM ARCHIVOS
		WHERE ID = @ID

		UPDATE COMPROBANTE_SUELDO
		SET
			ID = NULL,
			VALIDADO = 'NO',
			USUARIO = @USUARIO,
			FECHAMOD = @CURR_FECHA,
			HORAMOD = @CURR_TIEMPOFULL
		WHERE
			EMPRESA = @IDEMPRESA AND
			PERIODO = @PERIODO

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COMPROBANTE_SUELDO_UPDATE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_UPDATE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COMPROBANTE_SUELDO_UPDATE_V3_CONTROLLABORAL_CTTA]
(
  @ID			UNIQUEIDENTIFIER = NULL
 ,@USUARIO		NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	IF(@ID IS NOT NULL)
		BEGIN
			UPDATE COMPROBANTE_SUELDO
			SET
				ID = @ID,
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHAMOD = @CURR_FECHA,
				HORAMOD = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO)
		END
	ELSE
		BEGIN
			UPDATE COMPROBANTE_SUELDO
			SET
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHAMOD = @CURR_FECHA,
				HORAMOD = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO)
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_COMUNA_SELECT_BYCIUDAD]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_COMUNA_SELECT_BYCIUDAD]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_COMUNA_SELECT_BYCIUDAD]
(@CIUDAD NVARCHAR(50) = NULL)
AS
BEGIN
   SELECT DISTINCT COMUNA  FROM COMUNA  WHERE (CIUDAD = @CIUDAD)  ORDER BY COMUNA
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CTRLING_SELECT_MDTE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CTRLING_SELECT_MDTE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CTRLING_SELECT_MDTE]        
(           
 @DIVISIONES	NVARCHAR(30) = NULL
)      
AS        
BEGIN      

	DECLARE @MAXIMO				INT                   
	DECLARE @CONTADOR			INT					= 1    
	DECLARE @DATO				VARCHAR(10)      
	DECLARE @STRING				NVARCHAR(MAX)		=''     
	DECLARE @STRING1			NVARCHAR(MAX)    
	DECLARE @STRING_FINAL		NVARCHAR(MAX)
	DECLARE @CTRLINGMES			NVARCHAR(12)
	DECLARE @FECHA				NVARCHAR(8)
      
	SELECT VALUE AS DIVCOD INTO #TEMP_SPLIT_A      
	FROM string_split(@DIVISIONES,',')      
      
	SELECT  ROW_NUMBER() OVER(ORDER BY DIVCOD ASC) AS ID , * INTO #TEMP_SPLIT_B from                   
	#TEMP_SPLIT_A      
            
	SET @CTRLINGMES = 'CTRLING' +  SUBSTRING(DBO.HOY(GETDATE()),5,2)
	SET @FECHA =DBO.HOY(GETDATE())

	--SET @CTRLINGMES = 'CTRLING04'
	--SET @FECHA ='20200401'
                           
	WHILE ( @CONTADOR <= (SELECT MAX(ID) FROM #TEMP_SPLIT_B) )                   
	BEGIN                            
                  
		SELECT @DATO = DIVCOD FROM #TEMP_SPLIT_B              
		WHERE ID = @CONTADOR                    
		SET @STRING  += 'CONVERT(VARCHAR,' + @DATO + ')+' + N''''+',' +N''''+'+';    
                  
		SET @CONTADOR = @CONTADOR +1   
		
	END      
      
	SET @STRING_FINAL = SUBSTRING(@STRING, 0, LEN(@STRING)-4)     
	

	PRINT(@STRING_FINAL)
      
	EXEC ('SELECT INOUT,TIPOPASE,' + @DIVISIONES +' '+'INTO #TEMPORAL_DATA' + ' ' +      
	   'FROM' +        
	   '(' +         
	   'SELECT INOUT, DIVISION,RUTINGRESO,' + N'''' +'PERSONA' +N'''' +' '+ 'AS TIPOPASE FROM' +' '+ @CTRLINGMES + ' ' +        
	   'WHERE ISNULL(RUTINGRESO,'+ N'''' + N'''' +')'+ '<>' + N'''' + N'''' + ' '+        
	   'AND FECHA =' + N'''' +@FECHA + N'''' +' ' +         
	   'AND ISNULL(ERROR,'+ N'''' + N'''' +')'+ '=' + N'''' + N'''' + ' '+        
	   'UNION ALL' + ' ' +        
	   'SELECT DISTINCT INOUT, DIVISION,PATENTE AS RUTINGRESO,' + N'''' +'VEHICULO' +N'''' +' '+ 'AS TIPOPASE FROM' +' '+ @CTRLINGMES + ' ' +        
	   'WHERE ISNULL(PATENTE,'+N'''' + N'''' +')' + '<>' + N'''' + N'''' + ' '+        
	   'AND ISNULL(RUTINGRESO,'+N'''' + N'''' + ')' + '<>' + N'''' + N'''' + ' '+        
	   'AND ISNULL(ERROR,'+ N'''' + N'''' +')'+ '=' + N'''' + N'''' + ' '+        
	   'AND FECHA =' + N'''' +@FECHA + N'''' +' ' +         
	   'AND ISNULL(VEHICULO,'+ N'''' + N'''' +')'+ '=' + N'''' +'S'+ N'''' + ' '+        
	   ') src' +' '+        
	   'pivot' +        
	   '(' +        
	   'COUNT(RUTINGRESO) for [DIVISION] in (' + @DIVISIONES + ')' +        
	   ') AS PIV' + ' '+      
	   'SELECT INOUT,TIPOPASE,('+ @STRING_FINAL +') AS DATA_GRAFIC FROM #TEMPORAL_DATA' + ' '    
	   )         
      
END


--exec [V4MVC_CTRLING_SELECT_MDTE] 'CH,ES,LB,LM,LT,QV,ST'IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CTRLING_SELECT_MOVIMIENTO_INGSAL_MESACTUAL_DETALLE_INFORMEFUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CTRLING_SELECT_MOVIMIENTO_INGSAL_MESACTUAL_DETALLE_INFORMEFUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CTRLING_SELECT_MOVIMIENTO_INGSAL_MESACTUAL_DETALLE_INFORMEFUNCIONARIOS_CTTA]
(
  @RUTINGRESO NVARCHAR(10)
) AS 
BEGIN

SELECT C.RUTINGRESO, W.NOMBRES, W.APELLIDOS, C.FECHA AS FECHA_INFORME, C.HORA, C.PATENTE, C.ERRIN, C.ERROUT, C.LOCAL, C.OST,  C.INGRESO AS INGRESO_INT, C.SALIDA AS SALIDA_INT, C.DSCTIPOV, 
       C.ACRONIMO, C.EMPRESA, C.COD_PDA, C.USUARIO, D.DIVISION, D.DIVCOD, M.MSG_REPORT
	   FROM WC3_VISTA_CTRLING  AS C LEFT OUTER JOIN WORKERS AS W ON C.RUTINGRESO = W.RUT  
	                                LEFT OUTER JOIN MULTASTTO AS M ON C.ERROR = M.CODMULTA   
									INNER JOIN   A024_DIVISIONES AS D ON C.DIVISION = D.DIVCOD  
WHERE (C.RUTINGRESO = @RUTINGRESO) AND (SUBSTRING(FECHA, 1, 6) = SUBSTRING(CONVERT(NVARCHAR(8),GETDATE(),112), 1, 6)) 
ORDER BY C.FECHA ASC, C.HORA ASC

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_CTRLING_SELECT_MOVIMIENTO_INGSAL_MESACTUAL_INFORMEFUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_CTRLING_SELECT_MOVIMIENTO_INGSAL_MESACTUAL_INFORMEFUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_CTRLING_SELECT_MOVIMIENTO_INGSAL_MESACTUAL_INFORMEFUNCIONARIOS_CTTA]
(
  @RUTINGRESO NVARCHAR(10)
) AS 
BEGIN

SELECT SUM(INGRESO) AS INGRESO,			SUM(SALIDA) AS SALIDA,		SUM(ERRIN) AS ALERTAIN,		SUM(ERROUT) AS ALERTAOUT,
	   C.RUTINGRESO						, W.NOMBRES					, W.APELLIDOS  
FROM WC3_VISTA_CTRLING  AS C LEFT OUTER JOIN WORKERS AS W ON C.RUTINGRESO = W.RUT  
                             INNER JOIN   A024_DIVISIONES AS D ON C.DIVISION = D.DIVCOD   
WHERE (C.RUTINGRESO = @RUTINGRESO) AND (SUBSTRING(FECHA, 1, 6) = SUBSTRING(CONVERT(NVARCHAR(8),GETDATE(),112),1,6)) GROUP BY C.RUTINGRESO, W.NOMBRES, W.APELLIDOS

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DASHBOARD_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DASHBOARD_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DASHBOARD_CTTA]
(
 @IDEMPRESA		NVARCHAR(10) = NULL
)
AS
BEGIN

	SET NOCOUNT ON

	CREATE TABLE  #TEMP_WORKERS (          
	RUT			NVARCHAR(10)	COLLATE DATABASE_DEFAULT NOT NULL,     
	DIVCOD		NVARCHAR (4)	COLLATE DATABASE_DEFAULT NOT NULL        
	)  

	CREATE TABLE #WORKERS_DATA (          
	AUTOR		NVARCHAR(2)		COLLATE DATABASE_DEFAULT NOT NULL,
	VALIDADO	NVARCHAR(2)		COLLATE DATABASE_DEFAULT NOT NULL,         
	DIVCOD		NVARCHAR (4)	COLLATE DATABASE_DEFAULT NOT NULL           
	) 

	CREATE TABLE #ACREDITADOS (  
	DIVCOD		NVARCHAR(4)		COLLATE DATABASE_DEFAULT NOT NULL,
	SI			INT 
	)  
  
	CREATE TABLE #NO_ACREDITADOS (   
	DIVCOD		NVARCHAR(4)		COLLATE DATABASE_DEFAULT NOT NULL,
	NO			INT  
	)

	CREATE TABLE #DOCS_PENDIENTES(
	DIVISION	NVARCHAR(40)	COLLATE DATABASE_DEFAULT NOT NULL,
	CANTIDAD	INT
	)

	CREATE TABLE #DATA (
	DIVCOD		NVARCHAR(4) COLLATE DATABASE_DEFAULT NOT NULL,
	SI			INT,
	NO			INT,
	TOTAL		INT,
	PROMEDIO	INT
	)

	DECLARE @CONT_A			INT = 1
	DECLARE @CONT_B			INT = 1
	DECLARE @CONT_C			INT = 1
	DECLARE @VAR_SI			INT = 0
	DECLARE @VAR_NO			INT = 0
	DECLARE @TOTAL			INT = 0
	DECLARE @PROMEDIO		INT = 0 
	DECLARE @VAR_DIV1		NVARCHAR(4)
	DECLARE @VAR_DIV2		NVARCHAR(4)
	DECLARE @VAR_DIV3		NVARCHAR(4)

	IF EXISTS(	SELECT D.DIVISION
				FROM DOCS_WORKERS DW INNER JOIN A024_DIVISIONES D ON D.DIVCOD = DW.DIVISION 
				WHERE DW.EMPRESA = @IDEMPRESA 
				AND DW.VALIDADO = 'NO' 
				AND D.ACTIVO = 'SI' 
				GROUP BY D.DIVISION )
	BEGIN
		INSERT INTO #DOCS_PENDIENTES	
		SELECT D.DIVISION, COUNT(DW.RUT) AS CANTIDAD 
		FROM DOCS_WORKERS DW 
		INNER JOIN A024_DIVISIONES D  ON D.DIVCOD	 = DW.DIVISION
		WHERE	DW.EMPRESA = @IDEMPRESA 
		AND		DW.VALIDADO = 'NO' 
		AND		D.ACTIVO = 'SI' 
		GROUP BY D.DIVISION 
		ORDER BY D.DIVISION
	END
	ELSE
	BEGIN
		INSERT INTO #DOCS_PENDIENTES VALUES ('vacio',0)
	END

	SELECT DISTINCT D.DIVCOD, D.DIVISION 
	INTO #OPERACIONES          
	FROM WORKERSLOCAL WL WITH (NOLOCK)          
	INNER JOIN	A024_DIVISIONES D ON WL.DIVISION	= D.DIVCOD
	WHERE		WL.EMPRESA							= @IDEMPRESA  
	AND			D.ACTIVO							= 'SI'  

	SELECT ROW_NUMBER() OVER(ORDER BY DIVCOD ASC) AS ID , * 
	INTO #ROW_OPERACIONES 
	FROM #OPERACIONES 

	WHILE( @CONT_A <= (SELECT MAX(ID) FROM #ROW_OPERACIONES))
	BEGIN

		SET @VAR_DIV1 = (SELECT DIVCOD FROM #ROW_OPERACIONES WHERE ID = @CONT_A)

		INSERT INTO #TEMP_WORKERS           
		SELECT DISTINCT RUT, DIVISION          
		FROM WORKERSLOCAL WITH (NOLOCK)
		WHERE EMPRESA = @IDEMPRESA 
		AND DIVISION = @VAR_DIV1

		SET @CONT_A = @CONT_A + 1
	END

	SELECT ROW_NUMBER() OVER(ORDER BY RUT ASC) AS ID , * INTO #ROW_TEMPWORKERS FROM #TEMP_WORKERS          
       
	WHILE(@CONT_B <= (SELECT MAX(ID) FROM #ROW_TEMPWORKERS))
	BEGIN

		SET @VAR_DIV2 = (SELECT DIVCOD FROM #ROW_TEMPWORKERS WHERE ID = @CONT_B) 
		INSERT INTO #WORKERS_DATA          
		SELECT TOP 1 AUTOR, VALIDADO , DIVISION          
		FROM WORKERSLOCAL   WITH (NOLOCK)        
		WHERE EMPRESA = @IDEMPRESA 
		AND DIVISION = @VAR_DIV2
		AND RUT = (SELECT RUT FROM #ROW_TEMPWORKERS WHERE ID = @CONT_B)
		ORDER BY LOTE  

		SET @CONT_B = @CONT_B + 1
	END

	WHILE( @CONT_C <= (SELECT MAX(ID) FROM #ROW_OPERACIONES))
	BEGIN    

		SET @VAR_DIV3 = (SELECT DIVCOD FROM #ROW_OPERACIONES WHERE ID = @CONT_C) 

		SET @VAR_SI = (SELECT ISNULL(SUM(CANT),0) AS NO FROM (
		SELECT DIVCOD,COUNT(*) AS CANT,AUTOR,VALIDADO
		FROM #WORKERS_DATA
		WHERE DIVCOD=@VAR_DIV3
		GROUP BY DIVCOD,AUTOR,VALIDADO
		HAVING AUTOR='SI' AND VALIDADO='SI' ) AS NO)

		SET @VAR_NO = (SELECT ISNULL(SUM(CANT),0) AS SI FROM (
		SELECT DIVCOD,COUNT(*) AS CANT,AUTOR,VALIDADO
		FROM #WORKERS_DATA
		WHERE DIVCOD=@VAR_DIV3
		GROUP BY DIVCOD,AUTOR,VALIDADO
		HAVING AUTOR!='SI' OR VALIDADO!='SI' ) AS SI)

		SET @TOTAL = (@VAR_SI + @VAR_NO)
		SET @PROMEDIO = (100 * @VAR_SI) / @TOTAL

		INSERT INTO #DATA VALUES (@VAR_DIV3,@VAR_SI,@VAR_NO,@TOTAL,@PROMEDIO)

		SET @CONT_C = @CONT_C + 1
	END

	SELECT STUFF((
			SELECT ',''' + CAST(DIVCOD AS VARCHAR) + ''''
			FROM #DATA
			FOR XML PATH('')
		),1,1,'') AS OPERACIONES,
		STUFF((
			SELECT ',' + CAST(SI AS VARCHAR)
			FROM #DATA
			FOR XML PATH('')
		),1,1,'') AS CANT_ACREDITADOS,
		STUFF((
		SELECT ',' + CAST(NO AS VARCHAR)
		FROM #DATA
		FOR XML PATH('')
		),1,1,'') AS CANT_NOACREDITADOS,
				STUFF((
		SELECT ',' + CAST(PROMEDIO AS VARCHAR)
		FROM #DATA
		FOR XML PATH('')
		),1,1,'') AS PROMEDIO,
		(SELECT SUM(CASE WHEN GETDATE() BETWEEN FINICIO AND FTERMINO THEN 1 ELSE 0 END)
		FROM OSTARBOL   
		WHERE	EMPRESA = @IDEMPRESA OR	MADRE = @IDEMPRESA ) AS DOCS_VIGENTES,
		(SELECT SUM(CASE WHEN GETDATE() NOT BETWEEN FINICIO AND FTERMINO THEN 1 ELSE 0 END) 
		FROM OSTARBOL   
		WHERE EMPRESA = @IDEMPRESA OR MADRE = @IDEMPRESA ) AS DOCS_VENCIDOS,
		(SELECT COUNT(OST)    
		FROM OSTARBOL   
		WHERE (EMPRESA = @IDEMPRESA OR MADRE = @IDEMPRESA) AND FTERMINO <= DATEADD(d,30,GETDATE()) AND FTERMINO >= GETDATE()) AS VENCIMIENTO_OST,
		(SELECT COUNT(DISTINCT PATENTE)   
		FROM V_DOCS_FEC_VEH   
		WHERE EMPRESA = @IDEMPRESA AND FECHA >= GETDATE() AND FECHA <= DATEADD(d,30,GETDATE())) AS VENCIMIENTO_VEH,
		(SELECT COUNT(DISTINCT RUT)  
		FROM V_DOCS_FEC_WORK   
		WHERE EMPRESA = @IDEMPRESA AND FECHA >= CONVERT(VARCHAR(8),GETDATE(),112) AND FECHA <= CONVERT(VARCHAR(8),DATEADD(d,30,GETDATE()),112)) AS VENCIMIENTO_WORK,
		STUFF((
		SELECT ',{name:''' + CAST(DIVISION AS VARCHAR) + '''' + ',y:' + CAST(CANTIDAD AS VARCHAR) + '}' 
		FROM #DOCS_PENDIENTES
		FOR XML PATH('')
		),1,1,'') AS CANT_PENDIENTES

ENDIF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DASHBOARD_MDTE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DASHBOARD_MDTE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DASHBOARD_MDTE]
(
 @ADMRUT	NVARCHAR(10) = NULL
)
AS
BEGIN

	DECLARE @CTRLINGMES						NVARCHAR(12)	= 'CTRLING' +  SUBSTRING(DBO.HOY(GETDATE()),5,2)
	DECLARE @CASINOMES						NVARCHAR(12)	= 'CASINO' +  SUBSTRING(DBO.HOY(GETDATE()),5,2)
	DECLARE @FECHA							NVARCHAR(8)		= DBO.HOY(GETDATE())   
	DECLARE @LIST_SERVICIOS					NVARCHAR(MAX)	= ''
	DECLARE @VAR_IN_PERSONAS				NVARCHAR(200)	= '{type:' + '''' + 'column' + '''' + ',name:' + '''' + 'Personas' + '''' + ',data:[]},'
	DECLARE @VAR_OUT_PERSONAS				NVARCHAR(200)	= '{type:' + '''' + 'column' + '''' + ',name:' + '''' + 'Personas Salidas' + '''' + ',data:[],color:' + '''' + '#ffff00' +'''' + '},'
	DECLARE @VAR_IN_VEHICULOS				NVARCHAR(200)	= '{type:' + '''' + 'column' + '''' + ',name:' + '''' + 'Vehiculos Ingresos' + '''' + ',data:[],color:' + '''' + '#0000ff' +'''' + '},'
	DECLARE @VAR_OUT_VEHICULOS				NVARCHAR(200)	= '{type:' + '''' + 'column' + '''' + ',name:' + '''' + 'Vehiculos Salidas' + '''' + ',data:[],color:' + '''' + '#422B39' +'''' + '}'
	DECLARE @VAR_DATA_CASINO				NVARCHAR(200)	= '{type:' + '''' + 'column' + '''' + ',name:' + '''' + 'Sin Servicios' + '''' + ',data:[0]}'
	DECLARE @VAR_SERIE						NVARCHAR(MAX)	= '{type:' + '''' + 'column' + '''' + ',name:' + '''' + 'Sin Movimientos' + '''' + ',data:[]}'
	DECLARE @CONTADOR						INT				= 1
	DECLARE @CONTADOR2						INT				= 1
	DECLARE @DATO							NVARCHAR(30)  
	DECLARE @DATO2							NVARCHAR(30)  
	DECLARE @STRING_SQL						NVARCHAR(MAX)	=''	
	DECLARE @STRING_SQL_CONVERT				NVARCHAR(MAX)	=''
	DECLARE @STRING_SQL_SUBSTRING			NVARCHAR(MAX)	=''
	DECLARE @STRING_SQL_CONVERT_SUBSTRING	NVARCHAR(MAX)

	CREATE TABLE #TEMP_DATA(
	TIPO					NVARCHAR(20)	COLLATE DATABASE_DEFAULT NOT NULL,
	DATA					NVARCHAR(MAX)	COLLATE DATABASE_DEFAULT NOT NULL
	) 

	CREATE TABLE #SERVICIOS(
	SERVICIO				NVARCHAR(12)	COLLATE DATABASE_DEFAULT NOT NULL,
	)

	CREATE TABLE #SERVICIOS_DATA(
	DIVCOD					NVARCHAR(4)		COLLATE DATABASE_DEFAULT NOT NULL,
	DATA					NVARCHAR(MAX)	COLLATE DATABASE_DEFAULT NOT NULL
	)

	CREATE TABLE #CTRL(
	INOUT					NVARCHAR(5)		COLLATE DATABASE_DEFAULT NOT NULL,
	TIPO					NVARCHAR(20)	COLLATE DATABASE_DEFAULT NOT NULL,
	DATA					NVARCHAR(MAX)	COLLATE DATABASE_DEFAULT NOT NULL
	)

	DECLARE @DIVISIONES NVARCHAR(MAX)      
	SET @DIVISIONES = (
		SELECT STUFF((
			SELECT ',' + CAST(S.value AS VARCHAR)
			FROM string_split(( SELECT REPLACE(REPLACE(ADMDIVISION,'''',''),' ','') 
						FROM ADMIN WHERE ADMRUT	= @ADMRUT)  ,',') S
						INNER JOIN A024_DIVISIONES D ON S.value = D.DIVCOD
						ORDER BY DIVCOD ASC
			FOR XML PATH('')
		),1,1,'') AS DIVISIONES
	)

	INSERT INTO #SERVICIOS
	EXEC ('SELECT DISTINCT SERVICIO' + ' ' +      
	  'FROM' + ' ' + @CASINOMES + ' ' +      
	  'WHERE FECHA =' + N'''' +@FECHA + N'''' +' ' +       
	  'AND ISNULL(ERROR,'+ N'''' + N'''' +')'+ '=' + N'''' + N'''' + ' '+          
	  'AND ISNULL(SERVICIO,'+ N'''' + N'''' +')'+ '<>' + N'''' + N'''' + ' ' +
	  'ORDER BY SERVICIO ASC;'
	  )   
	  
	IF EXISTS(SELECT SERVICIO FROM #SERVICIOS)
	BEGIN

		SET @LIST_SERVICIOS = (SELECT STUFF((
			SELECT ',''' + CAST(SERVICIO AS VARCHAR) + ''''
			FROM #SERVICIOS
			FOR XML PATH('')
		),1,1,'') AS CASINO_CATEGORIAS)

		SELECT  ROW_NUMBER() OVER(ORDER BY SERVICIO ASC) AS ID , * INTO #ROW_SERVICIOS FROM #SERVICIOS

		WHILE ( @CONTADOR <= (SELECT MAX(ID) FROM #ROW_SERVICIOS ) )               
		BEGIN               
			SELECT @DATO =[SERVICIO] FROM #ROW_SERVICIOS              
			WHERE ID = @CONTADOR              
              
			SET @STRING_SQL +='['+ @DATO + '],';   
			SET @STRING_SQL_CONVERT  += 'CONVERT(VARCHAR,[' + @DATO + '])+' + N''''+',' +N''''+'+';    
              
			SET @CONTADOR = @CONTADOR +1               
		END 

		SET @STRING_SQL_SUBSTRING = SUBSTRING(@STRING_SQL, 0, LEN(@STRING_SQL))    
		SET @STRING_SQL_CONVERT_SUBSTRING =SUBSTRING(@STRING_SQL_CONVERT, 0, LEN(@STRING_SQL_CONVERT)-4) 

		INSERT INTO #SERVICIOS_DATA
		EXEC (    
		'SELECT DIVISION,' + @STRING_SQL_SUBSTRING + ' '+' INTO #TEMP_DATA' + ' ' +  
		'FROM (' + ' ' +  
		'SELECT RUT,DIVISION,SERVICIO FROM (SELECT DISTINCT RUT,DIVISION,SERVICIO, HORA' + ' '+  
		'FROM' +' '+ @CASINOMES + ' ' +        
		'WHERE FECHA =' + N'''' +@FECHA + N'''' +' ' +     
		'AND ISNULL(ERROR,'+ N'''' + N'''' +')'+ '=' + N'''' + N'''' + ')'+ ' ' +'AS CC' + ' ' +       
		') src' +' '+        
		'pivot' +        
		'(' +        
		'COUNT(RUT) for [SERVICIO] in (' + @STRING_SQL_SUBSTRING + ')' +        
		') AS PIV' + ' '+  
		'SELECT DIVISION,('+ @STRING_SQL_CONVERT_SUBSTRING +') AS DATA_GRAFIC FROM #TEMP_DATA ORDER BY DIVISION ASC' + ' '   
		) 

		SET @VAR_DATA_CASINO = (SELECT STUFF((
			SELECT ',{type:''' + 'column' + '''' + ',name:' + '''' + CAST(DIVCOD AS VARCHAR) + '''' + ',data:[' + CAST(DATA AS VARCHAR) + ']}' 
			FROM #SERVICIOS_DATA
			FOR XML PATH('')
		),1,1,'') AS DATA_CASINO)

	END

	SELECT value AS DIVCOD INTO #TEMP_SPLIT_A    
	FROM string_split(@DIVISIONES,',')    
    
	SELECT  ROW_NUMBER() OVER(ORDER BY DIVCOD ASC) AS ID , * INTO #TEMP_SPLIT_B FROM #TEMP_SPLIT_A    
                   
	DECLARE @STRING				NVARCHAR(MAX)   =''
	DECLARE @STRING_FINAL		NVARCHAR(MAX)    
                       
	WHILE ( @CONTADOR2 <= (SELECT MAX(ID) FROM #TEMP_SPLIT_B) )                 
	BEGIN                          
                
		SELECT @DATO2 = DIVCOD FROM #TEMP_SPLIT_B            
		WHERE ID = @CONTADOR2                
		SET @STRING  += 'CONVERT(VARCHAR,' + @DATO2 + ')+' + N''''+',' +N''''+'+';  
                
		SET @CONTADOR2 = @CONTADOR2 +1    
		
	END    
    
	SET @STRING_FINAL = SUBSTRING(@STRING, 0, LEN(@STRING)-4)    

	INSERT INTO #CTRL
	EXEC ('SELECT INOUT,TIPOPASE,' + @DIVISIONES +' '+'INTO #TEMPORAL_DATA' + ' ' +      
	'FROM' +        
	'(' +         
	'SELECT INOUT, DIVISION,RUTINGRESO,' + N'''' +'PERSONA' +N'''' +' '+ 'AS TIPOPASE FROM' +' '+ @CTRLINGMES + ' ' +        
	'WHERE ISNULL(RUTINGRESO,'+ N'''' + N'''' +')'+ '<>' + N'''' + N'''' + ' '+        
	'AND FECHA =' + N'''' +@FECHA + N'''' +' ' +         
	'AND ISNULL(ERROR,'+ N'''' + N'''' +')'+ '=' + N'''' + N'''' + ' '+        
	'UNION ALL' + ' ' +        
	'SELECT DISTINCT INOUT, DIVISION,PATENTE AS RUTINGRESO,' + N'''' +'VEHICULO' +N'''' +' '+ 'AS TIPOPASE FROM' +' '+ @CTRLINGMES + ' ' +        
	'WHERE ISNULL(PATENTE,'+N'''' + N'''' +')' + '<>' + N'''' + N'''' + ' '+        
	'AND ISNULL(RUTINGRESO,'+N'''' + N'''' + ')' + '<>' + N'''' + N'''' + ' '+        
	'AND ISNULL(ERROR,'+ N'''' + N'''' +')'+ '=' + N'''' + N'''' + ' '+        
	'AND FECHA =' + N'''' +@FECHA + N'''' +' ' +         
	'AND ISNULL(VEHICULO,'+ N'''' + N'''' +')'+ '=' + N'''' +'S'+ N'''' + ' '+        
	') src' +' '+        
	'pivot' +        
	'(' +        
	'COUNT(RUTINGRESO) for [DIVISION] in (' + @DIVISIONES + ')' +        
	') AS PIV' + ' '+      
	'SELECT INOUT,TIPOPASE,('+ @STRING_FINAL +') AS DATA_GRAFIC FROM #TEMPORAL_DATA' + ' '    
	) 


	INSERT INTO #TEMP_DATA
	EXEC (
		'SELECT' + ' '+ N'''' +'Mandante' + N'''' + ' ' + 'as TIPO,'+ @DIVISIONES + ' ' +'INTO #TEMPORAL_DATA'+ ' ' +
 		'FROM (' + ' ' +
  		'SELECT RUT, DIVISION' + ' ' +
  		'FROM ('+ ' ' +
	 		'SELECT DISTINCT CU.RUT, CU.DIVISION' + ' ' +
			',ISNULL(WLP.EMPRESA,' + N'''' + '108' + N'''' + ') AS EMPRESA' + ' ' +  
	 		'FROM (SELECT RUT, DIVISION, LOCALIN AS LOCAL ' + ' '+
		     		', FECHAIN, HORAIN, FECHACASINO, HORACASINO, FECHAOUT, HORAOUT'	+ ' '+	    
		     		'FROM  dbo.CTRLULTIMO ' + ' ' +  
		     		'WHERE (FECHAIN + HORAIN > FECHAOUT + HORAOUT OR  FECHACASINO + HORACASINO > FECHAOUT + HORAOUT) ' + ' ' +  
		      		') AS CU ' + ' ' +  
	 		'INNER JOIN WORKERS AS W ON CU.RUT = W.RUT  ' + ' ' +  
	 		'LEFT JOIN (SELECT WP1.RUT, WP1.DIVISION, WP1.LOTE, MAX(WP2.EMPRESA) AS EMPRESA ' + ' ' +   
		    		'FROM ' + ' ' +  
		    		'(SELECT RUT,  DIVISION , MAX(LOTE) AS LOTE ' + ' ' +    
		    		'FROM WORKERSLOCAL  ' + ' ' +  
		    		'GROUP BY RUT, DIVISION) WP1  ' + ' ' +   
		    		'INNER JOIN WORKERSLOCAL WP2 ON WP1.LOTE = WP2.LOTE AND  WP1.RUT = WP2.RUT AND WP1.DIVISION = WP2.DIVISION  ' + ' ' +  
		    		'GROUP BY WP1.RUT, WP1.DIVISION, WP1.LOTE) WLP ON CU.RUT = WLP.RUT AND CU.DIVISION = WLP.DIVISION  ' + ' ' +  
			') D  ' + ' ' +  
			'WHERE D.EMPRESA IN (SELECT MANDANTE FROM A027_MANDANTES M WHERE M.ACTIVO = ' + N'''' +'SI' + N'''' + '))' + ' ' +  
			'src pivot ( COUNT(RUT) for [DIVISION] in (' + @DIVISIONES + ') ) AS PIV' +' '+
		'UNION' + ' ' + 
		'SELECT' + ' '+ N'''' +'Contratista' + N'''' + ' ' + 'as TIPO,'+ @DIVISIONES + ' ' +
 		'FROM (' + ' ' +
  		'SELECT RUT, DIVISION' + ' ' +
  		'FROM ('+ ' ' +
	 		'SELECT DISTINCT CU.RUT, CU.DIVISION' + ' ' +
			',ISNULL(WLP.EMPRESA,' + N'''' + '108' + N'''' + ') AS EMPRESA' + ' ' +  
	 		'FROM (SELECT RUT, DIVISION, LOCALIN AS LOCAL ' + ' '+
		     		', FECHAIN, HORAIN, FECHACASINO, HORACASINO, FECHAOUT, HORAOUT'	+ ' '+	    
		     		'FROM  dbo.CTRLULTIMO ' + ' ' +  
		     		'WHERE (FECHAIN + HORAIN > FECHAOUT + HORAOUT OR  FECHACASINO + HORACASINO > FECHAOUT + HORAOUT) ' + ' ' +  
		      		') AS CU ' + ' ' +  
	 		'INNER JOIN WORKERS AS W ON CU.RUT = W.RUT  ' + ' ' +  
	 		'LEFT JOIN (SELECT WP1.RUT, WP1.DIVISION, WP1.LOTE, MAX(WP2.EMPRESA) AS EMPRESA ' + ' ' +   
		    		'FROM ' + ' ' +  
		    		'(SELECT RUT,  DIVISION , MAX(LOTE) AS LOTE ' + ' ' +    
		    		'FROM WORKERSLOCAL  ' + ' ' +  
		    		'GROUP BY RUT, DIVISION) WP1  ' + ' ' +   
		    		'INNER JOIN WORKERSLOCAL WP2 ON WP1.LOTE = WP2.LOTE AND  WP1.RUT = WP2.RUT AND WP1.DIVISION = WP2.DIVISION  ' + ' ' +  
		    		'GROUP BY WP1.RUT, WP1.DIVISION, WP1.LOTE) WLP ON CU.RUT = WLP.RUT AND CU.DIVISION = WLP.DIVISION  ' + ' ' +  
			') D  ' + ' ' +  
			'WHERE D.EMPRESA NOT IN (SELECT MANDANTE FROM A027_MANDANTES M WHERE M.ACTIVO = ' + N'''' +'SI' + N'''' + '))' + ' ' +  
			'src pivot ( COUNT(RUT) for [DIVISION] in (' + @DIVISIONES + ') ) AS PIV' + ' ' +
			'SELECT TIPO,('+ @STRING_FINAL +') AS DATA_GRAFIC FROM #TEMPORAL_DATA' + ' ORDER BY TIPO ASC' + ' '  
			)

		IF EXISTS(SELECT DATA FROM #CTRL)
		BEGIN
			IF EXISTS(SELECT DATA FROM #CTRL WHERE INOUT='IN' AND TIPO = 'PERSONA')
			BEGIN
					SET @VAR_IN_PERSONAS = (SELECT '{type:' + '''' + 'column' + '''' + ',name:' + '''' + 'Personas' + '''' + ',data:[' + DATA + ']},'
											FROM #CTRL
											WHERE INOUT='IN' AND TIPO = 'PERSONA')
			END

			IF EXISTS(SELECT DATA FROM #CTRL WHERE INOUT='OUT' AND TIPO = 'PERSONA')
			BEGIN
					SET @VAR_OUT_PERSONAS = (SELECT '{type:' + '''' + 'column' + '''' + ',name:' + '''' + 'Personas Salidas' + '''' + ',data:[' + DATA + '],color: ' + '''' + '#ffff00' + '''' + '},'
											FROM #CTRL
											WHERE INOUT='OUT' AND TIPO = 'PERSONA')
			END

			IF EXISTS(SELECT DATA FROM #CTRL WHERE INOUT='IN' AND TIPO = 'VEHICULO')
			BEGIN
					SET @VAR_IN_VEHICULOS = (SELECT '{type:' + '''' + 'column' + '''' + ',name:' + '''' + 'Vehiculos Ingresos' + '''' + ',data:[' + DATA + '],color: ' + '''' + '#0000ff' + '''' + '},'
											FROM #CTRL
											WHERE INOUT='IN' AND TIPO = 'VEHICULO')
			END

			IF EXISTS(SELECT DATA FROM #CTRL WHERE INOUT='OUT' AND TIPO = 'VEHICULO')
			BEGIN
					SET @VAR_OUT_VEHICULOS = (SELECT '{type:' + '''' + 'column' + '''' + ',name:' + '''' + 'Vehiculos Salidas' + '''' + ',data:[' + DATA + '],color: ' + '''' + '#422B39' + '''' + '}'
											FROM #CTRL
											WHERE INOUT='OUT' AND TIPO = 'VEHICULO')
			END

			SET @VAR_SERIE = @VAR_IN_PERSONAS + @VAR_OUT_PERSONAS + @VAR_IN_VEHICULOS + @VAR_OUT_VEHICULOS
		END

		SELECT STUFF((
			SELECT ',''' + CAST(S.value AS VARCHAR) + ''''
			FROM string_split(( SELECT REPLACE(REPLACE(ADMDIVISION,'''',''),' ','') 
						FROM ADMIN WHERE ADMRUT	= @ADMRUT)  ,',') S
						INNER JOIN A024_DIVISIONES D ON S.value = D.DIVCOD
						ORDER BY DIVCOD ASC
			FOR XML PATH('')
		),1,1,'') AS OPERACIONES,
		STUFF((
		SELECT ',{name:''' + CAST(TIPO AS VARCHAR) + '''' + ',data:[' + CAST(DATA AS VARCHAR) + ']}' 
		FROM #TEMP_DATA
		FOR XML PATH('')
		),1,1,'') AS DATA_FAENA,
		@LIST_SERVICIOS AS CASINO_CATEGORIAS,
		@VAR_DATA_CASINO AS DATA_CASINO,
		@VAR_SERIE AS DATA_MOVIMIENTOS

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DESTINATARIOS_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DESTINATARIOS_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DESTINATARIOS_SELECT]
(@MODULO NVARCHAR(50) = NULL)
AS
BEGIN
   SELECT EMAIL
	FROM  DESTINATARIOS 
	WHERE (MODULO = @MODULO)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIRECCION_INSERT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIRECCION_INSERT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIRECCION_INSERT]
( @RUT        nvarchar(10) = NULL
, @DIRECCION  nvarchar(50) = NULL
, @COMUNA     nvarchar(50) = NULL
, @CIUDAD     nvarchar(50) = NULL
, @REGION     nvarchar(5) = NULL
, @PAIS       nvarchar(50) = NULL
, @FONOHELP   nvarchar(50) = NULL
, @FONO       nvarchar(50) = NULL
, @CELULAR    nvarchar(50) = NULL
, @TIPO		  nvarchar(20) = NULL
, @NOMCONTACTO nvarchar(100) = NULL
, @CELCONTACTO nvarchar(100) = NULL) AS 
BEGIN

   INSERT INTO [DIRECCION]
        ( RUT     , DIRECCION , COMUNA  
        , CIUDAD  , REGION    , PAIS  , FONOHELP
        , FONO    , CELULAR   , TIPO  , NOMCONTACTO
		, CELCONTACTO)
   VALUES
        ( @RUT     , @DIRECCION  , @COMUNA  
        , @CIUDAD  , @REGION    , @PAIS  , @FONOHELP
        , @FONO    , @CELULAR	, @TIPO  , @NOMCONTACTO
		, @CELCONTACTO)

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIRECCION_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIRECCION_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIRECCION_SELECT]  
(@RUT NVARCHAR(10) = NULL)  
AS  
BEGIN  
   SELECT WORKERS.NOMBRES  
  , WORKERS.APELLIDOS  
  , D.DIRECCION  
  , D.ZONA  
  , D.COMUNA  
  , D.CIUDAD  
  , D.REGION  
  , D.PAIS  
  , D.FONOHELP  
  , D.FONO  
  , D.CELULAR  
  , D.EMAIL  
  , WORKERS.RUT   
  , D.TIPO  
  , D.NOMCONTACTO  
  , D.CELCONTACTO  
 FROM  DIRECCION AS D  
 LEFT JOIN WORKERS ON WORKERS.RUT = D.RUT    
 WHERE (WORKERS.RUT = @RUT)  
END  
  
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIRECCION_UPDATE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIRECCION_UPDATE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIRECCION_UPDATE]
( @RUT        nvarchar(10) = NULL
, @DIRECCION  nvarchar(50) = NULL
, @COMUNA     nvarchar(50) = NULL
, @CIUDAD     nvarchar(50) = NULL
, @REGION     nvarchar(5) = NULL
, @PAIS       nvarchar(50) = NULL
, @FONOHELP   nvarchar(50) = NULL
, @FONO       nvarchar(50) = NULL
, @CELULAR    nvarchar(50) = NULL
, @TIPO		  nvarchar(20) = NULL
, @NOMCONTACTO nvarchar(100) = NULL
, @CELCONTACTO nvarchar(100) = NULL) AS 
BEGIN

   UPDATE [DIRECCION]
      SET [DIRECCION] = @DIRECCION
        , [COMUNA]    = @COMUNA
        , [CIUDAD]    = @CIUDAD
        , [REGION]    = @REGION
        , [PAIS]      = @PAIS
        , [FONOHELP]  = @FONOHELP
        , [FONO]      = @FONO
        , [CELULAR]   = @CELULAR
		, [TIPO]	  = @TIPO
		, [NOMCONTACTO] = @NOMCONTACTO
		, [CELCONTACTO] = @CELCONTACTO
	WHERE RUT = @RUT


END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIRECCION_UPDATE_CELULAR_RUT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIRECCION_UPDATE_CELULAR_RUT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIRECCION_UPDATE_CELULAR_RUT]
(
@CELULAR NVARCHAR(50),
@RUT NVARCHAR(10)
)
AS
BEGIN

UPDATE DIRECCION 
SET CELULAR=@CELULAR  
WHERE RUT=@RUT

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIRECCION_UPDATE_COVID_F00]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIRECCION_UPDATE_COVID_F00]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIRECCION_UPDATE_COVID_F00]
( @RUT        nvarchar(10) = NULL
, @DIRECCION  nvarchar(50) = NULL
, @COMUNA     nvarchar(50) = NULL
, @CIUDAD     nvarchar(50) = NULL
, @REGION     nvarchar(5) = NULL
, @PAIS       nvarchar(50) = NULL
, @FONO       nvarchar(50) = NULL
, @CELULAR    nvarchar(50) = NULL
, @NOMCONTACTO nvarchar(100) = NULL
, @CELCONTACTO nvarchar(100) = NULL
) AS 
BEGIN

   UPDATE [DIRECCION]
      SET [DIRECCION] = @DIRECCION
        , [COMUNA]    = @COMUNA
        , [CIUDAD]    = @CIUDAD
        , [REGION]    = @REGION
        , [PAIS]      = @PAIS
        , [FONO]      = @FONO
        , [CELULAR]   = @CELULAR
		, [NOMCONTACTO] = @NOMCONTACTO
		, [CELCONTACTO] = @CELCONTACTO
	WHERE RUT = @RUT


END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIRECCION_UPDATE_COVID_F100]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIRECCION_UPDATE_COVID_F100]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIRECCION_UPDATE_COVID_F100]
( @RUT        nvarchar(10) = NULL
, @DIRECCION  nvarchar(50) = NULL
, @COMUNA     nvarchar(50) = NULL
, @CIUDAD     nvarchar(50) = NULL
, @REGION     nvarchar(5) = NULL
, @PAIS       nvarchar(50) = NULL
, @FONO       nvarchar(50) = NULL
, @CELULAR    nvarchar(50) = NULL
, @TIPO		  nvarchar(20) = NULL
) AS 
BEGIN

   UPDATE [DIRECCION]
      SET [DIRECCION] = @DIRECCION
        , [COMUNA]    = @COMUNA
        , [CIUDAD]    = @CIUDAD
        , [REGION]    = @REGION
        , [PAIS]      = @PAIS
        , [FONO]      = @FONO
        , [CELULAR]   = @CELULAR
		, [TIPO]	  = @TIPO
	WHERE RUT = @RUT


END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIRECCION_UPDATE_COVID_F300]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIRECCION_UPDATE_COVID_F300]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIRECCION_UPDATE_COVID_F300]
( @RUT        nvarchar(10) = NULL
, @DIRECCION  nvarchar(50) = NULL
, @COMUNA     nvarchar(50) = NULL
, @CIUDAD     nvarchar(50) = NULL
, @REGION     nvarchar(5) = NULL
, @CELULAR    nvarchar(50) = NULL
) AS 
BEGIN

   UPDATE [DIRECCION]
      SET [DIRECCION] = @DIRECCION
        , [COMUNA]    = @COMUNA
        , [CIUDAD]    = @CIUDAD
        , [REGION]    = @REGION
        , [CELULAR]   = @CELULAR
	WHERE RUT = @RUT


END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIRECCION_UPDATE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIRECCION_UPDATE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIRECCION_UPDATE_CTTA]
( @RUT        nvarchar(10) = NULL
, @DIRECCION  nvarchar(50) = NULL
, @COMUNA     nvarchar(50) = NULL
, @CIUDAD     nvarchar(50) = NULL
, @REGION     nvarchar(5) = NULL
, @PAIS       nvarchar(50) = NULL
, @FONOHELP   nvarchar(50) = NULL
, @FONO       nvarchar(50) = NULL
, @CELULAR    nvarchar(50) = NULL
) AS 
BEGIN

   UPDATE [DIRECCION]
      SET [DIRECCION] = @DIRECCION
        , [COMUNA]    = @COMUNA
        , [CIUDAD]    = @CIUDAD
        , [REGION]    = @REGION
        , [PAIS]      = @PAIS
        , [FONOHELP]  = @FONOHELP
        , [FONO]      = @FONO
        , [CELULAR]   = @CELULAR
	WHERE RUT = @RUT


END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIVISION_APROBACION_MEDICO_SELECT_ONE_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIVISION_APROBACION_MEDICO_SELECT_ONE_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIVISION_APROBACION_MEDICO_SELECT_ONE_PASES_CTTA]
(
  @DIVCOD NVARCHAR(4)
) AS 
BEGIN
	SELECT TOP 1 *
	FROM DIVISION_APROBACION_MEDICO
	WHERE DIVCOD = @DIVCOD
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIVISIONES_FICHA_EMPRESA_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIVISIONES_FICHA_EMPRESA_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIVISIONES_FICHA_EMPRESA_SELECT]  
(  
@IDEMPRESA NVARCHAR(10)  
)  
AS  
BEGIN  
  
DECLARE @MAXIMO INT  
DECLARE @CONTADOR INT  
DECLARE @DATO NVARCHAR(4)
DECLARE @DATO1 NVARCHAR(20)
DECLARE @DIVCOD NVARCHAR(4)  
DECLARE @FUNCIONARIOS INT  
DECLARE @ACREDITADOS INT  
DECLARE @VEHICULOS INT  
DECLARE @CONTRATOS INT  
  
	CREATE TABLE #TEMP_FICHA_EMPRESA  
	(  
	DIVISION		NVARCHAR(20)	COLLATE DATABASE_DEFAULT NOT NULL, 
	DIVCOD			NVARCHAR(4)		COLLATE DATABASE_DEFAULT NOT NULL,  
	FUNCIONARIOS	INT,  
	ACREDITADOS		INT,  
	VEHICULOS		INT,  
	CONTRATOS		INT  
	)  
    
	SELECT DIVISION,DIVCOD INTO #TEMP_FICHA  
	FROM A024_DIVISIONES  
	WHERE ACTIVO='SI'  
	ORDER BY DIVCOD  
  
	SELECT  ROW_NUMBER() OVER(ORDER BY DIVCOD ASC) AS ID , * INTO #TEMP_FICHA_DIVCOD FROM                  
	#TEMP_FICHA   
  
	SET @CONTADOR = 1;  
  
	SELECT @MAXIMO = MAX(ID) FROM #TEMP_FICHA_DIVCOD  
  
	WHILE(@CONTADOR <= @MAXIMO)  
	BEGIN  
  
	SELECT @DATO=DIVCOD, @DATO1=DIVISION FROM #TEMP_FICHA_DIVCOD  
	WHERE ID = @CONTADOR  
  
	SET @FUNCIONARIOS = (SELECT COUNT (DISTINCT RUT) FROM VW_WL_NOMINA WHERE     EMPRESA = @IDEMPRESA AND DIVISION =  @DATO)  
	SET @ACREDITADOS  = (SELECT COUNT (DISTINCT RUT) FROM VW_WL_ACREDITADO WHERE EMPRESA = @IDEMPRESA AND DIVISION =  @DATO)  
	SET @VEHICULOS    = (SELECT COUNT (PATENTE)      FROM TRANSPORT WHERE        EMPRESA = @IDEMPRESA AND AUTOR    <> 'BL')  
	SET @CONTRATOS    = (SELECT COUNT(DISTINCT OSTARBOL.OST)  
		  FROM OSTARBOL   
		  INNER JOIN  OSTDIVLOCAL ON OSTARBOL.OST = OSTDIVLOCAL.OST   
		  WHERE  (OSTARBOL.EMPRESA = @IDEMPRESA)   
		  AND (OSTDIVLOCAL.DIVISION = @DATO)   
		  AND (dbo.hoy(getdate()) BETWEEN OSTARBOL.FINICIO   
		  AND OSTARBOL.FTERMINO))  
  
	INSERT INTO #TEMP_FICHA_EMPRESA VALUES (@DATO1,@DATO,@FUNCIONARIOS,@ACREDITADOS,@VEHICULOS,@CONTRATOS)  
  
	SET @CONTADOR = @CONTADOR + 1  
  
	END  
  
	SELECT * FROM #TEMP_FICHA_EMPRESA  
  
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIVISIONES_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIVISIONES_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIVISIONES_SELECT]
(@DIVCOD           NVARCHAR(4) = NULL )AS
BEGIN

   SELECT DIVISION
		, DIVCOD
		, CTRL_CONDUCC 
		, PAIS
   FROM A024_DIVISIONES 
   WHERE (ACTIVO = N'SI') 
   AND DIVCOD = ISNULL(@DIVCOD,DIVCOD)
   ORDER BY DIVCOD

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIVISIONES_SELECT_CONDUCCIONPASE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIVISIONES_SELECT_CONDUCCIONPASE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIVISIONES_SELECT_CONDUCCIONPASE]
( @IDEMPRESA           NVARCHAR(10)
, @RUT				   NVARCHAR(10)	) AS
BEGIN

	SELECT D.DIVISION, D.DIVCOD, D.CTRL_CONDUCC , L.LOTENUM , @RUT AS RUT , D.PAIS
			, CASE WHEN [dbo].[fn_WL_Conductor] (@RUT,D.DIVCOD,dbo.hoy(getdate())) = 1 THEN 'true' ELSE 'false' END AS CERTCOND
	FROM A024_DIVISIONES AS D 
	LEFT JOIN (SELECT L.LOTENUM , L.DIVISION FROM LOTEPASES AS L 
				INNER JOIN LOTEPASESFUN AS LF ON L.LOTENUM = LF.NLOTEPROC 
				WHERE 
				(LF.RUTLOTE = @RUT) 
				AND (L.LOTEFINICIO <= DBO.HOY(GETDATE())) 
				AND (L.LOTEFFINAL >= DBO.HOY(GETDATE())) AND 
				LF.EMPRESALT = @IDEMPRESA AND 
				(LF.LICONDLT = 'SI')) AS L ON L.DIVISION = D.DIVCOD
	WHERE
	(ACTIVO = N'SI') 
	ORDER BY D.DIVISION

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIVISIONES_SELECT_CONPASE_PORDOCUMENTO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIVISIONES_SELECT_CONPASE_PORDOCUMENTO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIVISIONES_SELECT_CONPASE_PORDOCUMENTO]
( @ID_DOC           INT = NULL ) AS
BEGIN

	SELECT DIVISION, DIVCOD , PAIS  FROM A024_DIVISIONES
	WHERE (ACTIVO = N'SI')  AND 
	DIVCOD IN (SELECT DIVISION FROM DOCS_TIPOPASE WHERE ID_DOC = @ID_DOC)
	ORDER BY DIVCOD

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIVISIONES_SELECT_LABORALES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIVISIONES_SELECT_LABORALES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIVISIONES_SELECT_LABORALES_CTTA]
( @RUT           nvarchar(10) = NULL ) AS
BEGIN

   SELECT DIVCOD, DIVISION , PAIS
	FROM A024_DIVISIONES 
	WHERE ACTIVO = 'SI' AND 
	DIVCOD NOT IN (SELECT distinct DIVISION 
				FROM WORKERSLOCAL 
				WHERE RUT = @RUT AND  
				(dbo.hoy(GETDATE()) BETWEEN FINIPASE AND FFINPASE) 
				AND AUTOR <> 'BL' ) ORDER BY DIVCOD

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DIVISIONES_SELECT_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DIVISIONES_SELECT_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DIVISIONES_SELECT_PASES_CTTA]  
(  
 @IDEMPRESA		NVARCHAR(10)  
)  
AS  
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	SELECT
		DIVISION,
		DIVCOD
	FROM A024_DIVISIONES
	WHERE DIVCOD IN(
					SELECT OS.DIVISION
					FROM OSTDIVLOCAL OS, OSTSUBC OSC, OST
					WHERE
						OSC.EMPRESA = @IDEMPRESA AND
						OST.NROOST = OS.OST AND
						OST.FECTERM >= @CURR_FECHA AND
						OSC.OST = OST.NROOST 
					GROUP BY OS.DIVISION)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOC_FEC_VEHICULOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOC_FEC_VEHICULOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOC_FEC_VEHICULOS_CTTA]
(@ID_DOC			INT = NULL
,@PATENTE			NVARCHAR(6) = NULL
,@IDEMPRESA			NVARCHAR(11) = NULL
,@DIVCOD			NVARCHAR(4) = NULL)
AS
BEGIN

	SELECT DF.ID_DOC_FEC, DF.NOMBRE , '19000101' AS FECHA , 0 AS VALIDO_MAYOR_HOY , [dbo].[hoy](GETDATE()) AS FECHAHOY
	INTO #TEMP
	FROM DOCS_FEC AS DF
	WHERE 
	(DF.ID_DOC_DEPEND =  @ID_DOC) AND 
	(ACTIVO = 'SI') ORDER BY ORDEN ASC

	DECLARE @ID_DOC_FEC			INT,
			@NOMBRE		NVARCHAR(100),
			@FECHA			NVARCHAR(8),
			@VALIDO_MAYOR_HOY INT 
	DECLARE Fechas_DocsCtta CURSOR FOR
	SELECT ID_DOC_FEC , NOMBRE , FECHA , VALIDO_MAYOR_HOY  FROM #TEMP 
	OPEN Fechas_DocsCtta

	FETCH Fechas_DocsCtta INTO    @ID_DOC_FEC , @NOMBRE , @FECHA , @VALIDO_MAYOR_HOY

	WHILE (@@FETCH_STATUS = 0 )
		BEGIN
			DECLARE @EMP_COMUN INT = 0
			DECLARE @DIV_COMUN INT = 0
			SELECT @EMP_COMUN = D.COMUN 
				 , @DIV_COMUN = DF.COMUN  
			FROM DOCS_FEC AS DF 
			INNER JOIN DOCS AS D ON DF.ID_DOC_DEPEND = D.ID_DOC 
			WHERE  (DF.ID_DOC_FEC = @ID_DOC_FEC)

			DECLARE @VAL_FECHA NVARCHAR(8) = ''
			IF(@EMP_COMUN = 0)
				BEGIN
					IF(@DIV_COMUN = 0)
						BEGIN
							SELECT TOP 1 @VAL_FECHA = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @PATENTE ) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (DIVISION = @DIVCOD OR ISNULL(DIVISION,'AA') = 'AA') AND EMPRESA = @IDEMPRESA
						END
					ELSE
						BEGIN
							SELECT TOP 1 @VAL_FECHA = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @PATENTE) AND (ID_DOC_FEC = @ID_DOC_FEC) AND EMPRESA = @IDEMPRESA
						END
				END
			ELSE
				BEGIN
					IF(@DIV_COMUN = 0)
						BEGIN
							SELECT TOP 1 @VAL_FECHA = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @PATENTE) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (DIVISION = @DIVCOD OR ISNULL(DIVISION,'AA') = 'AA')
						END
					ELSE 
						BEGIN
							SELECT TOP 1 @VAL_FECHA = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @PATENTE) AND (ID_DOC_FEC = @ID_DOC_FEC)
						END
				END
			
			UPDATE #TEMP SET FECHA = @VAL_FECHA
							, VALIDO_MAYOR_HOY = ISNULL((SELECT VALIDO_MAYOR_HOY FROM DOCS_FEC WHERE (ID_DOC_FEC = @ID_DOC_FEC)),0)
			WHERE ID_DOC_FEC = @ID_DOC_FEC

			FETCH Fechas_DocsCtta INTO @ID_DOC_FEC , @NOMBRE , @FECHA , @VALIDO_MAYOR_HOY

		END
	CLOSE Fechas_DocsCtta
	DEALLOCATE Fechas_DocsCtta

	SELECT *  FROM #TEMP
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DELETE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DELETE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DELETE]
(@ID int) AS
BEGIN
      DELETE FROM [dbo].[DOCS_CONTROLACCESO_LABORAL]
      WHERE ID=@ID
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DELETE_FUNCIONARIOSCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DELETE_FUNCIONARIOSCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DELETE_FUNCIONARIOSCTTA]
(@ID int = NULL
,@ID_DISPUTA int = NULL
,@USUARIO nvarchar(10)= NULL) AS 
BEGIN

INSERT INTO DOCS_CONTROLACCESO_LABORAL_LOG (ID, ID_DOC, RUT, EMPRESA, NOMBRE_ARCHIVO, TIPO_CONTENIDO, FECHASUBE, HORASUBE, USUARIO, VALIDADO, CERTUSUARIO, CERTFECHA, CERTHORA, IDRECHAZO, OBSCERTIFICACION, ID_ARCHIVO, FECHA_INI, FECHA_FIN, CANTDIAS, USUARIODEL  ,FECHADEL                ,HORADEL)
									SELECT  ID, ID_DOC, RUT, EMPRESA, NOMBRE_ARCHIVO, TIPO_CONTENIDO, FECHASUBE, HORASUBE, USUARIO, VALIDADO, CERTUSUARIO, CERTFECHA, CERTHORA, IDRECHAZO, OBSCERTIFICACION, ID_ARCHIVO, FECHA_INI, FECHA_FIN, CANTDIAS, @USUARIO    ,[dbo].[hoy](GETDATE())  ,[dbo].[ahora](GETDATE()) 
									FROM  DOCS_CONTROLACCESO_LABORAL 
									WHERE ID =@ID

IF @ID_DISPUTA <> 0
BEGIN 
INSERT INTO DOCS_CONTROLACCESO_LABORAL_DISPUTA_LOG (ID_DISPUTA , ID_DOC , RUT , FECHA_INI , FECHA_FIN , PERIODO , EMPRESA , ID , USUARIO , FECHA , HORA , OBSERVACION , CERTUSUARIO ,  CERTFECHA , CERTHORA , VALIDADO , ESTADO , REVALUSUARIO , REVALFECHA , REVALHORA , OBSERVACION_REVAL, USRMOD      , FECHAMOD               , HORAMOD                   , ACCION )
										 SELECT     ID_DISPUTA , ID_DOC , RUT , FECHA_INI , FECHA_FIN , PERIODO , EMPRESA , ID , USUARIO , FECHA , HORA , OBSERVACION , CERTUSUARIO ,  CERTFECHA , CERTHORA , VALIDADO , ESTADO , REVALUSUARIO , REVALFECHA , REVALHORA , OBSERVACION_REVAL, @USUARIO    ,[dbo].[hoy](GETDATE())  ,[dbo].[ahora](GETDATE())   ,'ELIMINADO'  
										 FROM DOCS_CONTROLACCESO_LABORAL_DISPUTA
										 WHERE ID_DISPUTA = @ID_DISPUTA AND ESTADO = 'NO'

DELETE DOCS_CONTROLACCESO_LABORAL_DISPUTA WHERE ID_DISPUTA = @ID_DISPUTA AND ESTADO = 'NO' 
END

DELETE DOCS_CONTROLACCESO_LABORAL WHERE ID = @ID
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DISPUTA_DELETE_ESTADONO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DISPUTA_DELETE_ESTADONO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DISPUTA_DELETE_ESTADONO]
(@ID_DISPUTA	INT= NULL) AS
BEGIN
  DELETE FROM DOCS_CONTROLACCESO_LABORAL_DISPUTA 
  WHERE @ID_DISPUTA = @ID_DISPUTA AND ESTADO = 'NO'
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DISPUTA_INSERT_FUNCIONARIOSCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DISPUTA_INSERT_FUNCIONARIOSCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DISPUTA_INSERT_FUNCIONARIOSCTTA]
(@RUT		    NVARCHAR(10) = NULL 
,@FECHA_INI		NVARCHAR(8) = NULL 
,@FECHA_FIN	    NVARCHAR(8) = NULL 
,@ID_DOC	INT = NULL
,@OBSERVACION	NVARCHAR(1000) = NULL
,@USUARIO	NVARCHAR(10) = NULL) AS
BEGIN

INSERT INTO DOCS_CONTROLACCESO_LABORAL_DISPUTA(ID_DOC,  RUT,  FECHA_INI,  FECHA_FIN,  EMPRESA, OBSERVACION,  USUARIO,  FECHA                 , HORA                   ,  ID         ,CERTUSUARIO  ,CERTFECHA  ,CERTHORA, ESTADO, VALIDADO)
									   SELECT @ID_DOC,  @RUT, @FECHA_INI, @FECHA_FIN, EMPRESA, @OBSERVACION, @USUARIO, [dbo].[hoy](GETDATE()), [dbo].[ahora](GETDATE()), ID_ARCHIVO ,CERTUSUARIO  ,CERTFECHA  ,CERTHORA, 'NO'  , VALIDADO 
										FROM DOCS_CONTROLACCESO_LABORAL 
WHERE RUT = @RUT AND FECHA_INI = @FECHA_INI AND FECHA_FIN = @FECHA_FIN AND ID_DOC = @ID_DOC
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DISPUTA_SELECT_ESTADONO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DISPUTA_SELECT_ESTADONO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DISPUTA_SELECT_ESTADONO]
(@ID_DISPUTA	INT= NULL) AS
BEGIN
SELECT [ID_DISPUTA]
      ,[ID_DOC]
      ,[RUT]
      ,[FECHA_INI]
      ,[FECHA_FIN]
      ,[PERIODO]
      ,[EMPRESA]
      ,[ID]
      ,[USUARIO]
      ,[FECHA]
      ,[HORA]
      ,[OBSERVACION]
      ,[CERTUSUARIO]
      ,[CERTFECHA]
      ,[CERTHORA]
      ,[VALIDADO]
      ,[ESTADO]
      ,[REVALUSUARIO]
      ,[REVALFECHA]
      ,[REVALHORA]
      ,[OBSERVACION_REVAL]
  FROM [dbo].[DOCS_CONTROLACCESO_LABORAL_DISPUTA]
  WHERE @ID_DISPUTA = @ID_DISPUTA AND ESTADO = 'NO'
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DISPUTA_SELECT_TOP]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DISPUTA_SELECT_TOP]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_DISPUTA_SELECT_TOP]
(@RUT			NVARCHAR(10)= NULL
,@FECHA_INI		NVARCHAR(8)= NULL
,@FECHA_FIN	    NVARCHAR(8)= NULL
,@EMPRESA	    NVARCHAR(10)= NULL
,@ID_DOC	    int= NULL
,@ID	    uniqueidentifier= NULL
) AS
BEGIN
SELECT TOP 1 ESTADO, ID_DISPUTA , OBSERVACION, OBSERVACION_REVAL
FROM DOCS_CONTROLACCESO_LABORAL_DISPUTA 
WHERE RUT = @RUT AND 
FECHA_INI = @FECHA_INI AND 
FECHA_FIN = @FECHA_FIN AND 
EMPRESA = @EMPRESA AND 
ID_DOC = @ID_DOC AND
ID = @ID AND
ESTADO <> 'SI'
ORDER BY ID_DISPUTA DESC
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_NEW]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_NEW]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_NEW]
(@ID int= NULL
,@ID_DOC int= NULL
,@RUT nvarchar(10)= NULL
,@EMPRESA nvarchar(10)= NULL
,@NOMBRE_ARCHIVO nvarchar(50)= NULL
,@TIPO_CONTENIDO nvarchar(20)= NULL
,@FECHASUBE nvarchar(8)= NULL
,@HORASUBE nvarchar(8)= NULL
,@USUARIO nvarchar(10)= NULL
,@VALIDADO nvarchar(2)= NULL
,@CERTUSUARIO nvarchar(10)= NULL
,@CERTFECHA nvarchar(8)= NULL
,@CERTHORA nvarchar(8)= NULL
,@IDRECHAZO uniqueidentifier= NULL
,@OBSCERTIFICACION nvarchar(max)= NULL
,@ID_ARCHIVO uniqueidentifier= NULL
,@FECHA_INI nvarchar(8)= NULL
,@FECHA_FIN nvarchar(8)= NULL
,@CANTDIAS int) AS
BEGIN
INSERT INTO [dbo].[DOCS_CONTROLACCESO_LABORAL]
           ([ID_DOC]
           ,[RUT]
           ,[EMPRESA]
           ,[NOMBRE_ARCHIVO]
           ,[TIPO_CONTENIDO]
           ,[FECHASUBE]
           ,[HORASUBE]
           ,[USUARIO]
           ,[VALIDADO]
           ,[CERTUSUARIO]
           ,[CERTFECHA]
           ,[CERTHORA]
           ,[IDRECHAZO]
           ,[OBSCERTIFICACION]
           ,[ID_ARCHIVO]
           ,[FECHA_INI]
           ,[FECHA_FIN]
           ,[CANTDIAS])
     VALUES
           (@ID_DOC 
           ,@RUT
           ,@EMPRESA
           ,@NOMBRE_ARCHIVO
           ,@TIPO_CONTENIDO
           ,[dbo].[hoy](GETDATE())
           ,[dbo].[ahora](GETDATE())
           ,@USUARIO
           ,@VALIDADO
           ,@CERTUSUARIO
           ,[dbo].[hoy](GETDATE())
           ,[dbo].[ahora](GETDATE())
           ,@IDRECHAZO
           ,@OBSCERTIFICACION
           ,@ID_ARCHIVO
           ,@FECHA_INI
           ,@FECHA_FIN
           ,@CANTDIAS)
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_SELECT_DISPUTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_SELECT_DISPUTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_SELECT_DISPUTA]
(@RUT			NVARCHAR(10)= NULL
,@FECHA_INI		NVARCHAR(8)= NULL
,@FECHA_FIN	    NVARCHAR(8)= NULL
,@ID_DOC	    int= NULL
,@ID_DISPUTA	INT = NULL) AS
BEGIN
	IF @ID_DISPUTA <= 0
		BEGIN
			SELECT L.RUT, L.FECHA_INI, L.FECHA_FIN, W.NOMBRES, W.APELLIDOS, D.NOMBRE, L.VALIDADO, L.ID_ARCHIVO,DCLC.ESTADO, DCLC.OBSERVACION, DCLC.OBSERVACION_REVAL, DCLC.EMPRESA
			FROM DOCS_CONTROLACCESO_LABORAL L INNER JOIN WORKERS W ON W.RUT = L.RUT 
											  INNER JOIN DOCS D ON D.ID_DOC = L.ID_DOC  
											  LEFT JOIN DOCS_CONTROLACCESO_LABORAL_DISPUTA DCLC ON DCLC.ID = L.ID_ARCHIVO AND  DCLC.RUT = L.RUT AND DCLC.ID_DOC = L.ID_DOC
			WHERE L.RUT = @RUT AND L.FECHA_INI = @FECHA_INI AND L.FECHA_FIN = @FECHA_FIN AND L.ID_DOC = @ID_DOC
		END
	ELSE
		BEGIN
			SELECT L.RUT, L.FECHA_INI, L.FECHA_FIN, W.NOMBRES, W.APELLIDOS, D.NOMBRE, L.VALIDADO, L.ID_ARCHIVO,DCLC.ESTADO, DCLC.OBSERVACION, DCLC.OBSERVACION_REVAL, DCLC.EMPRESA 
			FROM DOCS_CONTROLACCESO_LABORAL L INNER JOIN WORKERS W ON W.RUT = L.RUT 
											  INNER JOIN DOCS D ON D.ID_DOC = L.ID_DOC 
											  LEFT JOIN DOCS_CONTROLACCESO_LABORAL_DISPUTA DCLC ON DCLC.ID = L.ID_ARCHIVO AND DCLC.RUT = L.RUT AND DCLC.ID_DOC = L.ID_DOC 
	       WHERE DCLC.ID_DISPUTA = @ID_DISPUTA
		END

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_SELECT_DISPUTA_FUNCIONARIOSCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_SELECT_DISPUTA_FUNCIONARIOSCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_SELECT_DISPUTA_FUNCIONARIOSCTTA]
(@RUT		    NVARCHAR(10) = NULL 
,@FECHA_INI		NVARCHAR(8) = NULL 
,@FECHA_FIN	    NVARCHAR(8) = NULL 
,@ID_DOC	INT = NULL) AS
BEGIN

SELECT L.RUT, L.FECHA_INI, L.FECHA_FIN, W.NOMBRES, W.APELLIDOS, D.NOMBRE, L.VALIDADO, L.ID_ARCHIVO ,L.EMPRESA, L.ID_DOC
FROM DOCS_CONTROLACCESO_LABORAL L INNER JOIN WORKERS W ON W.RUT = L.RUT 
                                  INNER JOIN DOCS D ON D.ID_DOC = L.ID_DOC 
WHERE L.RUT = @RUT AND L.FECHA_INI = @FECHA_INI AND L.FECHA_FIN = @FECHA_FIN AND L.ID_DOC = @ID_DOC
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_SELECT_HISTORICO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_SELECT_HISTORICO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_CONTROLACCESO_LABORAL_SELECT_HISTORICO]
(@RUT		NVARCHAR(10) = NULL 
,@ID_DOC	INT = NULL) AS
BEGIN

		SELECT	   DCL.ID				, DCL.FECHASUBE	, DCL.VALIDADO	, DCL.FECHA_INI
				 , DCL.FECHA_FIN		, DCL.ID_ARCHIVO, DCL.CANTDIAS	, DCL.USUARIO
				 , DCL.OBSCERTIFICACION	, DCL.ID_ARCHIVO, DCL.FECHASUBE	, DCL.HORASUBE
				 , DCL.CERTUSUARIO		, DCL.CERTFECHA	, DCL.CERTHORA  , DCL.EMPRESA
				 , W.NOMBRES			, W.APELLIDOS   ,ID_DOC         ,DCL.RUT
		FROM DOCS_CONTROLACCESO_LABORAL AS DCL
		LEFT JOIN WORKERS AS W ON W.RUT = DCL.USUARIO
		WHERE  DCL.RUT = @RUT AND DCL.ID_DOC = @ID_DOC
		ORDER BY FECHA_INI

END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_DEPENDENCIAS_VEHICULOSCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_DEPENDENCIAS_VEHICULOSCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_DEPENDENCIAS_VEHICULOSCTTA]
(@DIVCOD	NVARCHAR(4) = NULL
,@PATENTE	NVARCHAR(6) = NULL
,@ID_DOC	INT = NULL
,@IDEMPRESA NVARCHAR(11) = NULL) AS
BEGIN
	SELECT DP.ID_DOC_DEPEND, D.NOMBRE, D.COMUN,D.COMUN_DIV , '' AS VALIDADO
	INTO #TEMP
	FROM DOCS D 
	INNER JOIN DOCS_DEPEND DP ON DP.ID_DOC_DEPEND = D.ID_DOC
	WHERE DP.ID_DOC = @ID_DOC AND DP.ACTIVO = 'SI' AND DP.DIVISION = @DIVCOD

	DECLARE @ID_DOC_DEPEND	INT,
			@COMUN		    INT,
			@COMUN_DIV	NVARCHAR(2)

	DECLARE Docs_Dependencia CURSOR FOR
	SELECT ID_DOC_DEPEND , COMUN , COMUN_DIV FROM #TEMP 
	OPEN Docs_Dependencia

	FETCH Docs_Dependencia INTO    @ID_DOC_DEPEND , @COMUN , @COMUN_DIV

	WHILE (@@FETCH_STATUS = 0 )
		BEGIN
		DECLARE @VALIDADO NVARCHAR(2) = NULL
		IF @COMUN = 0 
			BEGIN
				IF @COMUN_DIV <> 'SI'
					BEGIN
						SELECT TOP 1 @VALIDADO = VALIDADO 
						FROM DOCS_TRANSPORT 
						WHERE (PATENTE = @PATENTE ) AND 
						(ID_DOC = @ID_DOC_DEPEND) AND 
						(EMPRESA = @IDEMPRESA) AND 
						((DIVISION = @DIVCOD ) OR (ISNULL(DIVISION, 'AA') = 'AA'))
						ORDER BY ID_DOCS_VEH DESC
					END
				ELSE
					BEGIN
						SELECT TOP 1 @VALIDADO = VALIDADO 
						FROM DOCS_TRANSPORT 
						WHERE (PATENTE = @PATENTE ) AND 
						(ID_DOC = @ID_DOC_DEPEND) AND 
						(EMPRESA = @IDEMPRESA)
						ORDER BY ID_DOCS_VEH DESC
					END
			END
		ELSE
			BEGIN
				IF @COMUN_DIV <> 'SI'
					BEGIN
						SELECT TOP 1 @VALIDADO = VALIDADO 
						FROM DOCS_TRANSPORT 
						WHERE (PATENTE = @PATENTE ) AND 
						(ID_DOC = @ID_DOC_DEPEND) AND 
						((DIVISION = @DIVCOD ) OR (ISNULL(DIVISION, 'AA') = 'AA'))
						ORDER BY ID_DOCS_VEH DESC
					END
			END

		IF @VALIDADO = 'SI' --OR @VALIDADO IS NULL
		BEGIN
			DELETE FROM #TEMP WHERE ID_DOC_DEPEND = @ID_DOC_DEPEND
		END

		FETCH Docs_Dependencia INTO @ID_DOC_DEPEND , @COMUN , @COMUN_DIV
		END
	CLOSE Docs_Dependencia
	DEALLOCATE Docs_Dependencia

	SELECT *  FROM #TEMP
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_DISPUTA_CLABORAL_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_DISPUTA_CLABORAL_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_DISPUTA_CLABORAL_INSERT_CONTROLLABORAL_CTTA]
(
  @ID					UNIQUEIDENTIFIER
 ,@ID_DOC				INT
 ,@PERIODO				NVARCHAR(6)
 ,@IDEMPRESA			NVARCHAR(12)
 ,@DIVISION				NVARCHAR(4)
 ,@OST					NVARCHAR(20)
 ,@OBSERVACION			NVARCHAR(1000)
 ,@USUARIO				NVARCHAR(10)
 ,@CERTUSUARIO			NVARCHAR(10)
 ,@CERTFECHA			NVARCHAR(8)
 ,@CERTHORA				NVARCHAR(8)
 ,@VALIDADO				NVARCHAR(2)
 ,@CERTIFICADO_ID		INT
 ,@DISPUTA_ID			INT OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	INSERT INTO DOCS_DISPUTA_CLABORAL
				(
					ID, ID_DOC, PERIODO, EMPRESA,
					DIVISION, OST, OBSERVACION,
					USUARIO, FECHA, HORA,
					CERTUSUARIO, CERTFECHA, CERTHORA,
					ESTADO, VALIDADO, ID_CERTIFICADO
				)
	VALUES
				(
					@ID, @ID_DOC, @PERIODO, @IDEMPRESA,
					@DIVISION, @OST, @OBSERVACION,
					@USUARIO, @CURR_FECHA, @CURR_TIEMPOFULL,
					@CERTUSUARIO, @CERTFECHA, @CERTHORA,
					'NO', @VALIDADO, @CERTIFICADO_ID
				)
	SET @DISPUTA_ID = SCOPE_IDENTITY()
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_DISPUTA_CLABORAL_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_DISPUTA_CLABORAL_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_DISPUTA_CLABORAL_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @DISPUTA_ID	INT
) AS
BEGIN
	SELECT
		TOP 1
		DD.USUARIO,
		DD.FECHA,
		DD.HORA,
		DD.CERTUSUARIO,
		DD.CERTFECHA,
		DD.CERTHORA,
		DD.REVALUSUARIO,
		DD.REVALFECHA,
		DD.REVALHORA,
		DD.EMPRESA,
		DD.DIVISION,
		DD.OST,
		DD.PERIODO,
		DD.ID,
		DD.OBSERVACION,
		DD.VALIDADO,
		DD.ESTADO,
		DD.OBSERVACION_REVAL,
		DD.ID_DOC,
		DD.ID_CERTIFICADO,
		E.ACRONIMO,
		D.NOMBRE,
		DD.ID_DISPUTA,
		[dbo].[V4MVC_FSTR_RUT](E.IDEMPRESA) AS STRUT_EMPRESA,
		COALESCE(
					(
						SELECT
							TOP 1
							CONCAT(NOMBRES, ' ', APELLIDOS)
						FROM WORKERS
						WHERE RUT = DD.USUARIO
					), ''
				) AS NOMBRE_USUARIO
	FROM DOCS_DISPUTA_CLABORAL DD
	INNER JOIN DOCS D
		ON D.ID_DOC = DD.ID_DOC
	INNER JOIN ENTERPRISE E
		ON E.IDEMPRESA = DD.EMPRESA
	WHERE DD.ID_DISPUTA = @DISPUTA_ID
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_DISPUTA_INSERT_DISPUTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_DISPUTA_INSERT_DISPUTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_DISPUTA_INSERT_DISPUTA]
( @ID                 uniqueidentifier = NULL
, @ID_DOC             int = NULL
, @DIVISION           nvarchar(50) = NULL
, @EMPRESA            nvarchar(10) = NULL
, @RUT                nvarchar(10) = NULL
, @OBSERVACION        nvarchar(1000) = NULL
, @USUARIO            nvarchar(10) = NULL
, @CERTUSUARIO        nvarchar(10) = NULL
, @CERTFECHA          nvarchar(8) = NULL
, @CERTHORA           nvarchar(8) = NULL
, @ESTADO             nvarchar(2) = NULL
, @VALIDADO           nvarchar(2) = NULL ) AS 
BEGIN

   INSERT INTO [DOCS_DISPUTA]
	( ID	, ID_DOC		, DIVISION	, EMPRESA
	, RUT	, OBSERVACION	, USUARIO	, FECHA
	, HORA	, CERTUSUARIO	, CERTFECHA	, CERTHORA
	, ESTADO, VALIDADO   )
   VALUES
        ( @ID        , @ID_DOC            , @DIVISION     , @EMPRESA   
        , @RUT       , @OBSERVACION       , @USUARIO      , [dbo].[hoy](GETDATE())      
        , [dbo].[ahora](GETDATE())       , @CERTUSUARIO       , @CERTFECHA    , @CERTHORA  
        , @ESTADO    , @VALIDADO )

	DECLARE @ID_DISPUTA INT = SCOPE_IDENTITY()

	DECLARE @USUARIO_ NVARCHAR(10)
	DECLARE	@ID_TIPO_RECHAZO INT
	DECLARE Disputa_Rechazos CURSOR FOR

	SELECT ID_TIPO_RECHAZO, USUARIO FROM DOCS_WORKERS_RECHAZO WHERE ID = @ID AND RUT = @RUT AND ID_DOC = @ID_DOC
	OPEN Disputa_Rechazos

	FETCH Disputa_Rechazos INTO    @USUARIO_ , @ID_TIPO_RECHAZO

	WHILE (@@FETCH_STATUS = 0 )
		BEGIN
			INSERT INTO DOCS_DISPUTA_RECHAZO(ID_DISPUTA, RUT, ID_DOC, ID, USUARIO, ID_TIPO_RECHAZO)
			VALUES(@ID_DISPUTA,@RUT,@ID_DOC,@ID,@USUARIO_,@ID_TIPO_RECHAZO)
			FETCH AsignacionClinica INTO @USUARIO_ , @ID_TIPO_RECHAZO

		END
	CLOSE Disputa_Rechazos
	DEALLOCATE Disputa_Rechazos
	

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_DISPUTA_SELECT_DOCUMENTO_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_DISPUTA_SELECT_DOCUMENTO_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_DISPUTA_SELECT_DOCUMENTO_CTTA]
(@RUT				NVARCHAR(10) = NULL
,@DIVCOD			NVARCHAR(50) = NULL
,@ID_DOC			INT = NULL
,@ID				UNIQUEIDENTIFIER = NULL
,@COMUN_DIV			NVARCHAR(2) = NULL
,@IDEMPRESA			NVARCHAR(10) = NULL) AS
BEGIN

	SELECT TOP 1 ESTADO, ID_DISPUTA 
	FROM DOCS_DISPUTA 
	WHERE RUT = @RUT AND 
	DIVISION = (CASE WHEN @COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVCOD END) AND 
	ID_DOC = @ID_DOC AND 
	ID = @ID AND 
	EMPRESA = @IDEMPRESA
	ORDER BY ID_DISPUTA DESC
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_DISPUTA_TRANS_INSERT_DISPUTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_DISPUTA_TRANS_INSERT_DISPUTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_DISPUTA_TRANS_INSERT_DISPUTA]
( @ID                 uniqueidentifier = NULL
, @ID_DOC             int = NULL
, @DIVISION           nvarchar(50) = NULL
, @EMPRESA            nvarchar(10) = NULL
, @PATENTE                nvarchar(10) = NULL
, @OBSERVACION        nvarchar(1000) = NULL
, @USUARIO            nvarchar(10) = NULL
, @CERTUSUARIO        nvarchar(10) = NULL
, @ESTADO             nvarchar(2) = NULL
, @VALIDADO           nvarchar(2) = NULL ) AS 
BEGIN

   INSERT INTO [DOCS_DISPUTA_TRANS]
	( ID	, ID_DOC		, DIVISION	, EMPRESA
	, PATENTE	, OBSERVACION	, USUARIO	, FECHA
	, HORA	, CERTUSUARIO	, CERTFECHA	, CERTHORA
	, ESTADO, VALIDADO   )
   VALUES
        ( @ID        , @ID_DOC            , @DIVISION     , @EMPRESA   
        , @PATENTE       , @OBSERVACION       , @USUARIO      , [dbo].[hoy](GETDATE())      
        , [dbo].[ahora](GETDATE())       , @CERTUSUARIO       , [dbo].[hoy](GETDATE()) , [dbo].[ahora](GETDATE()) 
        , @ESTADO    , @VALIDADO )

	DECLARE @ID_DISPUTA INT = SCOPE_IDENTITY()

	DECLARE @USUARIO_ NVARCHAR(10)
	DECLARE	@ID_TIPO_RECHAZO INT
	DECLARE Disputa_Rechazos CURSOR FOR

	SELECT ID_TIPO_RECHAZO, USUARIO FROM DOCS_TRANSPORT_RECHAZO WHERE ID = @ID AND PATENTE = @PATENTE AND ID_DOC = @ID_DOC
	OPEN Disputa_Rechazos

	FETCH Disputa_Rechazos INTO    @ID_TIPO_RECHAZO, @USUARIO_

	WHILE (@@FETCH_STATUS = 0 )
		BEGIN
			INSERT INTO DOCS_DISPUTA_TRANS_RECHAZO(PATENTE, ID_DOC, ID, USUARIO, ID_TIPO_RECHAZO,ID_DISPUTA)
			                                VALUES(@PATENTE,@ID_DOC,@ID,@USUARIO_,@ID_TIPO_RECHAZO,@ID_DISPUTA)
			FETCH Disputa_Rechazos INTO  @ID_TIPO_RECHAZO, @USUARIO_

		END
	CLOSE Disputa_Rechazos
	DEALLOCATE Disputa_Rechazos
	

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_DISPUTA_TRANS_SELECT_TRANSPORT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_DISPUTA_TRANS_SELECT_TRANSPORT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_DISPUTA_TRANS_SELECT_TRANSPORT_CTTA]
(@PATENTE			NVARCHAR(10) = NULL
,@DIVCOD			NVARCHAR(50) = NULL
,@ID_DOC			INT = NULL
,@ID				UNIQUEIDENTIFIER = NULL
,@COMUN_DIV			NVARCHAR(2) = NULL
,@IDEMPRESA			NVARCHAR(10) = NULL) AS
BEGIN

	SELECT TOP 1 ESTADO, ID_DISPUTA 
	FROM DOCS_DISPUTA_TRANS 
	WHERE PATENTE = @PATENTE AND 
	--DIVISION = (CASE WHEN @COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVCOD END) AND 
	ID_DOC = @ID_DOC AND 
	ID = @ID --AND
	--EMPRESA = @IDEMPRESA
	ORDER BY ID_DISPUTA DESC
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_ENTERPRISE_DELETE_EMPRESA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_ENTERPRISE_DELETE_EMPRESA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_ENTERPRISE_DELETE_EMPRESA_CTTA]
( 
  @ID			UNIQUEIDENTIFIER
 ,@ID_EMPRESA	NVARCHAR(10)
) AS 
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	DECLARE @NROOST NVARCHAR(14)
	DECLARE @DIVISION NVARCHAR(10)
	DECLARE @CUMPLE NVARCHAR(2) = 'NO'
	DECLARE @OCUMPLE NVARCHAR(2)

	DELETE
	FROM DOCS_ENTERPRISE
	WHERE ID = @ID
	
	DELETE
	FROM ARCHIVOS
	WHERE ID = @ID

	IF([dbo].[V4MVC_FGET_RESULTADO_EMPRESA](@ID_EMPRESA) = 1)
		BEGIN
			SET @CUMPLE = 'SI'
		END

	/*		DECLARE @IDEMPRESA NVARCHAR(10)
			DECLARE @ACRONIMO NVARCHAR(50)
			O.IDEMPRESA, E.ACRONIMO, CONVERT(NVARCHAR(20), O.FECHA_AVISOESE,113) AS FECHA_AVISO, AD.GLOSA
	*/
	DECLARE getEntry CURSOR FOR
	SELECT 
		O.NROOST,
		OD.DIVISION
	FROM OST O
	INNER JOIN OSTDIVLOCAL OD
		ON OD.EMPRESA = O.IDEMPRESA AND
		   OD.OST = O.NROOST AND
		   OD.ACTIVO = 'SI'
	LEFT OUTER JOIN ENTERPRISE E
		ON O.IDEMPRESA = E.IDEMPRESA
	LEFT OUTER JOIN A024_DIVISIONES AD
		ON OD.DIVISION = AD.DIVCOD
	WHERE
		O.AUTOR = 'SI' AND
		O.FECTERM >= dbo.hoy(getdate()) AND
		O.FECHA_AVISOESE IS NOT NULL AND
		O.IDEMPRESA = @ID_EMPRESA
	
	OPEN getEntry
	FETCH NEXT
	FROM getEntry INTO @NROOST, @DIVISION
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @OCUMPLE = ''

			SELECT
				TOP 1
				@OCUMPLE = CUMPLE
			FROM LOG_CUMPLIMIENTO_EMPRESAS
			WHERE
				EMPRESA = @ID_EMPRESA AND
				DIVISION = @DIVISION
			ORDER BY ID DESC
			
			IF(@OCUMPLE = '')
				BEGIN
					INSERT INTO LOG_CUMPLIMIENTO_EMPRESAS
						  (
						   EMPRESA,OST,DIVISION,FECHA,HORA,CUMPLE)
					VALUES 
						  (
						   @ID_EMPRESA, @NROOST, @DIVISION, @CURR_FECHA,
						   @CURR_TIEMPOFULL, @CUMPLE)
				END
			ELSE
				BEGIN
					IF(@OCUMPLE <> @CUMPLE)
						BEGIN
							INSERT INTO LOG_CUMPLIMIENTO_EMPRESAS
									(
									  EMPRESA,OST,DIVISION,FECHA,HORA,CUMPLE)
							VALUES
							        (
									  @ID_EMPRESA, @NROOST, @DIVISION,
									  @CURR_FECHA, @CURR_TIEMPOFULL, @CUMPLE)
						END
				END
			FETCH NEXT
			FROM getEntry INTO @NROOST, @DIVISION
		END

	CLOSE getEntry
	DEALLOCATE getEntry
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_ENTERPRISE_INSERT_EMPRESA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_ENTERPRISE_INSERT_EMPRESA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_ENTERPRISE_INSERT_EMPRESA_CTTA]
( 
  @ID_DOC		INT
 ,@ID_EMPRESA	NVARCHAR(10)
 ,@EXTENSION	NVARCHAR(10)
 ,@USUARIO		NVARCHAR(10)
 ,@RET			BIT OUTPUT
 ,@NUEVO_ID		UNIQUEIDENTIFIER OUTPUT
) AS 
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	SET @RET = 0
	SET @NUEVO_ID = NULL
	IF(EXISTS(
		SELECT
			DOCS_EXT.ID_DOC_EXT
		FROM DOCS_FORMATO, DOCS_EXT
		WHERE
			(DOCS_FORMATO.ID_DOC = @ID_DOC) AND
			(DOCS_EXT.EXTENSION = @EXTENSION) AND
			(DOCS_FORMATO.ID_DOC_EXT = DOCS_EXT.ID_DOC_EXT)
		))
		BEGIN
			SET @RET = 1
			SET @NUEVO_ID = NEWID()
			IF(NOT EXISTS(
				SELECT
					ID
				FROM DOCS_ENTERPRISE
				WHERE
					(IDEMPRESA = @ID_EMPRESA) AND
					(ID_DOC = @ID_DOC)
			))
				BEGIN
					INSERT INTO DOCS_ENTERPRISE
						(
						 IDEMPRESA, ID_DOC, FECHA_MOD, HORA_MOD,
						 USUARIO, ID, VALIDADO, FECHASUBE, HORASUBE)
					VALUES
					    (
						 @ID_EMPRESA, @ID_DOC, @CURR_FECHA, @CURR_TIEMPOFULL,
						 @USUARIO, @NUEVO_ID, 'NO', @CURR_FECHA, @CURR_TIEMPOFULL)
				END
			ELSE
				BEGIN
					UPDATE DOCS_ENTERPRISE
					SET
						FECHASUBE = @CURR_FECHA,
						HORASUBE = @CURR_TIEMPOFULL,
						USUARIO = @USUARIO,
						FECHA_MOD = @CURR_FECHA,
						HORA_MOD = @CURR_TIEMPOFULL,
						VALIDADO = 'NO',
						ID = @NUEVO_ID
					WHERE
						(IDEMPRESA = @ID_EMPRESA) AND
						(ID_DOC = @ID_DOC)
				END
		END
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_FEC_SELECT_EMPRESA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_FEC_SELECT_EMPRESA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_FEC_SELECT_EMPRESA_CTTA]
(@ID_DOC			INT = NULL
,@IDEMPRESA			NVARCHAR(11) = NULL)
AS
BEGIN
	SELECT DF.ID_DOC_FEC
		 , DF.NOMBRE
		 , DF.CAMPO_BD 
		 , (SELECT TOP 1 FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @IDEMPRESA) AND (ID_DOC_FEC = DF.ID_DOC_FEC)) AS FECHA
		 , [dbo].[hoy](GETDATE()) AS FECHAHOY
	FROM DOCS_FEC AS DF
	WHERE (ID_DOC_DEPEND = @ID_DOC AND (ACTIVO = 'SI'))
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_FEC_SELECT_FECHASDOC_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_FEC_SELECT_FECHASDOC_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_FEC_SELECT_FECHASDOC_CTTA]
(@RUT			NVARCHAR(10) = NULL
,@ID_DOC		INT = NULL
,@DIVCOD		NVARCHAR(20) = NULL
,@IDEMPRESA		NVARCHAR(11) = NULL
) AS
BEGIN
	SELECT DISTINCT DF.ID_DOC_FEC
		 , DF.NOMBRE
		 , DF.ID_DOC_DEPEND
		 , (CASE WHEN EXISTS(SELECT DFT.TIPOPASE 
						FROM DOCS_FEC_TIPOPASE AS DFT WHERE DFT.ID_DOC_FEC = DF.ID_DOC_FEC AND (DFT.DIVISION = @DIVCOD))
					  THEN 'OBLIGATORIO' ELSE '' END) AS TIPOPASE
		 , DF.VALIDO_MAYOR_HOY
		 , '19000101' AS FECHA 
		 , [dbo].[hoy](GETDATE()) AS FECHAHOY
	INTO #TEMP
	FROM DOCS_FEC AS DF
	WHERE (DF.ID_DOC_DEPEND = @ID_DOC) AND 
	(DF.ACTIVO = 'SI') 

	DECLARE @ID_DOC_FEC			INT,
			@NOMBRE				NVARCHAR(100),
			@FECHA				NVARCHAR(8)
	DECLARE Fechas_DocsCtta CURSOR FOR
	SELECT ID_DOC_FEC , NOMBRE , FECHA    FROM #TEMP 
	OPEN Fechas_DocsCtta

	FETCH Fechas_DocsCtta INTO    @ID_DOC_FEC , @NOMBRE , @FECHA 

	WHILE (@@FETCH_STATUS = 0 )
		BEGIN

			DECLARE @EMP_COMUN INT
			DECLARE @DIV_COMUN INT
			SELECT @EMP_COMUN = D.COMUN 
				, @DIV_COMUN = DF.COMUN 
			FROM DOCS_FEC AS DF 
			INNER JOIN DOCS AS D ON DF.ID_DOC_DEPEND = D.ID_DOC 
			WHERE (DF.ID_DOC_FEC = @ID_DOC_FEC)

			DECLARE @VAL_FECHA NVARCHAR(8) = ''
				
					IF(@EMP_COMUN = 0)
						BEGIN
							IF(@DIV_COMUN =0)
								BEGIN
									SELECT TOP 1 @VAL_FECHA = FECHA 
									FROM DOCS_FEC_WORKERS 
									WHERE (RUT = @RUT) AND 
									(ID_DOC_FEC = @ID_DOC_FEC) AND 
									(DIVISION = @DIVCOD) AND 
									(EMPRESA = @IDEMPRESA)
									ORDER BY FECHA DESC
								END
							ELSE
								BEGIN
									SELECT TOP 1 @VAL_FECHA = FECHA 
									FROM DOCS_FEC_WORKERS 
									WHERE (RUT = @RUT) AND 
									(ID_DOC_FEC = @ID_DOC_FEC) AND 
									(EMPRESA = @IDEMPRESA)
									ORDER BY FECHA DESC
								END
						END
					ELSE
						BEGIN
							IF(@DIV_COMUN =0)
								BEGIN
									SELECT TOP 1 @VAL_FECHA = FECHA 
									FROM DOCS_FEC_WORKERS 
									WHERE (RUT = @RUT) AND 
									(ID_DOC_FEC = @ID_DOC_FEC) AND 
									(DIVISION = @DIVCOD)
									ORDER BY FECHA DESC
								END
							ELSE
								BEGIN
									SELECT TOP 1 @VAL_FECHA = FECHA 
									FROM DOCS_FEC_WORKERS 
									WHERE (RUT = @RUT) AND 
									(ID_DOC_FEC = @ID_DOC_FEC)
									ORDER BY FECHA DESC
								END
						END
				
			UPDATE #TEMP SET FECHA = @VAL_FECHA
							, VALIDO_MAYOR_HOY = ISNULL((SELECT VALIDO_MAYOR_HOY FROM DOCS_FEC WHERE (ID_DOC_FEC = @ID_DOC_FEC)),0)
			WHERE ID_DOC_FEC = @ID_DOC_FEC

			FETCH Fechas_DocsCtta INTO @ID_DOC_FEC , @NOMBRE , @FECHA 
		END
	CLOSE Fechas_DocsCtta
	DEALLOCATE Fechas_DocsCtta

	SELECT *  FROM #TEMP
	
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_FEC_SELECT_FUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_FEC_SELECT_FUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_FEC_SELECT_FUNCIONARIOS_CTTA]
(
  @RUT			NVARCHAR(8) = ''
 ,@DIVCOD		NVARCHAR(4) = ''
 ,@IDEMPRESA	NVARCHAR(11) = ''
)
AS
BEGIN
	DECLARE @ID_DOC INT = 18 /*FINIQUITO*/
	
	SELECT
		DF.*,
		[dbo].[V4MVC_FGET_FECHA_WORKER_LOCAL](DF.ID_DOC_FEC, @RUT, @DIVCOD, @IDEMPRESA, 1) AS FEC_WLOCAL
	FROM DOCS_FEC AS DF
	WHERE
		(DF.ID_DOC_DEPEND = @ID_DOC) AND 
		(DF.ACTIVO = 'SI') 
	--ORDER BY ORDEN
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_FEC_SELECT_ONE_GETNOWFROMDB_UTILS]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_FEC_SELECT_ONE_GETNOWFROMDB_UTILS]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_FEC_SELECT_ONE_GETNOWFROMDB_UTILS]
AS
BEGIN
	SELECT convert(varchar, getdate(), 120)
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_FEC_TIPOPASE_SELECT_DIVISION]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_FEC_TIPOPASE_SELECT_DIVISION]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_FEC_TIPOPASE_SELECT_DIVISION]
(
@DIVCOD NVARCHAR(4)
)
AS
BEGIN

SELECT DISTINCT DF.CAMPO_BD FROM  DOCS_FEC AS DF 
	INNER JOIN DOCS_FEC_TIPOPASE AS DFT ON DF.ID_DOC_FEC = DFT.ID_DOC_FEC   
	WHERE  (DFT.TIPOPASE = 'TRABAJO') 
	AND (DFT.DIVISION = @DIVCOD)  
	ORDER BY DF.CAMPO_BD 

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_FEC_WORKERS_INSERT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_FEC_WORKERS_INSERT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_FEC_WORKERS_INSERT]
( @RUT         nvarchar(10) = NULL
, @DIVISION    nvarchar(20) = NULL
, @EMPRESA     nvarchar(10) = NULL
, @ID_DOC_FEC  int = NULL
, @FECHA       nvarchar(8) = NULL
, @FECHAMOD    nvarchar(8) = NULL
, @HORAMOD     nvarchar(8) = NULL
, @USUARIO     nvarchar(10) = NULL ) AS 
BEGIN

   INSERT INTO [DOCS_FEC_WORKERS]
        ( RUT   , DIVISION , EMPRESA , ID_DOC_FEC
        , FECHA , FECHAMOD , HORAMOD , USUARIO    )
   VALUES
        ( @RUT   , @DIVISION , @EMPRESA , @ID_DOC_FEC
        , @FECHA , DBO.HOY(GETDATE()) , DBO.AHORA(GETDATE()) , @USUARIO    )

	INSERT INTO DOCS_FEC_WORKERS_HST
		(RUT	, DIVISION	, EMPRESA	, ID_DOC_FEC	 
	   , FECHA	, FECHAMOD	, HORAMOD	, USUARIO) 
	VALUES
		( @RUT   , @DIVISION , @EMPRESA , @ID_DOC_FEC
        , @FECHA , DBO.HOY(GETDATE()) , DBO.AHORA(GETDATE()) , @USUARIO    )
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_FEC_WORKERS_SELECT_BY_ID_DOC_FEC_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_FEC_WORKERS_SELECT_BY_ID_DOC_FEC_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_FEC_WORKERS_SELECT_BY_ID_DOC_FEC_CTTA]
(
 @RUT					NVARCHAR(10)
,@DIVISION				NVARCHAR(4)
,@EMPRESA				NVARCHAR(10)
,@ID_DOCUMENTO			INT
,@ID_DOC_FEC			INT
,@COMUN					INT
,@VALIDADO_MAYOR_HOY	INT
,@EMPRESACOMUN			INT
)
AS
BEGIN

	DECLARE @QUERY NVARCHAR(MAX) = ''

	SET @QUERY = @QUERY + 'SELECT * FROM DOCS_FEC_WORKERS'
	SET @QUERY = @QUERY + ' WHERE RUT = ''' + @RUT + ''' '
	SET @QUERY = @QUERY + ' AND ID_DOC_FEC = ' + CAST(@ID_DOC_FEC AS VARCHAR) + ' '
	IF(@COMUN = 0) BEGIN SET @QUERY = @QUERY + ' AND DIVISION = ''' + @DIVISION +''' ' END 
	IF(@EMPRESACOMUN = 0) BEGIN SET @QUERY = @QUERY + ' AND EMPRESA = ''' + @EMPRESA + ''' ' END
	IF(@VALIDADO_MAYOR_HOY = 1 OR @ID_DOCUMENTO = 152 OR @ID_DOCUMENTO = 160) BEGIN SET @QUERY = @QUERY + ' AND FECHA >= ''' + DBO.HOY(GETDATE()) + ''' ' END

	PRINT(@QUERY)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_FEC_WORKERS_SELECT_FECHADOCUMENTO_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_FEC_WORKERS_SELECT_FECHADOCUMENTO_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_FEC_WORKERS_SELECT_FECHADOCUMENTO_CTTA]
(@RUT			NVARCHAR(10) = NULL
,@DIVCOD		NVARCHAR(20) = NULL 
,@IDEMPRESA		NVARCHAR(10) = NULL
,@ID_DOC_FEC	INT = NULL) AS
BEGIN
	DECLARE @EMP_COMUN INT
	DECLARE @DIV_COMUN INT
	SELECT @EMP_COMUN = D.COMUN 
		, @DIV_COMUN = DF.COMUN 
	FROM DOCS_FEC AS DF 
	INNER JOIN DOCS AS D ON DF.ID_DOC_DEPEND = D.ID_DOC 
	WHERE (DF.ID_DOC_FEC = @ID_DOC_FEC)
	PRINT @EMP_COMUN
	PRINT @DIV_COMUN

	IF(@EMP_COMUN IS NOT NULL AND @EMP_COMUN IS NOT NULL)
		BEGIN
			IF(@EMP_COMUN = 0)
				BEGIN
					IF(@EMP_COMUN =0)
						BEGIN
							SELECT TOP 1 FECHA 
							FROM DOCS_FEC_WORKERS 
							WHERE (RUT = @RUT) AND 
							(ID_DOC_FEC = @ID_DOC_FEC) AND 
							(DIVISION = @DIVCOD) AND 
							(EMPRESA = @IDEMPRESA)
							ORDER BY FECHA DESC
						END
					ELSE
						BEGIN
							SELECT TOP 1 FECHA 
							FROM DOCS_FEC_WORKERS 
							WHERE (RUT = @RUT) AND 
							(ID_DOC_FEC = @ID_DOC_FEC) AND 
							(EMPRESA = @IDEMPRESA)
							ORDER BY FECHA DESC
						END
				END
			ELSE
				BEGIN
					IF(@EMP_COMUN =0)
						BEGIN
							SELECT TOP 1 FECHA 
							FROM DOCS_FEC_WORKERS 
							WHERE (RUT = @RUT) AND 
							(ID_DOC_FEC = @ID_DOC_FEC) AND 
							(DIVISION = @DIVCOD)
							ORDER BY FECHA DESC
						END
					ELSE
						BEGIN
							SELECT TOP 1 FECHA 
							FROM DOCS_FEC_WORKERS 
							WHERE (RUT = @RUT) AND 
							(ID_DOC_FEC = @ID_DOC_FEC)
							ORDER BY FECHA DESC
						END
				END
		END
	ELSE
		BEGIN
			SELECT 'A' AS FECHA
		END
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_FEC_WORKERS_UPDATE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_FEC_WORKERS_UPDATE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_FEC_WORKERS_UPDATE]
( @RUT         nvarchar(10) = NULL
, @DIVISION    nvarchar(20) = NULL
, @EMPRESA     nvarchar(10) = NULL
, @ID_DOC_FEC  int = NULL
, @FECHA       nvarchar(8) = NULL
, @FECHAMOD    nvarchar(8) = NULL
, @HORAMOD     nvarchar(8) = NULL
, @USUARIO     nvarchar(10) = NULL ) AS 
BEGIN

   UPDATE [DOCS_FEC_WORKERS]
      SET [EMPRESA]    = @EMPRESA
        , [FECHA]      = @FECHA
        , [FECHAMOD]   = DBO.HOY(GETDATE())
        , [HORAMOD]    = DBO.AHORA(GETDATE())
        , [USUARIO]    = @USUARIO
	WHERE	[ID_DOC_FEC] = @ID_DOC_FEC
	AND		[RUT]        = @RUT

	INSERT INTO DOCS_FEC_WORKERS_HST
		(RUT	, DIVISION	, EMPRESA	, ID_DOC_FEC	 
	   , FECHA	, FECHAMOD	, HORAMOD	, USUARIO) 
	VALUES
		( @RUT   , @DIVISION , @EMPRESA , @ID_DOC_FEC
        , @FECHA , DBO.HOY(GETDATE()) , DBO.AHORA(GETDATE()) , @USUARIO    )

END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_FORMATO_SELECT_DOCUMENTACION_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_FORMATO_SELECT_DOCUMENTACION_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_FORMATO_SELECT_DOCUMENTACION_CTTA]
(@ID_DOC		INT = NULL ) AS
BEGIN

	SELECT DOCS_EXT.EXTENSION
	FROM DOCS_FORMATO, DOCS_EXT
	WHERE 	(DOCS_FORMATO.ID_DOC = @ID_DOC) AND
	(DOCS_FORMATO.ID_DOC_EXT = DOCS_EXT.ID_DOC_EXT)

ENDIF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_FORMATO_SELECT_EXTENSIONES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_FORMATO_SELECT_EXTENSIONES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_FORMATO_SELECT_EXTENSIONES_CTTA]
(@ID_DOC		INT = NULL ) AS
BEGIN

   SELECT STUFF((
	      SELECT ',' + DOCS_EXT.EXTENSION
		   FROM DOCS_FORMATO, DOCS_EXT 
		   WHERE 
		   (DOCS_FORMATO.ID_DOC = @ID_DOC) AND
		   (DOCS_FORMATO.ID_DOC_EXT = DOCS_EXT.ID_DOC_EXT)
       FOR XML PATH('')
	),1,1, '') AS EXTENSIONES

ENDIF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_FORMATO_SELECT_ONE_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_FORMATO_SELECT_ONE_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_FORMATO_SELECT_ONE_CONTRATOST_CTTA]   
(
  @INDEX			INT
 ,@EXTENSION		NVARCHAR(10)
 ,@EXISTE_QUERY		INT OUTPUT
) AS           
BEGIN
	DECLARE @ID_DOC	  INT = -1
	IF(@INDEX = 1)
		BEGIN
			SELECT
				TOP 1
				@ID_DOC = VALOR1
			FROM PARAMETROS_V2
			WHERE TITULO1 = 'DOC1'
		END
	ELSE IF(@INDEX = 2)
		BEGIN
			SELECT
				TOP 1
				@ID_DOC = VALOR2
			FROM PARAMETROS_V2
			WHERE TITULO2 = 'DOC2'
		END
	SET @EXISTE_QUERY = 0 
	IF(EXISTS(
		SELECT
			DOCS_EXT.ID_DOC_EXT
		FROM DOCS_FORMATO, DOCS_EXT
		WHERE
			(DOCS_FORMATO.ID_DOC = @ID_DOC) AND
			(DOCS_EXT.EXTENSION = @EXTENSION) AND
			(DOCS_FORMATO.ID_DOC_EXT = DOCS_EXT.ID_DOC_EXT)
	))
		BEGIN
			SET @EXISTE_QUERY = 1
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_OST_PREVENCIONISTA_DELETE_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_OST_PREVENCIONISTA_DELETE_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_OST_PREVENCIONISTA_DELETE_CONTRATOST_CTTA]
(
  @NUM_SOLICITUD		INT
 ,@USUARIO				NVARCHAR(10)
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	IF(EXISTS(
		(
			SELECT *
			FROM DOCS_OST_PREVENCIONISTA
			WHERE ID = @NUM_SOLICITUD
		)
	))
		BEGIN
			UPDATE DOCS_OST_PREVENCIONISTA
			SET
				RUT_PREVENCIONISTA = '',
				ID_ARCHIVO = NULL,
				USRSUBE = '',
				FECHASUBE = '',
				HORASUBE = '',
				USRMOD = @USUARIO,
				FECHAMOD = @CURR_FECHA,
				HORAMOD = @CURR_TIEMPOFULL
			WHERE ID = @NUM_SOLICITUD

			INSERT INTO DOCS_OST_PREVENCIONISTA_HIST
				(
				ID, OST, EMPRESA, DOTACION, USRCREACION, FECHACREACION,
				HORACREACION, APORTE_ANGLO, MOTIVO, RUT_PREVENCIONISTA, ID_ARCHIVO,
				ESTADO, USRSUBE, FECHASUBE, HORASUBE, CERTUSUARIO, CERTFECHA,
				CERTHORA, OBSERVACION, USRAPORTE, FECHAAPORTE, HORAAPORTE, USRMOD,
				FECHAMOD, HORAMOD)
			SELECT
				ID, OST, EMPRESA, DOTACION, USRCREACION, FECHACREACION,
				HORACREACION, APORTE_ANGLO, MOTIVO, RUT_PREVENCIONISTA,
				ID_ARCHIVO, ESTADO, USRSUBE, FECHASUBE, HORASUBE, CERTUSUARIO,
				CERTFECHA, CERTHORA, OBSERVACION, USRAPORTE, FECHAAPORTE, HORAAPORTE,
				USRMOD, FECHAMOD, HORAMOD
			FROM DOCS_OST_PREVENCIONISTA
			WHERE ID = @NUM_SOLICITUD 

		END
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_OST_PREVENCIONISTA_SELECT_ONE_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_OST_PREVENCIONISTA_SELECT_ONE_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_OST_PREVENCIONISTA_SELECT_ONE_CONTRATOST_CTTA]
(
  @NUM_SOLICITUD	INT
 ,@NROOST			NVARCHAR(14)
 ,@IDEMPRESA		NVARCHAR(10)
 ,@MADRE			NVARCHAR(10)
 ,@NIVEL			SMALLINT
 ,@SUBE_DOCUMENTO	INT OUTPUT
) AS
BEGIN
	
	SET @SUBE_DOCUMENTO = 1

	IF(COALESCE(
		(
			SELECT
				TOP 1 
				APORTE_ANGLO
			FROM DOCS_OST_PREVENCIONISTA
			WHERE
				ID = @NUM_SOLICITUD
		)
	  ,'') = 'SI')
		BEGIN
			SET @SUBE_DOCUMENTO = 0
		END

	IF(EXISTS(
			SELECT
				OS.FINICIO AS FECINICIO,
				OS.FTERMINO AS FECTERM,
				O.DESCRIPOST,
				O.DOTTRANS,
				O.DOTACION,
				O.VALIDADOR
			FROM OST O
			INNER JOIN OSTARBOL OS
				ON OS.OST = O.NROOST
			WHERE
				O.NROOST = @NROOST AND
				OS.EMPRESA = @IDEMPRESA AND
				OS.MADRE = @MADRE AND
				OS.NIVEL = @NIVEL)
	)
	BEGIN
		IF(@NUM_SOLICITUD = -1)
			BEGIN
				SET @SUBE_DOCUMENTO = 0
			END
	END

	SELECT
		SS.OST,
		SS.MADRE,
		SS.EMPRESA,
		SS.DOTACION,
		SS.APORTE_ANGLO,
		SS.MOTIVO,
		SS.RUT_PREVENCIONISTA,
		SS.USRSUBE,
		SS.FECHASUBE,
		SS.HORASUBE,
		SS.ID_ARCHIVO,
		SS.ESTADO,
		SS.OBSERVACION,
		SS.CERTUSUARIO,
		SS.CERTFECHA,
		SS.CERTHORA,
		SS.NOMBRES,
		SS.APELLIDOS,
		SS.FONO,
		SS.EMAIL,
		SS.APORTE_ANGLO,
		COALESCE(
			(
			SELECT
				CONCAT(W.NOMBRES, ' ', W.APELLIDOS)
			FROM WORKERS W
			WHERE W.RUT = SS.CERTUSUARIO
			), ''
		) AS CERT_FNOMBRES
	FROM
	(
		SELECT
			TOP 1
				DOP.OST,
				DOP.MADRE,
				DOP.EMPRESA,
				DOP.DOTACION,
				DOP.APORTE_ANGLO,
				ISNULL(DOP.MOTIVO, '') AS MOTIVO,
				ISNULL(DOP.RUT_PREVENCIONISTA, '') AS RUT_PREVENCIONISTA,
				DOP.USRSUBE,
				DOP.FECHASUBE,
				DOP.HORASUBE,
				DOP.ID_ARCHIVO,
				DOP.ESTADO,
				DOP.OBSERVACION,
				ISNULL(DOP.CERTUSUARIO, '') AS CERTUSUARIO,
				ISNULL(DOP.CERTFECHA, '') AS CERTFECHA,
				ISNULL(DOP.CERTHORA, '') AS CERTHORA,
				COALESCE(
					(
					SELECT
						TOP 1
							W.NOMBRES
						FROM WORKERS W
						LEFT JOIN DIRECCION D
							ON W.RUT = D.RUT
						WHERE W.RUT = DOP.RUT_PREVENCIONISTA
					), ''
				) AS NOMBRES,
				COALESCE(
					(
					SELECT
						TOP 1
							W.APELLIDOS
						FROM WORKERS W
						LEFT JOIN DIRECCION D
							ON W.RUT = D.RUT
						WHERE W.RUT = DOP.RUT_PREVENCIONISTA
					), ''
				) AS APELLIDOS,
				COALESCE(
					(
					SELECT
						TOP 1
							D.FONO
						FROM WORKERS W
						LEFT JOIN DIRECCION D
							ON W.RUT = D.RUT
						WHERE W.RUT = DOP.RUT_PREVENCIONISTA
					), ''
				) AS FONO,
				COALESCE(
					(
					SELECT
						TOP 1
							D.EMAIL
						FROM WORKERS W
						LEFT JOIN DIRECCION D
							ON W.RUT = D.RUT
						WHERE W.RUT = DOP.RUT_PREVENCIONISTA
					), ''
				) AS EMAIL
		FROM DOCS_OST_PREVENCIONISTA DOP
		WHERE DOP.ID = @NUM_SOLICITUD
	) SS

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_OST_PREVENCIONISTA_SELECT_ONE_V2_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_OST_PREVENCIONISTA_SELECT_ONE_V2_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_OST_PREVENCIONISTA_SELECT_ONE_V2_CONTRATOST_CTTA]
(
  @NUM_SOLICITUD  INT
) AS
BEGIN
	DECLARE @CS_EMAILS NVARCHAR(MAX) = ''
	DECLARE @SEP NVARCHAR(2) = ''
	DECLARE @PERFIL NVARCHAR(500) = ''
	DECLARE @ADMEMAIL NVARCHAR(50) = ''
	SELECT
		TOP 1
		@PERFIL = Valor1
	FROM PARAMETROS_V2
	WHERE DESCRIPCION = 'Validacion Docs Prevencionistas'

	DECLARE cursor_mails CURSOR
	FOR
	SELECT ADMEMAIL
	FROM ADMIN
	WHERE ADMTIPO = @PERFIL

	OPEN cursor_mails

	FETCH NEXT FROM cursor_mails INTO 
		@ADMEMAIL

	WHILE @@FETCH_STATUS = 0
		BEGIN
			
			SET @CS_EMAILS = CONCAT(@CS_EMAILS, @SEP, @ADMEMAIL)
			SET @SEP = ';'

			FETCH NEXT FROM cursor_mails INTO 
				@ADMEMAIL
		END

	CLOSE cursor_mails

	DEALLOCATE cursor_mails

	SELECT
		@CS_EMAILS AS CS_EMAILS,
		DOP.OST,
		DOP.MADRE,
		COALESCE(
					(
						SELECT
							TOP 1
							E1.ACRONIMO
						FROM  ENTERPRISE E1
						WHERE E1.IDEMPRESA = DOP.MADRE
					)
		, '') AS MADRE_ACRONIMO,
		DOP.EMPRESA,
		COALESCE(
					(
						SELECT
							TOP 1
							E2.ACRONIMO
						FROM  ENTERPRISE E2
						WHERE E2.IDEMPRESA = DOP.EMPRESA
					)
		, '') AS EMPRESA_ACRONIMO,
		DOP.RUT_PREVENCIONISTA,
		COALESCE(
					(
						SELECT
							TOP 1
							CONCAT(W0.NOMBRES, ' ', W0.APELLIDOS) AS FNAME
						FROM  WORKERS W0
						WHERE W0.RUT = DOP.RUT_PREVENCIONISTA
					)
		, '') AS NOMBRES_PREVENCIONISTA,
		COALESCE(
					(
						SELECT
							TOP 1
							OS.FINICIO
						FROM OST O
						INNER JOIN OSTARBOL OS
							ON OS.OST = O.NROOST
						WHERE
							O.NROOST = DOP.OST AND
							OS.EMPRESA = DOP.EMPRESA AND
							OS.MADRE = DOP.MADRE 
					)
		,'') AS OST_FECINICIO,
		COALESCE(
					(
						SELECT
							TOP 1
							OS.FTERMINO
						FROM OST O
						INNER JOIN OSTARBOL OS
							ON OS.OST = O.NROOST
						WHERE
							O.NROOST = DOP.OST AND
							OS.EMPRESA = DOP.EMPRESA AND
							OS.MADRE = DOP.MADRE 
					)
		,'') AS OST_FECTERM,
		COALESCE(
					(
						SELECT
							TOP 1
							O.DESCRIPOST
						FROM OST O
						INNER JOIN OSTARBOL OS
							ON OS.OST = O.NROOST
						WHERE
							O.NROOST = DOP.OST AND
							OS.EMPRESA = DOP.EMPRESA AND
							OS.MADRE = DOP.MADRE 
					)
		,'') AS OST_DESCRIPOST,
		COALESCE(
					(
						SELECT
							TOP 1
							O.DOTTRANS
						FROM OST O
						INNER JOIN OSTARBOL OS
							ON OS.OST = O.NROOST
						WHERE
							O.NROOST = DOP.OST AND
							OS.EMPRESA = DOP.EMPRESA AND
							OS.MADRE = DOP.MADRE 
					)
		,'') AS OST_DOTTRANS,
		COALESCE(
					(
						SELECT
							TOP 1
							O.DOTACION
						FROM OST O
						INNER JOIN OSTARBOL OS
							ON OS.OST = O.NROOST
						WHERE
							O.NROOST = DOP.OST AND
							OS.EMPRESA = DOP.EMPRESA AND
							OS.MADRE = DOP.MADRE 
					)
		,'') AS OST_DOTACION,
		(CASE
			WHEN
				DOP.RUT_PREVENCIONISTA IS NOT NULL AND
				DOP.RUT_PREVENCIONISTA <> '' THEN
												COALESCE(
															(
																SELECT
																	D.FONO
																FROM WORKERS W1
																LEFT JOIN DIRECCION D
																	ON W1.RUT = D.RUT
																WHERE
																	W1.RUT = DOP.RUT_PREVENCIONISTA
															)
												, '')			
			ELSE ''
			END 
		) AS FONO,
		(CASE
			WHEN
				DOP.RUT_PREVENCIONISTA IS NOT NULL AND
				DOP.RUT_PREVENCIONISTA <> '' THEN
												COALESCE(
															(
																SELECT
																	D.EMAIL
																FROM WORKERS W2
																LEFT JOIN DIRECCION D
																	ON W2.RUT = D.RUT
																WHERE
																	W2.RUT = DOP.RUT_PREVENCIONISTA
															)
												, '')			
			ELSE ''
			END 
		) AS EMAIL

	FROM DOCS_OST_PREVENCIONISTA DOP
	WHERE DOP.ID = @NUM_SOLICITUD

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_OST_PREVENCIONISTA_UPDATE_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_OST_PREVENCIONISTA_UPDATE_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_OST_PREVENCIONISTA_UPDATE_CONTRATOST_CTTA]
(
  @NUM_SOLICITUD	INT
 ,@RUT				NVARCHAR(10)
 ,@NOMBRES			NVARCHAR(50)
 ,@APELLIDOS		NVARCHAR(50)
 ,@IDEMPRESA		NVARCHAR(10)
 ,@FONO				NVARCHAR(50)
 ,@EMAIL			NVARCHAR(50)
 ,@USUARIO			NVARCHAR(10)
 ,@ESTADO_ANTERIOR	NVARCHAR(2)
 ,@ID_ARCHIVO		UNIQUEIDENTIFIER
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	DECLARE @SUMA_MESES_120 NVARCHAR(8) = convert(NVARCHAR(8), DATEADD(MONTH, 120, GETDATE()), 112) /* yyyymmdd */

	UPDATE DOCS_OST_PREVENCIONISTA
	SET
		ID_ARCHIVO = @ID_ARCHIVO
	WHERE ID = @NUM_SOLICITUD

	IF(NOT EXISTS(
		(
			SELECT * FROM WORKERS WHERE RUT = @RUT
		)
	))
		BEGIN
			INSERT INTO WORKERS (RUT, NOMBRES, APELLIDOS) VALUES(@RUT, @NOMBRES, @APELLIDOS)
			INSERT INTO WORKERSLOCAL
			(
			RUT, EMPRESA, DIVISION, TIPOPASE, FINIPASE,
			FFINPASE, AUTOR, LOTE, OST)
			VALUES
			(
			@RUT, @IDEMPRESA, 'LB', 'TRABAJO',
			@CURR_FECHA, @SUMA_MESES_120, 'NO', 0, 'NOMINA')
		END

	IF(NOT EXISTS(
			(
				SELECT * FROM DIRECCION WHERE RUT = @RUT
			)
		))
		BEGIN
			INSERT INTO DIRECCION (RUT, FONO, EMAIL) VALUES(@RUT, @FONO, @EMAIL)
		END
	ELSE
		BEGIN
			UPDATE DIRECCION
			SET
				FONO = @FONO,
				EMAIL = @EMAIL
			WHERE RUT = @RUT
		END

	IF(EXISTS(
			(
				SELECT * FROM DOCS_OST_PREVENCIONISTA WHERE ID = @NUM_SOLICITUD
			)
		))
		BEGIN
			IF(@ESTADO_ANTERIOR <> 'SI' OR @ESTADO_ANTERIOR <> 'RE')
				BEGIN
								UPDATE DOCS_OST_PREVENCIONISTA
								SET
									ESTADO = 'PE',
									RUT_PREVENCIONISTA = @RUT,
									USRSUBE = @USUARIO,
									FECHASUBE = @CURR_FECHA,
									HORASUBE = @CURR_TIEMPOFULL,
									USRMOD = @USUARIO,
									FECHAMOD = @CURR_FECHA,
									HORAMOD = @CURR_TIEMPOFULL
								WHERE ID = @NUM_SOLICITUD
				END
			ELSE
				BEGIN
								UPDATE DOCS_OST_PREVENCIONISTA
								SET
									RUT_PREVENCIONISTA = @RUT,
									USRSUBE = @USUARIO,
									FECHASUBE = @CURR_FECHA,
									HORASUBE = @CURR_TIEMPOFULL,
									USRMOD = @USUARIO,
									FECHAMOD = @CURR_FECHA,
									HORAMOD = @CURR_TIEMPOFULL
								WHERE ID = @NUM_SOLICITUD
				END

			/*********************************/
			INSERT INTO DOCS_OST_PREVENCIONISTA_HIST
				(
				ID, OST, EMPRESA, DOTACION, USRCREACION, FECHACREACION,
				HORACREACION, APORTE_ANGLO, MOTIVO, RUT_PREVENCIONISTA,
				ID_ARCHIVO, ESTADO, USRSUBE, FECHASUBE, HORASUBE, CERTUSUARIO,
				CERTFECHA, CERTHORA, OBSERVACION, USRAPORTE, FECHAAPORTE,
				HORAAPORTE, USRMOD, FECHAMOD, HORAMOD)
			SELECT
				ID, OST, EMPRESA, DOTACION, USRCREACION, FECHACREACION,
				HORACREACION, APORTE_ANGLO, MOTIVO, RUT_PREVENCIONISTA,
				ID_ARCHIVO, ESTADO, USRSUBE, FECHASUBE, HORASUBE, CERTUSUARIO,
				CERTFECHA, CERTHORA, OBSERVACION, USRAPORTE, FECHAAPORTE, HORAAPORTE,
				USRMOD, FECHAMOD, HORAMOD
			FROM DOCS_OST_PREVENCIONISTA
			WHERE ID = @NUM_SOLICITUD
		END

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_OST2_INSERT_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_OST2_INSERT_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_OST2_INSERT_CONTRATOST_CTTA]   
(
  @ID_ARCHIVO	UNIQUEIDENTIFIER
 ,@ID_DOC		INT
 ,@NROOST		NVARCHAR(50)
 ,@MADRE		NVARCHAR(10)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@NIVEL		SMALLINT
 ,@USUARIO		NVARCHAR(10)
) AS           
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	DELETE
	FROM DOCS_OST2
	WHERE
		(OST = @NROOST) AND
		(MADRE = @MADRE) AND
		(EMPRESA = @IDEMPRESA) AND
		(ID_DOC = @ID_DOC) AND
		(NIVEL = @NIVEL)

	INSERT INTO DOCS_OST2
			(
				ID_ARCHIVO,
				OST,
				MADRE,
				EMPRESA,
				NIVEL,
				ID_DOC,
				FECHAMOD,
				HORAMOD,
				FECHASUBE,
				HORASUBE,
				USUARIO,
				VALIDADO,
				TIPO
			)
	VALUES
			(
				@ID_ARCHIVO,
				@NROOST,
				@MADRE,
				@IDEMPRESA,
				@NIVEL,
				@ID_DOC,
				@CURR_FECHA,
				@CURR_TIEMPOFULL,
				@CURR_FECHA,
				@CURR_TIEMPOFULL,
				@USUARIO,
				'NO',
				'OST'
			)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT]
(@ID_DOC		INT = NULL) AS
BEGIN

   SELECT ID_DOC             , NOMBRE               , RUTA                , CAMPO                    
        , ACTIVO             , ID_DOC_OPCION        , ID_TIPO_PROPIETARIO , CONFIDENCIAL             
        , IDENTIFICADOR_FOTO , SUBEDOC              , WHOUPDATE           , SHORT                    
        , ORDEN              , COMUN                , ESPECIFICO          , URL_ESPECIFICO           
        , URL_CTRLLABORAL    , COMUN_DIV            , URLDONDE            , URLCOMO                  
        , PORCENTAJE_AUDIT   , VALIDAMANDANTE       , ESPECIFICO_VER_OST  , ESPECIFICO_VER_RESOLUCION
        , ID_TIPO_ESPECIFICO , VALIDASUBCONTRATISTA , TIPODOC_AUDIT      
     FROM DOCS
	WHERE ID_DOC = @ID_DOC

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_BY_ID_DOC_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_BY_ID_DOC_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_BY_ID_DOC_CTTA]
(
 @ID_DOC	NVARCHAR(500)
)
AS
BEGIN

	SELECT ID_DOC, NOMBRE, COMUN, ISNULL(COMUN_DIV,'NO') AS COMUN_DIV, SUBEDOC 
	FROM DOCS 
	WHERE ID_DOC IN (SELECT VALUE FROM STRING_SPLIT(@ID_DOC,','))
	ORDER BY ID_DOC ASC

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_CONTRATOST_CTTA]
(
  @NROOST		NVARCHAR(50)
 ,@MADRE		NVARCHAR(10)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@NIVEL		SMALLINT
) AS
BEGIN
	SELECT
		SS.NOMBRE,
		SS.ID_DOC_OPCION,
		SS.RUTA,
		SS.ID_DOC,
		SS.CAMPO,
		SS.ID_ARCHIVO,
		SS.NONE_NULL,
		(CASE
		WHEN (SS.NONE_NULL = 1) THEN (
					IIF(EXISTS(
								SELECT DO.ID_ARCHIVO
								FROM DOCS_OST2 DO
								WHERE
									(DO.OST = @NROOST) AND
									(DO.MADRE = @MADRE) AND
									(DO.EMPRESA = @IDEMPRESA) AND
									(DO.ID_DOC = SS.ID_DOC) AND
									(DO.NIVEL = @NIVEL)
							), 1, 0)
					)
		ELSE 0 END) AS EXISTE_DOC_OST,
		SS.VVALIDADO,
		SS.VALIDADO_ADMINOST,
		SS.ID_ARCHIVO2,
		SS.EEXT,
		(COALESCE(
			(
				SELECT
					TOP 1
					A.NOMBRE
				FROM ARCHIVOS A
				WHERE A.ID = SS.ID_ARCHIVO2
			)
			, '')
		) AS NOM_ARCHIVO2
	FROM
	(
		SELECT
			D.NOMBRE,
			D.ID_DOC_OPCION,
			D.RUTA,
			D.ID_DOC,
			D.CAMPO,
			DFC.ID_ARCHIVO,
			IIF(
				@NROOST IS NULL OR
				@MADRE IS NULL OR
				@IDEMPRESA IS NULL OR
				D.ID_DOC IS NULL OR
				@NIVEL IS NULL
				, 0, 1) AS NONE_NULL,
			COALESCE(
				(
					SELECT
						TOP 1
						ISNULL(DO2.VALIDADO,'NO')
					FROM DOCS_OST2 DO2
					WHERE 
						(DO2.OST = @NROOST) AND
						(DO2.MADRE = @MADRE) AND
						(DO2.EMPRESA = @IDEMPRESA) AND
						(DO2.ID_DOC = D.ID_DOC) AND
						(DO2.NIVEL = @NIVEL)
				), ''
			) AS VVALIDADO,
			COALESCE(
				(
					SELECT
						TOP 1
						ISNULL(DO2.VALIDADO_ADMINOST,'NO')
					FROM DOCS_OST2 DO2
					WHERE 
						(DO2.OST = @NROOST) AND
						(DO2.MADRE = @MADRE) AND
						(DO2.EMPRESA = @IDEMPRESA) AND
						(DO2.ID_DOC = D.ID_DOC) AND
						(DO2.NIVEL = @NIVEL)
				), ''
			) AS VALIDADO_ADMINOST,
			COALESCE(
				(
					SELECT
						TOP 1
						DO2.ID_ARCHIVO
					FROM DOCS_OST2 DO2
					WHERE 
						(DO2.OST = @NROOST) AND
						(DO2.MADRE = @MADRE) AND
						(DO2.EMPRESA = @IDEMPRESA) AND
						(DO2.ID_DOC = D.ID_DOC) AND
						(DO2.NIVEL = @NIVEL)
				), NULL
			) AS ID_ARCHIVO2,
			SUBSTRING( 
						(
							SELECT ' ' + DX.EXTENSION
							FROM DOCS_FORMATO DF
							INNER JOIN DOCS_EXT DX
								ON DF.ID_DOC_EXT = DX.ID_DOC_EXT 
							WHERE
								DF.ID_DOC = D.ID_DOC
							FOR XML PATH('') 
						), 2, 9999
			) AS EEXT
		FROM DOCS D
		LEFT JOIN DOCS_FORMATO_CARGA DFC
			ON DFC.ID_DOC = D.ID_DOC
		WHERE
			(D.ACTIVO = 'SI') AND
			(D.VALIDAMANDANTE = 'SI') AND
			(D.ID_TIPO_PROPIETARIO = '2')
	) SS
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_CONTROLLABORAL_CTTA]
(
   @IDEMPRESA				NVARCHAR(10)	
  ,@CLABORAL_MSG_EXISTE		INT OUTPUT
  ,@VALIDA					INT OUTPUT
  ,@CARGAR					INT OUTPUT
  ,@CM_EXISTEN_DOCS			INT OUTPUT
  ,@CM_NOMBRE				NVARCHAR(50) OUTPUT
  ,@CM_IDDOC				INT OUTPUT					
)
AS
BEGIN
	DECLARE @DIA_PROG NVARCHAR(2) = NULL
	DECLARE @NUMDIA_HOY INT = DAY(GETDATE())
	SET @VALIDA = 0
	SET @CLABORAL_MSG_EXISTE = 0
	SET @CARGAR = 0
	SET @CM_EXISTEN_DOCS = 0
	SET @CM_IDDOC = -1

	IF(EXISTS(
			SELECT *
			FROM CLABORAL_MSG
			WHERE ACTIVO = 'SI'
		))
		BEGIN
			SET @CLABORAL_MSG_EXISTE = 1
			IF(EXISTS(
					SELECT *
					FROM DOCS_ENTERPRISE
					WHERE
						ID_DOC = 131 AND
						IDEMPRESA = @IDEMPRESA AND
						VALIDADO = 'SI'
				))
				BEGIN
					SET @VALIDA = 1
				END
		END
	ELSE
		BEGIN
			SET @VALIDA = 1
		END

	SELECT TOP 1 @DIA_PROG = DIA
	FROM DOCS_WORKERS_PROGRAMACION
	WHERE IDEMPRESA = @IDEMPRESA

	IF(@DIA_PROG IS NOT NULL)
		BEGIN
			IF(@DIA_PROG = '')
				BEGIN
					SET @CARGAR = 1
				END
			ELSE
				BEGIN
					IF(CONVERT(INT, @DIA_PROG) = @NUMDIA_HOY)
						BEGIN
							SET @CARGAR = 1
						END
				END
		END

	IF(@CARGAR = 1)
		BEGIN
			SELECT
				TOP 1
				@CM_IDDOC = ID_DOC,
				@CM_NOMBRE = NOMBRE
			FROM DOCS
			WHERE
				ACTIVO = 'SI' AND
				ID_TIPO_PROPIETARIO = 2 AND
				ID_DOC_OPCION = 2 AND
				ID_DOC = 116
			ORDER BY NOMBRE
			
			IF(@CM_IDDOC <> -1)
				BEGIN
					SET @CM_EXISTEN_DOCS = 1
				END
		END
	
	SELECT
		URL_CTRLLABORAL_V4,
		NOMBRE,
		ID_DOC,
		URLCOMO,
		URLDONDE
	FROM DOCS
	WHERE
		ACTIVO = 'SI' AND
		ID_TIPO_PROPIETARIO = 2 AND
		ID_DOC_OPCION = 2
	ORDER BY NOMBRE
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_DEPENDENCIA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_DEPENDENCIA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_DEPENDENCIA_CTTA]
(@RUT		NVARCHAR(10) = NULL
,@ID_DOC	INT = NULL
,@DIVCOD	NVARCHAR(50) = NULL
,@IDEMPRESA	NVARCHAR(10) = NULL) AS
BEGIN
	SELECT DP.ID_DOC_DEPEND , D.COMUN_DIV , D.NOMBRE, D.COMUN , D.ID_DOC 
		   , CASE WHEN D.COMUN = 0
				THEN (SELECT TOP 1 VALIDADO 
					FROM DOCS_WORKERS 
					WHERE (RUT = @RUT) 
					AND (ID_DOC = DP.ID_DOC_DEPEND) 
					AND (DIVISION = (CASE WHEN D.COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVCOD END )) 
					AND (EMPRESA = @IDEMPRESA)
					ORDER BY FECHASUBE DESC, HORASUBE DESC )
			ELSE
					(SELECT TOP 1 VALIDADO 
					FROM DOCS_WORKERS 
					WHERE (RUT = @RUT) 
					AND (ID_DOC = DP.ID_DOC_DEPEND) 
					AND (DIVISION = (CASE WHEN D.COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVCOD END ))
					ORDER BY FECHASUBE DESC, HORASUBE DESC) 
				END AS VALIDADO
	INTO #TEMP
	FROM DOCS D 
	INNER JOIN DOCS_DEPEND DP ON DP.ID_DOC_DEPEND = D.ID_DOC 
	WHERE DP.ID_DOC = @ID_DOC AND 
	DP.ACTIVO = 'SI' AND 
	DIVISION = @DIVCOD 

	SELECT * FROM #TEMP WHERE VALIDADO <> 'SI'
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_DIVISION]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_DIVISION]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_DIVISION]
(
@DIVCOD NVARCHAR(4)
)
AS
BEGIN

SELECT DISTINCT D.CAMPO FROM DOCS AS D 
			 INNER JOIN DOCS_TIPOPASE AS DT ON D.ID_DOC = DT.ID_DOC  
			 	 WHERE ((DT.TIPOPASE = 'TRABAJO') 
			 	 OR (DT.TIPOPASE = 'OPCIONAL')) 
			    AND (DT.DIVISION = @DIVCOD)  
			 	 AND (D.ACTIVO = 'SI') 
			 	 AND (D.ID_TIPO_PROPIETARIO = 1 ) 
			 	 ORDER BY D.CAMPO 
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_DOCAPROBACION_SUBCONTRATOS]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_DOCAPROBACION_SUBCONTRATOS]\nGO\n

CREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_DOCAPROBACION_SUBCONTRATOS]
AS
BEGIN
	DECLARE @INFORMACION_ARCHIVO NVARCHAR(500)
	DECLARE @ID_DOC				 INT
	SELECT @ID_DOC = Valor1, @INFORMACION_ARCHIVO = Valor2 FROM PARAMETROS_V2 WHERE ID_PARAMETRO = '57'

	SELECT ID_DOC	, NOMBRE , @INFORMACION_ARCHIVO AS INFORMACION_ARCHIVO 
		 , STUFF((SELECT ',' + DX.EXTENSION
				  FROM DOCS_FORMATO DF 
					INNER JOIN DOCS D ON DF.ID_DOC = D.ID_DOC
					INNER JOIN DOCS_EXT DX ON DF.ID_DOC_EXT = DX.ID_DOC_EXT
					WHERE D.ID_DOC = @ID_DOC
				  FOR XML PATH('')),1,1,'') AS EXTENSIONES

	FROM DOCS WHERE ID_DOC = @ID_DOC
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_DOCUMENTOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_DOCUMENTOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_DOCUMENTOS_CTTA]
(@DIVCOD			NVARCHAR(50) = NULL
,@ID_DOC_OPCION		INT = NULL) AS
BEGIN
	IF(@ID_DOC_OPCION = 0)
		BEGIN
			SELECT DISTINCT D.NOMBRE, 
							 D.ID_DOC, 
							 D.SUBEDOC, 
							 D.ORDEN, 
							 D.COMUN_DIV, 
							 D.COMUN ,
							 (CASE WHEN EXISTS(SELECT DT.TIPOPASE 
											FROM  DOCS_TIPOPASE AS DT 
											WHERE D.ID_DOC = DT.ID_DOC
											AND (DT.DIVISION = @DIVCOD)
											AND DT.TIPOPASE<>'OPCIONAL') THEN 'OBLIGATORIO' ELSE '' END) AS TIPOPASE ,
							 @DIVCOD AS DIVCOD,
                             ISNULL(AG.IDGRUPO, 0) AS IDGRUPO
			FROM  DOCS AS D 
			INNER JOIN DOCS_TIPOPASE AS DT ON D.ID_DOC = DT.ID_DOC 
			LEFT JOIN DOCS_AGRUPACION AG ON D.ID_DOC = AG.ID_DOC 
			LEFT JOIN DOCS_GRUPOS G ON AG.IDGRUPO = G.ID AND G.DIVISION = @DIVCOD AND G.TIPO = 'FUNCIONARIO' 
			WHERE (D.ACTIVO = 'SI') 
			AND (D.ID_DOC_OPCION IN (0)) 
			AND (DT.DIVISION = @DIVCOD) 
			AND (D.ID_TIPO_PROPIETARIO = 1) 
			AND (D.ID_DOC NOT IN (SELECT ISNULL(Valor1,'-1') AS Valor1 
								FROM PARAMETROS_V2 
								WHERE Descripcion = 'Certificacion Funcionarios'))
			ORDER BY D.ORDEN
		END
	ELSE
		BEGIN
			SELECT DISTINCT D.NOMBRE, 
							 D.ID_DOC, 
							 D.SUBEDOC, 
							 D.ORDEN, 
							 D.COMUN_DIV, 
							 D.COMUN ,
							 (CASE WHEN EXISTS(SELECT DT.TIPOPASE 
											FROM  DOCS_TIPOPASE AS DT 
											WHERE D.ID_DOC = DT.ID_DOC
											AND (DT.DIVISION = @DIVCOD)
											AND DT.TIPOPASE<>'OPCIONAL') THEN 'OBLIGATORIO' ELSE '' END) AS TIPOPASE ,
							 @DIVCOD AS DIVCOD,
							 ISNULL(AG.IDGRUPO, 0) AS IDGRUPO					  
			FROM  DOCS AS D 
			INNER JOIN DOCS_TIPOPASE AS DT ON D.ID_DOC = DT.ID_DOC 
			LEFT JOIN DOCS_AGRUPACION AG ON D.ID_DOC = AG.ID_DOC 
			LEFT JOIN DOCS_GRUPOS G ON AG.IDGRUPO = G.ID AND G.DIVISION = @DIVCOD AND G.TIPO = 'FUNCIONARIO' 
			WHERE (D.ACTIVO = 'SI') 
			AND (D.ID_DOC_OPCION IN (1)) 
			AND (DT.DIVISION = @DIVCOD) 
			AND (D.ID_TIPO_PROPIETARIO = 1) 
			ORDER BY D.ORDEN
		END
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_EMPRESA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_EMPRESA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_EMPRESA_CTTA]
(@IDEMPRESA	NVARCHAR(11) = NULL) AS
BEGIN
	SELECT DISTINCT DOCS.NOMBRE, DOCS.RUTA, DOCS.ID_DOC, DOCS.CAMPO , DE.ID , ISNULL(DE.VALIDADO, 'NO') AS VALIDADO , DE.OBSERVACION
	FROM DOCS 
	LEFT JOIN DOCS_ENTERPRISE AS DE ON DE.ID_DOC = DOCS.ID_DOC AND IDEMPRESA = @IDEMPRESA
	WHERE (DOCS.ACTIVO='SI') AND (DOCS.ID_TIPO_PROPIETARIO=4) AND (DOCS.ID_DOC_OPCION = 4)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_GRID_FICHAVEHICULODETALLE_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_GRID_FICHAVEHICULODETALLE_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_GRID_FICHAVEHICULODETALLE_INFORMECONSULTARAPIDA_CTTA]
(
  @DIVCOD NVARCHAR(4),
  @PATENTE NVARCHAR(10),
  @IDEMPRESA NVARCHAR(20)
) AS 
BEGIN

  SELECT DOCS.COMUN,		ISNULL(DOCS.COMUN_DIV,'NO') AS COMUN_DIV,			DOCS.NOMBRE,			DOCS.ID_DOC_OPCION AS OPCION, 
		 DOCS.ID_DOC,		DOCS.CAMPO,										    ISNULL(DOCS.SUBEDOC, 'NO') AS SUBEDOC,  
		(SELECT TOP 1 ISNULL(DF.NOMBRE ,'') FROM DOCS_FEC AS DF WHERE (DF.ID_DOC_DEPEND = DOCS.ID_DOC)  AND (ACTIVO = 'SI') ORDER BY ORDEN ASC) AS NOMBRE_FECHA,
		(SELECT TOP 1 ISNULL(DF.ID_DOC_FEC ,'') FROM DOCS_FEC AS DF WHERE (DF.ID_DOC_DEPEND = DOCS.ID_DOC)  AND (ACTIVO = 'SI') ORDER BY ORDEN ASC) AS ID_DOC_FEC,
		(CASE DOCS.COMUN WHEN 0 THEN
				CASE ISNULL(DOCS.COMUN_DIV,'NO') WHEN 'NO'  THEN
				  (SELECT TOP 1 ISNULL(VALIDADO,'') FROM DOCS_TRANSPORT WHERE EMPRESA=@IDEMPRESA AND  (PATENTE = @PATENTE) AND ( (DIVISION = @DIVCOD) OR (ISNULL(DIVISION, 'AA') = 'AA') ) AND (ID_DOC = DOCS.ID_DOC))
				  ELSE
				  (SELECT TOP 1 ISNULL(VALIDADO,'') FROM DOCS_TRANSPORT WHERE EMPRESA=@IDEMPRESA AND  (PATENTE = @PATENTE) AND (ID_DOC = DOCS.ID_DOC))
				 END  
		 ELSE 

				CASE ISNULL(DOCS.COMUN_DIV,'NO') WHEN 'NO'  THEN
				  (SELECT TOP 1 ISNULL(VALIDADO,'') FROM DOCS_TRANSPORT WHERE  (PATENTE = @PATENTE) AND ( (DIVISION = @DIVCOD) OR (ISNULL(DIVISION, 'AA') = 'AA') ) AND (ID_DOC = DOCS.ID_DOC))
				  ELSE
				  (SELECT TOP 1 ISNULL(VALIDADO,'') FROM DOCS_TRANSPORT WHERE  (PATENTE = @PATENTE) AND (ID_DOC = DOCS.ID_DOC))
				 END 

		 END) AS VALIDADO,
		(CASE DOCS.COMUN WHEN 0 THEN
				CASE ISNULL(DOCS.COMUN_DIV,'NO') WHEN 'NO'  THEN
				  (SELECT TOP 1 ISNULL(ID,'') FROM DOCS_TRANSPORT WHERE EMPRESA=@IDEMPRESA AND  (PATENTE = @PATENTE) AND ( (DIVISION = @DIVCOD) OR (ISNULL(DIVISION, 'AA') = 'AA') ) AND (ID_DOC = DOCS.ID_DOC))
				  ELSE
				  (SELECT TOP 1 ISNULL(ID,'') FROM DOCS_TRANSPORT WHERE EMPRESA=@IDEMPRESA AND  (PATENTE = @PATENTE) AND (ID_DOC = DOCS.ID_DOC))
				 END  
		 ELSE 

				CASE ISNULL(DOCS.COMUN_DIV,'NO') WHEN 'NO'  THEN
				  (SELECT TOP 1 ISNULL(ID,'') FROM DOCS_TRANSPORT WHERE  (PATENTE = @PATENTE) AND ( (DIVISION = @DIVCOD) OR (ISNULL(DIVISION, 'AA') = 'AA') ) AND (ID_DOC = DOCS.ID_DOC))
				  ELSE
				  (SELECT TOP 1 ISNULL(ID,'') FROM DOCS_TRANSPORT WHERE  (PATENTE = @PATENTE) AND (ID_DOC = DOCS.ID_DOC))
				 END 

		 END) AS ID,
         [dbo].[V4MVC_FN_GET_ESTADO_FECHA_VEHICULO_LOCAL]( (SELECT TOP 1 ISNULL(DF.ID_DOC_FEC ,'') FROM DOCS_FEC AS DF WHERE (DF.ID_DOC_DEPEND = DOCS.ID_DOC)  AND (ACTIVO = 'SI') ORDER BY ORDEN ASC),@PATENTE,@DIVCOD,@IDEMPRESA) AS COLORFECHA
  FROM DOCS 
  WHERE ID_DOC IN (SELECT ID_DOC FROM DOCS_TIPOPASE WHERE TIPOPASE = '25' AND (DIVISION = @DIVCOD OR DIVISION = 'AA')) 
  AND (ACTIVO = 'SI')  
  AND (DOCS.ID_TIPO_PROPIETARIO = '3')
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_GRID1_INFORME_FICHAFUNCIONARIODET_INFORMESFUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_GRID1_INFORME_FICHAFUNCIONARIODET_INFORMESFUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_GRID1_INFORME_FICHAFUNCIONARIODET_INFORMESFUNCIONARIOS_CTTA]
(
 @DIVCOD	NVARCHAR(4)	 = NULL,
 @TIPOPASE	NVARCHAR(9)	 = NULL,
 @RUT		NVARCHAR(10) = NULL,
 @IDEMPRESA	NVARCHAR(20)	= NULL
)
AS
BEGIN
SELECT DISTINCT 
CASE WHEN EXISTS(SELECT DISTINCT DTT.TIPOPASE FROM DOCS_TIPOPASE AS DTT INNER JOIN DOCS AS DD ON DTT.ID_DOC = DD.ID_DOC WHERE (DTT.DIVISION = @DIVCOD) AND (DTT.TIPOPASE = @TIPOPASE) AND (DD.ID_DOC_OPCION = 0) AND (DD.ID_DOC = D.ID_DOC) AND (DD.SUBEDOC = 'SI'))  THEN
	'(*) '+D.NOMBRE
ELSE
	'    '+D.NOMBRE
END AS NOMBRE,
		(CASE D.SUBEDOC WHEN 'SI' THEN
				CASE D.COMUN WHEN 1 THEN
							CASE WHEN EXISTS(SELECT TOP 1 ID, VALIDADO FROM DOCS_WORKERS WHERE (RUT = @RUT) AND (ID_DOC = D.ID_DOC) AND (DIVISION = (CASE WHEN D.COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVCOD END )) ORDER BY ID_DOCS_WORKERS DESC)  THEN
								(SELECT TOP 1 VALIDADO FROM DOCS_WORKERS WHERE (RUT = @RUT) AND (ID_DOC = D.ID_DOC) AND (DIVISION = (CASE WHEN D.COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVCOD END )) ORDER BY ID_DOCS_WORKERS DESC)
							ELSE
							    'NO EXISTE'
							END 
				 ELSE 
							CASE WHEN EXISTS(SELECT TOP 1 ID, VALIDADO FROM DOCS_WORKERS WHERE (RUT = @RUT) AND (ID_DOC = D.ID_DOC) AND (DIVISION = (CASE WHEN D.COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVCOD END )) AND (EMPRESA = @IDEMPRESA) ORDER BY ID_DOCS_WORKERS DESC)  THEN
								(SELECT TOP 1 VALIDADO FROM DOCS_WORKERS WHERE (RUT = @RUT) AND (ID_DOC = D.ID_DOC) AND (DIVISION = (CASE WHEN D.COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVCOD END )) AND (EMPRESA = @IDEMPRESA) ORDER BY ID_DOCS_WORKERS DESC)
							ELSE
								'NO EXISTE'
							END 
				 END
		 ELSE 
                    ''
		 END) AS ESTADO,
D.ID_DOC,		D.SUBEDOC,		D.ORDEN,
D.COMUN_DIV,	D.COMUN ,		D.CONFIDENCIAL,
--(SELECT TOP 1 ID_DOC_FEC FROM DOCS_FEC WHERE (ID_DOC_DEPEND = D.ID_DOC ) AND (ACTIVO = 'SI') AND VALIDO_MAYOR_HOY = 1 ORDER BY ORDEN), 
--(SELECT [dbo].[V4MVC_FN_GET_FECHA_WORKER_LOCAL]((SELECT TOP 1 ID_DOC_FEC FROM DOCS_FEC WHERE (ID_DOC_DEPEND = D.ID_DOC ) AND (ACTIVO = 'SI') AND VALIDO_MAYOR_HOY = 1 ORDER BY ORDEN),@RUT,@DIVCOD,@IDEMPRESA)) FECHAREG,
case  WHEN (SELECT [dbo].[V4MVC_FN_GET_FECHA_WORKER_LOCAL]((SELECT TOP 1 ID_DOC_FEC FROM DOCS_FEC WHERE (ID_DOC_DEPEND = D.ID_DOC ) AND (ACTIVO = 'SI') AND VALIDO_MAYOR_HOY = 1 ORDER BY ORDEN),@RUT,@DIVCOD,@IDEMPRESA)) < GETDATE() THEN 'SI'
      ELSE 'NO'   
   END AS FECHA_MENOR
FROM  DOCS AS D INNER JOIN  DOCS_TIPOPASE AS DT ON D.ID_DOC = DT.ID_DOC  
WHERE (D.ACTIVO = 'SI') AND (D.ID_DOC_OPCION = 0) AND (DT.DIVISION = @DIVCOD)  
ORDER BY D.ORDEN
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_GRID2_INFORME_FICHAFUNCIONARIODET_INFORMESFUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_GRID2_INFORME_FICHAFUNCIONARIODET_INFORMESFUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_GRID2_INFORME_FICHAFUNCIONARIODET_INFORMESFUNCIONARIOS_CTTA]
(
 @DIVCOD	NVARCHAR(4)	 = NULL,
 @TIPOPASE	NVARCHAR(9)	 = NULL,
 @RUT		NVARCHAR(10) = NULL,
 @IDEMPRESA	NVARCHAR(20)	= NULL
)
AS
BEGIN

SELECT DISTINCT 
D.NOMBRE,
		(CASE D.SUBEDOC WHEN 'SI' THEN
				CASE D.COMUN WHEN 1 THEN
							CASE WHEN EXISTS(SELECT TOP 1 ID, VALIDADO FROM DOCS_WORKERS WHERE (RUT = @RUT) AND (ID_DOC = D.ID_DOC) AND (DIVISION = (CASE WHEN D.COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVCOD END )) ORDER BY ID_DOCS_WORKERS DESC)  THEN
								(SELECT TOP 1 VALIDADO FROM DOCS_WORKERS WHERE (RUT = @RUT) AND (ID_DOC = D.ID_DOC) AND (DIVISION = (CASE WHEN D.COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVCOD END )) ORDER BY ID_DOCS_WORKERS DESC)
							ELSE
							    'NO EXISTE'
							END 
				 ELSE 
							CASE WHEN EXISTS(SELECT TOP 1 ID, VALIDADO FROM DOCS_WORKERS WHERE (RUT = @RUT) AND (ID_DOC = D.ID_DOC) AND (DIVISION = (CASE WHEN D.COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVCOD END )) AND (EMPRESA = @IDEMPRESA) ORDER BY ID_DOCS_WORKERS DESC)  THEN
								(SELECT TOP 1  VALIDADO FROM DOCS_WORKERS WHERE (RUT = @RUT) AND (ID_DOC = D.ID_DOC) AND (DIVISION = (CASE WHEN D.COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVCOD END )) AND (EMPRESA = @IDEMPRESA) ORDER BY ID_DOCS_WORKERS DESC)
							ELSE
								'NO EXISTE'
							END 
				 END
		 ELSE 
                    ''
		 END) AS ESTADO,
D.ID_DOC,		D.SUBEDOC,		D.ORDEN,
D.COMUN_DIV,	D.COMUN ,		D.CONFIDENCIAL,
							 (CASE WHEN EXISTS(SELECT DT.TIPOPASE 
											FROM  DOCS_TIPOPASE AS DT 
											WHERE D.ID_DOC = DT.ID_DOC
											AND (DT.DIVISION = @DIVCOD)
											AND DT.TIPOPASE<>'OPCIONAL') THEN 'OBLIGATORIO' ELSE '' END) AS TIPOPASE,
(SELECT TOP 1 LICONDLT FROM LOTEPASESFUN 
			  						WHERE RUTLOTE = @RUT AND 
									NLOTEPROC IN (SELECT LOTE FROM WORKERSLOCAL WHERE (RUT = @RUT) AND (DIVISION = @DIVCOD) AND (FFINPASE >=  CONVERT(NVARCHAR(8),GETDATE(),112)) AND (AUTOR IN ('SI','NO'))) 
									ORDER BY NLOTEPROC)	AS LICONDLT,
(SELECT ENTREGADO FROM WORKERS_LIC_ENTREGA WHERE RUT = @RUT AND DIVISION = @DIVCOD)	AS ENTREGADO,
(SELECT TOP 1  [dbo].[fn_WL_Conductor] ('"& Rut  &"', '"& Division &"', dbo.hoy(getdate())) AS CERT FROM TAB_TIPOPASE_DIVISION) AS CERT																		   
FROM  DOCS AS D INNER JOIN  DOCS_TIPOPASE AS DT ON D.ID_DOC = DT.ID_DOC 
WHERE (D.ACTIVO = 'SI') AND (D.ID_DOC_OPCION = 1) AND (D.ID_TIPO_PROPIETARIO = 1) AND (DT.DIVISION = @DIVCOD)  
ORDER BY D.ORDEN

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_MIXED_EMPRESA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_MIXED_EMPRESA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_MIXED_EMPRESA_CTTA]
(@ID_DOC		INT = NULL) AS
BEGIN

   SELECT D.ID_DOC            ,D.NOMBRE               ,D.RUTA                ,D.CAMPO                    
        ,D.ACTIVO             ,D.ID_DOC_OPCION        ,D.ID_TIPO_PROPIETARIO ,D.CONFIDENCIAL             
        ,D.IDENTIFICADOR_FOTO ,D.SUBEDOC              ,D.WHOUPDATE           ,D.SHORT                    
        ,D.ORDEN              ,D.COMUN                ,D.ESPECIFICO          ,D.URL_ESPECIFICO           
        ,D.URL_CTRLLABORAL    ,D.COMUN_DIV            ,D.URLDONDE            ,D.URLCOMO                  
        ,D.PORCENTAJE_AUDIT   ,D.VALIDAMANDANTE       ,D.ESPECIFICO_VER_OST  ,D.ESPECIFICO_VER_RESOLUCION
        ,D.ID_TIPO_ESPECIFICO ,D.VALIDASUBCONTRATISTA ,D.TIPODOC_AUDIT
		,STUFF(
			(
				SELECT ' ' + DOCS_EXT.EXTENSION
				FROM DOCS_FORMATO, DOCS_EXT
				WHERE DOCS_FORMATO.ID_DOC = D.ID_DOC AND DOCS_FORMATO.ID_DOC_EXT = DOCS_EXT.ID_DOC_EXT
				FOR XML PATH('')
			), 1, 1, '') AS EXTENSIONES
    FROM DOCS D
	WHERE D.ID_DOC = @ID_DOC

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_OBLIGATORIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_OBLIGATORIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_OBLIGATORIOS_CTTA]
(@DIVCOD	NVARCHAR(50) = NULL
,@ID_DOC	INT = NULL
) AS
BEGIN
	SELECT DISTINCT DT.TIPOPASE 
	FROM DOCS_TIPOPASE AS DT 
	INNER JOIN DOCS AS D ON DT.ID_DOC = D.ID_DOC 
	WHERE (DT.DIVISION = @DIVCOD) AND 
	(D.ID_DOC_OPCION = 0) AND 
	(D.ID_DOC = @ID_DOC) AND 
	(D.SUBEDOC = 'SI') AND 
	(DT.TIPOPASE <> 'OPCIONAL')
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @ID_DOC	INT
) AS
BEGIN
	SELECT
		TOP 1
		NOMBRE
	FROM DOCS
	WHERE (ID_DOC = @ID_DOC)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_ONE_GETACCESOFAENA_INFORMEFUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_ONE_GETACCESOFAENA_INFORMEFUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_ONE_GETACCESOFAENA_INFORMEFUNCIONARIOS_CTTA]
(
	@RUT AS NVARCHAR(10)
   ,@EMPRESA AS NVARCHAR(10)
   ,@TIPO_PASE AS NVARCHAR(12)
   ,@DIVISION AS NVARCHAR(12)
)
AS
BEGIN
	SELECT
		COALESCE(
			(
				SELECT
					TOP 1
						[dbo].[fn_WL_Certificado] (@RUT, @EMPRESA, @TIPO_PASE, @DIVISION, dbo.hoy(getdate()))
				FROM TAB_TIPOPASE_DIVISION
			)
		,0)
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_ONE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_ONE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_ONE_V2_CONTROLLABORAL_CTTA]
(
  @ID_TIPO_PROPIETARIO		INT
 ,@ID_DOC_OPCION			INT
 ,@ID_DOC					INT
) AS
BEGIN
	SELECT
		TOP 1
		NOMBRE,
		ID_DOC
	FROM DOCS
	WHERE
		ACTIVO = 'SI' AND
		ID_TIPO_PROPIETARIO = @ID_TIPO_PROPIETARIO AND
		ID_DOC_OPCION = @ID_DOC_OPCION AND
		ID_DOC = @ID_DOC
	ORDER BY NOMBRE
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_VALIDA_POSEECONDUCCIONENFAENA_FUNCIONARIOS_CCTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_VALIDA_POSEECONDUCCIONENFAENA_FUNCIONARIOS_CCTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_VALIDA_POSEECONDUCCIONENFAENA_FUNCIONARIOS_CCTA]
(@RUT			NVARCHAR(10) = NULL
,@DIVCOD	    NVARCHAR(4) = NULL) AS
BEGIN
	SELECT CASE When COUNT(*) > 0 Then 'SI' ELSE 'RE' END AS LICONDLT
	FROM LOTEPASESFUN WHERE RUTLOTE = @RUT AND NLOTEPROC IN (SELECT LOTE FROM WORKERSLOCAL 
	WHERE (RUT = @RUT) AND (DIVISION = @DIVCOD) AND (FFINPASE >=  [dbo].[hoy](GETDATE())) AND (AUTOR IN ('SI','NO'))) AND LICONDLT = 'SI' 	
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_SELECT_VEHICULOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_SELECT_VEHICULOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_SELECT_VEHICULOS_CTTA]
(@DIVCOD	NVARCHAR(4) = NULL
,@PATENTE   NVARCHAR(6) = NULL) AS
BEGIN
	DECLARE @TIPO INT
	SELECT  @TIPO = TIPO FROM TRANSPORT WHERE (PATENTE = @PATENTE)

	SELECT DOCS.COMUN, ISNULL(DOCS.COMUN_DIV,'NO') AS COMUN_DIV
		 , DOCS.NOMBRE,DOCS.ID_DOC_OPCION, DOCS.ID_DOC
		 , DOCS.CAMPO, ISNULL(DOCS.SUBEDOC, 'NO') AS SUBEDOC  
		 , @DIVCOD AS DIVCOD
	FROM DOCS  
	WHERE ID_DOC IN (SELECT ID_DOC FROM DOCS_TIPOPASE  
					WHERE TIPOPASE = CAST(@TIPO AS VARCHAR)
					AND (DIVISION = @DIVCOD OR DIVISION = 'AA'))  
	AND (ACTIVO = 'SI')  
	AND (DOCS.ID_TIPO_PROPIETARIO = '3')
	AND ID_DOC NOT IN (SELECT ISNULL(VALOR1,-1) AS VALOR1 FROM PARAMETROS_V2 WHERE DESCRIPCION = 'Validacion Documento Duenio Vehiculo')

	
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_TIPO_RECHAZO_SELECT_DISPUTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_TIPO_RECHAZO_SELECT_DISPUTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_TIPO_RECHAZO_SELECT_DISPUTA]
(@DIVCOD		NVARCHAR(50) = NULL
,@COMUN_DIV		NVARCHAR(2) = NULL
,@ID			UNIQUEIDENTIFIER = NULL) AS
BEGIN

	SELECT DISTINCT TR.TIPO_RECHAZO, D.ID_DOC 
	FROM DOCS_WORKERS_RECHAZO DW 
	INNER JOIN DOCS_TIPO_RECHAZO TR ON TR.ID_TIPO_RECHAZO = DW.ID_TIPO_RECHAZO 
	INNER JOIN DOCS_WORKERS d ON D.ID = DW.ID 
	WHERE DW.ID = @ID AND 
	D.DIVISION =  (CASE WHEN @COMUN_DIV = 'SI' THEN D.DIVISION ELSE @DIVCOD END)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_TIPO_RECHAZO_SELECT_DISPUTA_FUNCIONARIOSCCTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_TIPO_RECHAZO_SELECT_DISPUTA_FUNCIONARIOSCCTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_TIPO_RECHAZO_SELECT_DISPUTA_FUNCIONARIOSCCTA]
(@FECHA_INI		NVARCHAR(8)= NULL
,@FECHA_FIN	    NVARCHAR(8)= NULL
,@RUT			NVARCHAR(10)= NULL
,@ID_ARCHIVO	    uniqueidentifier= NULL) AS
BEGIN
SELECT tr.TIPO_RECHAZO 
FROM DOCS_WORKERS_RECHAZO dw INNER JOIN DOCS_TIPO_RECHAZO tr ON tr.ID_TIPO_RECHAZO = dw.ID_TIPO_RECHAZO 
                             INNER JOIN DOCS_CONTROLACCESO_LABORAL l ON l.ID_ARCHIVO = dw.ID
 WHERE l.FECHA_INI = @FECHA_INI AND 
 l.FECHA_FIN = @FECHA_FIN AND 
 l.RUT = @RUT AND 
 l.ID_ARCHIVO = @ID_ARCHIVO

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_TIPOPASE_FEC_SELECT_DIVISION]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_TIPOPASE_FEC_SELECT_DIVISION]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_TIPOPASE_FEC_SELECT_DIVISION]
(
@DIVCOD NVARCHAR(4)
)
AS
BEGIN

SELECT  DISTINCT   DOCS_FEC.CAMPO_BD 
 FROM         DOCS AS D INNER JOIN  
 DOCS_TIPOPASE AS DT ON D.ID_DOC = DT.ID_DOC INNER JOIN  
 DOCS_FEC ON DT.ID_DOC = DOCS_FEC.ID_DOC_DEPEND INNER JOIN  
 DOCS_FEC_TIPOPASE ON DOCS_FEC.ID_DOC_FEC = DOCS_FEC_TIPOPASE.ID_DOC_FEC  
 WHERE     (D.ID_TIPO_PROPIETARIO = 1) AND (D.ACTIVO = N'SI') AND (DT.DIVISION = @DIVCOD) AND (DOCS_FEC_TIPOPASE.DIVISION = @DIVCOD) 

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_TIPOPASE_SELECT_DIVISION]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_TIPOPASE_SELECT_DIVISION]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_TIPOPASE_SELECT_DIVISION]
(
@DIVCOD NVARCHAR(4)
)
AS
BEGIN

SELECT DISTINCT D.CAMPO FROM DOCS AS D INNER JOIN  
DOCS_TIPOPASE AS DT ON D.ID_DOC = DT.ID_DOC  
WHERE (DT.TIPOPASE = 'TRABAJO' OR (DT.TIPOPASE = 'OPCIONAL' AND D.ID_DOC = 62))  
AND (DT.DIVISION = @DIVCOD)  
AND (D.ACTIVO = 'SI') 
AND (D.SUBEDOC = 'SI') 
AND (D.ID_TIPO_PROPIETARIO = 1) 

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_TRANSPORT_DELETE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_TRANSPORT_DELETE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_TRANSPORT_DELETE]
(@ID_DOCS_VEH	INT = NULL) AS
BEGIN
  DELETE FROM DOCS_TRANSPORT WHERE ID_DOCS_VEH=@ID_DOCS_VEH
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_TRANSPORT_HISTORICOCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_TRANSPORT_HISTORICOCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_TRANSPORT_HISTORICOCTTA]
(@IDEMPRESA		NVARCHAR(10) = NULL
,@PATENTE		NVARCHAR(6) = NULL
,@COMUN			INT = NULL
,@ID_DOC		INT = NULL
,@COMUN_DIV		NVARCHAR(2) =NULL
,@DIVCOD		NVARCHAR(4) = NULL) AS
BEGIN
	IF @COMUN = 0
		BEGIN
			SELECT DT.PATENTE		, DT.FECHA_MOD	, DT.HORA_MOD , DT.USUARIO
				 , DT.ID			, DT.ID_DOC		, DT.VALIDADO , DT.CERTUSUARIO
				 , DT.CERTFECHA		, DT.CERTHORA   , (SELECT VALOR1 FROM PARAMETROS WHERE ID_PARAMETRO=7) AS VALOR
				 , W.NOMBRES		, W.APELLIDOS   , DT.ID_DOCS_VEH, @DIVCOD DIVCOD
			FROM DOCS_TRANSPORT AS DT
			INNER JOIN WORKERS AS W ON W.RUT = DT.USUARIO
			WHERE (DT.PATENTE = @PATENTE) AND 
			(DT.ID_DOC = @ID_DOC) AND 
			(DT.DIVISION = (CASE WHEN @COMUN_DIV = 'SI' THEN DT.DIVISION ELSE @DIVCOD END)) AND 
			(DT.EMPRESA = @IDEMPRESA) 
			ORDER BY DT.FECHA_MOD DESC, DT.HORA_MOD DESC
		END
	ELSE
		BEGIN
			SELECT DT.PATENTE	 , DT.FECHA_MOD	, DT.HORA_MOD	, DT.USUARIO
				 , DT.ID		 , DT.ID_DOC	, DT.VALIDADO	, DT.CERTUSUARIO
				 , DT.CERTFECHA  , DT.CERTHORA  , DT.ID_DOCS_VEH , (SELECT VALOR1 FROM PARAMETROS WHERE ID_PARAMETRO=7) AS VALOR
				 , W.NOMBRES	 , W.APELLIDOS  , @DIVCOD DIVCOD , (SELECT T.TIPO_RECHAZO FROM DOCS_TRANSPORT_RECHAZO D INNER JOIN DOCS_TIPO_RECHAZO T ON T.ID_TIPO_RECHAZO = D.ID_TIPO_RECHAZO WHERE D.ID = DT.ID) MOTIVO_RECHAZO
			FROM DOCS_TRANSPORT AS DT
			INNER JOIN WORKERS AS W ON W.RUT = DT.USUARIO
			WHERE (DT.PATENTE = @PATENTE) AND 
			(DT.ID_DOC = @ID_DOC) AND 
			(DT.DIVISION = (CASE WHEN @COMUN_DIV = 'SI' THEN DT.DIVISION ELSE @DIVCOD END)) 
			ORDER BY DT.FECHA_MOD DESC, DT.HORA_MOD DESC
		END
END



--EXEC V4MVC_DOCS_TRANSPORT_HISTORICOCTTA '761264907','AAA111',1,57,'NO','CH'
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_TRANSPORT_INSERT_HISTORICO_VEHICULULOSCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_TRANSPORT_INSERT_HISTORICO_VEHICULULOSCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_TRANSPORT_INSERT_HISTORICO_VEHICULULOSCTTA]
( @PATENTE nvarchar(10)= NULL
 ,@NOMBRE_ARCHIVO nvarchar(50)= NULL
 ,@TIPO_CONTENIDO nvarchar(20)= NULL
 ,@EMPRESA nvarchar(20)= NULL
 ,@DIVISION nvarchar(4)= NULL
 ,@ID_DOC int= NULL
 ,@USUARIO nvarchar(10)= NULL
 ,@ID uniqueidentifier= NULL
 ,@COMBUSTIBLE  int= NULL
 ,@CILINDRADA  nvarchar(50)= NULL
 ,@TRACCION  int= NULL
 ,@COLOR nvarchar(30)= NULL
 ,@POTENCIA nvarchar(50)= NULL) AS
BEGIN



INSERT INTO DOCS_TRANSPORT ( PATENTE,    NOMBRE_ARCHIVO,    TIPO_CONTENIDO,    EMPRESA,    DIVISION,    ID_DOC,   FECHA_MOD,                HORA_MOD,                 USUARIO,       ID,   VALIDADO,  FECHASUBE,              HORASUBE) 
                    VALUES ( @PATENTE,   @NOMBRE_ARCHIVO,   @TIPO_CONTENIDO,   @EMPRESA,   @DIVISION,   @ID_DOC,  [dbo].[hoy](GETDATE()),   [dbo].[ahora](GETDATE()), @USUARIO,      @ID,  'NO',      [dbo].[hoy](GETDATE()), [dbo].[ahora](GETDATE()))




IF @ID_DOC = 11 
BEGIN
  UPDATE TRANSPORT 
  SET COMBUSTIBLE = @COMBUSTIBLE,
      CILINDRADA = @CILINDRADA,
      TRACCION = @TRACCION, 
      COLOR = @COLOR
  WHERE PATENTE =@PATENTE
END
ELSE IF @ID_DOC = 14
BEGIN
	UPDATE TRANSPORT 
	SET POTENCIA =@POTENCIA 
	WHERE PATENTE = @PATENTE
END

END



IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_TRANSPORT_NEW]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_TRANSPORT_NEW]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_TRANSPORT_NEW]
( @PATENTE nvarchar(10)= NULL
 ,@NOMBRE_ARCHIVO nvarchar(50)= NULL
 ,@TIPO_CONTENIDO nvarchar(20)= NULL
 ,@EMPRESA nvarchar(20)= NULL
 ,@DIVISION nvarchar(4)= NULL
 ,@ID_DOC int= NULL
 ,@USUARIO nvarchar(10)= NULL
 ,@ID uniqueidentifier= NULL
 ,@VALIDADO nvarchar(2)= NULL) AS
BEGIN
INSERT INTO [dbo].[DOCS_TRANSPORT]
           ([PATENTE]
           ,[ID_DOC]
           ,[NOMBRE_ARCHIVO]
           ,[FECHA_MOD]
           ,[HORA_MOD]
           ,[TIPO_CONTENIDO]
           ,[USUARIO]
           ,[ID]
           ,[VALIDADO]
           ,[DIVISION]
           ,[EMPRESA]
           ,[FECHASUBE]
           ,[HORASUBE])
     VALUES
           (@PATENTE
           ,@ID_DOC
           ,@NOMBRE_ARCHIVO
           ,[dbo].[hoy](GETDATE())
           ,[dbo].[ahora](GETDATE())
           ,@TIPO_CONTENIDO
           ,@USUARIO
           ,@ID
           ,@VALIDADO
           ,@DIVISION
           ,@EMPRESA
           ,[dbo].[hoy](GETDATE())
           ,[dbo].[ahora](GETDATE()))
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_TRANSPORT_RECHAZO_SELECT_DISPUTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_TRANSPORT_RECHAZO_SELECT_DISPUTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_TRANSPORT_RECHAZO_SELECT_DISPUTA]
(@ID			UNIQUEIDENTIFIER = NULL) AS
BEGIN

SELECT tr.TIPO_RECHAZO, d.ID_DOC 
FROM DOCS_TRANSPORT_RECHAZO dt 
INNER JOIN DOCS_TIPO_RECHAZO tr ON tr.ID_TIPO_RECHAZO = dt.ID_TIPO_RECHAZO 
INNER JOIN DOCS_TRANSPORT d ON d.ID = dt.ID WHERE dt.ID = @ID
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_TRANSPORT_SELECT_DATOS_DISPUTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_TRANSPORT_SELECT_DATOS_DISPUTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_TRANSPORT_SELECT_DATOS_DISPUTA]
(@ID			UNIQUEIDENTIFIER= NULL
,@DIVCOD		NVARCHAR(50) = NULL
--,@PATENTE		NVARCHAR(10) = NULL
--,@ID_DOC		INT = NULL
,@ID_DISPUTA	INT = NULL) AS
BEGIN
	IF @ID_DISPUTA <= 0
		BEGIN
			SELECT DT.PATENTE, T.MARCA, T.MODELO, D.NOMBRE
			,(CASE WHEN DI.DIVISION IS NOT NULL AND DI.DIVISION <> '' THEN  (CASE WHEN D.COMUN_DIV = 'SI' THEN 'TODAS' ELSE DI.DIVISION END)
										  ELSE (CASE WHEN D.COMUN_DIV = 'SI' THEN 'TODAS' ELSE '' END) END) AS DIVISION
			, DT.VALIDADO, DT.ID, DT.ID_DOC,DD.ESTADO, DD.OBSERVACION, DD.OBSERVACION_REVAL, DD.EMPRESA
			, @DIVCOD AS DIVCOD
			FROM DOCS_TRANSPORT DT 
			INNER JOIN TRANSPORT T ON T.PATENTE = DT.PATENTE 
			INNER JOIN DOCS D ON D.ID_DOC = DT.ID_DOC 
			LEFT OUTER JOIN DOCS_DISPUTA_TRANS DD ON DD.ID = DT.ID AND DD.PATENTE = DT.PATENTE AND DD.ID_DOC = DT.ID_DOC 
			LEFT JOIN A024_DIVISIONES AS DI ON DI.DIVCOD = @DIVCOD
			WHERE DT.ID = @ID
		END
	ELSE
		BEGIN
			SELECT DT.PATENTE, T.MARCA, T.MODELO, D.NOMBRE
			, CASE WHEN DD.DIVISION <> 'TODAS' THEN 
												(CASE WHEN DI.DIVCOD IS NOT NULL THEN 
																				 (CASE WHEN D.COMUN_DIV = 'SI' THEN 'TODAS' ELSE DI.DIVISION END)
																				 ELSE (CASE WHEN D.COMUN_DIV = 'SI' THEN 'TODAS' ELSE '' END) END)
												ELSE DD.DIVISION END AS DIVISION
			--, CASE WHEN DD.DIVISION IS NULL OR DD.DIVISION = '' THEN 'TODAS' ELSE DD.DIVISION  END AS DIVISION
			, DT.VALIDADO, DT.ID, DT.ID_DOC,DD.ESTADO, DD.OBSERVACION, DD.OBSERVACION_REVAL, DD.EMPRESA
			, D.COMUN_DIV , @ID_DISPUTA AS ID_DISPUTA
			, @DIVCOD AS DIVCOD
			FROM DOCS_TRANSPORT DT 
			INNER JOIN TRANSPORT T ON T.PATENTE = DT.PATENTE 
			INNER JOIN DOCS D ON D.ID_DOC = DT.ID_DOC 
			LEFT OUTER JOIN DOCS_DISPUTA_TRANS DD ON DD.ID = DT.ID AND DD.PATENTE = DT.PATENTE AND DD.ID_DOC = DT.ID_DOC 
			LEFT JOIN A024_DIVISIONES AS DI ON DI.DIVCOD = DD.DIVISION
			WHERE DD.ID_DISPUTA = @ID_DISPUTA
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_TRANSPORT_SELECT_VALIDADO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_TRANSPORT_SELECT_VALIDADO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_TRANSPORT_SELECT_VALIDADO]
(@DIVCOD	NVARCHAR(4) = NULL
,@PATENTE	NVARCHAR(6) = NULL
,@ID_DOC	INT	= NULL
,@COMUN_DIV	NVARCHAR(2) = NULL
,@COMUN     INT = NULL
,@IDEMPRESA NVARCHAR(11) = NULL) AS
BEGIN
	IF(@COMUN = 1)
		BEGIN
			IF(@COMUN_DIV = 'NO')
				BEGIN
					SELECT CASE WHEN @ID_DOC = 145 THEN NULL ELSE ID END AS ID, VALIDADO 
					FROM DOCS_TRANSPORT 
					WHERE (PATENTE = @PATENTE) AND 
					((DIVISION = @DIVCOD) OR (ISNULL(DIVISION, 'AA') = 'AA')) AND 
					(ID_DOC = @ID_DOC) 
					ORDER BY ID_DOCS_VEH DESC
				END
			ELSE
				BEGIN
					SELECT CASE WHEN @ID_DOC = 145 THEN NULL ELSE ID END AS ID, VALIDADO 
					FROM DOCS_TRANSPORT 
					WHERE (PATENTE = @PATENTE) AND 
					(ID_DOC = @ID_DOC) 
					ORDER BY ID_DOCS_VEH DESC
				END
		END
	ELSE
		BEGIN
			IF(@COMUN_DIV = 'NO')
				BEGIN
					SELECT CASE WHEN @ID_DOC = 145 THEN NULL ELSE ID END AS ID, VALIDADO 
					FROM DOCS_TRANSPORT 
					WHERE (PATENTE = @PATENTE) AND 
					( (DIVISION = @DIVCOD) OR (ISNULL(DIVISION, 'AA') = 'AA')) AND 
					(ID_DOC = @ID_DOC) AND 
					(EMPRESA = @IDEMPRESA) 
					ORDER BY ID_DOCS_VEH DESC
				END
			ELSE
				BEGIN
					SELECT CASE WHEN @ID_DOC = 145 THEN NULL ELSE ID END AS ID, VALIDADO FROM DOCS_TRANSPORT 
					WHERE (PATENTE = @PATENTE) AND 
					(ID_DOC = @ID_DOC) AND 
					(EMPRESA = @IDEMPRESA) 
					ORDER BY ID_DOCS_VEH DESC
				END
		END
END		

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_WORKERS_DATA_INSERT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_DATA_INSERT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_DATA_INSERT]
( @ID            int = NULL
, @ID_DOC        uniqueidentifier = NULL
, @SALARIO       nvarchar(50) = NULL
, @CARGO         int = NULL
, @TURNO         nvarchar(50) = NULL
, @OST           nvarchar(20) = NULL
, @TIPOCONTRATO  nvarchar(50) = NULL
, @SUELDO_BASE   nvarchar(50) = NULL ) AS 
BEGIN

   INSERT INTO [DOCS_WORKERS_DATA]
        ( ID_DOC , SALARIO , CARGO        , TURNO
        , OST   , TIPOCONTRATO , SUELDO_BASE  )
   VALUES
        ( @ID_DOC , @SALARIO , @CARGO        , @TURNO
        , @OST   , @TIPOCONTRATO , @SUELDO_BASE  )


END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_WORKERS_DATA_SELECT_DISPUTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_DATA_SELECT_DISPUTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_DATA_SELECT_DISPUTA]
(@ID			UNIQUEIDENTIFIER = NULL) AS
BEGIN

	SELECT SALARIO,TURNO,OST,T.DESCRIPCION,R.ROL
	FROM DOCS_WORKERS_DATA D 
	LEFT JOIN TAB_TIPOCONTRATO T ON T.TIPOCONTRATO = D.TIPOCONTRATO 
	LEFT JOIN ROL R ON R.ID_ROL = D.CARGO 
 	WHERE ID_DOC = @ID
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_WORKERS_DELETE_FUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_DELETE_FUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_DELETE_FUNCIONARIOS_CTTA]
(
  @DEL_ID_DOCW	UNIQUEIDENTIFIER
 ,@RUT			NVARCHAR(8) = ''
 ,@USUARIO		NVARCHAR(10) = ''
 ,@DIVCOD		NVARCHAR(4) = ''
 ,@IDEMPRESA	NVARCHAR(11) = ''
)
AS
BEGIN
	DECLARE @ID_DOC INT = 18 /*FINIQUITO*/

	IF(@DIVCOD IS NOT NULL AND @DIVCOD <> '')
		BEGIN
			DELETE
			FROM DOCS_WORKERS
			WHERE
				(RUT = @RUT) AND
				(ID_DOC = @ID_DOC) AND
				(DIVISION = @DIVCOD) AND
				(ID = @DEL_ID_DOCW)
		END
	ELSE
		BEGIN
			DELETE
			FROM DOCS_WORKERS
			WHERE
				(RUT = @RUT) AND
				(ID_DOC = @ID_DOC) AND
				(ID = @DEL_ID_DOCW)
		END

	IF(NOT EXISTS(
		SELECT
			RUT
		FROM DOCS_WORKERS
		WHERE (ID = @DEL_ID_DOCW)
		))
		BEGIN
			DELETE
			FROM ARCHIVOS
			WHERE ID = @DEL_ID_DOCW
		END

	INSERT INTO HIST_DOCS_WORK (USUARIO, ID_DOC, RUT, FECHA , HORA, ACCION)
	VALUES (@USUARIO, @ID_DOC, @RUT, dbo.hoy(getdate()), dbo.ahora(getdate()), 'DEL')
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_WORKERS_INSERT_DOCUMENTO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_INSERT_DOCUMENTO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_INSERT_DOCUMENTO]
( @RUT              nvarchar(10) = NULL
, @ID_DOC           int = NULL
, @FECHA_MOD        nvarchar(8) = NULL
, @HORA_MOD         nvarchar(8) = NULL
, @USUARIO          nvarchar(10) = NULL
, @ID               uniqueidentifier = NULL
, @VALIDADO         nvarchar(2) = NULL
, @DIVISION         nvarchar(4) = NULL
, @EMPRESA          nvarchar(10) = NULL
, @FECHASUBE        nvarchar(8) = NULL
, @HORASUBE         nvarchar(8) = NULL ) AS 
BEGIN

   INSERT INTO [DOCS_WORKERS]
        ( RUT             , ID_DOC         , FECHA_MOD		, HORA_MOD        
		, USUARIO		  , ID             , VALIDADO       , DIVISION        
		, EMPRESA         , FECHASUBE      , HORASUBE    )
   VALUES
        ( @RUT            , @ID_DOC         , @FECHA_MOD	, @HORA_MOD        
		, @USUARIO		  , @ID             , @VALIDADO     , @DIVISION        
		, @EMPRESA        , @FECHASUBE      , @HORASUBE    )


END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_WORKERS_INSERT_FUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_INSERT_FUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_INSERT_FUNCIONARIOS_CTTA]
(
   @RUT              NVARCHAR(10) = NULL
  ,@ID_DOC           INT = NULL
  ,@FECHA_MOD        NVARCHAR(8) = NULL
  ,@HORA_MOD         NVARCHAR(8) = NULL
  ,@USUARIO          NVARCHAR(10) = NULL
  ,@ID               UNIQUEIDENTIFIER = NULL
  ,@VALIDADO         NVARCHAR(2) = 'NO'
  ,@DIVISION         NVARCHAR(4) = NULL
  ,@EMPRESA          NVARCHAR(10) = NULL
  ,@FECHASUBE        NVARCHAR(8) = NULL
  ,@HORASUBE         NVARCHAR(8) = NULL
) AS 
BEGIN

	IF(@FECHA_MOD IS NULL OR @FECHA_MOD = '')
		BEGIN
			SET @FECHA_MOD = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
		END
	IF(@HORA_MOD IS NULL OR @HORA_MOD = '')
		BEGIN
			SET @HORA_MOD = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
		END
	IF(@FECHASUBE IS NULL OR @FECHASUBE = '')
		BEGIN
			SET @FECHASUBE = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
		END
	IF(@HORASUBE IS NULL OR @HORASUBE = '')
		BEGIN
			SET @HORASUBE = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
		END

	INSERT INTO DOCS_WORKERS
        ( RUT             , ID_DOC         , FECHA_MOD		, HORA_MOD        
		, USUARIO		  , ID             , VALIDADO       , DIVISION        
		, EMPRESA         , FECHASUBE      , HORASUBE    )
	VALUES
        ( @RUT            , @ID_DOC         , @FECHA_MOD	, @HORA_MOD        
		, @USUARIO		  , @ID             , @VALIDADO     , @DIVISION        
		, @EMPRESA        , @FECHASUBE      , @HORASUBE    )


END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_WORKERS_MUTUAL_INSERT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_MUTUAL_INSERT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_MUTUAL_INSERT]
( @ID		uniqueidentifier = NULL
, @IDMUTUAL int = NULL ) AS 
BEGIN

   INSERT INTO [DOCS_WORKERS_MUTUAL]
        ( ID , IDMUTUAL )
   VALUES
        ( @ID , @IDMUTUAL )

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_WORKERS_SELECT_DATOS_DISPUTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_SELECT_DATOS_DISPUTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_SELECT_DATOS_DISPUTA]
(@ID			UNIQUEIDENTIFIER= NULL
,@DIVCOD		NVARCHAR(50) = NULL
,@ID_DISPUTA	INT = NULL) AS
BEGIN
	IF @ID_DISPUTA <= 0
		BEGIN
			SELECT DW.RUT, W.NOMBRES, W.APELLIDOS, V.GLOSA, D.NOMBRE, DW.VALIDADO , D.ID_DOC
			, DW.ID , D.COMUN_DIV , CASE WHEN DW.VALIDADO = 'RE' THEN 'RECHAZADO' WHEN DW.VALIDADO = 'SI' THEN 'VALIDADO' ELSE 'PENDIENTE' END AS DESCVALIDADO
			, 0 AS ID_DISPUTA , D.ID_DOC_OPCION , DW.DIVISION
			FROM DOCS_WORKERS DW 
			INNER JOIN A024_DIVISIONES V ON V.DIVCOD = DW.DIVISION 
			INNER JOIN WORKERS W ON W.RUT = DW.RUT 
			INNER JOIN DOCS D ON D.ID_DOC = DW.ID_DOC 
			WHERE 
			DW.DIVISION = (CASE WHEN D.COMUN_DIV = 'SI' THEN  DW.DIVISION ELSE @DIVCOD END) AND 
			DW.ID = @ID
		END
	ELSE
		BEGIN
			SELECT DW.RUT,D.COMUN_DIV, W.NOMBRES, W.APELLIDOS, V.GLOSA, D.NOMBRE
			, DW.VALIDADO, DW.ID, DW.ID_DOC, DW.DIVISION, DD.ESTADO , D.ID_DOC_OPCION
			, DD.OBSERVACION, DD.OBSERVACION_REVAL, DW.EMPRESA ,DD.ID_DISPUTA , DW.DIVISION
			, CASE WHEN DW.VALIDADO = 'RE' THEN 'RECHAZADO' WHEN DW.VALIDADO = 'SI' THEN 'VALIDADO' ELSE 'PENDIENTE' END AS DESCVALIDADO
			FROM DOCS_WORKERS DW 
			INNER JOIN A024_DIVISIONES V ON V.DIVCOD = DW.DIVISION 
			INNER JOIN WORKERS W ON W.RUT = DW.RUT 
			INNER JOIN DOCS D ON D.ID_DOC = DW.ID_DOC 
			LEFT OUTER JOIN DOCS_DISPUTA DD ON DD.ID = DW.ID 
											AND DD.DIVISION = (CASE WHEN D.COMUN_DIV='SI' THEN DD.DIVISION ELSE DW.DIVISION END) 
											AND DD.RUT = DW.RUT 
											AND DD.ID_DOC = DW.ID_DOC 
											AND DW.EMPRESA = DD.EMPRESA 
			WHERE DD.ID_DISPUTA = @ID_DISPUTA
		END
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_WORKERS_SELECT_DEPENDENCIA_VALIDADO_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_SELECT_DEPENDENCIA_VALIDADO_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_SELECT_DEPENDENCIA_VALIDADO_CTTA]
(@RUT		NVARCHAR(10) = NULL
,@ID_DOC	INT = NULL
,@DIVCOD	NVARCHAR(50) = NULL
,@COMUN_DIV	NVARCHAR(2) = NULL
,@COMUN		INT = NULL
,@IDEMPRESA	NVARCHAR(10) = NULL) AS
BEGIN
	IF @COMUN = 0
		BEGIN
			SELECT TOP 1 VALIDADO 
			FROM DOCS_WORKERS 
			WHERE (RUT = @RUT) 
			AND (ID_DOC = @ID_DOC) 
			AND (DIVISION = (CASE WHEN @COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVCOD END )) 
			AND (EMPRESA = @IDEMPRESA)
			ORDER BY FECHASUBE DESC, HORASUBE DESC
		END
	ELSE
		BEGIN 
			SELECT TOP 1 VALIDADO 
			FROM DOCS_WORKERS 
			WHERE (RUT = @RUT) 
			AND (ID_DOC = @ID_DOC) 
			AND (DIVISION = (CASE WHEN @COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVCOD END )) 
			ORDER BY FECHASUBE DESC, HORASUBE DESC
		END
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_WORKERS_SELECT_ESTADODOC_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_SELECT_ESTADODOC_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_SELECT_ESTADODOC_CTTA]
(@RUT		NVARCHAR(10) = NULL
,@ID_DOC	INT = NULL
,@DIVISION	NVARCHAR(50) = NULL
,@COMUN		INT = NULL
,@COMUN_DIV	NVARCHAR(2) = NULL
,@EMPRESA	NVARCHAR(10) = NULL) AS
BEGIN
	IF @COMUN = 1
	BEGIN
		SELECT ID
			 , VALIDADO 
		FROM DOCS_WORKERS 
		WHERE (RUT = @RUT) AND 
		(ID_DOC = @ID_DOC) AND 
		(DIVISION = (CASE WHEN @COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVISION END)) 
		ORDER BY ID_DOCS_WORKERS DESC
	END
	ELSE
	BEGIN
		SELECT ID, VALIDADO 
		FROM DOCS_WORKERS 
		WHERE (RUT = @RUT) AND 
		(ID_DOC = @ID_DOC) AND 
		(DIVISION = (CASE WHEN @COMUN_DIV = 'SI' THEN DIVISION ELSE @DIVISION END)) AND 
		(EMPRESA = @EMPRESA) 
		ORDER BY ID_DOCS_WORKERS DESC
	END
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_WORKERS_SELECT_FUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_SELECT_FUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_SELECT_FUNCIONARIOS_CTTA]
(
  @RUT	NVARCHAR(10) = NULL
) AS
BEGIN
	DECLARE @ID_DOC INT = 18; /*FINIQUITO*/
	DECLARE @PRIM_FILTERED_ID INT

	SELECT
		TOP 1
		@PRIM_FILTERED_ID = DW.ID_DOCS_WORKERS
	FROM DOCS_WORKERS DW
	INNER JOIN A024_DIVISIONES D
		ON D.DIVCOD = DW.DIVISION
	WHERE
		(DW.RUT = @RUT) AND
		(DW.ID_DOC = @ID_DOC) AND
		(DW.VALIDADO = 'RE')
	ORDER BY DW.ID_DOCS_WORKERS DESC

	SELECT 
		DW.EMPRESA,
		DW.FECHA_MOD,
		DW.HORA_MOD,
		DW.USUARIO,
		DW.ID,
		DW.VALIDADO,
		DW.CERTFECHA,
		DW.CERTHORA,
		DW.CERTUSUARIO,
		DW.FECHASUBE,
		DW.HORASUBE,
		DW.DIVISION,
		D.GLOSA AS NOMDIVISION,
		DW.RUT,
		IIF(DW.VALIDADO = 'RE' AND DW.ID_DOCS_WORKERS = @PRIM_FILTERED_ID,
			 [dbo].[V4MVC_FGET_MSG_AGREGADO_RECHAZO](DW.ID), '') AS REC_MSG
	FROM DOCS_WORKERS DW
	INNER JOIN A024_DIVISIONES D
		ON D.DIVCOD = DW.DIVISION
	WHERE
		(DW.RUT = @RUT) AND 
		(DW.ID_DOC = @ID_DOC)
	ORDER BY DW.ID_DOCS_WORKERS DESC
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_DOCS_WORKERS_SELECT_HISTORICO_DOCUMENTOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_SELECT_HISTORICO_DOCUMENTOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_DOCS_WORKERS_SELECT_HISTORICO_DOCUMENTOS_CTTA]
(@RUT		NVARCHAR(10) = NULL
,@ID_DOC	INT = NULL
,@DIVCOD	NVARCHAR(50) = NULL
,@COMUN_DIV	NVARCHAR(2) = NULL
,@COMUN		INT = NULL
,@IDEMPRESA	NVARCHAR(10) = NULL) AS
BEGIN
	IF @COMUN = 0
		BEGIN
			SELECT E.ACRONIMO AS EMPRESA, DW.FECHA_MOD, DW.HORA_MOD, DW.USUARIO, DW.ID, DW.VALIDADO, DW.CERTFECHA, DW.CERTHORA, DW.CERTUSUARIO, DW.FECHASUBE, DW.HORASUBE 
			FROM DOCS_WORKERS AS DW
			LEFT JOIN ENTERPRISE AS E ON E.IDEMPRESA = DW.EMPRESA
			WHERE (DW.RUT = @RUT) AND 
			(DW.ID_DOC = @ID_DOC) AND 
			(DW.DIVISION = (CASE WHEN @COMUN_DIV = 'SI' THEN DW.DIVISION ELSE @DIVCOD END)) AND 
			(DW.EMPRESA = @IDEMPRESA) 
			ORDER BY ID_DOCS_WORKERS DESC
		END
	ELSE
		BEGIN 
			SELECT E.ACRONIMO AS EMPRESA, DW.FECHA_MOD, DW.HORA_MOD, DW.USUARIO, DW.ID, DW.VALIDADO, DW.CERTFECHA, DW.CERTHORA, DW.CERTUSUARIO, DW.FECHASUBE, DW.HORASUBE 
			FROM DOCS_WORKERS AS DW
			LEFT JOIN ENTERPRISE AS E ON E.IDEMPRESA = DW.EMPRESA
			WHERE (DW.RUT = @RUT) AND 
			(DW.ID_DOC = @ID_DOC) AND 
			(DW.DIVISION = (CASE WHEN @COMUN_DIV = 'SI' THEN DW.DIVISION ELSE @DIVCOD END))
			ORDER BY ID_DOCS_WORKERS DESC
		END
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ENTERPRISE_COUNT_FILTRO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ENTERPRISE_COUNT_FILTRO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ENTERPRISE_COUNT_FILTRO]    
(    
@SEARCH_IDEMPRESA NVARCHAR(10) = NULL,  
@SEARCH_ACRONIMO NVARCHAR(50) = NULL,  
@SEARCH_NOMBRE NVARCHAR(50) = NULL       
)    
AS    
BEGIN    
    
IF ISNULL(@SEARCH_IDEMPRESA,'') != '' OR ISNULL(@SEARCH_ACRONIMO,'') != '' OR ISNULL(@SEARCH_NOMBRE,'') != ''  
BEGIN       

IF ISNULL(@SEARCH_IDEMPRESA,'') != '' AND ISNULL(@SEARCH_ACRONIMO,'') = '' AND ISNULL(@SEARCH_NOMBRE,'') = ''  
 BEGIN  
  SELECT COUNT(IDEMPRESA) AS COUNT_ENTERPRISES                    
  FROM ENTERPRISE            
  WHERE (AUTOR='SI')  
  AND IDEMPRESA LIKE '%' + @SEARCH_IDEMPRESA + '%'  
 END  
  
 IF ISNULL(@SEARCH_IDEMPRESA,'') = '' AND ISNULL(@SEARCH_ACRONIMO,'') != '' AND ISNULL(@SEARCH_NOMBRE,'') = ''  
 BEGIN  
  SELECT COUNT(IDEMPRESA) AS COUNT_ENTERPRISES                           
  FROM ENTERPRISE            
  WHERE (AUTOR='SI')  
  AND ACRONIMO LIKE '%' + @SEARCH_ACRONIMO + '%'  
 END  
  
 IF ISNULL(@SEARCH_IDEMPRESA,'') = '' AND ISNULL(@SEARCH_ACRONIMO,'') = '' AND ISNULL(@SEARCH_NOMBRE,'') != ''  
 BEGIN  
  SELECT COUNT(IDEMPRESA) AS COUNT_ENTERPRISES                        
  FROM ENTERPRISE            
  WHERE (AUTOR='SI')  
  AND NOMBRE LIKE '%' + @SEARCH_NOMBRE + '%'  
 END  
  
 IF ISNULL(@SEARCH_IDEMPRESA,'') = '' AND ISNULL(@SEARCH_ACRONIMO,'') != '' AND ISNULL(@SEARCH_NOMBRE,'') != ''  
 BEGIN  
  SELECT COUNT(IDEMPRESA) AS COUNT_ENTERPRISES                        
  FROM ENTERPRISE            
  WHERE (AUTOR='SI')  
  AND ACRONIMO LIKE '%' + @SEARCH_ACRONIMO + '%'  
  AND NOMBRE LIKE '%' + @SEARCH_NOMBRE + '%'    
 END  
  
 IF ISNULL(@SEARCH_IDEMPRESA,'') != '' AND ISNULL(@SEARCH_ACRONIMO,'') != '' AND ISNULL(@SEARCH_NOMBRE,'') != ''  
 BEGIN  
  SELECT COUNT(IDEMPRESA) AS COUNT_ENTERPRISES                         
  FROM ENTERPRISE            
  WHERE (AUTOR='SI')  
  AND IDEMPRESA LIKE '%' + @SEARCH_IDEMPRESA + '%'  
  AND ACRONIMO LIKE '%' + @SEARCH_ACRONIMO + '%'  
  AND NOMBRE LIKE '%' + @SEARCH_NOMBRE + '%'   
 END  
  
 IF ISNULL(@SEARCH_IDEMPRESA,'') != '' AND ISNULL(@SEARCH_ACRONIMO,'') != '' AND ISNULL(@SEARCH_NOMBRE,'') = ''  
 BEGIN  
  SELECT COUNT(IDEMPRESA) AS COUNT_ENTERPRISES                     
  FROM ENTERPRISE            
  WHERE (AUTOR='SI')  
  AND IDEMPRESA LIKE '%' + @SEARCH_IDEMPRESA + '%'  
  AND ACRONIMO LIKE '%' + @SEARCH_ACRONIMO + '%'   
 END  
  
 IF ISNULL(@SEARCH_IDEMPRESA,'') != '' AND ISNULL(@SEARCH_ACRONIMO,'') = '' AND ISNULL(@SEARCH_NOMBRE,'') != ''  
 BEGIN  
  SELECT COUNT(IDEMPRESA) AS COUNT_ENTERPRISES                        
  FROM ENTERPRISE            
  WHERE (AUTOR='SI')  
  AND IDEMPRESA LIKE '%' + @SEARCH_IDEMPRESA + '%'  
  AND NOMBRE LIKE '%' + @SEARCH_NOMBRE + '%'  
 END

END
ELSE
BEGIN

 SELECT COUNT(IDEMPRESA) AS COUNT_ENTERPRISES 
 FROM ENTERPRISE    
 WHERE (AUTOR='SI')

END
   
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ENTERPRISE_INSERT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ENTERPRISE_INSERT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ENTERPRISE_INSERT]
(
 @IDEMPRESA NVARCHAR(11) = NULL
,@CLAVE NVARCHAR(10) = NULL
,@ACRONIMO NVARCHAR(50) = NULL
,@NOMBRE NVARCHAR(50) = NULL
,@RUBRO NVARCHAR(50) = NULL
,@DIRECCCION NVARCHAR(50) = NULL
,@CIUDAD NVARCHAR(50) = NULL
,@REGION NVARCHAR(5) = NULL
,@TELEFONO NVARCHAR(50) = NULL
,@FAX NVARCHAR(50) = NULL
,@NRELEGAL NVARCHAR(50) = NULL
,@RELEGAL NVARCHAR(10) = NULL
,@EMAIL NVARCHAR(150) = NULL
,@UBIFAENA NVARCHAR(50) = NULL
,@FONOFAENA NVARCHAR(50) = NULL
,@ADMINNOM NVARCHAR(50) = NULL
,@ADMINRUT NVARCHAR(10) = NULL
,@ADMINEMAIL NVARCHAR(150) = NULL
,@ADMINFONO NVARCHAR(50) = NULL
,@BLOQUEOCASINO NVARCHAR(2) = NULL
,@FECHABLOQUEO NVARCHAR(8) = NULL
,@OST NVARCHAR(2) = NULL
,@FECAUDIT NVARCHAR(6) = NULL
,@TIPOEMP NVARCHAR(2) = NULL
,@RINTERNO NVARCHAR(2) = NULL
,@CPARITARIO NVARCHAR(2) = NULL
,@AUTOR NVARCHAR(2) = NULL
,@FINANZAS NVARCHAR(1) = NULL
,@RRHH NVARCHAR(1) = NULL
,@SICEP NVARCHAR(1) = NULL
,@DICOM NVARCHAR(1) = NULL
,@PROPIO NVARCHAR(1) = NULL
,@LEGAL NVARCHAR(1) = NULL
,@CONTRATOS NVARCHAR(1) = NULL
,@TAUDIT NVARCHAR(2) = NULL
,@SEGURITO NVARCHAR(10) = NULL
,@EMAILSEGURITO NVARCHAR(50) = NULL
,@MUTUAL NVARCHAR(20) = NULL
,@CODIGOMUTUAL NVARCHAR(20) = NULL
,@SERNAGEOMIN NVARCHAR(2) = NULL
,@CODIGOSERNA NVARCHAR(20) = NULL
,@FECHAMOD NVARCHAR(8) = NULL
,@HORAMOD NVARCHAR(8) = NULL
,@GRABO NVARCHAR(1) = NULL
,@MAILLICITA NVARCHAR(150) = NULL
,@BALANCE NVARCHAR(1) = NULL
,@ANTERIOR NVARCHAR(1) = NULL
,@ELYPSE NVARCHAR(10) = NULL
,@PAIS NVARCHAR(50) = NULL
,@RUTHOTEL NVARCHAR(10) = NULL
,@CONTACTOHOTEL NVARCHAR(100) = NULL
,@TLFHOTEL NVARCHAR(50) = NULL
,@EMAILHOTEL NVARCHAR(50) = NULL
) AS

BEGIN

	INSERT INTO [ENTERPRISE]
	(
		 IDEMPRESA			,CLAVE				,ACRONIMO				,NOMBRE				,RUBRO
		,DIRECCCION			,CIUDAD				,REGION					,TELEFONO			,FAX
		,NRELEGAL			,RELEGAL			,EMAIL					,UBIFAENA			,FONOFAENA
		,ADMINNOM			,ADMINRUT			,ADMINEMAIL				,ADMINFONO			,BLOQUEOCASINO
		,FECHABLOQUEO		,OST				,FECAUDIT				,TIPOEMP			,RINTERNO
		,CPARITARIO			,AUTOR				,FINANZAS				,RRHH				,SICEP
		,DICOM				,PROPIO				,LEGAL					,CONTRATOS			,TAUDIT
		,SEGURITO			,EMAILSEGURITO		,MUTUAL					,CODIGOMUTUAL		,SERNAGEOMIN
		,CODIGOSERNA		,FECHAMOD			,HORAMOD				,GRABO				,MAILLICITA
		,BALANCE			,ANTERIOR			,ELYPSE					,PAIS				,RUTHOTEL
		,CONTACTOHOTEL		,TLFHOTEL			,EMAILHOTEL
	)
	VALUES
	(
		@IDEMPRESA			,@CLAVE				,@ACRONIMO				,@NOMBRE			,@RUBRO
		,@DIRECCCION		,@CIUDAD			,@REGION				,@TELEFONO			,@FAX
		,@NRELEGAL			,@RELEGAL			,@EMAIL					,@UBIFAENA			,@FONOFAENA
		,@ADMINNOM			,@ADMINRUT			,@ADMINEMAIL			,@ADMINFONO			,@BLOQUEOCASINO
		,@FECHABLOQUEO		,@OST				,@FECAUDIT				,@TIPOEMP			,@RINTERNO
		,@CPARITARIO		,@AUTOR				,@FINANZAS				,@RRHH				,@SICEP
		,@DICOM				,@PROPIO			,@LEGAL					,@CONTRATOS			,@TAUDIT
		,@SEGURITO			,@EMAILSEGURITO		,@MUTUAL				,@CODIGOMUTUAL		,@SERNAGEOMIN
		,@CODIGOSERNA		,DBO.HOY(GETDATE()) ,DBO.AHORA(GETDATE())	,@GRABO				,@MAILLICITA
		,@BALANCE			,@ANTERIOR			,@ELYPSE				,@PAIS				,@RUTHOTEL
		,@CONTACTOHOTEL		,@TLFHOTEL			,@EMAILHOTEL
	)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ENTERPRISE_INSERT_NEWENTERPRISECTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ENTERPRISE_INSERT_NEWENTERPRISECTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ENTERPRISE_INSERT_NEWENTERPRISECTTA]
(
 @IDEMPRESA NVARCHAR(10)
,@CLAVE NVARCHAR(10)
,@ACRONIMO NVARCHAR(50)
,@NOMBRE NVARCHAR(50)
,@DIRECCCION NVARCHAR(50)
,@PAIS NVARCHAR(50)
,@REGION NVARCHAR(5)
,@CIUDAD NVARCHAR(50)
,@TELEFONO NVARCHAR(50)
,@NRELEGAL NVARCHAR(50)
,@EMAIL NVARCHAR(150)
,@ADMINRUT NVARCHAR(10)
,@ADMINNOM NVARCHAR(50)
,@ADMINEMAIL NVARCHAR(150)
)
AS
BEGIN

	INSERT INTO [ENTERPRISE]
	(
		 IDEMPRESA		,CLAVE			,ACRONIMO		,NOMBRE
		,DIRECCCION		,PAIS			,REGION			,CIUDAD
		,TELEFONO		,NRELEGAL		,EMAIL			,ADMINRUT
		,ADMINNOM		,ADMINEMAIL
	)
	VALUES
	(
		@IDEMPRESA		,@CLAVE			,@ACRONIMO		,@NOMBRE
		,@DIRECCCION	,@PAIS			,@REGION		,@CIUDAD
		,@TELEFONO		,@NRELEGAL		,@EMAIL			,@ADMINRUT
		,@ADMINNOM		,@ADMINEMAIL
	)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ENTERPRISE_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ENTERPRISE_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ENTERPRISE_SELECT]  
( @IDEMPRESA      nvarchar(11) = NULL ) AS  
BEGIN  
  
   SELECT IDEMPRESA     , CLAVE      , ACRONIMO      , NOMBRE         
        , RUBRO         , DIRECCCION , CIUDAD        , REGION         
        , TELEFONO      , FAX        , NRELEGAL      , RELEGAL        
        , EMAIL         , UBIFAENA   , FONOFAENA     , ADMINNOM       
        , ADMINRUT      , ADMINEMAIL , ADMINFONO     , BLOQUEOCASINO  
        , FECHABLOQUEO  , OST        , FECAUDIT      , TIPOEMP        
        , RINTERNO      , CPARITARIO , AUTOR         , FINANZAS       
        , RRHH          , SICEP      , DICOM         , PROPIO         
        , LEGAL         , CONTRATOS  , TAUDIT        , SEGURITO       
        , EMAILSEGURITO , MUTUAL     , CODIGOMUTUAL  , SERNAGEOMIN    
        , CODIGOSERNA   , FECHAMOD   , HORAMOD       , GRABO          
        , MAILLICITA    , BALANCE    , ANTERIOR      , ELYPSE         
        , PAIS          , RUTHOTEL   , CONTACTOHOTEL , TLFHOTEL       
        , EMAILHOTEL     
     FROM ENTERPRISE  
    WHERE IDEMPRESA = ISNULL( @IDEMPRESA, IDEMPRESA )  
  
END  
  
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ENTERPRISE_SELECT_DATATABLES]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ENTERPRISE_SELECT_DATATABLES]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ENTERPRISE_SELECT_DATATABLES]              
(           
@IDISPLAYSTART INT,            
@IDISPLAYLENGTH INT,            
@SEARCH_IDEMPRESA NVARCHAR(11) = NULL,  
@SEARCH_ACRONIMO NVARCHAR(50) = NULL,  
@SEARCH_NOMBRE NVARCHAR(50) = NULL,  
@SORT_COLUMN NVARCHAR(4) = NULL,  
@SORT_DIRECTION NVARCHAR(4) = NULL  
) AS              
BEGIN          
          
IF ISNULL(@SEARCH_IDEMPRESA,'') != '' OR ISNULL(@SEARCH_ACRONIMO,'') != '' OR ISNULL(@SEARCH_NOMBRE,'') != ''  
BEGIN          
             
 IF ISNULL(@SEARCH_IDEMPRESA,'') != '' AND ISNULL(@SEARCH_ACRONIMO,'') = '' AND ISNULL(@SEARCH_NOMBRE,'') = ''  
 BEGIN  
	IF @SORT_DIRECTION = 'ASC'
	BEGIN
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                         
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')  
		AND IDEMPRESA LIKE '%' + @SEARCH_IDEMPRESA + '%'  
		ORDER BY
			CASE WHEN @SORT_COLUMN='0' THEN IDEMPRESA END ASC,
			CASE WHEN @SORT_COLUMN='1' THEN ACRONIMO END ASC,
			CASE WHEN @SORT_COLUMN='2' THEN NOMBRE END ASC
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY   
	END

	IF @SORT_DIRECTION = 'DESC'
	BEGIN
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                         
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')  
		AND IDEMPRESA LIKE '%' + @SEARCH_IDEMPRESA + '%'  
		ORDER BY
			CASE WHEN @SORT_COLUMN='0' THEN IDEMPRESA END DESC,
			CASE WHEN @SORT_COLUMN='1' THEN ACRONIMO END DESC,
			CASE WHEN @SORT_COLUMN='2' THEN NOMBRE END DESC
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY  
	END
 END  
  
 IF ISNULL(@SEARCH_IDEMPRESA,'') = '' AND ISNULL(@SEARCH_ACRONIMO,'') != '' AND ISNULL(@SEARCH_NOMBRE,'') = ''  
 BEGIN  

	IF @SORT_DIRECTION = 'ASC'
	BEGIN
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                         
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')  
		AND ACRONIMO LIKE '%' + @SEARCH_ACRONIMO + '%'  
		ORDER BY
			CASE WHEN @SORT_COLUMN='0' THEN IDEMPRESA END ASC,
			CASE WHEN @SORT_COLUMN='1' THEN ACRONIMO END ASC,
			CASE WHEN @SORT_COLUMN='2' THEN NOMBRE END ASC
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY  
	END

	IF @SORT_DIRECTION = 'DESC'
	BEGIN
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                         
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')  
		AND ACRONIMO LIKE '%' + @SEARCH_ACRONIMO + '%'  
		ORDER BY
			CASE WHEN @SORT_COLUMN='0' THEN IDEMPRESA END DESC,
			CASE WHEN @SORT_COLUMN='1' THEN ACRONIMO END DESC,
			CASE WHEN @SORT_COLUMN='2' THEN NOMBRE END DESC 
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY  
	END 
 END  
  
 IF ISNULL(@SEARCH_IDEMPRESA,'') = '' AND ISNULL(@SEARCH_ACRONIMO,'') = '' AND ISNULL(@SEARCH_NOMBRE,'') != ''  
 BEGIN  

	IF @SORT_DIRECTION = 'ASC'
	BEGIN
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                         
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')  
		AND NOMBRE LIKE '%' + @SEARCH_NOMBRE + '%'  
		ORDER BY
			CASE WHEN @SORT_COLUMN='0' THEN IDEMPRESA END ASC,
			CASE WHEN @SORT_COLUMN='1' THEN ACRONIMO END ASC,
			CASE WHEN @SORT_COLUMN='2' THEN NOMBRE END ASC
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY  
	END

	IF @SORT_DIRECTION = 'DESC'
	BEGIN
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                         
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')  
		AND NOMBRE LIKE '%' + @SEARCH_NOMBRE + '%'  
		ORDER BY
			CASE WHEN @SORT_COLUMN='0' THEN IDEMPRESA END DESC,
			CASE WHEN @SORT_COLUMN='1' THEN ACRONIMO END DESC,
			CASE WHEN @SORT_COLUMN='2' THEN NOMBRE END DESC 
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY  
	END
 END  
  
 IF ISNULL(@SEARCH_IDEMPRESA,'') = '' AND ISNULL(@SEARCH_ACRONIMO,'') != '' AND ISNULL(@SEARCH_NOMBRE,'') != ''  
 BEGIN  

	IF @SORT_DIRECTION = 'ASC'
	BEGIN
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                         
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')  
		AND ACRONIMO LIKE '%' + @SEARCH_ACRONIMO + '%'  
		AND NOMBRE LIKE '%' + @SEARCH_NOMBRE + '%'  
		ORDER BY
			CASE WHEN @SORT_COLUMN='0' THEN IDEMPRESA END ASC,
			CASE WHEN @SORT_COLUMN='1' THEN ACRONIMO END ASC,
			CASE WHEN @SORT_COLUMN='2' THEN NOMBRE END ASC
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY 
	END

	IF @SORT_DIRECTION = 'DESC'
	BEGIN
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                         
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')  
		AND ACRONIMO LIKE '%' + @SEARCH_ACRONIMO + '%'  
		AND NOMBRE LIKE '%' + @SEARCH_NOMBRE + '%'  
		ORDER BY
			CASE WHEN @SORT_COLUMN='0' THEN IDEMPRESA END DESC,
			CASE WHEN @SORT_COLUMN='1' THEN ACRONIMO END DESC,
			CASE WHEN @SORT_COLUMN='2' THEN NOMBRE END DESC 
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY 
	END
 END  
  
 IF ISNULL(@SEARCH_IDEMPRESA,'') != '' AND ISNULL(@SEARCH_ACRONIMO,'') != '' AND ISNULL(@SEARCH_NOMBRE,'') != ''  
 BEGIN  

 	IF @SORT_DIRECTION = 'ASC'
	BEGIN
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                         
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')  
		AND IDEMPRESA LIKE '%' + @SEARCH_IDEMPRESA + '%'  
		AND ACRONIMO LIKE '%' + @SEARCH_ACRONIMO + '%'  
		AND NOMBRE LIKE '%' + @SEARCH_NOMBRE + '%'  
		ORDER BY
			CASE WHEN @SORT_COLUMN='0' THEN IDEMPRESA END ASC,
			CASE WHEN @SORT_COLUMN='1' THEN ACRONIMO END ASC,
			CASE WHEN @SORT_COLUMN='2' THEN NOMBRE END ASC 
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY 
	END

	IF @SORT_DIRECTION = 'DESC'
	BEGIN
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                         
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')  
		AND IDEMPRESA LIKE '%' + @SEARCH_IDEMPRESA + '%'  
		AND ACRONIMO LIKE '%' + @SEARCH_ACRONIMO + '%'  
		AND NOMBRE LIKE '%' + @SEARCH_NOMBRE + '%'  
		ORDER BY
			CASE WHEN @SORT_COLUMN='0' THEN IDEMPRESA END DESC,
			CASE WHEN @SORT_COLUMN='1' THEN ACRONIMO END DESC,
			CASE WHEN @SORT_COLUMN='2' THEN NOMBRE END DESC 
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY 
	END   
 END  
  
 IF ISNULL(@SEARCH_IDEMPRESA,'') != '' AND ISNULL(@SEARCH_ACRONIMO,'') != '' AND ISNULL(@SEARCH_NOMBRE,'') = ''  
 BEGIN  

	IF @SORT_DIRECTION = 'ASC'
	BEGIN
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                         
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')  
		AND IDEMPRESA LIKE '%' + @SEARCH_IDEMPRESA + '%'  
		AND ACRONIMO LIKE '%' + @SEARCH_ACRONIMO + '%'  
		ORDER BY
			CASE WHEN @SORT_COLUMN='0' THEN IDEMPRESA END ASC,
			CASE WHEN @SORT_COLUMN='1' THEN ACRONIMO END ASC,
			CASE WHEN @SORT_COLUMN='2' THEN NOMBRE END ASC 
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY 
	END

	IF @SORT_DIRECTION = 'DESC'
	BEGIN
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                         
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')  
		AND IDEMPRESA LIKE '%' + @SEARCH_IDEMPRESA + '%'  
		AND ACRONIMO LIKE '%' + @SEARCH_ACRONIMO + '%'  
		ORDER BY
			CASE WHEN @SORT_COLUMN='0' THEN IDEMPRESA END DESC,
			CASE WHEN @SORT_COLUMN='1' THEN ACRONIMO END DESC,
			CASE WHEN @SORT_COLUMN='2' THEN NOMBRE END DESC 
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY 
	END   
 END  
  
 IF ISNULL(@SEARCH_IDEMPRESA,'') != '' AND ISNULL(@SEARCH_ACRONIMO,'') = '' AND ISNULL(@SEARCH_NOMBRE,'') != ''  
 BEGIN  

	IF @SORT_DIRECTION = 'ASC'
	BEGIN
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                         
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')  
		AND IDEMPRESA LIKE '%' + @SEARCH_IDEMPRESA + '%'  
		AND NOMBRE LIKE '%' + @SEARCH_NOMBRE + '%'  
		ORDER BY
			CASE WHEN @SORT_COLUMN='0' THEN IDEMPRESA END ASC,
			CASE WHEN @SORT_COLUMN='1' THEN ACRONIMO END ASC,
			CASE WHEN @SORT_COLUMN='2' THEN NOMBRE END ASC 
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY   
	END

	IF @SORT_DIRECTION = 'DESC'
	BEGIN
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                         
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')  
		AND IDEMPRESA LIKE '%' + @SEARCH_IDEMPRESA + '%'  
		AND NOMBRE LIKE '%' + @SEARCH_NOMBRE + '%'  
		ORDER BY
			CASE WHEN @SORT_COLUMN='0' THEN IDEMPRESA END DESC,
			CASE WHEN @SORT_COLUMN='1' THEN ACRONIMO END DESC,
			CASE WHEN @SORT_COLUMN='2' THEN NOMBRE END DESC 
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY  
	END
 END  
          
END          
ELSE          
BEGIN          
   
	 IF @SORT_COLUMN='0' AND @SORT_DIRECTION='ASC'  
	 BEGIN  
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                           
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')          
		ORDER BY IDEMPRESA ASC          
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY     
	 END  
  
	 IF @SORT_COLUMN='0' AND @SORT_DIRECTION='DESC'  
	 BEGIN  
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                     
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')          
		ORDER BY IDEMPRESA DESC          
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY     
	 END  
  
	 IF @SORT_COLUMN='1' AND @SORT_DIRECTION='ASC'  
	 BEGIN  
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                           
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')          
		ORDER BY ACRONIMO ASC          
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY     
	 END  
  
	 IF @SORT_COLUMN='1' AND @SORT_DIRECTION='DESC'  
	 BEGIN  
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                           
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')          
		ORDER BY ACRONIMO DESC          
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY     
	 END  
  
	 IF @SORT_COLUMN='2' AND @SORT_DIRECTION='ASC'  
	 BEGIN  
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                           
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')          
		ORDER BY NOMBRE ASC          
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY     
	 END  
  
	 IF @SORT_COLUMN='2' AND @SORT_DIRECTION='DESC'  
	 BEGIN  
		SELECT  IDEMPRESA,  ACRONIMO,  NOMBRE                           
		FROM ENTERPRISE            
		WHERE (AUTOR='SI')          
		ORDER BY NOMBRE DESC          
		OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY     
	 END  
END              
          
END   
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ENTERPRISE_SELECT_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ENTERPRISE_SELECT_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ENTERPRISE_SELECT_INFORMECONSULTARAPIDA_CTTA]
(
  @RUT NVARCHAR(10)
) AS 
BEGIN

SELECT DISTINCT EMPRESA AS IDEMPRESA,ACRONIMO 
FROM WORKERSLOCAL, ENTERPRISE 
WHERE (dbo.hoy(GETDATE()) BETWEEN FINIPASE AND FFINPASE) AND (WORKERSLOCAL.AUTOR <> 'BL') AND (RUT = @RUT) AND (EMPRESA = IDEMPRESA)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ENTERPRISE_SELECT_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ENTERPRISE_SELECT_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ENTERPRISE_SELECT_PASES_CTTA]  
(
  @IDEMPRESA    NVARCHAR(11)
 ,@OST			NVARCHAR(14)
) AS  
BEGIN  

	DECLARE @NIVEL SMALLINT = 1

	SELECT
		@NIVEL = OSC.NIVEL
	FROM OSTSUBC OSC
	WHERE
		(REPLACE(OSC.OST,' ','') = @OST) AND
		(OSC.EMPRESA = @IDEMPRESA)
	ORDER BY OSC.NIVEL ASC

	SELECT
		SS.IDEMPRESA,
		SS.ACRONIMO,
		SS.NIVEL,
		CONCAT(SS.ESPACIADO, SS.ACRONIMO) AS EOPCION
	FROM
	(
		SELECT
			DISTINCT
				O.EMPRESA AS IDEMPRESA,
				LTRIM(RTRIM(E.ACRONIMO)) AS ACRONIMO,
				CASE WHEN O.NIVEL > @NIVEL THEN (
										  CASE WHEN O.NIVEL > (@NIVEL + 1) THEN '      '
										  ELSE '   ' END 
										 )
				ELSE '' END AS ESPACIADO,
				O.NIVEL
		FROM OSTSUBC AS O, ENTERPRISE AS E
		WHERE
			REPLACE(O.OST,' ','') = @OST AND
			(O.EMPRESA = E.IDEMPRESA) AND
			(O.NIVEL > @NIVEL) AND 
			(O.FTERMINO >= dbo.HOY(GETDATE()))
		UNION
		SELECT
			DISTINCT
				O.EMPRESA AS IDEMPRESA,
				LTRIM(RTRIM(E.ACRONIMO)) AS ACRONIMO,
				CASE WHEN O.NIVEL > @NIVEL THEN (
										  CASE WHEN O.NIVEL > (@NIVEL + 1) THEN '      '
										  ELSE '   ' END 
										 )
				ELSE '' END AS ESPACIADO,
				O.NIVEL
		FROM OSTSUBC AS O, ENTERPRISE AS E
		WHERE
			REPLACE(O.OST,' ','') = @OST AND
			(O.EMPRESA = E.IDEMPRESA) AND
			(O.EMPRESA = @IDEMPRESA) AND
			(O.FTERMINO >= dbo.HOY(GETDATE()))
		ORDER BY 3, 2 OFFSET 0 ROWS	
	) SS
END  
  
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ENTERPRISE_UPDATE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ENTERPRISE_UPDATE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ENTERPRISE_UPDATE]  
(  
 @IDEMPRESA NVARCHAR(11) = NULL  
,@CLAVE NVARCHAR(10) = NULL  
,@ACRONIMO NVARCHAR(50) = NULL  
,@NOMBRE NVARCHAR(50) = NULL  
,@RUBRO NVARCHAR(50) = NULL  
,@DIRECCCION NVARCHAR(50) = NULL  
,@CIUDAD NVARCHAR(50) = NULL  
,@REGION NVARCHAR(5) = NULL  
,@TELEFONO NVARCHAR(50) = NULL  
,@FAX NVARCHAR(50) = NULL  
,@NRELEGAL NVARCHAR(50) = NULL  
,@RELEGAL NVARCHAR(10) = NULL  
,@EMAIL NVARCHAR(150) = NULL  
,@UBIFAENA NVARCHAR(50) = NULL  
,@FONOFAENA NVARCHAR(50) = NULL  
,@ADMINNOM NVARCHAR(50) = NULL  
,@ADMINRUT NVARCHAR(10) = NULL  
,@ADMINEMAIL NVARCHAR(150) = NULL  
,@ADMINFONO NVARCHAR(50) = NULL  
,@BLOQUEOCASINO NVARCHAR(2) = NULL  
,@FECHABLOQUEO NVARCHAR(8) = NULL  
,@OST NVARCHAR(2) = NULL  
,@FECAUDIT NVARCHAR(6) = NULL  
,@TIPOEMP NVARCHAR(2) = NULL  
,@RINTERNO NVARCHAR(2) = NULL  
,@CPARITARIO NVARCHAR(2) = NULL  
,@AUTOR NVARCHAR(2) = NULL  
,@FINANZAS NVARCHAR(1) = NULL  
,@RRHH NVARCHAR(1) = NULL  
,@SICEP NVARCHAR(1) = NULL  
,@DICOM NVARCHAR(1) = NULL  
,@PROPIO NVARCHAR(1) = NULL  
,@LEGAL NVARCHAR(1) = NULL  
,@CONTRATOS NVARCHAR(1) = NULL  
,@TAUDIT NVARCHAR(2) = NULL  
,@SEGURITO NVARCHAR(10) = NULL  
,@EMAILSEGURITO NVARCHAR(50) = NULL  
,@MUTUAL NVARCHAR(20) = NULL  
,@CODIGOMUTUAL NVARCHAR(20) = NULL  
,@SERNAGEOMIN NVARCHAR(2) = NULL  
,@CODIGOSERNA NVARCHAR(20) = NULL  
,@FECHAMOD NVARCHAR(8) = NULL  
,@HORAMOD NVARCHAR(8) = NULL  
,@GRABO NVARCHAR(1) = NULL  
,@MAILLICITA NVARCHAR(150) = NULL  
,@BALANCE NVARCHAR(1) = NULL  
,@ANTERIOR NVARCHAR(1) = NULL  
,@ELYPSE NVARCHAR(10) = NULL  
,@PAIS NVARCHAR(50) = NULL  
,@RUTHOTEL NVARCHAR(10) = NULL  
,@CONTACTOHOTEL NVARCHAR(100) = NULL  
,@TLFHOTEL NVARCHAR(50) = NULL  
,@EMAILHOTEL NVARCHAR(50) = NULL  
) AS  
BEGIN  
  
   UPDATE [ENTERPRISE]  
      SET [CLAVE] 			    =@CLAVE
        , [ACRONIMO] 			=@ACRONIMO
        , [NOMBRE] 			=@NOMBRE 
        , [RUBRO] 			    =@RUBRO
        , [DIRECCCION] 		=@DIRECCCION
        , [CIUDAD] 			=@CIUDAD  
        , [REGION] 			=@REGION
        , [TELEFONO] 			=@TELEFONO
        , [FAX] 			    =@FAX
        , [NRELEGAL] 			=@NRELEGAL
        , [RELEGAL] 			=@RELEGAL
        , [EMAIL] 			    =@EMAIL   
        , [UBIFAENA] 			=@UBIFAENA 
		, [FONOFAENA]			=@FONOFAENA
		, [ADMINNOM]			=@ADMINNOM
		, [ADMINRUT]			=@ADMINRUT
		, [ADMINEMAIL]			=@ADMINEMAIL
		, [ADMINFONO]			=@ADMINFONO
		, [BLOQUEOCASINO]		=@BLOQUEOCASINO
		, [FECHABLOQUEO]		=@FECHABLOQUEO
		, [OST]				=@OST
		, [FECAUDIT]			=@FECAUDIT
		, [TIPOEMP]			=@TIPOEMP
		, [RINTERNO]			=@RINTERNO
		, [CPARITARIO]			=@CPARITARIO
		, [AUTOR]				=@AUTOR
		, [FINANZAS]			=@FINANZAS
		, [RRHH]				=@RRHH
		, [SICEP]				=@SICEP
		, [DICOM]				=@DICOM
		, [PROPIO]				=@PROPIO
		, [LEGAL]				=@LEGAL
		, [CONTRATOS]			=@CONTRATOS
		, [TAUDIT]				=@TAUDIT
		, [SEGURITO]			=@SEGURITO
		, [EMAILSEGURITO]		=@EMAILSEGURITO
		, [MUTUAL]				=@MUTUAL
		, [CODIGOMUTUAL]		=@CODIGOMUTUAL
		, [SERNAGEOMIN]		=@SERNAGEOMIN
		, [CODIGOSERNA]		=@CODIGOSERNA
		, [FECHAMOD]			=DBO.HOY(GETDATE())
		, [HORAMOD]			=DBO.AHORA(GETDATE())
		, [GRABO]				=@GRABO
		, [MAILLICITA]			=@MAILLICITA
		, [BALANCE]			=@BALANCE
		, [ANTERIOR]			=@ANTERIOR
		, [ELYPSE]				=@ELYPSE
		, [PAIS]				=@PAIS
		, [RUTHOTEL]			=@RUTHOTEL
		, [CONTACTOHOTEL]		=@CONTACTOHOTEL
		, [TLFHOTEL]			=@TLFHOTEL
		, [EMAILHOTEL]			=@EMAILHOTEL
    WHERE [IDEMPRESA]         = @IDEMPRESA
  
END  
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_ENTERPRISE_UPDATE_TELEFONO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_ENTERPRISE_UPDATE_TELEFONO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_ENTERPRISE_UPDATE_TELEFONO]
(
@TELEFONO NVARCHAR(50),
@IDEMPRESA NVARCHAR(10)
)
AS
BEGIN

UPDATE ENTERPRISE 
SET TELEFONO=@TELEFONO
WHERE IDEMPRESA=@IDEMPRESA

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_FAENADIVISION_SELECT_MDTE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_FAENADIVISION_SELECT_MDTE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_FAENADIVISION_SELECT_MDTE]
(
 @DIVISIONES NVARCHAR(100)
)
AS
BEGIN  
    
	DECLARE @STRING_DATA VARCHAR(200)      
	SET @STRING_DATA = @DIVISIONES;    

	SELECT value AS DIVCOD INTO #TEMP_SPLIT_A    
	FROM string_split(@STRING_DATA,',')    
    
	select  ROW_NUMBER() OVER(ORDER BY DIVCOD ASC) AS ID , * INTO #TEMP_SPLIT_B from                 
	#TEMP_SPLIT_A    
    
	DECLARE @MAXIMO INT                 
	DECLARE @CONTADOR INT                 
	DECLARE @DATO VARCHAR(10)    
	DECLARE @STRING NVARCHAR(MAX)    
	DECLARE @STRING1 NVARCHAR(MAX)  
	DECLARE @STRING_FINAL NVARCHAR(MAX)    
    
	SET @CONTADOR = 1      
	SET @STRING = '';    
                
	SELECT @MAXIMO = MAX(ID) FROM  #TEMP_SPLIT_B               
                           
	WHILE ( @CONTADOR <= @MAXIMO )                 
	BEGIN                          
                
		SELECT @DATO = DIVCOD FROM #TEMP_SPLIT_B            
		WHERE ID = @CONTADOR                
		SET @STRING  += 'CONVERT(VARCHAR,' + @DATO + ')+' + N''''+',' +N''''+'+';  
                
		SET @CONTADOR = @CONTADOR +1    
		
	END    
    
	SET @STRING_FINAL = SUBSTRING(@STRING, 0, LEN(@STRING)-4)    

	EXEC (
		'SELECT' + ' '+ N'''' +'Mandante' + N'''' + ' ' + 'as TIPO,'+ @DIVISIONES + ' ' +'INTO #TEMPORAL_DATA'+ ' ' +
 		'FROM (' + ' ' +
  		'SELECT RUT, DIVISION' + ' ' +
  		'FROM ('+ ' ' +
	 		'SELECT DISTINCT CU.RUT, CU.DIVISION' + ' ' +
			',ISNULL(WLP.EMPRESA,' + N'''' + '108' + N'''' + ') AS EMPRESA' + ' ' +  
	 		'FROM (SELECT RUT, DIVISION, LOCALIN AS LOCAL ' + ' '+
		     		', FECHAIN, HORAIN, FECHACASINO, HORACASINO, FECHAOUT, HORAOUT'	+ ' '+	    
		     		'FROM  dbo.CTRLULTIMO ' + ' ' +  
		     		'WHERE (FECHAIN + HORAIN > FECHAOUT + HORAOUT OR  FECHACASINO + HORACASINO > FECHAOUT + HORAOUT) ' + ' ' +  
		      		') AS CU ' + ' ' +  
	 		'INNER JOIN WORKERS AS W ON CU.RUT = W.RUT  ' + ' ' +  
	 		'LEFT JOIN (SELECT WP1.RUT, WP1.DIVISION, WP1.LOTE, MAX(WP2.EMPRESA) AS EMPRESA ' + ' ' +   
		    		'FROM ' + ' ' +  
		    		'(SELECT RUT,  DIVISION , MAX(LOTE) AS LOTE ' + ' ' +    
		    		'FROM WORKERSLOCAL  ' + ' ' +  
		    		'GROUP BY RUT, DIVISION) WP1  ' + ' ' +   
		    		'INNER JOIN WORKERSLOCAL WP2 ON WP1.LOTE = WP2.LOTE AND  WP1.RUT = WP2.RUT AND WP1.DIVISION = WP2.DIVISION  ' + ' ' +  
		    		'GROUP BY WP1.RUT, WP1.DIVISION, WP1.LOTE) WLP ON CU.RUT = WLP.RUT AND CU.DIVISION = WLP.DIVISION  ' + ' ' +  
			') D  ' + ' ' +  
			'WHERE D.EMPRESA IN (SELECT MANDANTE FROM A027_MANDANTES M WHERE M.ACTIVO = ' + N'''' +'SI' + N'''' + '))' + ' ' +  
			'src pivot ( COUNT(RUT) for [DIVISION] in (' + @DIVISIONES + ') ) AS PIV' +' '+
		'UNION' + ' ' + 
		'SELECT' + ' '+ N'''' +'Contratista' + N'''' + ' ' + 'as TIPO,'+ @DIVISIONES + ' ' +
 		'FROM (' + ' ' +
  		'SELECT RUT, DIVISION' + ' ' +
  		'FROM ('+ ' ' +
	 		'SELECT DISTINCT CU.RUT, CU.DIVISION' + ' ' +
			',ISNULL(WLP.EMPRESA,' + N'''' + '108' + N'''' + ') AS EMPRESA' + ' ' +  
	 		'FROM (SELECT RUT, DIVISION, LOCALIN AS LOCAL ' + ' '+
		     		', FECHAIN, HORAIN, FECHACASINO, HORACASINO, FECHAOUT, HORAOUT'	+ ' '+	    
		     		'FROM  dbo.CTRLULTIMO ' + ' ' +  
		     		'WHERE (FECHAIN + HORAIN > FECHAOUT + HORAOUT OR  FECHACASINO + HORACASINO > FECHAOUT + HORAOUT) ' + ' ' +  
		      		') AS CU ' + ' ' +  
	 		'INNER JOIN WORKERS AS W ON CU.RUT = W.RUT  ' + ' ' +  
	 		'LEFT JOIN (SELECT WP1.RUT, WP1.DIVISION, WP1.LOTE, MAX(WP2.EMPRESA) AS EMPRESA ' + ' ' +   
		    		'FROM ' + ' ' +  
		    		'(SELECT RUT,  DIVISION , MAX(LOTE) AS LOTE ' + ' ' +    
		    		'FROM WORKERSLOCAL  ' + ' ' +  
		    		'GROUP BY RUT, DIVISION) WP1  ' + ' ' +   
		    		'INNER JOIN WORKERSLOCAL WP2 ON WP1.LOTE = WP2.LOTE AND  WP1.RUT = WP2.RUT AND WP1.DIVISION = WP2.DIVISION  ' + ' ' +  
		    		'GROUP BY WP1.RUT, WP1.DIVISION, WP1.LOTE) WLP ON CU.RUT = WLP.RUT AND CU.DIVISION = WLP.DIVISION  ' + ' ' +  
			') D  ' + ' ' +  
			'WHERE D.EMPRESA NOT IN (SELECT MANDANTE FROM A027_MANDANTES M WHERE M.ACTIVO = ' + N'''' +'SI' + N'''' + '))' + ' ' +  
			'src pivot ( COUNT(RUT) for [DIVISION] in (' + @DIVISIONES + ') ) AS PIV' + ' ' +
			'SELECT TIPO,('+ @STRING_FINAL +') AS DATA_GRAFIC FROM #TEMPORAL_DATA' + ' ORDER BY TIPO ASC' + ' '  
			)

END


--exec [V4MVC_FAENADIVISION_SELECT_MDTE] 'CH,ES,LB,LM,LT,QV,ST'IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_FEC_DOCS_TIPOPASE_SELECT_DIVISION]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_FEC_DOCS_TIPOPASE_SELECT_DIVISION]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_FEC_DOCS_TIPOPASE_SELECT_DIVISION]
(
@DIVCOD NVARCHAR(4)
)
AS
BEGIN

SELECT D.CAMPO, DF.CAMPO_BD, DF.ID_DOC_FEC, D.ID_DOC, DFT.TIPOPASE, D.SUBEDOC, DT.TIPOPASE AS TIPOPASEDOC, D.ID_DOC_OPCION 
 FROM  DOCS_TIPOPASE AS DT INNER JOIN 
 DOCS AS D ON DT.ID_DOC = D.ID_DOC LEFT OUTER JOIN 
 DOCS_FEC AS DF ON D.ID_DOC = DF.ID_DOC_DEPEND AND (DF.ACTIVO = N'SI') LEFT OUTER JOIN 
 DOCS_FEC_TIPOPASE AS DFT ON DF.ID_DOC_FEC = DFT.ID_DOC_FEC AND (DFT.DIVISION =  @DIVCOD) 
 WHERE     (D.ACTIVO = N'SI') AND (D.ID_TIPO_PROPIETARIO = 1) AND (DFT.TIPOPASE = N'TRABAJO' OR D.ID_DOC=64 OR D.ID_DOC = 62)  AND  
 (DT.DIVISION =  @DIVCOD) AND (DT.TIPOPASE = N'TRABAJO' OR DT.TIPOPASE = N'OPCIONAL') 
 ORDER BY D.ORDEN ASC,  DF.ORDEN ASC

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_GERENCIA_SELECT_AUTOCOMPLETE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_GERENCIA_SELECT_AUTOCOMPLETE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_GERENCIA_SELECT_AUTOCOMPLETE]
(
@LIKE_GERENCIA NVARCHAR(50)
)
AS 
BEGIN

SELECT IDGERENCIA,GERENCIA,ACTIVO,DIVISION FROM GERENCIA
WHERE GERENCIA LIKE '%' + @LIKE_GERENCIA + '%';

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_GET_FECHA_WORKER_LOCAL]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_GET_FECHA_WORKER_LOCAL]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_GET_FECHA_WORKER_LOCAL]  
(  
@ID_DOC_FEC  INT = NULL  
,@RUT   NVARCHAR(9) = ''  
,@DIVCOD   NVARCHAR(4) = ''  
,@IDEMPRESA   NVARCHAR(10) = ''  
,@FEC_WLOCAL  NVARCHAR(8) OUTPUT  
)  
AS  
BEGIN  
 DECLARE @EMP_COMUN INT = 0  
 DECLARE @DIV_COMUN INT = 0  
  
 SELECT @EMP_COMUN = D.COMUN, @DIV_COMUN = DF.COMUN    
 FROM DOCS_FEC AS DF   
 INNER JOIN DOCS AS D ON DF.ID_DOC_DEPEND = D.ID_DOC   
 WHERE  (DF.ID_DOC_FEC = @ID_DOC_FEC)  
  
 IF(@EMP_COMUN = 0)  
  
  BEGIN  
   IF(@DIV_COMUN = 0)  
   
     
    BEGIN  
     SELECT TOP 1 @FEC_WLOCAL = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @RUT ) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (DIVISION = @DIVCOD) AND (EMPRESA = @IDEMPRESA) ORDER BY FECHA DESC  
    END  
   ELSE  
    BEGIN  
     SELECT TOP 1 @FEC_WLOCAL = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @RUT ) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (EMPRESA = @IDEMPRESA) ORDER BY FECHA DESC  
    END  
  END  
 ELSE  
  BEGIN  
   IF(@DIV_COMUN = 0)  
    BEGIN  
     SELECT TOP 1 @FEC_WLOCAL = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @RUT ) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (DIVISION = @DIVCOD) ORDER BY FECHA DESC  
    END  
   ELSE  
    BEGIN  
     SELECT TOP 1 @FEC_WLOCAL = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @RUT ) AND (ID_DOC_FEC = @ID_DOC_FEC) ORDER BY FECHA DESC  
    END  
  END  
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_GET_MOTIVO_ULTIMO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_GET_MOTIVO_ULTIMO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_GET_MOTIVO_ULTIMO]
(
@MOTIVO			NVARCHAR(20) = ''
,@RUT			NVARCHAR(10) = ''
,@IDEMPRESA		NVARCHAR(11) = ''
,@DIVCOD		NVARCHAR(4) = ''
,@ID_DOC		INT = NULL
,@ULTIMO		INT OUTPUT
)
AS
BEGIN
	IF(@DIVCOD IS NULL OR @DIVCOD = '')
		BEGIN
			IF EXISTS(
					SELECT MOTIVO
					FROM WORKERS_MOTIVOFINIQUITO WMF
					INNER JOIN (
						SELECT TOP 1 RUT, EMPRESA, ID FROM DOCS_WORKERS DW
						WHERE DW.RUT = @RUT AND DW.EMPRESA = @IDEMPRESA AND DW.ID_DOC = @ID_DOC
						ORDER BY ID_DOCS_WORKERS DESC
					) DW2
					ON WMF.RUT = DW2.RUT AND WMF.EMPRESA = DW2.EMPRESA AND WMF.IDARCHIVO = DW2.ID
					WHERE MOTIVO = @MOTIVO
				)
				BEGIN
					SET @ULTIMO = 1
				END
			ELSE
				BEGIN
					SET @ULTIMO = 0
				END
		END
	ELSE
		BEGIN
			IF EXISTS(
					SELECT MOTIVO
					FROM WORKERS_MOTIVOFINIQUITO WMF
					INNER JOIN (
						SELECT TOP 1 RUT, EMPRESA, ID FROM DOCS_WORKERS DW
						WHERE DW.RUT = @RUT AND DW.EMPRESA = @IDEMPRESA AND DW.ID_DOC = @ID_DOC AND DW.DIVISION = @DIVCOD
						ORDER BY ID_DOCS_WORKERS DESC
					) DW2
					ON WMF.RUT = DW2.RUT AND WMF.EMPRESA = DW2.EMPRESA AND WMF.IDARCHIVO = DW2.ID
					WHERE MOTIVO = @MOTIVO
				)
				BEGIN
					SET @ULTIMO = 1
				END
			ELSE
				BEGIN
					SET @ULTIMO = 0
				END
		END

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_GET_OST_BYDIVEMPRESA_INFORME]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_GET_OST_BYDIVEMPRESA_INFORME]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_GET_OST_BYDIVEMPRESA_INFORME]
(
@DIVISION  NVARCHAR(10),
@EMPRESA  NVARCHAR(10)
) AS
BEGIN
	SELECT DISTINCT DL.OST FROM OSTDIVLOCAL AS DL 
	INNER JOIN OST AS O ON DL.OST = O.NROOST 
	INNER JOIN OSTSUBC AS OSC ON DL.OST = OSC.OST 
	WHERE (DL.DIVISION = @DIVISION) 
	AND (O.FECTERM >= dbo.HOY(getdate())) 
	AND (DL.ACTIVO = 'SI') 
	AND (OSC.EMPRESA = @EMPRESA) ORDER BY DL.OST DESC
END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_ACCESOSZONASCONTROLADAS]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_ACCESOSZONASCONTROLADAS]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_ACCESOSZONASCONTROLADAS]
(
@LOCAL  NVARCHAR(12)         = NULL,
@OPCION  NVARCHAR(1)         = NULL,
@FECHAINI  NVARCHAR(8)       = NULL,
@FECHAFIN  NVARCHAR(8)       = NULL,
@DIVCOD  NVARCHAR(4)         = NULL,
@EMPRESA  NVARCHAR(10)       = NULL
) AS
BEGIN


		    IF @OPCION='1'
			BEGIN

					IF @LOCAL = 'TODOS'
					BEGIN
												  SELECT 
												  COUNT(C.FECHA) OVER() TOTALREGISTROS,
												  ROW_NUMBER() OVER(ORDER BY C.FECHA ASC) ROWNUMBER,
												  SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.FECHA 
												  FROM WC3_VISTA_CTRLING AS C 
												  WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) AND (C.DIVISION = @DIVCOD) AND (C.EMPRESA = @EMPRESA)
												  GROUP BY C.FECHA 
					END
					ELSE
					BEGIN
												  SELECT 
												  COUNT(C.FECHA) OVER() TOTALREGISTROS,
												  ROW_NUMBER() OVER(ORDER BY C.FECHA ASC) ROWNUMBER,
												  SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.FECHA 
												  FROM WC3_VISTA_CTRLING AS C 
												  WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) AND (C.DIVISION = @DIVCOD) AND (C.LOCAL IN (@LOCAL)) AND (C.EMPRESA = @EMPRESA)
												  GROUP BY C.FECHA  
					END

			END
			ELSE IF  @OPCION='2'
			BEGIN
					IF @LOCAL = 'TODOS'
					BEGIN
												  SELECT 
												  COUNT(C.ACRONIMO) OVER() TOTALREGISTROS,
												  ROW_NUMBER() OVER(ORDER BY C.ACRONIMO ASC) ROWNUMBER,
												  SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.ACRONIMO, C.EMPRESA 
												  FROM WC3_VISTA_CTRLING AS C 
												  WHERE  (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) AND (C.DIVISION = @DIVCOD) AND (C.EMPRESA = @EMPRESA)
												  GROUP BY C.ACRONIMO, C.EMPRESA  
					END
					ELSE
					BEGIN
												  SELECT 
												  COUNT(C.ACRONIMO) OVER() TOTALREGISTROS,
												  ROW_NUMBER() OVER(ORDER BY C.ACRONIMO ASC) ROWNUMBER,
												  SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.ACRONIMO, C.EMPRESA 
												  FROM WC3_VISTA_CTRLING AS C 
												  WHERE  (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) AND (C.DIVISION = @DIVCOD) AND (C.LOCAL IN (@LOCAL)) AND (C.EMPRESA = @EMPRESA)
												  GROUP BY C.ACRONIMO, C.EMPRESA 
					END

			END
			ELSE IF  @OPCION='3'
			BEGIN
					IF @LOCAL = 'TODOS'
					BEGIN
												 SELECT 
												 COUNT(C.DSCTIPOV) OVER() TOTALREGISTROS,
												 ROW_NUMBER() OVER(ORDER BY C.DSCTIPOV ASC) ROWNUMBER,
												 SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT,  C.DSCTIPOV 
												 FROM WC3_VISTA_CTRLING AS C 
												 WHERE  (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) AND (C.DIVISION = @DIVCOD) AND (C.EMPRESA = @EMPRESA)
												 GROUP BY C.DSCTIPOV 
					END
					ELSE
					BEGIN
												 SELECT 
												 COUNT(C.DSCTIPOV) OVER() TOTALREGISTROS,
												 ROW_NUMBER() OVER(ORDER BY C.DSCTIPOV ASC) ROWNUMBER,
												 SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT,  C.DSCTIPOV 
												 FROM WC3_VISTA_CTRLING AS C 
												 WHERE  (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) AND (C.DIVISION = @DIVCOD) AND (C.LOCAL IN (@LOCAL)) AND (C.EMPRESA = @EMPRESA)
												 GROUP BY C.DSCTIPOV 
					END
			END
			ELSE IF  @OPCION='4'
			BEGIN
					IF @LOCAL = 'TODOS'
					BEGIN
												SELECT 
												 COUNT(C.FECHA) OVER() TOTALREGISTROS,
												 ROW_NUMBER() OVER(ORDER BY C.FECHA ASC) ROWNUMBER,
												SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.FECHA 
												FROM WC3_VISTA_CTRLING AS C 
												WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) AND (C.DIVISION = @DIVCOD) AND (C.EMPRESA = @EMPRESA) AND (VEHICULO = 'S') 
												GROUP BY C.FECHA  
					END
					ELSE
					BEGIN
												SELECT 
												 COUNT(C.FECHA) OVER() TOTALREGISTROS,
												 ROW_NUMBER() OVER(ORDER BY C.FECHA ASC) ROWNUMBER,
												SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.FECHA 
												FROM WC3_VISTA_CTRLING AS C 
												WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) AND (C.DIVISION = @DIVCOD) AND (C.LOCAL IN (@LOCAL)) AND (C.EMPRESA = @EMPRESA) AND (VEHICULO = 'S') 
												GROUP BY C.FECHA 
					END



			END
			ELSE IF  @OPCION='5'
			BEGIN
					IF @LOCAL = 'TODOS'
					BEGIN
												SELECT
												COUNT(C.OST) OVER() TOTALREGISTROS,
												ROW_NUMBER() OVER(ORDER BY C.OST ASC) ROWNUMBER,
												 SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.OST 
												FROM WC3_VISTA_CTRLING AS C 
												WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) AND (C.DIVISION = @DIVCOD) AND (C.EMPRESA = @EMPRESA)
												GROUP BY C.OST 
					END
					ELSE
					BEGIN
												SELECT
												COUNT(C.OST) OVER() TOTALREGISTROS,
												ROW_NUMBER() OVER(ORDER BY C.OST ASC) ROWNUMBER,
												 SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.OST 
												FROM WC3_VISTA_CTRLING AS C 
												WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) AND (C.DIVISION = @DIVCOD) AND (C.LOCAL IN (@LOCAL)) AND (C.EMPRESA = @EMPRESA)
												GROUP BY C.OST 
					END
			END
			ELSE IF  @OPCION='6'
			BEGIN
					IF @LOCAL = 'TODOS'
					BEGIN
												SELECT 
												COUNT(C.TIPOPASE) OVER() TOTALREGISTROS,
												ROW_NUMBER() OVER(ORDER BY C.TIPOPASE ASC) ROWNUMBER,				
												SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.TIPOPASE 
												FROM WC3_VISTA_CTRLING AS C 
												WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) AND (C.DIVISION = @DIVCOD) AND (C.EMPRESA = @EMPRESA)
												GROUP BY C.TIPOPASE 
					END
					ELSE
					BEGIN
												SELECT 
												COUNT(C.TIPOPASE) OVER() TOTALREGISTROS,
												ROW_NUMBER() OVER(ORDER BY C.TIPOPASE ASC) ROWNUMBER,				
												SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.TIPOPASE 
												FROM WC3_VISTA_CTRLING AS C 
												WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) AND (C.DIVISION = @DIVCOD) AND (C.LOCAL IN (@LOCAL)) AND (C.EMPRESA = @EMPRESA)
												GROUP BY C.TIPOPASE 
					END
			END 
END	


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_ACCESOSZONASCONTROLADAS_DIARESUMEN]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_ACCESOSZONASCONTROLADAS_DIARESUMEN]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_ACCESOSZONASCONTROLADAS_DIARESUMEN]
(
@LOCAL  NVARCHAR(12)         = NULL,
@FECHA  NVARCHAR(8)       = NULL,
@DIVCOD  NVARCHAR(4)         = NULL,
@EMPRESA  NVARCHAR(10)       = NULL
) AS
BEGIN


	DECLARE @strSQL as nvarchar(MAX)

					SET @strSQL='SELECT SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, 
					             SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, SUBSTRING(C.HORA, 1,2) AS PERIODO 
								 FROM WC3_VISTA_CTRLING AS C 
								 WHERE  (C.DIVISION = ''' + @DIVCOD + ''')   
								 AND (C.EMPRESA = ''' + @EMPRESA + ''')'

		            IF @LOCAL <> ''
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (C.[LOCAL] IN ( ''' + @LOCAL + '''))'
		            END
                 					
		            IF @FECHA <> ''
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (C.FECHA = ''' + @FECHA + ''')'
		            END									

					Set @strSQL = @strSQL + N' GROUP BY C.DIVISION, C.FECHA, SUBSTRING(C.HORA, 1,2)'	
					Set @strSQL = @strSQL + N' ORDER BY C.FECHA, SUBSTRING(C.HORA, 1,2)'	
					exec sp_executesql @strSQL  

END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_ACCESOSZONASCONTROLADAS_DIATOTAL]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_ACCESOSZONASCONTROLADAS_DIATOTAL]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_ACCESOSZONASCONTROLADAS_DIATOTAL]
(
@LOCAL  NVARCHAR(12)         = NULL,
@FECHAINI  NVARCHAR(8)       = NULL,
@FECHAFIN  NVARCHAR(8)       = NULL,
@DIVCOD  NVARCHAR(4)         = NULL,
@EMPRESA  NVARCHAR(10)       = NULL,
@CAMPO VARCHAR(10)           = NULL
) AS
BEGIN


	DECLARE @strSQL as nvarchar(MAX)

					SET @strSQL='SELECT 
						COUNT(C.TIPOPASE) OVER() TOTALREGISTROS,
						ROW_NUMBER() OVER(ORDER BY C.FECHA, C.HORA ASC) ROWNUMBER,	
						C.RUTINGRESO, W.NOMBRES, W.APELLIDOS, C.FECHA, C.HORA, C.PATENTE, C.ERROR, C.LOCAL, C.DIVISION, C.INGRESO, C.SALIDA, C.DSCTIPOV, C.ACRONIMO, C.EMPRESA, 
						C.COD_PDA, C.USUARIO, ISNULL(C.VEHICULO, ''N'') AS VEHICULO, INGRESO AS ING, SALIDA AS SAL, ERRIN, ERROUT, VEHIN, VEHOUT, M.MSG_REPORT, C.LOCALD, A.AREA, G.GERENCIA  
						FROM WC3_VISTA_CTRLING  AS C LEFT OUTER JOIN WORKERS AS W ON C.RUTINGRESO = W.RUT  
													 LEFT OUTER JOIN MULTASTTO AS M ON C.ERROR = M.CODMULTA  
													 LEFT OUTER JOIN GERENCIA AS G ON W.IDGERENCIA = G.IDGERENCIA  
													 LEFT OUTER JOIN A025_AREA AS A ON W.ID_AREA = A.ID_AREA 
													 WHERE  (C.DIVISION = ''' + @DIVCOD + ''')   
													 AND (C.EMPRESA = ''' + @EMPRESA + ''')  
													 AND (INGRESO > 0 )'

		            IF @LOCAL <> 'TODOS'
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (C.[LOCAL] IN ( ''' + @LOCAL + '''))'
		            END


                    IF @CAMPO = 'INGRESO'
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (INGRESO > 0 )'
		            END
					ELSE IF @CAMPO = 'SALIDA'
					BEGIN
					     Set @strSQL = @strSQL + N' AND (SALIDA > 0 )'
					END
					ELSE IF @CAMPO = 'ERRIN'
					BEGIN
					     Set @strSQL = @strSQL + N' AND (ERRIN > 0 )'
					END
					ELSE IF @CAMPO = 'ERROUT'
					BEGIN
					     Set @strSQL = @strSQL + N' AND (ERROUT > 0 )'
					END					


					 Set @strSQL = @strSQL + N' AND (C.FECHA  BETWEEN ''' + @FECHAINI + ''' AND ''' +  @FECHAFIN + ''')'	
					exec sp_executesql @strSQL  




 
END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CENSOACCESOS]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CENSOACCESOS]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CENSOACCESOS]
(
@FECHAINI  NVARCHAR(8)       = NULL,
@FECHAFIN  NVARCHAR(8)       = NULL,
@DIVCOD  NVARCHAR(4)         = NULL,
@EMPRESA  NVARCHAR(10)       = NULL
) AS
BEGIN

 WITH vw AS  
 (  
SELECT  ACRONIMO, EMPRESA,FECHA,SUM(ING) AS ING
FROM (     SELECT CHILD.FECHA, CHILD.RUTINGRESO, CHILD.EMPRESA, CHILD.ACRONIMO, WORKERS.NOMBRES, WORKERS.APELLIDOS,CASE WHEN CHILD.ING> 0 THEN 1 ELSE 0 END AS ING  
           FROM   (        SELECT RUTINGRESO, EMPRESA, ACRONIMO, SUM(INGRESO) AS ING, FECHA  
			               FROM WC3_VISTA_CTRLING   WHERE DIVISION = @DIVCOD  AND (EMPRESA = @EMPRESA)  AND (FECHA  BETWEEN @FECHAINI AND @FECHAFIN)  GROUP BY RUTINGRESO, FECHA, EMPRESA, ACRONIMO 
		          ) CHILD 
				  , WORKERS WHERE CHILD.Rutingreso = WORKERS.RUT 
	 ) AS DETALLE GROUP BY EMPRESA,FECHA, ACRONIMO 
)   


SELECT  CONVERT(VARCHAR(8),X.[Date],112) AS FECHA ,ING = COALESCE(t.ING,0)
FROM 
    (SELECT [Date] = DATEADD(Day,Number,@FECHAINI)  
    FROM  master..spt_values  
    WHERE Type='P' 
    AND DATEADD(day,Number,@FECHAINI) <= @FECHAFIN)X
LEFT JOIN  vw t 
ON X.[Date] = t.FECHA
 
END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CENSOACCESOS_DETALLE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CENSOACCESOS_DETALLE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CENSOACCESOS_DETALLE]
(
@FECHAINI  NVARCHAR(8)       = NULL,
@FECHAFIN  NVARCHAR(8)       = NULL,
@DIVCOD  NVARCHAR(4)         = NULL,
@EMPRESA  NVARCHAR(10)       = NULL
) AS
BEGIN

DECLARE @FECHA_INI DATE
DECLARE @FECHA_FIN DATE
DECLARE	@Servicio_Fecha NVARCHAR(MAX)
DECLARE	@Servicio_Fecha_Sum  NVARCHAR(MAX)
DECLARE	@Servicio_Fecha_Sum_Resumen  NVARCHAR(MAX)
DECLARE	@Servicio_Fecha_Sum_ResumenTotal  NVARCHAR(MAX)
DECLARE	@Nro  INT 
SET @Servicio_Fecha = ''
SET @Servicio_Fecha_Sum = ''
SET @Servicio_Fecha_Sum_Resumen = ''
SET @Servicio_Fecha_Sum_ResumenTotal = ''
SET @Nro = -1
SET @FECHA_INI =  @FECHAINI
SET @FECHA_FIN =  @FECHAFIN
WHILE DATEDIFF(DAY, @FECHA_INI, @FECHA_FIN) > -1
BEGIN  
	SET	@Nro = @Nro + 1
		If @Servicio_Fecha = '' 
		BEGIN
			SET @Servicio_Fecha = '[' + CONVERT(VARCHAR(8),@FECHA_INI,112) + ']'
			SET @Servicio_Fecha_Sum = ' CASE WHEN [' + CONVERT(VARCHAR(8),@FECHA_INI,112) +'] > 0 THEN 1 ELSE 0 END AS [' +CONVERT(VARCHAR(8),@FECHA_INI,112)  +' ]'
			SET @Servicio_Fecha_Sum_Resumen = 'SUM ([' +CONVERT(VARCHAR(8),@FECHA_INI,112)  + ']) AS [' + CONVERT(VARCHAR(8),@FECHA_INI,112)  + ']'
			SET @Servicio_Fecha_Sum_ResumenTotal = 'SUM ([' +CONVERT(VARCHAR(8),@FECHA_INI,112)  + '])'
        END
		ELSE
		BEGIN
			SET @Servicio_Fecha = @Servicio_Fecha +  ',[' + CONVERT(VARCHAR(8),@FECHA_INI,112)  + ']'
			SET @Servicio_Fecha_Sum = @Servicio_Fecha_Sum + ', CASE WHEN [' +CONVERT(VARCHAR(8),@FECHA_INI,112)  + '] > 0 THEN 1 ELSE 0 END AS [' +CONVERT(VARCHAR(8),@FECHA_INI,112)  + '] '
			SET @Servicio_Fecha_Sum_Resumen = @Servicio_Fecha_Sum_Resumen +', SUM ([' + CONVERT(VARCHAR(8),@FECHA_INI,112)  + ']) AS [' + CONVERT(VARCHAR(8),@FECHA_INI,112)  + ']'
			SET @Servicio_Fecha_Sum_ResumenTotal = @Servicio_Fecha_Sum_ResumenTotal +'+ SUM ([' + CONVERT(VARCHAR(8),@FECHA_INI,112)  + '])'
		END		
		
		SET @FECHA_INI = (SELECT DATEADD(DAY, 1, @FECHA_INI))
END  

DECLARE @strSQL as nvarchar(MAX)

SET @strSQL= '(SELECT DISTINCT WORK.NOMBRES, WORK.APELLIDOS, DETALLE.RUTINGRESO, DETALLE.OST, DETALLE.TIPOPASE, DETALLE.ACRONIMO, DETALLE.EMPRESA,DETALLE.DIVISION, DETALLE.OST, A.AREA, G.GERENCIA, ' 
SET @strSQL = @strSQL + @Servicio_Fecha_Sum_Resumen  
Set @strSQL = @strSQL + N', ('
SET @strSQL = @strSQL + @Servicio_Fecha_Sum_ResumenTotal  
Set @strSQL = @strSQL + N') AS TOTAL'
Set @strSQL = @strSQL + N' FROM ( SELECT pvt.RUTINGRESO, pvt.EMPRESA, pvt.ACRONIMO, pvt.TIPOPASE, pvt.OST, pvt.DIVISION, '
SET @strSQL = @strSQL + @Servicio_Fecha_Sum  
Set @strSQL = @strSQL + N' FROM (	SELECT DISTINCT W.RUTINGRESO, W.EMPRESA, W.ACRONIMO, SUM(INGRESO) AS ING, W.FECHA, W.TIPOPASE, W.OST, W.DIVISION' 
Set @strSQL = @strSQL + N' FROM TAB_TIPOPASE AS T INNER JOIN TAB_TIPOPASE_DIVISION AS D ON T.TIPOPASE = D.TIPOPASE INNER JOIN WC3_VISTA_CTRLING AS W'
Set @strSQL = @strSQL + N' ON D.DIVISION = W.DIVISION INNER JOIN OST AS O ON W.OST = O.NROOST WHERE (W.FECHA  BETWEEN ''' + @FECHAINI + ''' AND ''' + @FECHAFIN + ''') AND (W.DIVISION = ''' + @DIVCOD + ''') AND (W.EMPRESA = ''' + @EMPRESA + ''')GROUP BY W.RUTINGRESO, W.FECHA, W.EMPRESA, W.ACRONIMO, W.TIPOPASE, W.OST, W.DIVISION '
Set @strSQL = @strSQL + N' ) as datatable PIVOT ( SUM(ING) FOR [FECHA] IN ('
SET @strSQL = @strSQL + @Servicio_Fecha 
Set @strSQL = @strSQL + N' ) ) as pvt ) AS DETALLE INNER JOIN WORKERS AS WORK ON DETALLE.RUTINGRESO = WORK.RUT'
Set @strSQL = @strSQL + N' LEFT OUTER JOIN GERENCIA AS G ON WORK.IDGERENCIA = G.IDGERENCIA  LEFT OUTER JOIN A025_AREA AS A ON WORK.ID_AREA = A.ID_AREA'
Set @strSQL = @strSQL + N' GROUP BY DETALLE.RUTINGRESO, DETALLE.EMPRESA, DETALLE.ACRONIMO, DETALLE.DIVISION, DETALLE.OST, DETALLE.TIPOPASE, WORK.NOMBRES, WORK.APELLIDOS, A.AREA, G.GERENCIA'
Set @strSQL = @strSQL + N') UNION ALL ('
Set @strSQL = @strSQL + N'SELECT DISTINCT ''TOTAL'', '''', '''', '''', '''', '''', '''','''', '''', '''', '''', ' 
SET @strSQL = @strSQL + @Servicio_Fecha_Sum_Resumen  
Set @strSQL = @strSQL + N', ('
SET @strSQL = @strSQL + @Servicio_Fecha_Sum_ResumenTotal  
Set @strSQL = @strSQL + N') AS TOTAL'
Set @strSQL = @strSQL + N' FROM ( SELECT pvt.RUTINGRESO, pvt.EMPRESA, pvt.ACRONIMO, pvt.TIPOPASE, pvt.OST, pvt.DIVISION, '
SET @strSQL = @strSQL + @Servicio_Fecha_Sum  
Set @strSQL = @strSQL + N' FROM (	SELECT DISTINCT W.RUTINGRESO, W.EMPRESA, W.ACRONIMO, SUM(INGRESO) AS ING, W.FECHA, W.TIPOPASE, W.OST, W.DIVISION' 
Set @strSQL = @strSQL + N' FROM TAB_TIPOPASE AS T INNER JOIN TAB_TIPOPASE_DIVISION AS D ON T.TIPOPASE = D.TIPOPASE INNER JOIN WC3_VISTA_CTRLING AS W'
Set @strSQL = @strSQL + N' ON D.DIVISION = W.DIVISION INNER JOIN OST AS O ON W.OST = O.NROOST WHERE (W.FECHA  BETWEEN ''' + @FECHAINI + ''' AND ''' + @FECHAFIN + ''') AND (W.DIVISION = ''' + @DIVCOD + ''') AND (W.EMPRESA = ''' + @EMPRESA + ''')GROUP BY W.RUTINGRESO, W.FECHA, W.EMPRESA, W.ACRONIMO, W.TIPOPASE, W.OST, W.DIVISION '
Set @strSQL = @strSQL + N' ) as datatable PIVOT ( SUM(ING) FOR [FECHA] IN ('
SET @strSQL = @strSQL + @Servicio_Fecha 
Set @strSQL = @strSQL + N' ) ) as pvt ) AS DETALLE INNER JOIN WORKERS AS WORK ON DETALLE.RUTINGRESO = WORK.RUT'
Set @strSQL = @strSQL + N' LEFT OUTER JOIN GERENCIA AS G ON WORK.IDGERENCIA = G.IDGERENCIA  LEFT OUTER JOIN A025_AREA AS A ON WORK.ID_AREA = A.ID_AREA)'

 exec sp_executesql @strSQL  
 PRINT @strSQL
 
END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CTRLACCESORESUMEN]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CTRLACCESORESUMEN]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CTRLACCESORESUMEN]
(
@LOCAL  NVARCHAR(12)         = NULL,
@OPCION  NVARCHAR(1)         = NULL,
@FECHAINI  NVARCHAR(8)       = NULL,
@FECHAFIN  NVARCHAR(8)       = NULL,
@DIVCOD  NVARCHAR(4)       = NULL,
@EMPRESA  NVARCHAR(10)       = NULL,
@RUTINGRESO NVARCHAR(10)     = NULL,
@OST NVARCHAR(14)            = NULL,
@PATENTE NVARCHAR(6)         = NULL
) AS
BEGIN

		    IF @OPCION='1'
			BEGIN
				 IF @LOCAL = 'TODOS'
				BEGIN

							SELECT 
							COUNT(C.FECHA) OVER() TOTALREGISTROS,
							ROW_NUMBER() OVER(ORDER BY C.FECHA ASC) ROWNUMBER,
							SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.FECHA                
							FROM WC3_VISTA_CTRLING AS C 
							WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) 
							AND (C.DIVISION = @DIVCOD)  
							AND ((C.EMPRESA = @EMPRESA ) OR @EMPRESA IS NULL)
							AND ((C.RUTINGRESO = @RUTINGRESO) OR @RUTINGRESO IS NULL OR @RUTINGRESO = 'null')
							AND ((C.OST = @OST) OR @OST IS NULL OR @OST = 'null')
							AND ((C.PATENTE = @PATENTE) OR @PATENTE IS NULL OR @PATENTE = 'null')
							GROUP BY C.FECHA 



				END
				ELSE
				BEGIN

							SELECT 
								COUNT(C.FECHA) OVER() TOTALREGISTROS,
								ROW_NUMBER() OVER(ORDER BY C.FECHA ASC) ROWNUMBER,
				                SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT,
								 C.FECHA              
								FROM WC3_VISTA_CTRLING AS C 
								WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) 
								AND (C.DIVISION = @DIVCOD) 
								AND (C.LOCAL IN (@LOCAL)) 
								AND ((C.EMPRESA = @EMPRESA ) OR @EMPRESA IS NULL)
							    AND ((C.RUTINGRESO = @RUTINGRESO) OR @RUTINGRESO IS NULL OR @RUTINGRESO = 'null')
							    AND ((C.OST = @OST) OR @OST IS NULL OR @OST = 'null')
							    AND ((C.PATENTE = @PATENTE) OR @PATENTE IS NULL OR @PATENTE = 'null')
								GROUP BY C.FECHA
				END
			END
			ELSE IF  @OPCION='2'
			BEGIN
				 IF @LOCAL = 'TODOS'
				BEGIN

                       SELECT 
					   COUNT(C.ACRONIMO) OVER() TOTALREGISTROS,
					   ROW_NUMBER() OVER(ORDER BY C.ACRONIMO ASC) ROWNUMBER,
					   SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.ACRONIMO, C.EMPRESA  
					   FROM WC3_VISTA_CTRLING AS C 
					   WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) 
					    AND (C.DIVISION = @DIVCOD) 
                        AND ((C.EMPRESA = @EMPRESA ) OR @EMPRESA IS NULL)
						AND ((C.RUTINGRESO = @RUTINGRESO) OR @RUTINGRESO IS NULL OR @RUTINGRESO = 'null')
						AND ((C.OST = @OST) OR @OST IS NULL OR @OST = 'null')
						AND ((C.PATENTE = @PATENTE) OR @PATENTE IS NULL OR @PATENTE = 'null')
					   AND C.ACRONIMO IS NOT NULL 
					   GROUP BY C.ACRONIMO, C.EMPRESA 


				END
				ELSE
				BEGIN

                       SELECT 
					   COUNT(C.ACRONIMO) OVER() TOTALREGISTROS,
					   ROW_NUMBER() OVER(ORDER BY C.ACRONIMO ASC) ROWNUMBER,					   
					   SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.ACRONIMO, C.EMPRESA  
					   FROM WC3_VISTA_CTRLING AS C 
					   WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) 
					   AND (C.DIVISION = @DIVCOD) 
					   AND (C.LOCAL IN (@LOCAL)) 
                       AND ((C.EMPRESA = @EMPRESA ) OR @EMPRESA IS NULL)
					  	AND ((C.RUTINGRESO = @RUTINGRESO) OR @RUTINGRESO IS NULL OR @RUTINGRESO = 'null')
						AND ((C.OST = @OST) OR @OST IS NULL OR @OST = 'null')
						AND ((C.PATENTE = @PATENTE) OR @PATENTE IS NULL OR @PATENTE = 'null')
					   AND C.ACRONIMO IS NOT NULL 
					   GROUP BY C.ACRONIMO, C.EMPRESA 

				END
			END
			ELSE IF  @OPCION='3'
			BEGIN
				 IF @LOCAL = 'TODOS'
				BEGIN

				       SELECT 
					   COUNT(C.DSCTIPOV) OVER() TOTALREGISTROS,
					   ROW_NUMBER() OVER(ORDER BY C.DSCTIPOV ASC) ROWNUMBER,	
					   SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT,  C.DSCTIPOV            
					   FROM WC3_VISTA_CTRLING AS C 
					   WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) 
					   AND (C.DIVISION = @DIVCOD) 
					   AND (C.VEHICULO = 'S')
                        AND ((C.EMPRESA = @EMPRESA ) OR @EMPRESA IS NULL)
						AND ((C.RUTINGRESO = @RUTINGRESO) OR @RUTINGRESO IS NULL OR @RUTINGRESO = 'null')
						AND ((C.OST = @OST) OR @OST IS NULL OR @OST = 'null')
						AND ((C.PATENTE = @PATENTE) OR @PATENTE IS NULL OR @PATENTE = 'null')
					   GROUP BY C.DSCTIPOV 


				END
				ELSE
				BEGIN

				       SELECT 
					   COUNT(C.DSCTIPOV) OVER() TOTALREGISTROS,
					   ROW_NUMBER() OVER(ORDER BY C.DSCTIPOV ASC) ROWNUMBER,					   
					   SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT,  C.DSCTIPOV            
					   FROM WC3_VISTA_CTRLING AS C 
					   WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) 
					   AND (C.DIVISION = @DIVCOD) 
					   AND (C.LOCAL IN (@LOCAL)) 
					   AND (C.VEHICULO = 'S') 
                        AND ((C.EMPRESA = @EMPRESA ) OR @EMPRESA IS NULL)
						AND ((C.RUTINGRESO = @RUTINGRESO) OR @RUTINGRESO IS NULL OR @RUTINGRESO = 'null')
						AND ((C.OST = @OST) OR @OST IS NULL OR @OST = 'null')
						AND ((C.PATENTE = @PATENTE) OR @PATENTE IS NULL OR @PATENTE = 'null')
					   GROUP BY C.DSCTIPOV 


				END
			END
			ELSE IF  @OPCION='4'
			BEGIN
				 IF @LOCAL = 'TODOS'
				BEGIN
				       SELECT 
					   COUNT(C.FECHA) OVER() TOTALREGISTROS,
					   ROW_NUMBER() OVER(ORDER BY C.FECHA ASC) ROWNUMBER,					   
					   SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.FECHA                
					   FROM WC3_VISTA_CTRLING AS C 
					   WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN)  
					   AND (C.DIVISION = @DIVCOD) 
                        AND ((C.EMPRESA = @EMPRESA ) OR @EMPRESA IS NULL)
						AND ((C.RUTINGRESO = @RUTINGRESO) OR @RUTINGRESO IS NULL OR @RUTINGRESO = 'null')
						AND ((C.OST = @OST) OR @OST IS NULL OR @OST = 'null')
						AND ((C.PATENTE = @PATENTE) OR @PATENTE IS NULL OR @PATENTE = 'null')
					   AND (VEHICULO = 'S') 
					   GROUP BY C.FECHA 


				END
				ELSE
				BEGIN

				       SELECT 
					   COUNT(C.FECHA) OVER() TOTALREGISTROS,
					   ROW_NUMBER() OVER(ORDER BY C.FECHA ASC) ROWNUMBER,					   
					   SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.FECHA                
					   FROM WC3_VISTA_CTRLING AS C 
					   WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN)  
					   AND (C.DIVISION = @DIVCOD)  
					   AND (C.LOCAL IN (@LOCAL)) 
                        AND ((C.EMPRESA = @EMPRESA ) OR @EMPRESA IS NULL)
						AND ((C.RUTINGRESO = @RUTINGRESO) OR @RUTINGRESO IS NULL OR @RUTINGRESO = 'null')
						AND ((C.OST = @OST) OR @OST IS NULL OR @OST = 'null')
						AND ((C.PATENTE = @PATENTE) OR @PATENTE IS NULL OR @PATENTE = 'null')
					   AND (VEHICULO = 'S') 
					   GROUP BY C.FECHA 


				END
			END
			ELSE IF  @OPCION='5'
			BEGIN
				 IF @LOCAL = 'TODOS'
				BEGIN

				      SELECT 
					  COUNT(C.OST) OVER() TOTALREGISTROS,
					  ROW_NUMBER() OVER(ORDER BY C.OST ASC) ROWNUMBER,					  
					  SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.OST                  
					  FROM WC3_VISTA_CTRLING AS C 
				      WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) 
					  AND (C.DIVISION = @DIVCOD)   
                        AND ((C.EMPRESA = @EMPRESA ) OR @EMPRESA IS NULL)
						AND ((C.RUTINGRESO = @RUTINGRESO) OR @RUTINGRESO IS NULL OR @RUTINGRESO = 'null')
						AND ((C.OST = @OST) OR @OST IS NULL OR @OST = 'null')
						AND ((C.PATENTE = @PATENTE) OR @PATENTE IS NULL OR @PATENTE = 'null')
					  GROUP BY C.OST 


				END
				ELSE
				BEGIN

				      SELECT 
					  COUNT(C.OST) OVER() TOTALREGISTROS,
					  ROW_NUMBER() OVER(ORDER BY C.OST ASC) ROWNUMBER,						  
					  SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.OST                  
					  FROM WC3_VISTA_CTRLING AS C 
					  WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) 
					  AND (C.DIVISION = @DIVCOD)  
					  AND (C.LOCAL IN (@LOCAL)) 
                        AND ((C.EMPRESA = @EMPRESA ) OR @EMPRESA IS NULL)
						AND ((C.RUTINGRESO = @RUTINGRESO) OR @RUTINGRESO IS NULL OR @RUTINGRESO = 'null')
						AND ((C.OST = @OST) OR @OST IS NULL OR @OST = 'null')
						AND ((C.PATENTE = @PATENTE) OR @PATENTE IS NULL OR @PATENTE = 'null')
					  GROUP BY C.OST 

				END
			END
			ELSE IF  @OPCION='6'
			BEGIN
				 IF @LOCAL = 'TODOS'
				BEGIN

				     SELECT 
					 COUNT(C.TIPOPASE) OVER() TOTALREGISTROS,
					 ROW_NUMBER() OVER(ORDER BY C.TIPOPASE ASC) ROWNUMBER,						 
					 SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.TIPOPASE             
					 FROM WC3_VISTA_CTRLING AS C 
					 WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) 
					 AND (C.DIVISION = @DIVCOD)  
                        AND ((C.EMPRESA = @EMPRESA ) OR @EMPRESA IS NULL)
						AND ((C.RUTINGRESO = @RUTINGRESO) OR @RUTINGRESO IS NULL)
						AND ((C.RUTINGRESO = @RUTINGRESO) OR @RUTINGRESO IS NULL OR @RUTINGRESO = 'null')
						AND ((C.OST = @OST) OR @OST IS NULL OR @OST = 'null')
						AND ((C.PATENTE = @PATENTE) OR @PATENTE IS NULL OR @PATENTE = 'null')
					 GROUP BY C.TIPOPASE 

				END
				ELSE
				BEGIN

				    SELECT 
					 COUNT(C.TIPOPASE) OVER() TOTALREGISTROS,
					 ROW_NUMBER() OVER(ORDER BY C.TIPOPASE ASC) ROWNUMBER,						
					SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN, SUM(C.VEHOUT) AS VEHOUT, C.TIPOPASE             
					FROM WC3_VISTA_CTRLING AS C 
				    WHERE (C.FECHA  BETWEEN @FECHAINI AND @FECHAFIN) 
					AND (C.DIVISION = @DIVCOD) 
					AND (C.LOCAL IN (@LOCAL))   
                        AND ((C.EMPRESA = @EMPRESA ) OR @EMPRESA IS NULL)
						AND ((C.RUTINGRESO = @RUTINGRESO) OR @RUTINGRESO IS NULL OR @RUTINGRESO = 'null')
						AND ((C.OST = @OST) OR @OST IS NULL OR @OST = 'null')
						AND ((C.PATENTE = @PATENTE) OR @PATENTE IS NULL OR @PATENTE = 'null')
					GROUP BY C.TIPOPASE  


				END
			END

END	













IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CTRLACCESORESUMEN_DIARESUMEN]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CTRLACCESORESUMEN_DIARESUMEN]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CTRLACCESORESUMEN_DIARESUMEN]
(
@DIVCOD  NVARCHAR(4)       = NULL,
@LOCAL  NVARCHAR(12)         = NULL,
@EMPRESA  NVARCHAR(10)       = NULL,
@FECHA  NVARCHAR(8)          = NULL,
@OST VARCHAR(12)             = NULL,
@RUTINGRESO VARCHAR(10)       = NULL,
@PATENTE VARCHAR(10)       = NULL
) AS
BEGIN
	declare @strSQL as nvarchar(MAX)



					SET @strSQL='SELECT SUM(C.INGRESO) AS ING, SUM(C.SALIDA) AS SAL, SUM(C.ERRIN) AS ERRIN, SUM(C.ERROUT) AS ERROUT, SUM(C.VEHIN) AS VEHIN,
                                 SUM(C.VEHOUT) AS VEHOUT, C.LOCAL, SUBSTRING(C.HORA, 1,2) AS PERIODO 
	                             FROM WC3_VISTA_CTRLING AS C 
								 WHERE ((C.DIVISION = ''' + @DIVCOD + ''' ) OR ''' + @DIVCOD + ''' IS NULL) 
								 AND ((C.EMPRESA = ''' + @EMPRESA + ''') OR ''' + @EMPRESA + ''' IS NULL)'
								 	 
		            IF @LOCAL <> 'TODOS'
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (C.[LOCAL] IN ( ''' + @LOCAL + '''))'
		            END

		            IF @OST <> '' OR @OST <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (C.OST = ''' + @OST + ''')'
		            END

		            IF @RUTINGRESO <> '' OR @RUTINGRESO <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (C.RUTINGRESO = ''' + @RUTINGRESO + ''')'
		            END

		            IF @PATENTE <> '' OR @PATENTE <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (C.PATENTE = ''' + @PATENTE + ''')'
		            END

	

		            IF @FECHA <> ''
		            BEGIN
		       		     Set @strSQL = @strSQL + N' AND (C.FECHA  = ''' + @FECHA + ''')'
		            END										   
					
					     Set @strSQL = @strSQL + N' GROUP BY C.DIVISION, C.LOCAL, C.FECHA, SUBSTRING(C.HORA, 1,2)'
					     Set @strSQL = @strSQL + N' ORDER BY C.LOCAL, C.FECHA, SUBSTRING(C.HORA, 1,2)'
					 exec sp_executesql @strSQL  
					 PRINT @strSQL


		
			

END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CTRLACCESORESUMEN_DIATOTAL]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CTRLACCESORESUMEN_DIATOTAL]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_GET_WC3_VISTA_CTRLING_INFORME_CTRLACCESORESUMEN_DIATOTAL]
(
@DIVCOD  NVARCHAR(4)       = NULL,
@LOCAL  NVARCHAR(12)         = NULL,
@EMPRESA  NVARCHAR(10)       = NULL,
@FECHAINI  NVARCHAR(8)       = NULL,
@FECHAFIN  NVARCHAR(8)        = NULL,
@CAMPO VARCHAR(10)           = NULL,
@OST VARCHAR(12)             = NULL,
@RUTINGRESO VARCHAR(10)       = NULL,
@PATENTE VARCHAR(10)       = NULL

) AS
BEGIN
	declare @strSQL as nvarchar(MAX)



					SET @strSQL='SELECT 
						COUNT(C.FECHA) OVER() TOTALREGISTROS,
						ROW_NUMBER() OVER(ORDER BY C.FECHA, C.HORA ASC) ROWNUMBER,
						W.ROL, C.RUTINGRESO, C.GERENCIA, W.NOMBRES, W.APELLIDOS, C.SEXO, C.FECHA, C.HORA, C.PATENTE, C.ERROR, C.LOCAL, C.DIVISION, C.INGRESO, C.SALIDA, C.DSCTIPOV, C.ACRONIMO, 
						C.EMPRESA, C.COD_PDA, C.USUARIO, ISNULL(C.VEHICULO, ''N'') AS VEHICULO, INGRESO AS ING, ERRIN,SALIDA AS SAL, ERROUT, VEHIN, VEHOUT, M.MSG_REPORT, ADMINOST, ISNULL(O.EMPRESA,''VISITA'') AS CONTRATISTA, 
						C.OST, W2.NOMBRES + '' '' + W2.APELLIDOS AS ADMINOSTNOM, A.AREA  
						FROM WC3_VISTA_CTRLING  AS C LEFT OUTER JOIN WORKERS AS W ON C.RUTINGRESO = W.RUT  
													 LEFT OUTER JOIN MULTASTTO AS M ON C.ERROR = M.CODMULTA 
													 LEFT OUTER JOIN OSTDIVLOCAL AS O ON C.OST = O.OST AND C.DIVISION = O.DIVISION AND O.MANDANTE IN (SELECT MANDANTE FROM A027_MANDANTES WHERE ACTIVO = ''SI'') 
													 LEFT OUTER JOIN WORKERS AS W2 ON O.ADMINOST = W2.RUT 
													 LEFT OUTER JOIN A025_AREA AS A ON W.ID_AREA = A.ID_AREA
													  WHERE ((C.DIVISION = ''' + @DIVCOD + ''' ) OR ''' + @DIVCOD + ''' IS NULL) 
													   AND ((C.EMPRESA = ''' + @EMPRESA + ''') OR ''' + @EMPRESA + ''' IS NULL)'
		            IF @LOCAL <> 'TODOS'
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (C.[LOCAL] IN ( ''' + @LOCAL + '''))'
		            END

		            IF @OST <> '' OR @OST <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (C.OST = ''' + @OST + ''')'
		            END

		            IF @RUTINGRESO <> '' OR @RUTINGRESO <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (C.RUTINGRESO = ''' + @RUTINGRESO + ''')'
		            END

		            IF @PATENTE <> '' OR @PATENTE <> NULL
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (C.PATENTE = ''' + @PATENTE + ''')'
		            END

		            IF @CAMPO = 'INGRESO'
		            BEGIN
		            	Set @strSQL = @strSQL + N' AND (INGRESO > 0 )'
		            END
					ELSE IF @CAMPO = 'SALIDA'
					BEGIN
					     Set @strSQL = @strSQL + N' AND (SALIDA > 0 )'
					END
					ELSE IF @CAMPO = 'ERRIN'
					BEGIN
					     Set @strSQL = @strSQL + N' AND (ERRIN > 0 )'
					END
					ELSE IF @CAMPO = 'ERROUT'
					BEGIN
					     Set @strSQL = @strSQL + N' AND (ERROUT > 0 )'
					END
					ELSE IF @CAMPO = 'VEHIN'
					BEGIN
					     Set @strSQL = @strSQL + N' AND (VEHIN > 0 )'
					END
					ELSE IF @CAMPO = 'VEHOUT'
					BEGIN
					     Set @strSQL = @strSQL + N' AND (VEHOUT > 0 )'
					END

		            IF @FECHAINI <> '' OR @FECHAFIN <> ''
		            BEGIN
		       		 Set @strSQL = @strSQL + N' AND (C.FECHA  BETWEEN ''' + @FECHAINI + ''' AND ''' +  @FECHAFIN + ''')'
		            END										   
					

					 exec sp_executesql @strSQL  
					 PRINT @strSQL


		
			

END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_GETDOCS_TIPO_RECHAZO_LIQUIDACION_FUNCIONARIOSCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_GETDOCS_TIPO_RECHAZO_LIQUIDACION_FUNCIONARIOSCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_GETDOCS_TIPO_RECHAZO_LIQUIDACION_FUNCIONARIOSCTTA]
(@RUT	  NVARCHAR(10) = NULL
,@FECHA	  NVARCHAR(6) = NULL
,@EMPRESA NVARCHAR(10) = NULL) AS
BEGIN
	SELECT tr.TIPO_RECHAZO 
	FROM DOCS_WORKERS_RECHAZO dw 
	INNER JOIN DOCS_TIPO_RECHAZO tr ON tr.ID_TIPO_RECHAZO = dw.ID_TIPO_RECHAZO 
	INNER JOIN LIQUIDACION l ON l.ID = dw.ID 
	WHERE l.RUT = @RUT AND l.FECHA = @FECHA AND l.EMPRESA = @EMPRESA
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_GETLIQUIDACION_FUNCIONARIOSCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_GETLIQUIDACION_FUNCIONARIOSCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_GETLIQUIDACION_FUNCIONARIOSCTTA]
(@RUT	  NVARCHAR(10) = NULL
,@FECHA	  NVARCHAR(6) = NULL
,@EMPRESA NVARCHAR(10) = NULL) AS
BEGIN
	SELECT RUT, FECHA, NOMBRE_ARCHIVO, TIPO_CONTENIDO, ARCHIVO, FECHASUBE, HORASUBE, USUARIO, VALIDADO, CERTUSUARIO, 
	       CERTFECHA, CERTHORA, IDRECHAZO, ID, IMPONIBLE, LIQUIDO, TRANSFERIDO, EMPRESA, BONOIP, BONOIS, FECHACSV, HORACSV, USUARIOCSV 
	FROM LIQUIDACION 
	WHERE RUT = @RUT AND FECHA = @FECHA AND EMPRESA = @EMPRESA
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_HOTEL_RESERVA_UPDATE_FUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_HOTEL_RESERVA_UPDATE_FUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_HOTEL_RESERVA_UPDATE_FUNCIONARIOS_CTTA]
(
  @RUT			    NVARCHAR(11) = ''
 ,@USUARIO		    NVARCHAR(10) = ''
 ,@IDEMPRESA		NVARCHAR(11) = ''
 ,@JSON_MAIL_DATA   NVARCHAR(4000) OUTPUT
)
AS
BEGIN
	DECLARE @ID_DOC INT = 18 /*FINIQUITO*/
	DECLARE @DIVCOD		NVARCHAR(4) = 'QV'
	DECLARE @VALIDACION	NVARCHAR(4) = ''
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	DECLARE @CURR_ID_RES INT
	DECLARE @FETCHED BIT
	DECLARE @SEP NVARCHAR(2)
	DECLARE @OBJ NVARCHAR(300)
	DECLARE @ACRONIMO NVARCHAR(70) = ''
	DECLARE @MAILS NVARCHAR(300) = ''
	DECLARE @MAIL NVARCHAR(40) = ''

	DECLARE @FEC_CHECKIN NVARCHAR(15) = ''
	DECLARE @HOR_CHECKIN NVARCHAR(15) = ''
	DECLARE @FEC_CHECKOUT NVARCHAR(15) = ''
	DECLARE @HOR_CHECKOUT NVARCHAR(15) = ''
	DECLARE @NOMBRE_HOTEL NVARCHAR(15) = ''
	DECLARE @PISO INT = 0
	DECLARE @NRO_PIEZA INT = 0
	DECLARE @EMPRESA NVARCHAR(70) = ''
	DECLARE @OST NVARCHAR(15) = ''
	DECLARE @NOMDIVISION NVARCHAR(70) = ''
	DECLARE @RRUT NVARCHAR(11) = ''
	DECLARE @NOMBRES NVARCHAR(70) = ''
	DECLARE @APELLIDOS NVARCHAR(70) = ''
	DECLARE @SEXO NVARCHAR(11) = ''
	DECLARE @FECHAINICIO NVARCHAR(15) = ''
	DECLARE @FECHAFIN NVARCHAR(15) = ''
	DECLARE @CHECKIN NVARCHAR(40) = ''
	DECLARE @CHECKOUT NVARCHAR(40) = ''
	

	
	IF(EXISTS(
		SELECT *
		FROM WORKERSLOCAL
		WHERE
			RUT = @RUT AND
			EMPRESA = @IDEMPRESA AND
			AUTOR <>'BL' AND
			FFINPASE >= @CURR_FECHA AND
			DIVISION = @DIVCOD
	))
		BEGIN
			SET @JSON_MAIL_DATA = '{ LISTA_RESERVAS: [ '

			IF(EXISTS(
				SELECT *
				FROM DOCS_WORKERS
				WHERE
					RUT = @RUT AND
					EMPRESA = @IDEMPRESA AND
					DIVISION = @DIVCOD AND
					VALIDADO = 'NO'
			))
				BEGIN
					INSERT INTO DOCS_WORKERS_HST
						(
						  RUT ,ID_DOC, NOMBRE_ARCHIVO, FECHA_MOD, HORA_MOD,
						  TIPO_CONTENIDO, ARCHIVO, USUARIO, CANTIDAD, GRABO,
						  CERTFECHA, CERTHORA, CERTUSUARIO, VALIDADO, EMPRESA,
						  FECHA_DEL, HORA_DEL, USUARIO_DEL, OPERACION, ID, DIVISION)
					SELECT
						RUT, ID_DOC, NOMBRE_ARCHIVO, FECHA_MOD, HORA_MOD,
						TIPO_CONTENIDO, ARCHIVO, USUARIO, CANTIDAD, GRABO,
						CERTFECHA, CERTHORA, CERTUSUARIO, VALIDADO, EMPRESA,
						@CURR_FECHA, @CURR_TIEMPOFULL, '', 'DELETE',ID,DIVISION
					FROM DOCS_WORKERS
					WHERE
						RUT = @RUT AND
						EMPRESA = @IDEMPRESA AND
						VALIDADO = 'NO' AND
						DIVISION = @DIVCOD

					DELETE
					FROM DOCS_WORKERS
					WHERE
						RUT = @RUT AND
						EMPRESA = @IDEMPRESA AND
						VALIDADO = 'NO' AND
						DIVISION = @DIVCOD
				END

			IF(EXISTS(
				SELECT *
				FROM WORKERSLOCAL
				WHERE
					RUT = @RUT AND
					EMPRESA = @IDEMPRESA AND
					DIVISION = @DIVCOD AND
					FFINPASE >= @CURR_FECHA AND
					AUTOR IN ('SI','NO')
			))
				BEGIN
					UPDATE WORKERSLOCAL
					SET
						AUTOR = 'BL',
						QUIEN = @USUARIO
					WHERE
						RUT = @RUT AND
						EMPRESA = @IDEMPRESA AND
						DIVISION = @DIVCOD AND
						FFINPASE >= @CURR_FECHA AND
						AUTOR IN ('SI','NO')
				END
			/*---------CheckOut reservas---------*/

			DECLARE getIR CURSOR FOR
			SELECT
				ID_RESERVA
			FROM HOTEL_RESERVA
			WHERE
				RUT = @RUT AND
				FECHAFIN >= @CURR_FECHA

			OPEN getIR
			FETCH NEXT
			FROM getIR INTO @CURR_ID_RES

			SET @SEP = ''

			WHILE @@FETCH_STATUS = 0
				BEGIN
					UPDATE HOTEL_RESERVA
					SET
						FECHAMOD = @CURR_FECHA,
						HORAMOD = @CURR_TIEMPOFULL,
						USRMOD = @USUARIO,
						FEC_CHECKOUT = @CURR_FECHA,
						HOR_CHECKOUT = @CURR_TIEMPOFULL,
						USR_CHECKOUT = @USUARIO
					WHERE ID_RESERVA = @CURR_ID_RES

					INSERT INTO HOTEL_RESERVA_LOG
						(
						  ID_RESERVA, ID_PIEZA, RUT, EMPRESA, FECHAINICIO,
						  FECHAFIN, FECHAREGISTRO, HORAREGISTRO, USRREGISTRO,
						  FECHAMOD, HORAMOD, USRMOD, FEC_CHECKIN, HOR_CHECKIN,
						 USR_CHECKIN, FEC_CHECKOUT, HOR_CHECKOUT, USR_CHECKOUT,
						  EST_FINRESERVA, TURNO, ENTREGALLAVE, OST, LOTE,EXCEPCION,
						  ACCION,USRENTREGA,HORAENTREGA,FECENTREGA)
					SELECT
						ID_RESERVA, ID_PIEZA, RUT, EMPRESA, FECHAINICIO, FECHAFIN,
						FECHAREGISTRO, HORAREGISTRO, USRREGISTRO, FECHAMOD, HORAMOD,
						USRMOD, FEC_CHECKIN, HOR_CHECKIN, USR_CHECKIN, FEC_CHECKOUT,
						HOR_CHECKOUT, USR_CHECKOUT, EST_FINRESERVA, TURNO, ENTREGALLAVE,
						OST, LOTE,EXCEPCION, 'CHECKOUT', USRENTREGA, HORAENTREGA, FECENTREGA
					FROM HOTEL_RESERVA
					WHERE ID_RESERVA = @CURR_ID_RES

					SET @FETCHED = 0

					SELECT 
						TOP 1
						@FEC_CHECKIN = SS.FEC_CHECKIN,
						@HOR_CHECKIN = SS.HOR_CHECKIN,
						@FEC_CHECKOUT = SS.FEC_CHECKOUT,
						@HOR_CHECKOUT = SS.HOR_CHECKOUT,
						@NOMBRE_HOTEL = SS.NOMBRE_HOTEL,
						@PISO = SS.PISO,
						@NRO_PIEZA = SS.NRO_PIEZA,
						@EMPRESA = SS.EMPRESA,
						@OST = SS.OST,
						@NOMDIVISION = SS.NOMDIVISION,
						@RRUT = SS.RUT,
						@NOMBRES = SS.NOMBRES,
						@APELLIDOS = SS.APELLIDOS,
						@SEXO = SS.SEXO,
						@FECHAINICIO = SS.FECHAINICIO,
						@FECHAFIN = SS.FECHAFIN,
						@ACRONIMO = SS.ACRONIMO,
						@FETCHED = 1
					FROM 
					(
					SELECT 
						DISTINCT HR.EMPRESA,
								 HR.OST,
								 HR.RUT,
								 W.NOMBRES,
								 W.APELLIDOS,
								 W.SEXO,
								 HR.FECHAINICIO,
								 HR.FECHAFIN,
								 H.ID_HOTEL,
								 H.NOMBRE_HOTEL,
								 HP.PISO,
								 HP.NRO_PIEZA,
								 HR.FEC_CHECKIN,
								 HR.HOR_CHECKIN,
								 HR.FEC_CHECKOUT,
								 HR.HOR_CHECKOUT,
								 ISNULL(HR.ENTREGALLAVE,'NO') AS ENTREGALLAVE,
								 L.LOCAL,
								 L.DIVISION,
								 A.DIVISION AS NOMDIVISION,
								 (
									SELECT
										TOP 1
										E.ACRONIMO
									FROM ENTERPRISE E
									WHERE E.IDEMPRESA = HR.EMPRESA
								 ) AS ACRONIMO
					FROM HOTEL_RESERVA HR
					INNER JOIN HOTEL_PIEZA HP
						ON HR.ID_PIEZA = HP.ID_PIEZA
					INNER JOIN HOTEL H
						ON H.ID_HOTEL = HP.ID_HOTEL
					INNER JOIN WORKERS W
						ON W.RUT = HR.RUT
					INNER JOIN LOCAL L
						ON H.LOCAL_HOTEL = L.LOCAL
					INNER JOIN A024_DIVISIONES A
						ON L.DIVISION = A.DIVCOD
					WHERE HR.ID_RESERVA = @CURR_ID_RES
					ORDER BY H.ID_HOTEL ASC OFFSET 0 ROWS
					) SS

					IF(@FETCHED = 1)
					BEGIN
						IF(@FEC_CHECKIN IS NOT NULL AND @FEC_CHECKIN <> '')
							BEGIN
								EXEC @FEC_CHECKIN = [dbo].[V4MVC_FGET_FEC_USER] @RAW_FEC = @FEC_CHECKIN
								SET @CHECKIN = CONCAT(@FEC_CHECKIN, ' ', @HOR_CHECKIN)
							END
						ELSE
							BEGIN
								SET @FEC_CHECKIN = ''
								SET @CHECKIN = ''
							END

						IF(@FEC_CHECKOUT IS NOT NULL AND @FEC_CHECKOUT <> '')
							BEGIN
								EXEC @FEC_CHECKOUT = [dbo].[V4MVC_FGET_FEC_USER] @RAW_FEC = @FEC_CHECKOUT
								SET @CHECKOUT = CONCAT(@FEC_CHECKOUT, ' ', @HOR_CHECKOUT)
							END
						ELSE
							BEGIN
								SET @FEC_CHECKOUT = ''
								SET @CHECKOUT = ''
							END
						/*-----JSON FORMING-----*/

						IF(@FECHAINICIO IS NOT NULL AND @FECHAINICIO <> '')
							BEGIN
								EXEC @FECHAINICIO = [dbo].[V4MVC_FGET_FEC_USER] @RAW_FEC = @FECHAINICIO
							END
						ELSE
							BEGIN
								SET @FECHAINICIO = ''
							END

						IF(@FECHAFIN IS NOT NULL AND @FECHAFIN <> '')
							BEGIN
								EXEC @FECHAFIN = [dbo].[V4MVC_FGET_FEC_USER] @RAW_FEC = @FECHAFIN
							END
						ELSE
							BEGIN
								SET @FECHAFIN = ''
							END

						EXEC @EMPRESA = [dbo].[V4MVC_FSTR_RUT] @RAW_RUT = @EMPRESA

						SET @OBJ = CONCAT('{FEC_CHECKIN:''', @FEC_CHECKIN, ''', HOR_CHECKIN:''', @HOR_CHECKIN, ''', FEC_CHECKOUT:''', @FEC_CHECKOUT, ''', HOR_CHECKOUT:''', @HOR_CHECKOUT)
						SET @OBJ = CONCAT(@OBJ, ''', NOMBRE_HOTEL:''', @NOMBRE_HOTEL, ''', PISO:', CONVERT(NVARCHAR, @PISO), ', NRO_PIEZA:', CONVERT(NVARCHAR, @NRO_PIEZA), ', EMPRESA:''', @EMPRESA)
						SET @OBJ = CONCAT(@OBJ, ''', OST:''', @OST, ''', NOMDIVISION:''', @NOMDIVISION, ''', RUT:''', @RRUT, ''', NOMBRES:''', @NOMBRES, ''', APELLIDOS:''', @APELLIDOS)
						SET @OBJ = CONCAT(@OBJ, ''', SEXO:''', @SEXO, ''', FECHAINICIO:''', @FECHAINICIO, ''', FECHAFIN:''', @FECHAFIN, ''', ACRONIMO:''', @ACRONIMO, ''', CHECKIN:''', @CHECKIN, ''', CHECKOUT:''', @CHECKOUT, '''}')
						SET @JSON_MAIL_DATA = CONCAT(@JSON_MAIL_DATA, @SEP, @OBJ)

					END
					 
					SET @SEP = ','
					FETCH NEXT
					FROM getIR INTO @CURR_ID_RES

				END
			
			CLOSE getIR
			DEALLOCATE getIR

			/*MAS SOBRE EMAILS*/

			SET @SEP = ''
			SELECT
				TOP 1
				@MAIL = ISNULL(EMAILHOTEL,'')
			FROM ENTERPRISE
			WHERE IDEMPRESA = @IDEMPRESA
			
			IF(@MAIL <> '')
				BEGIN
					SET @MAILS = CONCAT('''', @MAIL, '''')
					SET @SEP = ','
				END
			
			SET @MAIL = ''

			SELECT
				TOP 1
				@MAIL = ISNULL(CORREO_ELECTRONICO,'')
			FROM COLAB_USUARIO
			WHERE IDEMPRESA = @IDEMPRESA

			IF(@MAIL <> '')
				BEGIN
					SET @MAILS = CONCAT(@MAILS, @SEP, '''', @MAIL , '''')
					SET @SEP = ','
				END
			
			SET @MAIL = ''

			SELECT
				TOP 1
				@MAIL = ISNULL(EMAIL,'')
			FROM DESTINATARIOS
			WHERE MODULO = 'ALERTA_ADMIN_HOTELERO'

			IF(@MAIL <> '')
				BEGIN
					SET @MAILS = CONCAT(@MAILS, @SEP, '''', @MAIL , '''')
					SET @SEP = ','
				END
			
			SELECT
				TOP 1
				@NOMBRES = CONCAT(NOMBRES, ' ', APELLIDOS)
			FROM WORKERS
			WHERE RUT = @RUT

			SET @JSON_MAIL_DATA = CONCAT(@JSON_MAIL_DATA, '], EMAILS: [', @MAILS, '] , NOMBRE_DE_RUT: ''', @NOMBRES, '''}')

			UPDATE WORKERS
			SET
				EMPRESA = '999999999'
			WHERE RUT = @RUT
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORME_CAPACITACIONES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORME_CAPACITACIONES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORME_CAPACITACIONES_CTTA]
(
 @DIVCOD	NVARCHAR(4)		= NULL
,@FECHAINI	NVARCHAR(8)		= NULL
,@FECHAFIN	NVARCHAR(8)		= NULL
,@IDCHARLA	INT				= NULL
,@EMPRESA	NVARCHAR(10)	= NULL
,@RUT		NVARCHAR(10)	= NULL
)
AS
BEGIN

	IF(@IDCHARLA = 0)
	BEGIN
		SET @IDCHARLA = NULL
	END

	SELECT DISTINCT		COUNT(DISTINCT CR.RUT) AS PARTICIPANTES		,D.DIVISION		,D.DIVCOD		,CP.CODIGO
						,CH.CHARLA									,CP.FECHA		,CP.HORA		,CP.FINALIZADO
						,COUNT(CASE WHEN CR.NOTA>=CH.PORCENTAJE THEN 1 ELSE null END) AS CUENTASI
						,COUNT(CASE WHEN CR.NOTA<CH.PORCENTAJE  THEN 1 ELSE null END) AS CUENTANO 
	FROM A036_CURSORESERVA			AS CR
	INNER JOIN A036_CURSOPROG		AS CP ON CR.CODIGO = CP.CODIGO
	INNER JOIN CHARLAS				AS CH ON CP.CURSO = CH.IDCHARLA
	INNER JOIN CHARLAS_DIVISION		AS CHD ON CH.IDCHARLA = CHD.IDCHARLA
	INNER JOIN A024_DIVISIONES		AS D ON CHD.DIVISION = D.DIVCOD 
	INNER JOIN ENTERPRISE			AS E ON CR.EMPRESA = E.IDEMPRESA WHERE 1 = 1
	AND E.IDEMPRESA					=		@EMPRESA
	AND D.DIVCOD					=		@DIVCOD
	AND CP.FECHA	BETWEEN ISNULL(@FECHAINI,CP.FECHA) AND ISNULL(@FECHAFIN,CP.FECHA)
	AND CH.IDCHARLA					=		ISNULL(@IDCHARLA,CH.IDCHARLA)
	AND CR.RUT						=		ISNULL(@RUT, CR.RUT)
	AND ASISTIO						=		'SI' 
	GROUP BY D.DIVISION,D.DIVCOD, CP.CODIGO, CH.CHARLA, CP.FECHA, CP.HORA, CP.FINALIZADO
	ORDER BY CP.FECHA, CP.HORA ASC 

END


--EXEC V4MVC_INFORME_CAPACITACIONES_CTTA 'LB',null,null,NULL,'761264907',NULL
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORME_CAPACITACIONES_HISTORIAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORME_CAPACITACIONES_HISTORIAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORME_CAPACITACIONES_HISTORIAL_CTTA]
(
 @EMPRESA	NVARCHAR(10)	= NULL
,@DIVISION	NVARCHAR(4)		= NULL
,@IDCHARLA	INT				= NULL
,@RUT		NVARCHAR(10)	= NULL
,@FECHAINI	NVARCHAR(8)		= NULL
,@FECHAFIN	NVARCHAR(8)		= NULL
)
AS
BEGIN

	IF(@IDCHARLA = 0)
	BEGIN
		SET @IDCHARLA = NULL
	END

	SELECT		E.ACRONIMO		,W.NOMBRES		,W.APELLIDOS		,D.DIVISION
				,CHH.RUT		,CHH.FECHA		,CH.CHARLA			,CHH.EMPRESA
				,CHH.TEORICO	,CHH.PRACTICO 
	FROM CHARLHIST AS CHH 
	INNER JOIN WORKERS AS W			ON CHH.RUT = W.RUT 
	INNER JOIN CHARLAS AS CH		ON CHH.IDCHARLA = CH.IDCHARLA 
	INNER JOIN A024_DIVISIONES AS D ON CHH.DIVISION = D.DIVCOD 
	INNER JOIN ENTERPRISE AS E		ON CHH.EMPRESA = E.IDEMPRESA 
	WHERE 1 = 1
	AND CHH.EMPRESA			=	ISNULL(@EMPRESA,CHH.EMPRESA)
	AND CHH.DIVISION		=	ISNULL(@DIVISION, CHH.DIVISION)
	AND CHH.FECHA BETWEEN	ISNULL(@FECHAINI, CHH.FECHA) AND ISNULL(@FECHAFIN, CHH.FECHA)
	AND CHH.IDCHARLA		= ISNULL(@IDCHARLA,CHH.IDCHARLA)
	AND CHH.RUT				= ISNULL(@RUT, CHH.RUT)
	ORDER BY CH.CHARLA, CHH.FECHA, W.NOMBRES, W.APELLIDOS

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORME_CASINO_FECHA_LOCAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORME_CASINO_FECHA_LOCAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORME_CASINO_FECHA_LOCAL_CTTA]
(
 @FECHAINI		NVARCHAR(8)		= NULL
,@FECHAFIN		NVARCHAR(8)		= NULL
,@DIVCOD		NVARCHAR(4)		= NULL
,@LOCALES		NVARCHAR(MAX)	= NULL
,@IDEMPRESA		NVARCHAR(10)	= NULL
)
AS 
BEGIN

	DECLARE @FECHA_INI							DATE
	DECLARE @FECHA_FIN							DATE
	DECLARE	@Nro  INT
	DECLARE @CONTADOR							INT
	DECLARE @LOCAL								NVARCHAR(50)
	DECLARE	@Servicio_Fecha NVARCHAR(MAX)
	DECLARE	@Servicio_Fecha_Sum  NVARCHAR(MAX)
	DECLARE	@Servicio_Fecha_Sum_Resumen  NVARCHAR(MAX)
	DECLARE	@Servicio_Fecha_Sum_ResumenTotal  NVARCHAR(MAX)
	DECLARE @strSQL								NVARCHAR(MAX)
	DECLARE @strSQL_EXEC						NVARCHAR(MAX)

	SET @Servicio_Fecha = ''
	SET @Servicio_Fecha_Sum = ''
	SET @Servicio_Fecha_Sum_Resumen = ''
	SET @Servicio_Fecha_Sum_ResumenTotal = ''
	SET @Nro = -1
	SET @FECHA_INI								=	@FECHAINI
	SET @FECHA_FIN								=	@FECHAFIN
	SET @strSQL_EXEC = ''

	SELECT VALUE AS LOCAL INTO #TEMP_SPLIT_LOCALES
	FROM STRING_SPLIT(@LOCALES,',')

	SELECT ROW_NUMBER() OVER (ORDER BY LOCAL ASC) AS ID,* INTO #TEMP_LOCALES
	FROM #TEMP_SPLIT_LOCALES

	WHILE DATEDIFF(DAY, @FECHA_INI, @FECHA_FIN) > -1
	BEGIN  
		SET	@Nro = @Nro + 1
			If @Servicio_Fecha = '' 
			BEGIN
				SET @Servicio_Fecha = '[' + CONVERT(VARCHAR(8),@FECHA_INI,112) + ']'
				SET @Servicio_Fecha_Sum = ' CASE WHEN [' + CONVERT(VARCHAR(8),@FECHA_INI,112) +'] > 0 THEN ['+CONVERT(VARCHAR(8),@FECHA_INI,112)+'] ELSE 0 END AS [' +CONVERT(VARCHAR(8),@FECHA_INI,112)  +']'
				SET @Servicio_Fecha_Sum_Resumen = 'SUM([' +CONVERT(VARCHAR(8),@FECHA_INI,112)  + ']) AS [' + CONVERT(VARCHAR(8),@FECHA_INI,112)  + ']'
				SET @Servicio_Fecha_Sum_ResumenTotal = 'SUM([' +CONVERT(VARCHAR(8),@FECHA_INI,112)  + '])'
			END
			ELSE
			BEGIN
				SET @Servicio_Fecha = @Servicio_Fecha +  ',[' + CONVERT(VARCHAR(8),@FECHA_INI,112)  + ']'
				SET @Servicio_Fecha_Sum = @Servicio_Fecha_Sum + ',CASE WHEN [' +CONVERT(VARCHAR(8),@FECHA_INI,112)  + '] > 0 THEN ['+CONVERT(VARCHAR(8),@FECHA_INI,112)+'] ELSE 0 END AS [' +CONVERT(VARCHAR(8),@FECHA_INI,112)  + ']'
				SET @Servicio_Fecha_Sum_Resumen = @Servicio_Fecha_Sum_Resumen +',SUM([' + CONVERT(VARCHAR(8),@FECHA_INI,112)  + ']) AS [' + CONVERT(VARCHAR(8),@FECHA_INI,112)  + ']'
				SET @Servicio_Fecha_Sum_ResumenTotal = @Servicio_Fecha_Sum_ResumenTotal +'+SUM([' + CONVERT(VARCHAR(8),@FECHA_INI,112)  + '])'
			END		
		
			SET @FECHA_INI = (SELECT DATEADD(DAY, 1, @FECHA_INI))
	END  

	SET @CONTADOR	=	1
	WHILE(@CONTADOR <= (SELECT COUNT(*) FROM #TEMP_SPLIT_LOCALES))
	BEGIN

		SELECT @LOCAL = LOCAL FROM #TEMP_LOCALES
		WHERE ID = @CONTADOR

		IF(EXISTS(SELECT FECHA FROM WC3_VISTA_CASINO WHERE EMPRESA=@IDEMPRESA AND DIVISION=@DIVCOD AND LOCAL = @LOCAL AND FECHA BETWEEN @FECHAINI AND @FECHAFIN AND ISNULL(ERROR,'') = ''))
		BEGIN

			SET @strSQL = '(SELECT  D.LOCAL,D.SERVICIO,'
			SET @strSQL = @strSQL + @Servicio_Fecha_Sum_Resumen  
			SET @strSQL = @strSQL + N',('
			SET @strSQL = @strSQL + @Servicio_Fecha_Sum_ResumenTotal  
			SET @strSQL = @strSQL + N') TOTAL'
			SET @strSQL = @strSQL + N' FROM ( '
			SET @strSQL = @strSQL + N' SELECT pvt.LOCAL, pvt.SERVICIO, '
			SET @strSQL = @strSQL + @Servicio_Fecha_Sum  
			SET @strSQL = @strSQL + N' FROM ( '
			SET @strSQL = @strSQL + N' SELECT FECHA, LOCAL, SERVICIO, SUM(CANTIDAD) CANT '
			SET @strSQL = @strSQL + N' FROM WC3_VISTA_CASINO' 
			SET @strSQL = @strSQL + N' WHERE (FECHA  BETWEEN ''' + @FECHAINI + ''' AND ''' + @FECHAFIN + ''') '
			SET @strSQL = @strSQL + N' AND (DIVISION = ''' + @DIVCOD + ''') '
			SET @strSQL = @strSQL + N' AND (ISNULL(ERROR, '''') = '''') '
			SET @strSQL = @strSQL + N' AND (LOCAL = ''' + @LOCAL + ''') '
			SET @strSQL = @strSQL + N' AND (EMPRESA = ''' + @IDEMPRESA + ''') '
			SET @strSQL = @strSQL + N' GROUP BY LOCAL, FECHA, SERVICIO ) '
			SET @strSQL = @strSQL + N' datatable PIVOT ( SUM(CANT) FOR [FECHA] IN ('
			SET @strSQL = @strSQL + @Servicio_Fecha + ')) as pvt ) D'
			SET @strSQL = @strSQL + N' GROUP BY  D.LOCAL, D.SERVICIO'
			Set @strSQL = @strSQL + N') UNION ALL ('
			Set @strSQL = @strSQL + N'SELECT ''' + @LOCAL + ''',  ''SUBTOTAL'', ' 
			SET @strSQL = @strSQL + @Servicio_Fecha_Sum_Resumen  
			SET @strSQL = @strSQL + N', ('
			SET @strSQL = @strSQL + @Servicio_Fecha_Sum_ResumenTotal  
			SET @strSQL = @strSQL + N') TOTAL'
			SET @strSQL = @strSQL + N' FROM ( '
			SET @strSQL = @strSQL + N' SELECT pvt.LOCAL, pvt.SERVICIO, '
			SET @strSQL = @strSQL + @Servicio_Fecha_Sum  
			SET @strSQL = @strSQL + N' FROM ( '
			SET @strSQL = @strSQL + N' SELECT FECHA, LOCAL, SERVICIO, SUM(CANTIDAD) CANT '
			SET @strSQL = @strSQL + N' FROM WC3_VISTA_CASINO' 
			SET @strSQL = @strSQL + N' WHERE (FECHA  BETWEEN ''' + @FECHAINI + ''' AND ''' + @FECHAFIN + ''') '
			SET @strSQL = @strSQL + N' AND (DIVISION = ''' + @DIVCOD + ''') '
			SET @strSQL = @strSQL + N' AND (ISNULL(ERROR, '''') = '''') '
			SET @strSQL = @strSQL + N' AND (LOCAL = ''' + @LOCAL + ''') '
			SET @strSQL = @strSQL + N' AND (EMPRESA = ''' + @IDEMPRESA + ''') '
			SET @strSQL = @strSQL + N' GROUP BY LOCAL, FECHA, SERVICIO ) '
			SET @strSQL = @strSQL + N' datatable PIVOT ( SUM(CANT) FOR [FECHA] IN ('
			SET @strSQL = @strSQL + @Servicio_Fecha + ')) as pvt ) D )'
			SET @strSQL = @strSQL + N' UNION ALL '

			SET @strSQL_EXEC = @strSQL_EXEC +' '+ @strSQL

		END

		SET	@CONTADOR = @CONTADOR +	1

	END

		Set @strSQL_EXEC = @strSQL_EXEC + N' (SELECT ''TOTAL'',  '''', ' 
		SET @strSQL_EXEC = @strSQL_EXEC + @Servicio_Fecha_Sum_Resumen  
		SET @strSQL_EXEC = @strSQL_EXEC + N', ('
		SET @strSQL_EXEC = @strSQL_EXEC + @Servicio_Fecha_Sum_ResumenTotal  
		SET @strSQL_EXEC = @strSQL_EXEC + N') TOTAL'
		SET @strSQL_EXEC = @strSQL_EXEC + N' FROM ( '
		SET @strSQL_EXEC = @strSQL_EXEC + N' SELECT pvt.LOCAL, pvt.SERVICIO, '
		SET @strSQL_EXEC = @strSQL_EXEC + @Servicio_Fecha_Sum  
		SET @strSQL_EXEC = @strSQL_EXEC + N' FROM ( '
		SET @strSQL_EXEC = @strSQL_EXEC + N' SELECT FECHA, LOCAL, SERVICIO, SUM(CANTIDAD) CANT '
		SET @strSQL_EXEC = @strSQL_EXEC + N' FROM WC3_VISTA_CASINO' 
		SET @strSQL_EXEC = @strSQL_EXEC + N' WHERE (FECHA  BETWEEN ''' + @FECHAINI + ''' AND ''' + @FECHAFIN + ''') '
		SET @strSQL_EXEC = @strSQL_EXEC + N' AND (DIVISION = ''' + @DIVCOD + ''') '
		SET @strSQL_EXEC = @strSQL_EXEC + N' AND (ISNULL(ERROR, '''') = '''') '
		SET @strSQL_EXEC = @strSQL_EXEC + N' AND (LOCAL IN (SELECT LOCAL FROM #TEMP_SPLIT_LOCALES ))'
		SET @strSQL_EXEC = @strSQL_EXEC + N' AND (EMPRESA = ''' + @IDEMPRESA + ''') '
		SET @strSQL_EXEC = @strSQL_EXEC + N' GROUP BY LOCAL, FECHA, SERVICIO ) '
		SET @strSQL_EXEC = @strSQL_EXEC + N' datatable PIVOT ( SUM(CANT) FOR [FECHA] IN ('
		SET @strSQL_EXEC = @strSQL_EXEC + @Servicio_Fecha + ')) as pvt ) D )'

		print(@strSQL_EXEC)
		--PRINT(LEN(@strSQL_EXEC))
		--EXEC(@strSQL_EXEC)

END

--EXEC V4MVC_INFORME_CASINO_FECHA_LOCAL_CTTA '20190101','20201123','LB','CAS_PCALDERA,CAS_CONFLUEN,cas_vegat','761264907'
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORME_CASINO_FECHA_LOCAL_DETALLE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORME_CASINO_FECHA_LOCAL_DETALLE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORME_CASINO_FECHA_LOCAL_DETALLE_CTTA]
(
 @FECHAINI			NVARCHAR(8)		= NULL
,@FECHAFIN			NVARCHAR(8)		= NULL
,@LOCAL				NVARCHAR(MAX)	= NULL
,@EMPRESA			NVARCHAR(10)	= NULL
,@DIVCOD			NVARCHAR(4)		= NULL
,@OP				NVARCHAR(2)		= NULL
,@RBNTIPOCONSUMO	NVARCHAR(10)	= NULL
,@RUT				NVARCHAR(10)	= NULL
,@SERVICIO			NVARCHAR(12)	= NULL
)
AS
BEGIN

	SELECT VALUE AS LOCAL INTO #TEMP_SPLIT_LOCALES
	FROM STRING_SPLIT(@LOCAL,',')

	--IF(@RBNTIPOCONSUMO != 'ERROR')
	--BEGIN

		SELECT DISTINCT C.SERVICIO		,C.LOCAL		,C.RUT		,C.EMPRESA
						,C.ACRONIMO		,C.FECHA		,C.HORA		,C.CANTIDAD
						,(CASE WHEN ISNULL(C.ERROR, '') <> '' THEN ISNULL(M.MSG_REPORT, 'ERROR') ELSE '' END  ) AS ERROR
						,C.CCOSTO		,C.COD_PDA		,W.NOMBRES	,W.APELLIDOS
						,D.DIVISION		,D.DIVCOD		,C.COD_PDA	,C.USUARIO
						,ADMINOST		,EE.ACRONIMO AS CONTRATISTA, C.OST, W2.NOMBRES + ' ' + W2.APELLIDOS AS ADMINOSTNOM  
		FROM WC3_VISTA_CASINO			AS C 
		LEFT OUTER JOIN WORKERS			AS W	ON C.RUT = W.RUT 
		LEFT OUTER JOIN MULTASTTO		AS M	ON C.ERROR = M.CODMULTA 
		INNER JOIN A024_DIVISIONES D			ON C.DIVISION = D.DIVCOD 
		LEFT OUTER JOIN OSTDIVLOCAL		AS O	ON C.OST = O.OST 
		AND C.DIVISION = O.DIVISION 
		AND O.MANDANTE IN (SELECT MANDANTE FROM A027_MANDANTES WHERE ACTIVO = 'SI') 
		LEFT OUTER JOIN WORKERS			AS W2	ON O.ADMINOST = W2.RUT 
		LEFT OUTER JOIN ENTERPRISE		AS EE	ON EE.IDEMPRESA = O.EMPRESA	
		WHERE C.SERVICIO <> '' 
		AND ISNULL(C.ERROR, '') = ''
		AND C.EMPRESA = ISNULL(@EMPRESA,C.EMPRESA)
		AND C.LOCAL IN (SELECT LOCAL FROM #TEMP_SPLIT_LOCALES)
		AND C.DIVISION = ISNULL(@DIVCOD, C.DIVISION)
		AND C.RUT = ISNULL(@RUT, C.RUT)
		AND C.SERVICIO = ISNULL(@SERVICIO, C.SERVICIO)
		AND C.FECHA BETWEEN ISNULL(@FECHAINI,C.FECHA) AND ISNULL(@FECHAFIN,C.FECHA)
		ORDER BY C.SERVICIO, C.LOCAL, C.FECHA, C.HORA  ASC 

	--END

END


--EXEC V4MVC_INFORME_CASINO_FECHA_LOCAL_DETALLE_CTTA '20170103','20170103','CAS_VEGAT','761264907','LB',NULL,NULL,NULL,NULL
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORME_CASINO_SERVICIO_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORME_CASINO_SERVICIO_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORME_CASINO_SERVICIO_CTTA]
(
 @FECHAINI		NVARCHAR(8)		= NULL
,@FECHAFIN		NVARCHAR(8)		= NULL
,@DIVCOD		NVARCHAR(4)		= NULL
,@EMPRESA		NVARCHAR(10)	= NULL
,@LOCALES		NVARCHAR(MAX)	= NULL
)

AS
BEGIN

	CREATE TABLE #LOCALES
	(
		LOCAL	NVARCHAR(50)  COLLATE DATABASE_DEFAULT NOT NULL
	)

	SELECT VALUE AS LOCAL INTO #TEMP_SPLIT_LOCALES
	FROM STRING_SPLIT(@LOCALES,',')

	SELECT DISTINCT(SERVICIO) FROM WC3_VISTA_CASINO
	WHERE EMPRESA = ISNULL(@EMPRESA,EMPRESA)
	AND FECHA BETWEEN ISNULL(@FECHAINI,FECHA) AND ISNULL(@FECHAFIN,FECHA)
	AND DIVISION = ISNULL(@DIVCOD,DIVISION)
	AND ISNULL(ERROR,'') = ''
	AND LOCAL IN (SELECT LOCAL FROM #TEMP_SPLIT_LOCALES)
	ORDER BY SERVICIO

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORME_CASINO_SERVICIO_DIA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORME_CASINO_SERVICIO_DIA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORME_CASINO_SERVICIO_DIA_CTTA]
(
 @FECHAINI		NVARCHAR(8)		= NULL
,@FECHAFIN		NVARCHAR(8)		= NULL
,@DIVCOD		NVARCHAR(4)		= NULL
,@EMPRESA		NVARCHAR(10)	= NULL
,@LOCALES		NVARCHAR(MAX)	= NULL
)

AS
BEGIN

	CREATE TABLE #LOCALES
	(
		LOCAL	NVARCHAR(50)  COLLATE DATABASE_DEFAULT NOT NULL
	)

	SELECT VALUE AS LOCAL INTO #TEMP_SPLIT_LOCALES
	FROM STRING_SPLIT(@LOCALES,',')

	SELECT SERVICIO,FECHA,SUM(CANTIDAD) AS CANTIDAD FROM WC3_VISTA_CASINO
	WHERE EMPRESA = ISNULL(@EMPRESA,EMPRESA)
	AND FECHA BETWEEN ISNULL(@FECHAINI,FECHA) AND ISNULL(@FECHAFIN,FECHA)
	AND DIVISION = ISNULL(@DIVCOD,DIVISION)
	AND ISNULL(ERROR,'') = ''
	AND LOCAL IN (SELECT LOCAL FROM #TEMP_SPLIT_LOCALES)
	GROUP BY SERVICIO,FECHA
	ORDER BY FECHA

END


		
	

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORME_CONTRATOSCARRANQUE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORME_CONTRATOSCARRANQUE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORME_CONTRATOSCARRANQUE_CTTA]
(
 @EMPRESA	NVARCHAR(10) = NULL
)
AS
BEGIN

	SELECT OST
	FROM OSTARBOL 
	WHERE EMPRESA	=	@EMPRESA
	AND FTERMINO	>= DBO.HOY(GETDATE())
	ORDER BY OST

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORME_CONTRATOSCARRANQUE_DOCS_OST2_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORME_CONTRATOSCARRANQUE_DOCS_OST2_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORME_CONTRATOSCARRANQUE_DOCS_OST2_CTTA]
(
 @EMPRESA	NVARCHAR(10) = NULL
,@MADRE		NVARCHAR(10) = NULL
,@NIVEL		INT			 = NULL
,@OST		NVARCHAR(14) = NULL
)
AS
BEGIN

	SELECT DC.OST,D.ID_DOC,D.NOMBRE AS DOC
		,(CASE WHEN ISNULL(VALIDADO_ADMINOST,'NO')='NO' THEN 'Pendiente'
				ELSE (CASE WHEN ISNULL(VALIDADO_ADMINOST,'NO')='SI' THEN 'Aprobado' ELSE 'Rechazado' END) END) VALIDADOFASE1
		,DC.CERTUSUARIO_ADMINOST
		,(SELECT NOMBRES + ' ' + APELLIDOS FROM WORKERS WHERE RUT = DC.CERTUSUARIO_ADMINOST) AS F1_NOMBRE_VALIDADOR
		,DC.CERTFECHA_ADMINOST
		,DC.CERTHORA_ADMINOST
		,DC.OBS_RE_ADMINOST
		,DC.IDARCH_RE_ADMIN
		,A.NOMBRE AS NOMBREARCHFASE1
		,(CASE WHEN ISNULL(VALIDADO,'NO')='NO' THEN 'Pendiente'
				ELSE (CASE WHEN ISNULL(VALIDADO,'NO')='SI' THEN 'Aprobado' ELSE 'Rechazado' END) END) VALIDADOFASE2
		,DC.CERTUSUARIO
		,(SELECT NOMBRES + ' ' + APELLIDOS FROM WORKERS WHERE RUT = DC.CERTUSUARIO) AS F2_NOMBRE_VALIDADOR
		,DC.CERTFECHA
		,DC.CERTHORA
		,DC.OBS_RE_VALIDADOR
		,DC.IDARCH_RE_VALIDADOR
		,A2.NOMBRE AS NOMBREARCHFASE2
		,DC.FECHASUBE
		,DC.HORASUBE
		FROM DOCS_OST2 DC
			LEFT JOIN DOCS D ON D.ID_DOC = DC.ID_DOC
			LEFT JOIN ARCHIVOS A ON A.ID=DC.IDARCH_RE_ADMIN
			LEFT JOIN ARCHIVOS A2 ON A2.ID=DC.IDARCH_RE_VALIDADOR
		WHERE DC.EMPRESA=ISNULL(@EMPRESA,DC.EMPRESA)
		AND DC.MADRE=ISNULL(@MADRE,DC.MADRE)
		AND DC.NIVEL=ISNULL(@NIVEL,DC.NIVEL) 
		AND DC.OST= ISNULL(@OST,DC.OST) 

END


--EXEC V4MVC_INFORME_CONTRATOSCARRANQUE_DOCS_OST2_CTTA '761264907',NULL,NULL,null
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORME_CONTRATOSCARRANQUE_HISTORIAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORME_CONTRATOSCARRANQUE_HISTORIAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORME_CONTRATOSCARRANQUE_HISTORIAL_CTTA]
(
 @OST			NVARCHAR(50) = NULL
,@MADRE			NVARCHAR(10) = NULL
,@EMPRESA		NVARCHAR(10) = NULL
,@NIVEL			INT = NULL
,@ID_DOC		INT = NULL
)
AS
BEGIN

		SELECT   L.VALIDADO_ADMINOST AS VALIDADO
				,A2.ID AS IDVAL
				,A2.NOMBRE AS ARCHIVOVAL
				,D.NOMBRE AS DOC
				,L.CERTUSUARIO_ADMINOST AS CERTUSUARIO
				,(SELECT NOMBRES + ' ' + APELLIDOS FROM WORKERS WHERE RUT=L.CERTUSUARIO_ADMINOST) AS VALIDADOR_FNOMBRES
				,L.OBS_RE_ADMINOST AS OBSFASE1
				,A.NOMBRE AS ARCHIVO_FASE1
				,A.ID AS IDARCHIVO_FASE1
				,L.CERTFECHA_ADMINOST AS FECHAFASE_1
				,L.CERTHORA_ADMINOST AS HORAFASE_1
				,'FASE 1' AS FASE
		FROM LOG_DOCS_OST2 L  
		INNER JOIN DOCS D ON D.ID_DOC=L.ID_DOC 
		INNER JOIN ARCHIVOS A2 ON A2.ID=L.ID_ARCHIVO 
		LEFT JOIN ARCHIVOS A ON A.ID = L.IDARCH_RE_ADMIN  
		WHERE  
		(OST = @OST) 
		AND (MADRE = @MADRE) 
		AND (EMPRESA = @EMPRESA)  
		AND (NIVEL = @NIVEL) 
		AND L.ID_DOC = @ID_DOC
		AND VALIDADO_ADMINOST IN ('SI','RE') 
		UNION 
		SELECT		L.VALIDADO 
					,A2.ID AS IDVAL
					,A2.NOMBRE AS ARCHIVOVAL
					,D.NOMBRE AS DOC
					,L.CERTUSUARIO AS CERTUSUARIO 
					,(SELECT NOMBRES + ' ' + APELLIDOS FROM WORKERS WHERE RUT=L.CERTUSUARIO) AS VALIDADOR_FNOMBRES
					,L.OBS_RE_VALIDADOR AS OBSFASE1
					,A.NOMBRE AS ARCHIVO_FASE1
					,A.ID AS IDARCHIVO_FASE1
					,L.CERTFECHA AS FECHAFASE_1
					,L.CERTHORA AS HORAFASE_1
					,'FASE 2' AS FASE
		FROM LOG_DOCS_OST2 L  
		INNER JOIN DOCS D ON D.ID_DOC=L.ID_DOC 
		INNER JOIN ARCHIVOS A2 ON A2.ID=L.ID_ARCHIVO 
		LEFT JOIN ARCHIVOS A ON A.ID = L.IDARCH_RE_VALIDADOR  
		WHERE 
		(OST = @OST) 
		AND (MADRE = @MADRE) 
		AND (EMPRESA = @EMPRESA)  
		AND (NIVEL = @NIVEL) 
		AND L.ID_DOC = @ID_DOC
		AND VALIDADO IN ('SI','RE') 
		ORDER BY FECHAFASE_1,HORAFASE_1,FASE DESC

END

--EXEC V4MVC_INFORME_CONTRATOSCARRANQUE_HISTORIAL_CTTA '20200227','777629409','761264907',0,130
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORME_CONTRATOSCARRANQUE_OSTARBOL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORME_CONTRATOSCARRANQUE_OSTARBOL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORME_CONTRATOSCARRANQUE_OSTARBOL_CTTA]
(
 @EMPRESA	NVARCHAR(10) = NULL
,@MADRE		NVARCHAR(10) = NULL
,@NIVEL		INT			 = NULL
,@OST		NVARCHAR(14) = NULL
)
AS
BEGIN

		SELECT T1.OST	,T1.MADRE		,(SELECT ACRONIMO FROM ENTERPRISE WHERE IDEMPRESA = T1.MADRE) AS ACRONIMO_MANDANTE	
						,T1.EMPRESA		,(SELECT ACRONIMO FROM ENTERPRISE WHERE IDEMPRESA = T1.EMPRESA) AS ACRONIMO		
						,T1.FINICIO		,T1.FTERMINO	,T1.NIVEL 
		FROM OSTARBOL T1
		WHERE T1.FTERMINO >= DBO.HOY(GETDATE())
		AND T1.EMPRESA=ISNULL(@EMPRESA,T1.EMPRESA)
		AND T1.OST= ISNULL(@OST,T1.OST)

END


--V4MVC_INFORME_CONTRATOSCARRANQUE_OSTARBOL_CTTA '761264907',NULL,NULL,null
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORME_DOCS_PENDIENTES_DISPUTA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORME_DOCS_PENDIENTES_DISPUTA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORME_DOCS_PENDIENTES_DISPUTA_CTTA]
(
 @FECHAINI	NVARCHAR(8)		= NULL
,@FECHAFIN	NVARCHAR(8)		= NULL
,@RUT		NVARCHAR(10)	= NULL
,@EMPRESA	NVARCHAR(10)	= NULL
)
AS
BEGIN

	SELECT		DIVISION	,EMPRESA	,ACRONIMO	,RUT
				,NOMBRES	,APELLIDOS	,NOMBRE		,ID_TIPO_PROPIETARIO
				,VALIDADO	,FECHA		,HORA
	FROM		V_DOCS_DISPUTA_LISTA
	WHERE		EMPRESA	=	@EMPRESA
	AND			RUT		=	ISNULL(@RUT,RUT)
	AND			FECHA	BETWEEN		ISNULL(@FECHAINI,FECHA) AND ISNULL(@FECHAFIN,FECHA)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORME_DOCS_PENDIENTES_EMPRESA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORME_DOCS_PENDIENTES_EMPRESA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORME_DOCS_PENDIENTES_EMPRESA_CTTA]
(
 @FECHAINI	NVARCHAR(8)		= NULL
,@FECHAFIN	NVARCHAR(8)		= NULL
,@EMPRESA	NVARCHAR(10)	= NULL
)
AS
BEGIN

	SELECT	 IDEMPRESA		,ACRONIMO		,ID_DOC		,NOMBRE
			,FECHASUBE		,HORASUBE
	FROM	 DOCS_PENDIENTE_EMP
	WHERE	 IDEMPRESA = @EMPRESA
	AND		 FECHASUBE BETWEEN ISNULL(@FECHAINI,FECHASUBE) AND ISNULL(@FECHAFIN,FECHASUBE)	 
	OR		 ISNULL(@FECHAINI,FECHASUBE) IS NULL AND ISNULL(@FECHAFIN,FECHASUBE) IS NULL

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORME_DOCS_PENDIENTES_FUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORME_DOCS_PENDIENTES_FUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORME_DOCS_PENDIENTES_FUNCIONARIOS_CTTA]
(
 @FECHAINI	NVARCHAR(8)		= NULL
,@FECHAFIN	NVARCHAR(8)		= NULL
,@RUT		NVARCHAR(10)	= NULL
,@EMPRESA	NVARCHAR(10)	= NULL
)
AS
BEGIN

	SELECT   GLOSA			,EMPRESA		,ACRONIMO		,RUT
			,NOMBRES		,APELLIDOS		,ID_DOC			,NOMBRE
			,FECHASUBE		,HORASUBE
	FROM	 DOCS_PENDIENTE_FUNC 
	WHERE	 EMPRESA = @EMPRESA
	AND		 RUT = ISNULL(@RUT,RUT)
	AND		 FECHASUBE BETWEEN ISNULL(@FECHAINI,FECHASUBE) AND ISNULL(@FECHAFIN,FECHASUBE)
	OR		 ISNULL(@FECHAINI,FECHASUBE) IS NULL AND ISNULL(@FECHAFIN,FECHASUBE) IS NULL

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORME_REVISION_VEHICULAR_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORME_REVISION_VEHICULAR_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORME_REVISION_VEHICULAR_CTTA]
(
 @EMPRESA	NVARCHAR(10)	= NULL
,@FECHAINI	NVARCHAR(8)		= NULL
,@FECHAFIN	NVARCHAR(8)		= NULL
,@PATENTE	NVARCHAR(8)		= NULL
,@ESTADO	NVARCHAR(20)	= NULL
,@DIVISION	NVARCHAR(50)	= NULL
)
AS
BEGIN

	IF(ISNULL(@DIVISION,'')='')
	BEGIN

		SELECT		T1.EMPRESA		,T1.PATENTE		,T1.MARCA			,T1.MODELO
				   ,T1.TIPOV		,T1.FECHARES	,T1.HORAINICIO		,T1.HORATERMINO
				   ,T1.ESTADO		,T1.MOTIVO		,T1.USUARIOSOL		,T1.FECHASOL
				   ,T1.HORASOL		,T1.DIVISION	,T2.NOMBRES			,T2.APELLIDOS
		FROM		LISTADO_REVISION_VEHICULAR T1
		INNER JOIN	WORKERS T2 ON T1.USUARIOSOL = T2.RUT
		WHERE		T1.EMPRESA		=		@EMPRESA
		AND			T1.FECHARES	BETWEEN ISNULL(@FECHAINI,T1.FECHARES) AND  ISNULL(@FECHAFIN,T1.FECHARES)
		AND			T1.PATENTE = ISNULL(@PATENTE,T1.PATENTE)
		AND			T1.ESTADO = ISNULL(@ESTADO,T1.ESTADO)
		ORDER BY	T1.FECHARES	,T1.HORAINICIO

	END
	ELSE
	BEGIN
		SELECT		T1.EMPRESA		,T1.PATENTE		,T1.MARCA			,T1.MODELO
				   ,T1.TIPOV		,T1.FECHARES	,T1.HORAINICIO		,T1.HORATERMINO
				   ,T1.ESTADO		,T1.MOTIVO		,T1.USUARIOSOL		,T1.FECHASOL
				   ,T1.HORASOL		,T1.DIVISION	,T2.NOMBRES			,T2.APELLIDOS
		FROM		LISTADO_REVISION_VEHICULAR T1
		INNER JOIN	WORKERS T2 ON T1.USUARIOSOL = T2.RUT
		WHERE		T1.EMPRESA		=		@EMPRESA
		AND			T1.FECHARES	BETWEEN ISNULL(@FECHAINI,T1.FECHARES) AND  ISNULL(@FECHAFIN,T1.FECHARES)
		AND			T1.PATENTE = ISNULL(@PATENTE,T1.PATENTE)
		AND			T1.ESTADO = ISNULL(@ESTADO,T1.ESTADO)
		AND			T1.DIVISION IN (@DIVISION)
		ORDER BY	T1.FECHARES	,T1.HORAINICIO
	END

END


--exec V4MVC_INFORME_REVISION_VEHICULAR_CTTA '761264907','20190101','20201111',NULL,NULL,'LB,LT'
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORMES_CAPACITACIONES_DETALLE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORMES_CAPACITACIONES_DETALLE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORMES_CAPACITACIONES_DETALLE_CTTA]
(
 @EMPRESA		NVARCHAR(10)	= NULL
,@DIVCOD		NVARCHAR(4)		= NULL
,@FINALIZADO	NVARCHAR(2)		= NULL
,@IDCHARLA		INT				= NULL
,@CODIGO		INT				= NULL
,@FECHAINI		NVARCHAR(8)		= NULL
,@FECHAFIN		NVARCHAR(8)		= NULL
,@RUT			NVARCHAR(10)	= NULL
)
AS
BEGIN

	DECLARE @QUERY NVARCHAR(MAX)

	IF(@IDCHARLA > 0)
	BEGIN
		SET @QUERY = 'SELECT DISTINCT W.RUT,		W.NOMBRES,		W.APELLIDOS,		VC.ASISTIO
				                ,VC.NOTA,		CH.CHARLA,		CH.PORCENTAJE,		VC.FECHA
								,VC.HORA,		VC.FINALIZADO,	VC.EXPIRA,			E.IDEMPRESA,  
								E.ACRONIMO,	CH.HORAS,		CASE CH.OBLIGATORIO WHEN ' + N'''SI''' + ' THEN ' + N'''OBLIGATORIO''' +' ELSE ' +N'''OPCIONAL''' +' END AS OBLIGATORIO
		FROM WC3_VISTA_CURSOS AS VC 
		INNER JOIN WORKERS AS W ON VC.RUT = W.RUT 
		INNER JOIN ENTERPRISE AS E ON VC.EMPRESA = E.IDEMPRESA 
		INNER JOIN CHARLAS AS CH ON VC.CURSO = CH.IDCHARLA 
		WHERE VC.EMPRESA =''' + @EMPRESA + '''
		AND VC.DIVISION = ' + N'''' + @DIVCOD + N'''' +'
		AND VC.ASISTIO=''' + 'SI' + ''' '
		IF (ISNULL(@FECHAINI,'') != '' AND ISNULL(@FECHAFIN,'') != '') BEGIN SET @QUERY = @QUERY + ' AND VC.FECHA BETWEEN ' + @FECHAINI +' AND ' + @FECHAFIN END
		IF (ISNULL(@RUT,'')!='') BEGIN SET @QUERY = @QUERY + ' AND VC.RUT= ''' + @RUT +N''' ' END
		IF (@FINALIZADO = 'SI') BEGIN SET @QUERY = @QUERY + ' AND VC.NOTA >= CH.PORCENTAJE ' END
		IF (@FINALIZADO = 'NO') BEGIN SET @QUERY = @QUERY + ' AND VC.NOTA < CH.PORCENTAJE ' END
		IF (@IDCHARLA > 0) BEGIN SET @QUERY = @QUERY + ' AND VC.CURSO = ' + CAST(@IDCHARLA AS VARCHAR) END
	END
	ELSE
	BEGIN
		SET @QUERY = 'SELECT	D.DIVISION		,E.ACRONIMO			,W.RUT	 		,W.NOMBRES
				,W.APELLIDOS	,CH.CHARLA		,CH.PORCENTAJE		,VC.FINALIZADO	
				,VC.ASISTIO		,VC.NOTA		,VC.EXPIRA			,VC.HORA		
				,VC.FECHA		,CH.HORAS		,CASE CH.OBLIGATORIO WHEN ' + N'''SI''' + ' THEN ' + N'''OBLIGATORIO''' + ' ELSE ' + N'''OPCIONAL''' +' END AS OBLIGATORIO 
		FROM WC3_VISTA_CURSOS AS VC 
		INNER JOIN A024_DIVISIONES AS D ON VC.DIVISION = D.DIVCOD 
		INNER JOIN CHARLAS AS CH ON VC.CURSO = CH.IDCHARLA 
		INNER JOIN ENTERPRISE AS E ON VC.EMPRESA = E.IDEMPRESA 
		INNER JOIN WORKERS AS W ON VC.RUT = W.RUT 
		WHERE 1 = 1
		AND VC.EMPRESA =''' + @EMPRESA + '''
		AND VC.ASISTIO=''' + 'SI' + ''' '
		IF (ISNULL(@FECHAINI,'') != '' AND ISNULL(@FECHAFIN,'') != '') BEGIN SET @QUERY = @QUERY + ' AND VC.FECHA BETWEEN ' + @FECHAINI +' AND ' + @FECHAFIN END
		IF (ISNULL(@RUT,'')!='') BEGIN SET @QUERY = @QUERY + ' AND VC.RUT= ''' + @RUT +N''' ' END
		IF (ISNULL(@DIVCOD,'')!='') BEGIN SET @QUERY = @QUERY + ' AND VC.DIVISION= ''' + @DIVCOD +N''' ' END
		IF (@FINALIZADO = 'SI') BEGIN SET @QUERY = @QUERY + ' AND VC.NOTA >= CH.PORCENTAJE ' END
		IF (@FINALIZADO = 'NO') BEGIN SET @QUERY = @QUERY + ' AND VC.NOTA < CH.PORCENTAJE ' END
		IF (@IDCHARLA > 0) BEGIN SET @QUERY = @QUERY + ' AND VC.CURSO = ' + CAST(@IDCHARLA AS VARCHAR) END 
		IF (@CODIGO > 0) BEGIN SET @QUERY = @QUERY + 'AND VC.CODIGO = ' + CAST(@CODIGO AS VARCHAR) END 
	    --SET @QUERY = @QUERY + ' ORDER BY  E.ACRONIMO, W.NOMBRES, W.APELLIDOS'
		SET @QUERY = @QUERY + ' ORDER BY  VC.FECHA'

	END

	EXEC(@QUERY)
	PRINT(@QUERY)

END



--EXEC V4MVC_INFORMES_CAPACITACIONES_DETALLE_CTTA '761264907',null,null,0,null,null,null,null



IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INFORMES_CERTIFICACION_DIVISION_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INFORMES_CERTIFICACION_DIVISION_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INFORMES_CERTIFICACION_DIVISION_SELECT]
(
@DIVCOD NVARCHAR(4)
)
AS
BEGIN

SELECT * FROM (SELECT  RUT,  EMPRESA, ACRONIMO, VALIDADO , (SELECT COUNT(MANDANTE) FROM A027_MANDANTES WHERE MANDANTE = EMPRESA AND MANDANTE <> '108') AS MANDANTE 
		FROM VW_WL_ACREDITADO 
		WHERE DIVISION = @DIVCOD
		UNION 
		SELECT  RUT,  EMPRESA, ACRONIMO, VALIDADO , (SELECT COUNT(MANDANTE) FROM A027_MANDANTES WHERE MANDANTE = EMPRESA AND MANDANTE <> '108') AS MANDANTE 
		FROM VW_WL_NOMINA 
		WHERE DIVISION = @DIVCOD
		UNION 
		SELECT  RUT,  EMPRESA, ACRONIMO, 'BL', (SELECT COUNT(MANDANTE) FROM A027_MANDANTES WHERE MANDANTE = EMPRESA AND MANDANTE <> '108') AS MANDANTE 
		FROM VW_WL_BLOQ
		WHERE DIVISION = @DIVCOD
		) PVT PIVOT ( COUNT(RUT) FOR [VALIDADO] IN ([SI],[NO],[BL]) ) AS P  ORDER BY ACRONIMO

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INSERT_LIQUIDACION_DISPUTA_FUNCIONARIOSCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INSERT_LIQUIDACION_DISPUTA_FUNCIONARIOSCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INSERT_LIQUIDACION_DISPUTA_FUNCIONARIOSCTTA]
(@RUT		    NVARCHAR(10) = NULL 
,@PERIODO		NVARCHAR(6) = NULL 
,@EMPRESA	    NVARCHAR(10) = NULL 
,@OBSERVACION	NVARCHAR(1000) = NULL
,@USUARIO	NVARCHAR(10) = NULL) AS
BEGIN

INSERT INTO LIQUIDACION_DISPUTA(RUT,  PERIODO,  EMPRESA, OBSERVACION,  USUARIO,  FECHA,                HORA,                     ID, CERTUSUARIO, CERTFECHA, CERTHORA, ESTADO, VALIDADO)
                        SELECT  RUT,  @PERIODO, EMPRESA, @OBSERVACION, @USUARIO, [dbo].[hoy](GETDATE()),[dbo].[ahora](GETDATE()),ID, CERTUSUARIO, CERTFECHA, CERTHORA, 'NO',    VALIDADO
						FROM LIQUIDACION WHERE RUT = @RUT AND FECHA = @PERIODO  AND EMPRESA = @EMPRESA

	SELECT TOP 1 ESTADO, ID_DISPUTA,OBSERVACION,OBSERVACION_REVAL 
	FROM LIQUIDACION_DISPUTA 
	WHERE RUT = @RUT AND PERIODO = @PERIODO AND EMPRESA = @EMPRESA AND ESTADO <> 'SI' ORDER BY ID_DISPUTA DESC
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INSTALACION_FAENA_SELECT_ONE_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INSTALACION_FAENA_SELECT_ONE_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INSTALACION_FAENA_SELECT_ONE_CONTRATOST_CTTA]
(
 @NROOST		NVARCHAR(14)
) AS
BEGIN
	DECLARE @NOMBRE NVARCHAR(50) = ''
	DECLARE @A_NOMBRE NVARCHAR(255) = ''
	DECLARE @A_NOMBRE_ARCHIVO NVARCHAR(255) = ''
	DECLARE @FLAG_SUBE_DOCS BIT = 0
	DECLARE @D_NOMBRE NVARCHAR(50) = ''
	DECLARE @D2_NOMBRE NVARCHAR(50) = ''
	DECLARE @D3_NOMBRE NVARCHAR(50) = ''
	DECLARE @D3_EXTS NVARCHAR(MAX) = ''
	DECLARE @D4_NOMBRE NVARCHAR(50) = ''
	DECLARE @D4_EXTS NVARCHAR(MAX) = ''

	SELECT
		TOP 1
			@NOMBRE = ISNULL(I.NOMBRE,'')
	FROM INSTALACION_FAENA I
	INNER JOIN OST O
		ON O.ID_INSTALACION_FAENA = I.ID
	WHERE ACTIVO = 'SI' AND (O.NROOST = @NROOST)

	SELECT
		TOP 1
			@A_NOMBRE = ISNULL(A.NOMBRE, 'Sin Archivo'),
			@A_NOMBRE_ARCHIVO = ISNULL(A2.NOMBRE, 'Sin Archivo')
	FROM OST O
	LEFT JOIN ARCHIVOS A
		ON O.ID_INF_RECEPCION = A.ID
	LEFT JOIN ARCHIVOS A2
		ON O.ID_FORM_RECEPCION = A2.ID
	WHERE (O.NROOST = @NROOST)

	IF(
		EXISTS(
				SELECT *
				FROM A024_DIVISIONES AD
				WHERE AD.DIVCOD IN (
								  SELECT OTD.DIVISION
								  FROM OSTDIVLOCAL OTD
								  WHERE OTD.OST = @NROOST) AND
					  AD.CONTROL_SEGURIDAD = 'SI'
		  )
		)
		BEGIN
			SET @FLAG_SUBE_DOCS = 1
		END

	SELECT
		TOP 1 
			@D_NOMBRE = D.NOMBRE
	FROM DOCS D
	WHERE D.ID_DOC = (
						SELECT TOP 1
									 V2.VALOR1
						FROM PARAMETROS_V2 V2
						WHERE V2.TITULO1 = 'DOC1'
					)
	SELECT
		TOP 1 
			@D2_NOMBRE = D2.NOMBRE
	FROM DOCS D2
	WHERE D2.ID_DOC = (
						SELECT TOP 1
									 V2.VALOR2
						FROM PARAMETROS_V2 V2
						WHERE V2.TITULO2 = 'DOC2'
					)

	SELECT
		TOP 1 
			@D3_NOMBRE = D3.NOMBRE,
			@D3_EXTS = SUBSTRING( 
									(
										SELECT ' ' + DOCS_EXT.EXTENSION
										FROM DOCS_FORMATO, DOCS_EXT
										WHERE
											(DOCS_FORMATO.ID_DOC = D3.ID_DOC) AND
											(DOCS_FORMATO.ID_DOC_EXT = DOCS_EXT.ID_DOC_EXT)
										FOR XML PATH('') 
									), 2, 9999
								 )
	FROM DOCS D3
	WHERE D3.ID_DOC = (
						SELECT TOP 1
									 V2.VALOR1
						FROM PARAMETROS_V2 V2
						WHERE V2.TITULO1 = 'DOC1'
					  )

	SELECT
		TOP 1 
			@D4_NOMBRE = D4.NOMBRE,
			@D4_EXTS = SUBSTRING( 
									(
										SELECT ' ' + DOCS_EXT.EXTENSION
										FROM DOCS_FORMATO, DOCS_EXT
										WHERE
											(DOCS_FORMATO.ID_DOC = D4.ID_DOC) AND
											(DOCS_FORMATO.ID_DOC_EXT = DOCS_EXT.ID_DOC_EXT)
										FOR XML PATH('') 
									), 2, 9999
								 )
	FROM DOCS D4
	WHERE D4.ID_DOC = (
						SELECT TOP 1
									 V2.VALOR2
						FROM PARAMETROS_V2 V2
						WHERE V2.TITULO2 = 'DOC2'
					  )


	/*-------------------------------------*/

	SELECT
		@NOMBRE AS NOMBRE,
		@A_NOMBRE AS A_NOMBRE,
		@A_NOMBRE_ARCHIVO AS A_NOMBRE_ARCHIVO,
		@FLAG_SUBE_DOCS AS FLAG_SUBE_DOCS,
		@D_NOMBRE AS D_NOMBRE,
		@D2_NOMBRE AS D2_NOMBRE,
		@D3_NOMBRE AS D3_NOMBRE,
		@D3_EXTS AS D3_EXTS,
		@D4_NOMBRE AS D4_NOMBRE,
		@D4_EXTS AS D4_EXTS

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_INSTALACION_FAENA_SELECT_ONE_V2_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_INSTALACION_FAENA_SELECT_ONE_V2_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_INSTALACION_FAENA_SELECT_ONE_V2_CONTRATOST_CTTA]
(
  @NROOST			NVARCHAR(14)
 ,@IDEMPRESA		NVARCHAR(10)
 ,@MADRE			NVARCHAR(10)
 ,@NIVEL			SMALLINT
) AS
BEGIN
	DECLARE @CANT_DOCS_PENDIENTE INT = -1
	DECLARE @NUM_SOLICITUD BIGINT = -1
	DECLARE @ESTADO_PREV NVARCHAR(2) = ''
	DECLARE @VALIDA_PREV NVARCHAR(2) = 'NO'

	DECLARE @ID_DOC NVARCHAR(500) = ''
	DECLARE @INFO_ARCHIVO NVARCHAR(500) = ''
	DECLARE @NOMBRE_ARCHIVO NVARCHAR(50) = '' 

	SELECT
		@CANT_DOCS_PENDIENTE = COUNT(DOCS_OST2.VALIDADO)
	FROM DOCS_OST2
	INNER JOIN DOCS D
	ON D.ID_DOC = DOCS_OST2.ID_DOC AND
		D.ID_DOC_OPCION = '1' AND
		D.ACTIVO = 'SI'
	WHERE
		(DOCS_OST2.OST = @NROOST) AND
		(DOCS_OST2.MADRE = @MADRE) AND
		(DOCS_OST2.EMPRESA = @IDEMPRESA) AND
		(DOCS_OST2.NIVEL = @NIVEL) AND
		(ISNULL(DOCS_OST2.VALIDADO,'NO') = 'NO')

	SELECT
		TOP 1
		@NUM_SOLICITUD = ID,
		@ESTADO_PREV = ESTADO,
		@VALIDA_PREV = 'SI'
	FROM DOCS_OST_PREVENCIONISTA
	WHERE
		OST = @NROOST AND
		MADRE = @MADRE AND
		EMPRESA = @IDEMPRESA

	SELECT
		TOP 1
		@ID_DOC = Valor2,
		@INFO_ARCHIVO = Valor3
	FROM PARAMETROS_V2
	WHERE DESCRIPCION = 'Validacion Docs Prevencionistas'

	IF(@ID_DOC IS NOT NULL  AND @ID_DOC <> '')
		BEGIN
			SELECT
				TOP 1
				@NOMBRE_ARCHIVO = NOMBRE
			FROM DOCS
			WHERE ID_DOC = CONVERT(INT, @ID_DOC)
		END

	/********************************************/


	SELECT
		ISNULL(OS.VALIDA_CARRANQUE,'NO') AS VALIDA_CARRANQUE,
		@CANT_DOCS_PENDIENTE AS CANT_DOCS_PENDIENTE,
		@NUM_SOLICITUD AS NUM_SOLICITUD,
		@ESTADO_PREV AS ESTADO_PREV,
		@VALIDA_PREV AS VALIDA_PREV,
		@ID_DOC AS ID_DOC,
		@INFO_ARCHIVO AS INFO_ARCHIVO,
		@NOMBRE_ARCHIVO AS NOMBRE_ARCHIVO
	FROM OST O
	INNER JOIN OSTARBOL OS
		ON OS.OST = O.NROOST
	WHERE
		O.NROOST = @NROOST AND 
		OS.EMPRESA = @IDEMPRESA AND
		OS.MADRE = @MADRE AND
		OS.NIVEL = @NIVEL
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LICENCIAS_SELECT_CONDUCTORES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LICENCIAS_SELECT_CONDUCTORES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LICENCIAS_SELECT_CONDUCTORES_CTTA]
(@RUT			NVARCHAR(10))AS
BEGIN

	SELECT L.LICENCIAS
		 , L.DESCRIPCION 
		 , CASE WHEN WL.LICENCIAS IS NULL THEN 'false' ELSE 'true' END AS CHECKED
	FROM LICENCIAS AS L
	LEFT JOIN WORKERS_LICENCIAS AS WL ON WL.LICENCIAS = L.LICENCIAS AND WL.RUT = @RUT
	ORDER BY L.LICENCIAS

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LINKS_VIDEOS_V4_SELECT_VISTALINKS]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LINKS_VIDEOS_V4_SELECT_VISTALINKS]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LINKS_VIDEOS_V4_SELECT_VISTALINKS]
(
  @CLAVE_VISTA  NVARCHAR(200)
)
AS
BEGIN
	SELECT
		L.ID AS ID,
		L.LINK AS LINK,
		L.ID_VIDEO AS ID_VIDEO,
		V.DESCRIPCION AS DESCRIPCION,
		V.NOMBRE_ARCHIVO AS NOMBRE_ARCHIVO,
		V.VERSION AS VERSION
	FROM LINKS_VIDEOS_V4 L
	JOIN VIDEOS V
		ON L.ID_VIDEO = CONVERT(INT, V.ID)
	WHERE L.LINK = @CLAVE_VISTA
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LIQUIDACION_DELETE_FUNCIONARIOSCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LIQUIDACION_DELETE_FUNCIONARIOSCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LIQUIDACION_DELETE_FUNCIONARIOSCTTA]
(@RUT	  NVARCHAR(10) = NULL
,@FECHA	  NVARCHAR(6) = NULL
,@EMPRESA	  NVARCHAR(10) = NULL
,@ID_DISPUTA INT = NULL
,@USUARIO NVARCHAR(10) = NULL) AS
BEGIN
DECLARE @VALIDADO VARCHAR(2)
BEGIN TRAN

		 INSERT INTO LIQUIDACION_LOG (RUT, FECHA, NOMBRE_ARCHIVO, TIPO_CONTENIDO,ARCHIVO, FECHASUBE, HORASUBE, USUARIO, VALIDADO, CERTUSUARIO, CERTFECHA, CERTHORA,IDRECHAZO, ID, IMPONIBLE, LIQUIDO, TRANSFERIDO, EMPRESA, BONOIP, BONOIS, FECHACSV, HORACSV, USUARIOCSV, USUARIODEL, FECHADEL, HORADEL)
						 SELECT TOP 1 RUT, FECHA, NOMBRE_ARCHIVO, TIPO_CONTENIDO, ARCHIVO, FECHASUBE, HORASUBE, USUARIO, VALIDADO, CERTUSUARIO, CERTFECHA, CERTHORA, IDRECHAZO, ID, IMPONIBLE, LIQUIDO, TRANSFERIDO, EMPRESA, BONOIP, BONOIS, FECHACSV, HORACSV, USUARIOCSV, @USUARIO,[dbo].[hoy](GETDATE()), [dbo].[ahora](GETDATE())
						 FROM LIQUIDACION 
						 WHERE RUT = @RUT AND FECHA = @FECHA AND EMPRESA = @EMPRESA
	IF @ID_DISPUTA<>0
	BEGIN
		 INSERT INTO LIQUIDACION_DISPUTA_LOG (ID_DISPUTA , RUT , PERIODO , EMPRESA , ID , USUARIO , FECHA , HORA , OBSERVACION , CERTUSUARIO , CERTFECHA , CERTHORA , VALIDADO , ESTADO , REVALUSUARIO , REVALFECHA , REVALHORA , OBSERVACION_REVAL, USRMOD, FECHAMOD, HORAMOD, ACCION )
									  SELECT  ID_DISPUTA , RUT , PERIODO , EMPRESA , ID , USUARIO , FECHA , HORA , OBSERVACION , CERTUSUARIO , CERTFECHA , CERTHORA , VALIDADO , ESTADO , REVALUSUARIO , REVALFECHA , REVALHORA , OBSERVACION_REVAL, @USUARIO,[dbo].[hoy](GETDATE()), [dbo].[ahora](GETDATE()), 'ELIMINADO' 
									  FROM LIQUIDACION_DISPUTA 
									  WHERE ID_DISPUTA = @ID_DISPUTA AND ESTADO = 'NO'
         DELETE LIQUIDACION_DISPUTA WHERE ID_DISPUTA = @ID_DISPUTA AND ESTADO = 'NO' 
	END


COMMIT TRAN
 SET @VALIDADO = 'SI'
TratarError:
If @@Error<>0 
BEGIN
 SET @VALIDADO = 'NO'
 ROLLBACK TRAN
END		
SELECT @VALIDADO VALIDADO

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LIQUIDACION_DISPUTA_SELECT_TOP1]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LIQUIDACION_DISPUTA_SELECT_TOP1]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LIQUIDACION_DISPUTA_SELECT_TOP1]
(@RUT		NVARCHAR(10) = NULL 
,@PERIODO		NVARCHAR(6) = NULL 
,@EMPRESA	NVARCHAR(10) = NULL ) AS
BEGIN
	SELECT TOP 1 ESTADO, ID_DISPUTA,OBSERVACION,OBSERVACION_REVAL 
	FROM LIQUIDACION_DISPUTA 
	WHERE RUT = @RUT AND PERIODO = @PERIODO AND EMPRESA = @EMPRESA AND ESTADO <> 'SI' ORDER BY ID_DISPUTA DESC
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LIQUIDACION_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LIQUIDACION_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LIQUIDACION_INSERT_CONTROLLABORAL_CTTA]
(
  @RUT						NVARCHAR(10)
 ,@PERIODO					NVARCHAR(6)
 ,@EMPRESA					NVARCHAR(10)
 ,@USUARIO					NVARCHAR(10)
 ,@IMPONIBLE				INT
 ,@LIQUIDO					INT
 ,@TRANSFERIDO				INT
 ,@BONOIP					INT
 ,@BONOIS					INT	
 ,@INCLU_F301				NVARCHAR(2)
 ,@OST						NVARCHAR(14)
 ,@RUT_PERIODO_VACIO		INT OUTPUT
 ,@PERIODO_INVALIDO			INT OUTPUT
 ,@RANGO_FECHA_INVALIDO		INT OUTPUT
 ,@RUT_INVALIDO				INT OUTPUT
 ,@REPETIDO					INT OUTPUT
 ,@RUT_ORIGINAL_ERR			NVARCHAR(10) OUTPUT
 ,@RUT_PROCESADO_ERR		NVARCHAR(10) OUTPUT
 ,@PERIODO_ERR				NVARCHAR(6) OUTPUT
) AS
BEGIN
	DECLARE @RUT_PROCESADO NVARCHAR(10)
	DECLARE @MES INT
	DECLARE @ANIO INT
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	SET @RUT_PERIODO_VACIO = 0
	SET @PERIODO_INVALIDO = 0
	SET @RANGO_FECHA_INVALIDO = 0
	SET @RUT_INVALIDO = 0
	SET @REPETIDO = 0
	
	SET @RUT_ORIGINAL_ERR = ''
	SET @RUT_PROCESADO_ERR = ''
	SET @PERIODO_ERR = ''

	EXEC @RUT_PROCESADO = [dbo].[V4MVC_RESUELVE_SOLO_RUT]
		@RUT = @RUT


	IF(@RUT_PROCESADO IS NOT NULL AND @RUT_PROCESADO <> '' AND @PERIODO IS NOT NULL AND @PERIODO <> '' )
		BEGIN
			IF(LEN(@PERIODO) = 6)
				BEGIN
					SET @MES = CONVERT(INT, SUBSTRING(@PERIODO, 5, 6))
					SET @ANIO = CONVERT(INT, SUBSTRING(@PERIODO, 1, 4))

					IF(@MES > 0 AND @MES < 13 AND @ANIO > 2000 AND @ANIO < 2100 )
						BEGIN
							IF(@RUT_PROCESADO = @RUT)
								BEGIN
									IF(NOT EXISTS(
											SELECT
												RUT
											FROM LIQUIDACION
											WHERE
												RUT = @RUT_PROCESADO AND
												FECHA = @PERIODO AND
												EMPRESA = @EMPRESA
									))
										BEGIN
											INSERT INTO LIQUIDACION
														(
															RUT,
															FECHA,
															IMPONIBLE,
															LIQUIDO,
															TRANSFERIDO,
															EMPRESA,
															BONOIP,
															BONOIS,
															FECHACSV,
															HORACSV,
															USUARIOCSV,
															VALIDADO
														)
												VALUES  (
															@RUT_PROCESADO,
															@PERIODO,
															@IMPONIBLE,
															@LIQUIDO,
															@TRANSFERIDO,
															@EMPRESA,
															@BONOIP,
															@BONOIS,
															@CURR_FECHA,
															@CURR_TIEMPOFULL,
															@USUARIO,
															'NO'
														)

											IF(@INCLU_F301 = 'SI' AND @OST <> '')
												BEGIN
													INSERT INTO A056_FORM301_LISTA
																		(
																			Empresa,
																			OST,
																			Periodo,
																			RUT
																		) 
																 VALUES (
																			@EMPRESA,
																			@OST,
																			@PERIODO,
																			@RUT_PROCESADO
																		)
												END
										END
									ELSE
										BEGIN
											SET @REPETIDO = 1
											SET @RUT_PROCESADO_ERR = @RUT_PROCESADO
											SET @PERIODO_ERR = @PERIODO
										END
								END
							ELSE
								BEGIN
									SET @RUT_INVALIDO = 1
									SET @RUT_ORIGINAL_ERR = @RUT
								END
						END
					ELSE
						BEGIN
							SET @RANGO_FECHA_INVALIDO = 1
							SET @RUT_PROCESADO_ERR = @RUT_PROCESADO
							SET @PERIODO_ERR = @PERIODO
						END
				END
			ELSE
				BEGIN
					SET @PERIODO_INVALIDO = 1
					SET @RUT_PROCESADO_ERR = @RUT_PROCESADO
					SET @PERIODO_ERR = @PERIODO
				END
		END
	ELSE
		BEGIN
			SET @RUT_PERIODO_VACIO = 1
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LIQUIDACION_INSERT_LIQUIDACIONUPLOAD]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LIQUIDACION_INSERT_LIQUIDACIONUPLOAD]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LIQUIDACION_INSERT_LIQUIDACIONUPLOAD]
(@RUT		      NVARCHAR(10) = NULL
,@FECHA		      NVARCHAR(6)  = NULL
,@NOMBRE_ARCHIVO  NVARCHAR(50) = NULL
,@TIPO_CONTENIDO  NVARCHAR(20) = NULL
,@ID		      UniqueIdentifier = NULL
,@USUARIO		  NVARCHAR(10) = NULL
,@VALIDADO		  NVARCHAR(2)  = NULL
,@EMPRESA		  NVARCHAR(10) = NULL) AS
BEGIN
	INSERT INTO LIQUIDACION (RUT, FECHA, ARCHIVO, NOMBRE_ARCHIVO, TIPO_CONTENIDO, FECHASUBE, HORASUBE, ID, USUARIO, VALIDADO, EMPRESA) 
	VALUES (@RUT, @FECHA, NULL, @NOMBRE_ARCHIVO, @TIPO_CONTENIDO, [dbo].[hoy](GETDATE()) , [dbo].[ahora](GETDATE()), @ID, @USUARIO, @VALIDADO, @EMPRESA)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LIQUIDACION_SELECT_LIQUIDACIONUPLOAD]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LIQUIDACION_SELECT_LIQUIDACIONUPLOAD]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LIQUIDACION_SELECT_LIQUIDACIONUPLOAD]
(@RUT		NVARCHAR(10) = NULL 
,@EMPRESA	NVARCHAR(10) = NULL ) AS
BEGIN
SELECT FECHA, ID, IMPONIBLE, LIQUIDO, TRANSFERIDO, VALIDADO,
       ISNULL(BONOIP,0) AS BONOIP, ISNULL(BONOIS,0) AS BONOIS,
       USUARIO, FECHASUBE, HORASUBE, CERTUSUARIO, CERTFECHA, CERTHORA 
	   FROM LIQUIDACION 
	   WHERE RUT =@RUT AND EMPRESA = @EMPRESA ORDER BY FECHA

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LIQUIDACION_UPDATE_FUNCIONARIOSCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LIQUIDACION_UPDATE_FUNCIONARIOSCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LIQUIDACION_UPDATE_FUNCIONARIOSCTTA]
(
 @RUT nvarchar(10) = NULL
,@FECHA nvarchar(6)  = NULL
,@EMPRESA nvarchar(10)  = NULL
,@IMPONIBLE int  = NULL
,@LIQUIDO int  = NULL
,@TRANSFERIDO int  = NULL
,@BONOIP int  = NULL
,@BONOIS int  = NULL
,@ID uniqueidentifier  = NULL
,@USUARIO nvarchar(10)  = NULL
,@CARGO_ARCHIVO BIT  = NULL) AS
BEGIN
DECLARE @VALIDADO VARCHAR(2)
BEGIN TRAN

		 INSERT INTO LIQUIDACION_LOG (RUT, FECHA, NOMBRE_ARCHIVO, TIPO_CONTENIDO,ARCHIVO, FECHASUBE, HORASUBE, USUARIO, VALIDADO, CERTUSUARIO, CERTFECHA, CERTHORA,IDRECHAZO, ID, IMPONIBLE, LIQUIDO, TRANSFERIDO, EMPRESA, BONOIP, BONOIS, FECHACSV, HORACSV, USUARIOCSV, USUARIODEL, FECHADEL, HORADEL)
						 SELECT TOP 1 RUT, FECHA, NOMBRE_ARCHIVO, TIPO_CONTENIDO, ARCHIVO, FECHASUBE, HORASUBE, USUARIO, VALIDADO, CERTUSUARIO, CERTFECHA, CERTHORA, IDRECHAZO, ID, IMPONIBLE, LIQUIDO, TRANSFERIDO, EMPRESA, BONOIP, BONOIS, FECHACSV, HORACSV, USUARIOCSV, @USUARIO,[dbo].[hoy](GETDATE()), [dbo].[ahora](GETDATE())
						 FROM LIQUIDACION 
						 WHERE RUT = @RUT AND FECHA = @FECHA AND EMPRESA = @EMPRESA
	IF( @CARGO_ARCHIVO=1)
	BEGIN
         UPDATE LIQUIDACION 
		 SET ID = @ID, 
		     USUARIO = @USUARIO,
			 FECHASUBE = [dbo].[hoy](GETDATE()),
			 HORASUBE =  [dbo].[ahora](GETDATE()),
			 VALIDADO = 'NO' 
			 WHERE RUT = @RUT AND FECHA = @FECHA
	END

		UPDATE LIQUIDACION 
		SET IMPONIBLE = @IMPONIBLE, 
		LIQUIDO = @LIQUIDO, 
		TRANSFERIDO = @TRANSFERIDO,
		BONOIP = @BONOIP, 
		BONOIS = @BONOIS
		WHERE RUT = @RUT AND FECHA = @FECHA AND EMPRESA = @EMPRESA

COMMIT TRAN
 SET @VALIDADO = 'SI'
TratarError:
If @@Error<>0 
BEGIN
 SET @VALIDADO = 'NO'
 ROLLBACK TRAN
END		
SELECT @VALIDADO VALIDADO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LIQUIDACION_UPSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LIQUIDACION_UPSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LIQUIDACION_UPSERT_CONTROLLABORAL_CTTA]
(
  @RUT				NVARCHAR(10)
 ,@FECHA			NVARCHAR(6)
 ,@EMPRESA			NVARCHAR(10)
 ,@USUARIO			NVARCHAR(10)
 ,@ID_ARCHIVO		UNIQUEIDENTIFIER
 ,@NOMBRE_ARCHIVO	NVARCHAR(50)
 ,@TIPO_CONTENIDO	NVARCHAR(20)
) AS
BEGIN
	DECLARE @LIQ_EXISTS BIT = 0
	DECLARE @LIQ_RUT NVARCHAR(10)
	DECLARE @LIQ_FECHA NVARCHAR(6)
	DECLARE @LIQ_NOMBRE_ARCHIVO NVARCHAR(50)
	DECLARE @LIQ_TIPO_CONTENIDO NVARCHAR(20)
	DECLARE @LIQ_ARCHIVO VARBINARY(MAX)
	DECLARE @LIQ_FECHASUBE NVARCHAR(8)
	DECLARE @LIQ_HORASUBE NVARCHAR(8)
	DECLARE @LIQ_USUARIO NVARCHAR(10)
	DECLARE @LIQ_VALIDADO NVARCHAR(2)
	DECLARE @LIQ_CERTUSUARIO NVARCHAR(10)
	DECLARE @LIQ_CERTFECHA NVARCHAR(8)
	DECLARE @LIQ_CERTHORA NVARCHAR(8)
	DECLARE @LIQ_IDRECHAZO INT
	DECLARE @LIQ_ID UNIQUEIDENTIFIER
	DECLARE @LIQ_IMPONIBLE INT
	DECLARE @LIQ_LIQUIDO INT
	DECLARE @LIQ_TRANSFERIDO INT
	DECLARE @LIQ_EMPRESA NVARCHAR(10)
	DECLARE @LIQ_BONOIP INT
	DECLARE @LIQ_BONOIS INT
	DECLARE @LIQ_FECHACSV NVARCHAR(8)
	DECLARE @LIQ_HORACSV NVARCHAR(8)
	DECLARE @LIQ_USUARIOCSV NVARCHAR(10)

	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	SELECT
		TOP 1
		@LIQ_EXISTS = 1, 
		@LIQ_RUT = RUT,
		@LIQ_FECHA = FECHA,
		@LIQ_NOMBRE_ARCHIVO = NOMBRE_ARCHIVO,
		@LIQ_TIPO_CONTENIDO = TIPO_CONTENIDO,
		@LIQ_ARCHIVO = ARCHIVO,
		@LIQ_FECHASUBE = FECHASUBE,
		@LIQ_HORASUBE = HORASUBE,
		@LIQ_USUARIO = USUARIO,
		@LIQ_VALIDADO = VALIDADO,
		@LIQ_CERTUSUARIO = CERTUSUARIO,
		@LIQ_CERTFECHA = CERTFECHA,
		@LIQ_CERTHORA = CERTHORA,
		@LIQ_IDRECHAZO = IDRECHAZO,
		@LIQ_ID = ID,
		@LIQ_IMPONIBLE = IMPONIBLE,
		@LIQ_LIQUIDO = LIQUIDO,
		@LIQ_TRANSFERIDO = TRANSFERIDO,
		@LIQ_EMPRESA = EMPRESA,
		@LIQ_BONOIP = BONOIP,
		@LIQ_BONOIS = BONOIS,
		@LIQ_FECHACSV = FECHACSV,
		@LIQ_HORACSV = HORACSV,
		@LIQ_USUARIOCSV = USUARIOCSV
	FROM LIQUIDACION
	WHERE
		RUT = @RUT AND
		FECHA = @FECHA AND
		EMPRESA = @EMPRESA

	IF(@LIQ_EXISTS = 0)
		BEGIN
			INSERT INTO LIQUIDACION
						(
							RUT,
							FECHA,
							ARCHIVO,
							NOMBRE_ARCHIVO,
							TIPO_CONTENIDO,
							FECHASUBE,
							HORASUBE,
							ID,
							USUARIO,
							VALIDADO,
							EMPRESA
						)
			VALUES		(
							@RUT,
							@FECHA,
							NULL,
							@NOMBRE_ARCHIVO,
							@TIPO_CONTENIDO,
							@CURR_FECHA,
							@CURR_TIEMPOFULL,
							@ID_ARCHIVO,
							@USUARIO,
							'NO',
							@EMPRESA
						)
		END
	ELSE
		BEGIN
			INSERT INTO LIQUIDACION_LOG
						(
							RUT,
							FECHA,
							NOMBRE_ARCHIVO,
							TIPO_CONTENIDO,
							ARCHIVO,
							FECHASUBE,
							HORASUBE,
							USUARIO,
							VALIDADO,
							CERTUSUARIO,
							CERTFECHA,
							CERTHORA,
							IDRECHAZO,
							ID,
							IMPONIBLE,
							LIQUIDO,
							TRANSFERIDO,
							EMPRESA,
							BONOIP,
							BONOIS,
							FECHACSV,
							HORACSV,
							USUARIOCSV,
							USUARIODEL,
							FECHADEL,
							HORADEL
						)
			 VALUES
						(
							@LIQ_RUT,
							@LIQ_FECHA,
							@LIQ_NOMBRE_ARCHIVO,
							@LIQ_TIPO_CONTENIDO,
							@LIQ_ARCHIVO,
							@LIQ_FECHASUBE,
							@LIQ_HORASUBE,
							@LIQ_USUARIO,
							@LIQ_VALIDADO,
							@LIQ_CERTUSUARIO,
							@LIQ_CERTFECHA,
							@LIQ_CERTHORA,
							@LIQ_IDRECHAZO,
							@LIQ_ID,
							@LIQ_IMPONIBLE,
							@LIQ_LIQUIDO,
							@LIQ_TRANSFERIDO,
							@LIQ_EMPRESA,
							@LIQ_BONOIP,
							@LIQ_BONOIS,
							@LIQ_FECHACSV,
							@LIQ_HORACSV,
							@LIQ_USUARIOCSV,
							@USUARIO,
							@CURR_FECHA,
							@CURR_TIEMPOFULL
						)

			UPDATE LIQUIDACION
			SET
				NOMBRE_ARCHIVO = @NOMBRE_ARCHIVO,
				TIPO_CONTENIDO = @TIPO_CONTENIDO,
				ID = @ID_ARCHIVO,
				USUARIO = @USUARIO,
				FECHASUBE = @CURR_FECHA,
				HORASUBE = @CURR_TIEMPOFULL,
				VALIDADO = 'NO'
			WHERE
				RUT = @RUT AND
				FECHA = @FECHA AND
				EMPRESA = @EMPRESA
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LIST_EXSICO_SELECT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LIST_EXSICO_SELECT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LIST_EXSICO_SELECT_CTTA]
AS
BEGIN

	CREATE TABLE #LISTA_EXSICO
	(
	 FECHA				NVARCHAR(8)		COLLATE DATABASE_DEFAULT NOT NULL, 
	 DIA_SEMANA			NVARCHAR(3)		COLLATE DATABASE_DEFAULT NOT NULL, 
	 CUPOS_DISPONIBLES	INT
	,OCUPADOS			INT
	,ACTIVO				NVARCHAR(2)		COLLATE DATABASE_DEFAULT NOT NULL, 
	FECHA_HOY			NVARCHAR(2)		COLLATE DATABASE_DEFAULT NOT NULL
	)

	DECLARE @DATE1				DATETIME
	DECLARE @DATE2				DATETIME
	DECLARE @DATE3				DATETIME
	DECLARE @DATE4				DATETIME
	DECLARE @DATE5				DATETIME
	DECLARE @DATE6				DATETIME
	DECLARE @CONTADOR			INT
	DECLARE @DIF_FECHAS			INT
	DECLARE @HORA_INICIO		NVARCHAR(8)
	DECLARE @HORA_FIN			NVARCHAR(8)
	DECLARE @HORAINI_COL		NVARCHAR(8)
	DECLARE @HORAFIN_COL		NVARCHAR(8)
	DECLARE @FILTRO_FECHA		NVARCHAR(8)
	DECLARE @TURNOSPORHORA		INT
	DECLARE @DATE_DIF			INT
	DECLARE @CUPOS_DISPONIBLES	INT
	DECLARE @OCUPADOS			INT

	SET @HORA_INICIO	= (SELECT HORAINI		FROM	TAB_RESERVASICO		WHERE	ACTIVO='SI')
	SET @HORA_FIN		= (SELECT HORAFIN		FROM	TAB_RESERVASICO		WHERE	ACTIVO='SI')
	SET @HORAINI_COL	= (SELECT HORAINI_COL	FROM	TAB_RESERVASICO		WHERE	ACTIVO='SI')
	SET @HORAFIN_COL	= (SELECT HORAFIN_COL	FROM	TAB_RESERVASICO		WHERE	ACTIVO='SI')
	SET @TURNOSPORHORA	= (SELECT FUNCPORHORA	FROM	TAB_RESERVASICO		WHERE	ACTIVO='SI')
	SET @DATE1			= @HORA_INICIO
	SET @DATE2			= @HORA_FIN
	SET @DATE3			= @HORAINI_COL
	SET @DATE4			= @HORAFIN_COL
	SET @DATE5			= @HORA_INICIO
	SET @DATE6			= @HORA_FIN

	SET @CONTADOR = 1
	SET @DATE1	= dbo.HOY(GETDATE())
	SET @DATE2	= (SELECT FECHALIMITE FROM TAB_RESERVASICO WHERE ACTIVO='SI')

	SET @DIF_FECHAS = (SELECT (DATEDIFF(DAY,@DATE1,@DATE2)))
	SET @CUPOS_DISPONIBLES =  ((SELECT (CAST((@DATE5 - @DATE6) AS FLOAT) * -24.0) - (CAST((@DATE3 - @DATE4) AS FLOAT) * -24.0)) * @TURNOSPORHORA )

	WHILE (@CONTADOR <= @DIF_FECHAS + 1)
	BEGIN
	
		SET @FILTRO_FECHA	= ((CONVERT(VARCHAR(8),@DATE1,112)))
		SET @OCUPADOS		= (SELECT COUNT(ID) FROM RESERVAS_EXSICO WHERE FECHARES = @FILTRO_FECHA)
		SET @CONTADOR		= @CONTADOR + 1

		INSERT INTO #LISTA_EXSICO VALUES ((CONVERT(VARCHAR(8),@DATE1,112)),(SELECT SUBSTRING(UPPER(DATENAME(DW, @DATE1)),1,3)),@CUPOS_DISPONIBLES,@OCUPADOS,'SI','NO')

		SET @DATE1 = DATEADD(DAY, 1, @DATE1)  

		IF((SELECT LUN FROM TAB_RESERVASICO WHERE ACTIVO='SI' AND LUN ='NO') = 'NO')
		BEGIN
			UPDATE #LISTA_EXSICO
			SET ACTIVO='NO'
			WHERE DIA_SEMANA='LUN' COLLATE Modern_Spanish_CI_AI
		END

		IF((SELECT MAR FROM TAB_RESERVASICO WHERE ACTIVO='SI' AND MAR ='NO') = 'NO')
		BEGIN
			UPDATE #LISTA_EXSICO
			SET ACTIVO='NO'
			WHERE DIA_SEMANA='MAR' COLLATE Modern_Spanish_CI_AI
		END

		IF((SELECT MIE FROM TAB_RESERVASICO WHERE ACTIVO='SI' AND MIE ='NO') = 'NO')
		BEGIN
			UPDATE #LISTA_EXSICO
			SET ACTIVO='NO'
			WHERE DIA_SEMANA='MIE' COLLATE Modern_Spanish_CI_AI
		END

		IF((SELECT JUE FROM TAB_RESERVASICO WHERE ACTIVO='SI' AND JUE ='NO') = 'NO')
		BEGIN
			UPDATE #LISTA_EXSICO
			SET ACTIVO='NO'
			WHERE DIA_SEMANA='JUE' COLLATE Modern_Spanish_CI_AI
		END

		IF((SELECT VIE FROM TAB_RESERVASICO WHERE ACTIVO='SI' AND VIE ='NO') = 'NO')
		BEGIN
			UPDATE #LISTA_EXSICO
			SET ACTIVO='NO'
			WHERE DIA_SEMANA='VIE' COLLATE Modern_Spanish_CI_AI
		END

		IF((SELECT SAB FROM TAB_RESERVASICO WHERE ACTIVO='SI' AND SAB ='NO') = 'NO')
		BEGIN
			UPDATE #LISTA_EXSICO
			SET ACTIVO='NO'
			WHERE DIA_SEMANA='SAB' COLLATE Modern_Spanish_CI_AI
		END

		IF((SELECT DOM FROM TAB_RESERVASICO WHERE ACTIVO='SI' AND DOM ='NO') = 'NO')
		BEGIN
			UPDATE #LISTA_EXSICO
			SET ACTIVO='NO'
			WHERE DIA_SEMANA='DOM' COLLATE Modern_Spanish_CI_AI
		END

	END

	UPDATE #LISTA_EXSICO
	SET FECHA_HOY='SI'
	WHERE FECHA <= dbo.HOY(GETDATE())

	SELECT FECHA AS FECHARES,CUPOS_DISPONIBLES,OCUPADOS,ACTIVO,FECHA_HOY FROM #LISTA_EXSICO
	WHERE ACTIVO='SI'

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOCAL_DIVISION_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOCAL_DIVISION_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOCAL_DIVISION_CTTA]
(
 @DIVISION NVARCHAR(20)
)
AS
BEGIN

	SELECT			L.LOCAL		,D.DIVISION		,D.DIVCOD 
	FROM			LOCAL AS L 
	INNER JOIN		A024_DIVISIONES AS D ON L.DIVISION = D.DIVCOD
	WHERE			(L.LOCALL = 'CASINO') 
	AND				(L.LOCAL <> 'TODOS') 
	AND				D.DIVCOD = @DIVISION
	ORDER BY D.DIVCOD, L.LOCAL

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOCAL_SELECT_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOCAL_SELECT_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOCAL_SELECT_PASES_CTTA]
(
  @DIVCOD  NVARCHAR(20)
) AS
BEGIN
	SELECT
		L.LOCAL,
		L.EMPRESAL,
		L.DETALLE,
		L.LOCALL,
		L.DIVISION,
		L.MANDANTE,
		L.ACTIVO,
		L.P_ACCESO,
		L.FECHAMOD,
		L.HORAMOD,
		0 AS CHECKED,
		0 AS DISABLED
	FROM LOCAL L
	WHERE
		(L.LOCALL = 'ACCESO') AND
		(L.ACTIVO = 'SI') AND
		(L.DIVISION = @DIVCOD)
	ORDER BY L.LOCAL
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOCALS_BY_DIVCOD_INFORME]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOCALS_BY_DIVCOD_INFORME]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOCALS_BY_DIVCOD_INFORME]
(
@DIVCOD  NVARCHAR(20),
@LOCALL  NVARCHAR(10)
) AS
BEGIN
	SELECT  L.LOCAL, D.DIVISION,  D.DIVCOD 
	FROM LOCAL AS L INNER JOIN A024_DIVISIONES AS D ON L.DIVISION = D.DIVCOD 
	WHERE     (L.LOCALL = @LOCALL) AND 
	(L.LOCAL <> 'TODOS') AND
	(D.DIVCOD = @DIVCOD)
	ORDER BY D.DIVCOD, L.LOCAL
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOG_CERT_AUDITORIA_SELECT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOG_CERT_AUDITORIA_SELECT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOG_CERT_AUDITORIA_SELECT_CTTA]    
(    
@ID_CERT_AUDITORIA INT    
)    
AS    
BEGIN    

	SELECT  T1.ID_CERT_AUDITORIA			,T2.NOMBRE				,T1.IDEMPRESA			,T1.PERIODO    
			,T1.FECHA						,T1.TIPO_AUDITORIA		,T1.CANT_PERSONAS		,T2.ID    
			,T1.PORCENTAJE_APROBACION		,T1.VALIDADO			,T3.DIVISION			,T1.NCONTRATO    
			,T1.COD_INTERNO_CERT			,T1.OBSERVACION			,T1.USUARIO				,T1.FECHASUBE     
			,T1.HORASUBE					,T1.CERTUSUARIO			,T1.CERTFECHA			,T1.CERTHORA          
			,T1.ACCION						,T1.USUARIOMOD			,T1.FECHAMOD			,(SELECT NOMBRES+' '+APELLIDOS FROM WORKERS WHERE RUT=T1.USUARIO) AS USER_ADD  
			,(SELECT NOMBRES+' '+APELLIDOS FROM WORKERS WHERE RUT=T1.USUARIOMOD) AS USER_MOD  
	FROM LOG_CERT_AUDITORIA T1    
	LEFT JOIN ARCHIVOS T2 ON T2.ID = T1.ID     
	INNER JOIN A024_DIVISIONES T3 ON T3.DIVCOD = T1.DIVISION     
	WHERE ID_CERT_AUDITORIA = @ID_CERT_AUDITORIA 
	ORDER BY T1.FECHAMOD DESC, T1.HORAMOD DESC

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOG_DOCS_OST2_SELECT_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOG_DOCS_OST2_SELECT_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOG_DOCS_OST2_SELECT_CONTRATOST_CTTA]
(
 @NROOST	NVARCHAR(50),
 @MADRE		NVARCHAR(10),
 @IDEMPRESA NVARCHAR(10),
 @NIVEL		SMALLINT,
 @ID_DOC	SMALLINT
) AS
BEGIN
	SELECT
		SS.VALIDADO,
		SS.IDVAL,
		SS.ARCHIVOVAL,
		SS.DOC,
		SS.CERTUSUARIO,
		(CASE
			WHEN SS.CERTUSUARIO IS NOT NULL THEN (
													COALESCE(
														(
															SELECT
																CONCAT(W.NOMBRES, ' ', W.APELLIDOS)
															FROM WORKERS W
															WHERE W.RUT = SS.CERTUSUARIO
														), ''
													)
			)
			ELSE '' END
		) AS VALIDADOR_FNOMBRES,
		SS.OBSFASE1,
		SS.ARCHIVO_FASE1,
		SS.IDARCHIVO_FASE1,
		SS.FECHAFASE_1,
		SS.HORAFASE_1,
		SS.FASE
	FROM
	(
		SELECT
			L.VALIDADO_ADMINOST AS VALIDADO,
			A2.ID AS IDVAL,
			A2.NOMBRE AS ARCHIVOVAL,
			D.NOMBRE AS DOC,
			L.CERTUSUARIO_ADMINOST AS CERTUSUARIO,
			L.OBS_RE_ADMINOST AS OBSFASE1,
			A.NOMBRE AS ARCHIVO_FASE1,
			A.ID AS IDARCHIVO_FASE1,
			L.CERTFECHA_ADMINOST AS FECHAFASE_1,
			L.CERTHORA_ADMINOST AS HORAFASE_1,
			'FASE 1' AS FASE
		FROM LOG_DOCS_OST2 L
		INNER JOIN DOCS D
			ON D.ID_DOC = L.ID_DOC
		INNER JOIN ARCHIVOS A2
			ON A2.ID = L.ID_ARCHIVO
		LEFT JOIN ARCHIVOS A
			ON A.ID = L.IDARCH_RE_ADMIN
		WHERE
			(L.OST = @NROOST) AND
			(L.MADRE = @MADRE) AND
			(L.EMPRESA = @IDEMPRESA) AND
			(L.NIVEL = @NIVEL) AND
			(L.ID_DOC = @ID_DOC) AND
			(L.VALIDADO_ADMINOST IN ('SI','RE'))
		UNION
		SELECT
			L.VALIDADO,
			A2.ID AS IDVAL,
			A2.NOMBRE AS ARCHIVOVAL,
			D.NOMBRE AS DOC,
			L.CERTUSUARIO AS CERTUSUARIO,
			L.OBS_RE_VALIDADOR AS OBSFASE1,
			A.NOMBRE AS ARCHIVO_FASE1,
			A.ID AS IDARCHIVO_FASE1,
			L.CERTFECHA AS FECHAFASE_1,
			L.CERTHORA AS HORAFASE_1,
			'FASE 2' AS FASE
		FROM LOG_DOCS_OST2 L
		INNER JOIN DOCS D
			ON D.ID_DOC = L.ID_DOC
		INNER JOIN ARCHIVOS A2
			ON A2.ID = L.ID_ARCHIVO
		LEFT JOIN ARCHIVOS A
			ON A.ID = L.IDARCH_RE_VALIDADOR
		WHERE
			(L.OST = @NROOST) AND
			(L.MADRE = @MADRE) AND
			(L.EMPRESA = @IDEMPRESA) AND
			(L.NIVEL = @NIVEL) AND
			(L.ID_DOC = @ID_DOC) AND
			(L.VALIDADO IN ('SI','RE'))
		ORDER BY FECHAFASE_1 DESC, HORAFASE_1 DESC
		OFFSET 0 ROWS
	) SS

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASES_INSERT_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASES_INSERT_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASES_INSERT_PASES_CTTA]
(
  @INS_OST		NVARCHAR(14)
 ,@INS_EMP		NVARCHAR(10)
 ,@INS_DIVCOD	NVARCHAR(2)
 ,@INS_FINICIO	NVARCHAR(8)
 ,@INS_FFINAL	NVARCHAR(8)
 ,@INS_TPASE	NVARCHAR(9) = ''
 ,@INS_DESCRIP	NVARCHAR(50)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@USUARIO		NVARCHAR(10)
 ,@NEW_ID		INT OUTPUT
) AS
BEGIN

	DECLARE @ADMEMAIL NVARCHAR(50) = ''
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @ACRONIMO NVARCHAR(50) = ''

	SET @NEW_ID = -1

	SELECT
	   TOP 1
	   @ADMEMAIL = A.ADMEMAIL
	FROM OSTDIVLOCAL OA, ADMIN A
	WHERE
		OA.OST = @INS_OST AND
		OA.DIVISION = @INS_DIVCOD AND
		A.ADMRUT = OA.ADMINOST

	INSERT INTO LOTEPASES
		(
		  LOTEFECHA, LOTEESTADO, LOTEFINICIO, LOTEFFINAL, LOTEEMPRESA,
		  LOTEEMAIL, LOTEGLOSA, LOTEEMPMADRE, DIVISION, LOTEUSUARIO)
	VALUES
	   (
	      @CURR_FECHA, 'NO', @INS_FINICIO, @INS_FFINAL, @IDEMPRESA,
		  @ADMEMAIL, @INS_DESCRIP, @IDEMPRESA, @INS_DIVCOD, @USUARIO)

	SET @NEW_ID = SCOPE_IDENTITY()

	IF(@INS_TPASE = '')
		BEGIN
			SET @INS_TPASE = 'TRABAJO'
		END

	SELECT
		TOP 1
		@ACRONIMO = ACRONIMO
	FROM  ENTERPRISE
	WHERE IDEMPRESA = @INS_EMP

	INSERT INTO LOTEPASESFUN
		(
		  NLOTEPROC, RUTLOTE, TIPORUT, APELLIDOSLT,
		  NOMBRESLT, TIPOLT, FNACIMLT, OSTLT)
		VALUES
		(
		  @NEW_ID, @INS_EMP, 'EMPRESA', @ACRONIMO, @ACRONIMO,
		  @INS_TPASE, @CURR_FECHA, @INS_OST)

	UPDATE LOTEPASESFUN
	SET
		EMPRESALT = @INS_EMP
	WHERE
		NLOTEPROC = @NEW_ID AND
		(EMPRESALT NOT IN (
							SELECT
								RUTLOTE
							FROM LOTEPASESFUN
							WHERE NLOTEPROC = @NEW_ID AND TIPORUT = 'EMPRESA'
						  ))
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASES_SELECT_ONE_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASES_SELECT_ONE_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASES_SELECT_ONE_PASES_CTTA]
(
  @LOTENUM	INT = NULL
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @NOMBRES NVARCHAR(50) = ''
	DECLARE @APELLIDOS NVARCHAR(50) = ''
	DECLARE @WNOM NVARCHAR(100) = ''
	DECLARE @WOST NVARCHAR(20) = ''
	DECLARE @WEMAIL NVARCHAR(50) = ''
	DECLARE @WADMIN NVARCHAR(10) = ''
	DECLARE @QUERY_AUT_EXISTS BIT = 0


	SELECT
		DISTINCT
			@QUERY_AUT_EXISTS = 1,
			@WOST = LPF.OSTLT,
			@WEMAIL = L.LOTEEMAIL,
			@NOMBRES = W.NOMBRES,
			@APELLIDOS = W.APELLIDOS,
			@WADMIN = A.ADMRUT
		FROM LOTEPASES L
		INNER JOIN A024_DIVISIONES D
			ON L.DIVISION = D.DIVCOD, LOTEPASESFUN AS LPF, OST AS O
		INNER JOIN OSTDIVLOCAL AS OA
			ON O.NROOST = OA.OST, ADMIN AS A
		INNER JOIN WORKERS W
			ON A.ADMRUT = W.RUT
		WHERE
			L.LOTENUM = @LOTENUM AND
			L.LOTENUM = LPF.NLOTEPROC AND
			L.LOTEEMAIL = A.ADMEMAIL AND
			LPF.OSTLT = O.NROOST AND
			O.FECTERM >= @CURR_FECHA AND
			OA.ACTIVO = 'SI'

		IF(@QUERY_AUT_EXISTS = 1)
			BEGIN
				SET @WNOM = CONCAT(@NOMBRES, ' ', @APELLIDOS)
			END

	SELECT
			SS.LOTENUM,
			SS.LOTEFECHA,
			SS.LOTEESTADO,
			SS.LOTEFINICIO,
			SS.LOTEFFINAL,
			SS.LOTEGLOSA,
			SS.DIVCOD,
			SS.DIVISION,
			SS.OSTLT,
			SS.LOTEEMAIL,
			SS.ADMRUT,
			SS.NOMBRES,
			SS.APELLIDOS,
			SS.FECINICIO,
			SS.FECTERM,
			SS.DESCRIPOST,
			SS.RUTLOTE,
			SS.NOMBRESLT,
			SS.TIPOLT,
			SS.TIPO_PASE,
			SS.ACRONIMO,
			SS.DESC_ESTADO,
			(
			  CASE
				WHEN @QUERY_AUT_EXISTS = 1 THEN @WOST
				ELSE SS.OSTLT END
			) AS W_OST,
			(
			  CASE
				WHEN @QUERY_AUT_EXISTS = 1 THEN @WNOM
				ELSE CONCAT(SS.NOMBRES, ' ', SS.APELLIDOS) END
			) AS W_NOMBRES,
			(
			  CASE
				WHEN @QUERY_AUT_EXISTS = 1 THEN @WEMAIL
				ELSE SS.LOTEEMAIL END
			) AS W_EMAIL,
			(
			  CASE
				WHEN @QUERY_AUT_EXISTS = 1 THEN @WADMIN
				ELSE SS.ADMRUT END
			) AS W_ADMIN,

			(SELECT COUNT(TIPORUT) FROM LOTEPASESFUN WHERE NLOTEPROC = @LOTENUM AND TIPORUT = 'FUNCIONARIO') AS FUN,
			(SELECT COUNT(TIPORUT) FROM LOTEPASESFUN WHERE NLOTEPROC = @LOTENUM AND TIPORUT = 'EMPRESA') AS EMP,
			(SELECT COUNT(TIPORUT) FROM LOTEPASESFUN WHERE NLOTEPROC = @LOTENUM AND TIPORUT = 'VEHICULO') AS VEH,
			(SELECT COUNT(TIPORUT) FROM LOTEPASESFUN WHERE NLOTEPROC = @LOTENUM) AS TOD
	FROM
	(
		SELECT
			DISTINCT
			L.LOTENUM,
			L.LOTEFECHA,
			L.LOTEESTADO,
			L.LOTEFINICIO,
			L.LOTEFFINAL,
			L.LOTEGLOSA,
			D.DIVCOD,
			D.DIVISION,
			LPF.OSTLT,
			L.LOTEEMAIL,
			A.ADMRUT,
			W.NOMBRES,
			W.APELLIDOS,
			O.FECINICIO,
			O.FECTERM,
			O.DESCRIPOST,
			LPF1.RUTLOTE,
			LPF1.NOMBRESLT,
			LPF1.TIPOLT,
			COALESCE(
				(
					SELECT TOP 1 LPF.TIPOLT
					FROM LOTEPASESFUN LPF
					WHERE (LPF.NLOTEPROC = L.LOTENUM) AND (LPF.TIPORUT = 'EMPRESA')
				), ''
			) AS TIPO_PASE,
			COALESCE(
				(
					SELECT TOP 1 LPF2.NOMBRESLT
					FROM LOTEPASESFUN LPF2
					WHERE (LPF2.NLOTEPROC = L.LOTENUM) AND (LPF2.TIPORUT = 'EMPRESA')
				), ''
			) AS ACRONIMO,
			COALESCE(
				(
					SELECT TOP 1 TEP.DESC_ESTADO
					FROM TAB_ESTADO_PASE TEP
					WHERE TEP.ESTADO_PASE = L.LOTEESTADO
				), L.LOTEESTADO
			) AS DESC_ESTADO

		FROM LOTEPASES L 
		INNER JOIN (SELECT RUTLOTE, NOMBRESLT, TIPOLT,NLOTEPROC FROM LOTEPASESFUN WHERE TIPORUT = 'EMPRESA') LPF1
			ON LPF1.NLOTEPROC = L.LOTENUM
		INNER JOIN A024_DIVISIONES D
			ON L.DIVISION = D.DIVCOD , LOTEPASESFUN AS LPF, OST AS O, ADMIN AS A 
		INNER JOIN WORKERS W
			ON A.ADMRUT = W.RUT  
		WHERE
			L.LOTENUM = @LOTENUM AND 
			L.LOTENUM = LPF.NLOTEPROC AND 
			L.LOTEEMAIL = A.ADMEMAIL AND 
			LPF.OSTLT = O.NROOST
	) SS
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASES_SELECT_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASES_SELECT_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASES_SELECT_PASES_CTTA]
(
   @IDEMPRESA      NVARCHAR(11) = NULL 
  ,@ACTUAL		   BIT = NULL
) AS
BEGIN
	IF @ACTUAL = 1
		BEGIN
			SELECT
				LP.LOTEFFINAL,
				LP.LOTEFINICIO,
				LP.LOTENUM,
				LP.LOTEESTADO,
				LP.LOTEEMAIL,
				LP.LOTEGLOSA,
				LP.LOTEEMPRESA,
				D.DIVISION,
				D.DIVCOD,
				COALESCE(
							(
							  SELECT TOP 1 TIPOLT
							  FROM LOTEPASESFUN
							  WHERE (NLOTEPROC = LP.LOTENUM) AND (TIPORUT = 'EMPRESA')
							 ),
						'') AS TPASE,
				(SELECT COUNT(RUTLOTE) AS CUENTA FROM LOTEPASESFUN WHERE TIPORUT = 'FUNCIONARIO' AND NLOTEPROC = LOTENUM) AS NUMFUNCIONARIOS,
				(SELECT COUNT(RUTLOTE) AS CUENTA FROM LOTEPASESFUN WHERE TIPORUT = 'VEHICULO' AND NLOTEPROC = LOTENUM) AS NUMVEHICULOS
			FROM LOTEPASES AS LP,  A024_DIVISIONES AS D 
			WHERE
				D.DIVCOD = LP.DIVISION AND  
				LP.LOTEEMPRESA = @IDEMPRESA AND 
				SUBSTRING(LP.LOTEFINICIO,1,6) = SUBSTRING([dbo].[hoy](GETDATE()),1,6) 
		END
	ELSE
		BEGIN
			SELECT
				LP.LOTEFFINAL,
				LP.LOTEFINICIO,
				LP.LOTENUM,
				LP.LOTEESTADO,
				LP.LOTEEMAIL,
				LP.LOTEGLOSA,
				LP.LOTEEMPRESA,
				D.DIVISION,
				D.DIVCOD,
				COALESCE(
							(
							  SELECT TOP 1 TIPOLT
							  FROM LOTEPASESFUN
							  WHERE (NLOTEPROC = LP.LOTENUM) AND (TIPORUT = 'EMPRESA')
							 ),
						 '') AS TPASE,
				(SELECT COUNT(RUTLOTE) AS CUENTA FROM LOTEPASESFUN WHERE TIPORUT = 'FUNCIONARIO' AND NLOTEPROC = LOTENUM) AS NUMFUNCIONARIOS,
				(SELECT COUNT(RUTLOTE) AS CUENTA FROM LOTEPASESFUN WHERE TIPORUT = 'VEHICULO' AND NLOTEPROC = LOTENUM) AS NUMVEHICULOS 
			FROM LOTEPASES AS LP,  A024_DIVISIONES AS D 
			WHERE
				D.DIVCOD = LP.DIVISION AND  
				LP.LOTEEMPRESA = @IDEMPRESA AND 
				SUBSTRING(LP.LOTEFINICIO,1,6) <> SUBSTRING([dbo].[hoy](GETDATE()),1,6)
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASES_UPDATE_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASES_UPDATE_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASES_UPDATE_PASES_CTTA]
(
  @LOTENUM					INT /*ID_PASE*/
 ,@IDEMPRESA				NVARCHAR(10)
 ,@EMAIL_AUT				NVARCHAR(50)
 ,@RUT_AUT					NVARCHAR(10)
 ,@ACTIVADO_DELEGADOS_OST	INT
 ,@RET_OK					INT OUTPUT
 ,@JSON_RET					NVARCHAR(MAX) OUTPUT
) AS
BEGIN
	DECLARE @LOTEFECHA NVARCHAR(8) = ''
	DECLARE @LOTEFINICIO NVARCHAR(8) = ''
	DECLARE @LOTEFFINAL NVARCHAR(8) = ''
	DECLARE @LOTEGLOSA NVARCHAR(50) = ''
	DECLARE @LOTEEMAIL NVARCHAR(50) = ''
	DECLARE @DIVISION NVARCHAR(2) = ''
	DECLARE @ENOMBRES NVARCHAR(50) = ''
	DECLARE @EAPELLIDOS NVARCHAR(50) = ''
	DECLARE @EFULL_NOMBRES NVARCHAR(100) = ''
	DECLARE @EMP_RUT_FRMT	NVARCHAR(20) = ''
	DECLARE @ADMEMAIL NVARCHAR(50) = ''
	DECLARE @OTHER_EMAILS NVARCHAR(MAX) = ''
	DECLARE @QUERY_EXISTS BIT = 0
	DECLARE @get_admin CURSOR
	DECLARE @SEP NVARCHAR(2) = ''
	DECLARE @EMP_NOMBRE NVARCHAR(50) = ''
	DECLARE @EMP_ACRONIMO NVARCHAR(50) = ''
	DECLARE @FEC_USER NVARCHAR(20) = ''
	DECLARE @EMAIL NVARCHAR(50) = ''

	SET @RET_OK = 0
	SET @JSON_RET = ''

	SELECT
		@QUERY_EXISTS = 1,
		@LOTEFECHA = LOTEFECHA,
		@LOTEFINICIO = LOTEFINICIO,
		@LOTEFFINAL = LOTEFFINAL,
		@LOTEGLOSA = LOTEGLOSA,
		@LOTEEMAIL = LOTEEMAIL,
		@DIVISION = DIVISION
	FROM LOTEPASES
	WHERE
		(LOTENUM =  @LOTENUM) AND
		(LOTEEMPRESA = @IDEMPRESA)
	IF(@QUERY_EXISTS = 1)
		BEGIN
			UPDATE LOTEPASES
			SET
				LOTEEMAIL = @LOTEEMAIL,
				LOTEESTADO = 'PE'
			WHERE LOTENUM = @LOTENUM

			SET @QUERY_EXISTS = 0

			SELECT
				@QUERY_EXISTS = 1,
				@ENOMBRES = W.NOMBRES,
				@EAPELLIDOS = W.APELLIDOS
			FROM WORKERS AS W,
				 ADMIN AS A
			WHERE
				(A.ADMEMAIL = @EMAIL_AUT) AND
				(A.ADMRUT = @RUT_AUT) AND
				W.RUT = A.ADMRUT

			IF(@QUERY_EXISTS = 1)
				BEGIN
					SET @EFULL_NOMBRES = CONCAT(@ENOMBRES, ' ', @EAPELLIDOS)
				END

			IF(@DIVISION = 'QV')
				BEGIN
					SET @EMAIL = 'opaquellaveco@angloamerican.com'
				END
			ELSE
				BEGIN
					SET @EMAIL = @LOTEEMAIL
				END

			SELECT
				@EMP_NOMBRE = E.NOMBRE,
				@EMP_ACRONIMO = E.ACRONIMO
			FROM ENTERPRISE E
			WHERE E.IDEMPRESA = @IDEMPRESA
			
			EXEC @EMP_RUT_FRMT = [dbo].[V4MVC_FSTR_RUT] @RAW_RUT = @IDEMPRESA
			

			IF(@ACTIVADO_DELEGADOS_OST = 1)
				BEGIN
					SET @get_admin = CURSOR FOR
					SELECT
						DISTINCT A.ADMEMAIL
					FROM OSTADMIN OA, ADMIN A, LOTEPASESFUN LPF
					WHERE
						OA.NROOST = LPF.OSTLT AND
						OA.ADMDELEG = A.ADMRUT AND
						LPF.NLOTEPROC = @LOTENUM AND
						OA.DIVISION = @DIVISION

					OPEN @get_admin
					FETCH NEXT
					FROM @get_admin INTO @ADMEMAIL

					SET @SEP = ''

					WHILE @@FETCH_STATUS = 0
						BEGIN
							SET @OTHER_EMAILS = CONCAT(@OTHER_EMAILS, @SEP, '''', @ADMEMAIL,  '''')
							FETCH NEXT
							FROM @get_admin INTO @ADMEMAIL

							SET @SEP = ','
						END
			
					CLOSE @get_admin
					DEALLOCATE @get_admin

					SET @OTHER_EMAILS = CONCAT('[', @OTHER_EMAILS, ']')

				END
			ELSE
				BEGIN
					SET @OTHER_EMAILS = '[]'
				END

			SET @RET_OK = 1

			SET @JSON_RET = '{'
			SET @JSON_RET = CONCAT(@JSON_RET, '''BODY_FULLNOM_AUT'':', '''', @EFULL_NOMBRES, '''')
			SET @JSON_RET = CONCAT(@JSON_RET, ',''BODY_NRO_PASE'':', CONVERT(NVARCHAR(20), @LOTENUM))
			SET @JSON_RET = CONCAT(@JSON_RET, ',''BODY_EMP_RUT_FRMT'':', '''', @EMP_RUT_FRMT, '''')
			SET @JSON_RET = CONCAT(@JSON_RET, ',''BODY_EMP_NOM'':', '''', @EMP_NOMBRE, '''')
			SET @JSON_RET = CONCAT(@JSON_RET, ',''BODY_EMP_ACRONIMO'':', '''', @EMP_ACRONIMO, '''')
			SET @JSON_RET = CONCAT(@JSON_RET, ',''BODY_LOTEEMAIL'':', '''', @LOTEEMAIL, '''')

			SET @JSON_RET = CONCAT(@JSON_RET, ',''FIRSTEMAIL_MAIL'':', '''', @EMAIL, '''')
			SET @JSON_RET = CONCAT(@JSON_RET, ',''NRO_PASE'':', CONVERT(NVARCHAR(20), @LOTENUM))
			SET @JSON_RET = CONCAT(@JSON_RET, ',''LOTEEMAIL'':', '''', @EMAIL, '''')
			SET @JSON_RET = CONCAT(@JSON_RET, ',''DELEGADOS_MAILS'':', @OTHER_EMAILS)

			SET @JSON_RET = CONCAT(@JSON_RET, '}')
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_DELETE_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_DELETE_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_DELETE_PASES_CTTA]
( 
  @PASE_ID		INT
 ,@RUT			NVARCHAR(10)
) AS 
BEGIN
	DELETE
	FROM LOTEPASESFUN
	WHERE
		NLOTEPROC = @PASE_ID AND
		RUTLOTE = @RUT AND
		TIPORUT = 'FUNCIONARIO'
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_DELETE_V2_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_DELETE_V2_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_DELETE_V2_PASES_CTTA]
( 
  @PASE_ID			INT
 ,@PATENTE			NVARCHAR(10)
) AS 
BEGIN
	DELETE
	FROM LOTEPASESFUN
	WHERE
		NLOTEPROC = @PASE_ID AND
		RUTLOTE = @PATENTE AND
		TIPORUT = 'VEHICULO'
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_SELECT_CONDUCCIONPASE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_CONDUCCIONPASE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_CONDUCCIONPASE]
( @RUT				nvarchar(10) = NULL
, @DIVCOD			nvarchar(30) = NULL
) AS 
BEGIN
	SELECT APELLIDOSLT,NOMBRESLT , EMPRESALT ,RUTLOTE , E.ACRONIMO , @DIVCOD AS DIVCOD
	FROM LOTEPASESFUN  AS LPF
	INNER JOIN ENTERPRISE AS E ON E.IDEMPRESA = LPF.EMPRESALT
	WHERE RUTLOTE = @RUT AND  
	NLOTEPROC IN (SELECT LOTE 
				 FROM WORKERSLOCAL 
				 WHERE (RUT = @RUT) AND 
				 (DIVISION = @DIVCOD) AND 
				 (FFINPASE >= DBO.HOY(GETDATE())) AND 
				 (AUTOR IN ('SI','NO')))			 
	ORDER BY NLOTEPROC
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_SELECT_DATOSPASE_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_DATOSPASE_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_DATOSPASE_INFORMECONSULTARAPIDA_CTTA]
(
  @NLOTEPROC INT 
) AS 
BEGIN

SELECT TOP 1	  L.LOTENUM					, L.DIVISION		, LF.OSTLT			, LF.APELLIDOSLT
				, LF.RUTLOTE AS IDEMPRESA	, A.ADMRUT			, LF.TIPOLT			, L.LOTEFINICIO
				, L.LOTEFFINAL				, L.LOTEESTADO		, L.LOTERUTPROCESO	, L.LOTEFECPROCESO
				, L.LOTEHORPROCESO			, L.LOTEFECHA		, L.LOTEUSUARIO     , (SELECT NOMBRES+' '+APELLIDOS FROM WORKERS WHERE RUT = A.ADMRUT) as ADMINISTRADOR
				, (select DESC_ESTADO FROM TAB_ESTADO_PASE WHERE ESTADO_PASE =L.LOTEESTADO) AS ESTADO_LOTE
FROM LOTEPASES AS L, LOTEPASESFUN AS LF, ADMIN AS A 
WHERE L.LOTENUM = LF.NLOTEPROC   AND (L.LOTENUM = @NLOTEPROC)
ORDER BY TIPORUT

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_SELECT_FUNCIONARIO_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_FUNCIONARIO_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_FUNCIONARIO_INFORMECONSULTARAPIDA_CTTA]
(
  @NLOTEPROC INT 
) AS 
BEGIN

SELECT RUTLOTE		, NOMBRESLT			, APELLIDOSLT	, SINOLT
     , EMPRESALT	, ALOJAMIENTOLT		, CASINOLT		, LICONDLT
	 , [dbo].[fn_WL_Certificado] (RUTLOTE, EMPRESALT , TIPOLT, 'CH', dbo.hoy(getdate())) AS CERT
	 , [dbo].[fn_WL_Conductor] (RUTLOTE, 'CH',  dbo.hoy(getdate())) AS CONDUC 
	 FROM LOTEPASESFUN 
	 WHERE NLOTEPROC = @NLOTEPROC AND TIPORUT = 'FUNCIONARIO' 
	 ORDER BY RUTLOTE ASC

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_SELECT_ONE_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_ONE_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_ONE_PASES_CTTA]
(
  @OST			    NVARCHAR(10)
 ,@TIPO             INT
 ,@CONT_DOTACION	INT
 ,@LOTENUM			INT
 ,@FEC_INI			NVARCHAR(8)
 ,@FEC_FIN			NVARCHAR(8)
 ,@RET				BIT OUTPUT
) AS 
BEGIN
	DECLARE @DOTALOJA INT = 0
	DECLARE @OST_EXISTS BIT = 0
	DECLARE @DOTACION_ESPO_ACCESO INT = -1
	DECLARE @DOTACION_PERM_ACCESO INT = -1
	DECLARE @DOTACION_ESPO_ACCESO_MESES INT = -1
	DECLARE @CODIGO NVARCHAR(20) = ''
	DECLARE @RUTLOTE NVARCHAR(10)
	DECLARE @OSTLT NVARCHAR(14)
	DECLARE @CANT INT = 0
	DECLARE @CANT_ACTUAL INT = 0

	SET @RET = 1

	IF(@CONT_DOTACION >= 0)
		BEGIN

			SELECT
				@OST_EXISTS = 1,
				@DOTACION_ESPO_ACCESO = DOTACION_ESPO_ACCESO,
				@DOTACION_PERM_ACCESO = DOTACION_PERM_ACCESO,
				@DOTACION_ESPO_ACCESO_MESES = DOTACION_ESPO_ACCESO_MESES
			FROM OST
			WHERE NROOST = @OST
	
			IF(@OST_EXISTS = 1)
				BEGIN
					SELECT
						@CODIGO = CODIGO
					FROM SUB_CATEGORIACONTRATISTA
					WHERE
						ACTIVO = 'SI' AND
						Id = @TIPO

					IF(@CODIGO <> '')
						BEGIN
							IF(@CODIGO = 'P')
								BEGIN
									SET @DOTALOJA = @DOTACION_PERM_ACCESO 
								END
							ELSE IF(@CODIGO = 'E')
								BEGIN
									SET @DOTALOJA = @DOTACION_ESPO_ACCESO
								END
							ELSE IF(@CODIGO = 'EM')
								BEGIN
									SET @DOTALOJA = @DOTACION_ESPO_ACCESO_MESES
								END
						END

			END

			DECLARE cursor_pases CURSOR
			FOR SELECT
					L.RUTLOTE, L.OSTLT
				FROM LOTEPASESFUN L
				INNER JOIN LOTEPASES LP
					ON LP.LOTENUM = L.NLOTEPROC
				WHERE
					L.OSTLT = @OST AND 
					LP.LOTEFINICIO <= @FEC_FIN AND
					LP.LOTEFFINAL >= @FEC_INI AND
					L.SINOLT NOT IN ('BL','NO') AND
					L.CODSUBCATEGORIA = @TIPO AND
					L.TIPORUT = 'FUNCIONARIO'
					AND LP.LOTENUM <> @LOTENUM

			OPEN cursor_pases

			FETCH NEXT FROM cursor_pases INTO 
				@RUTLOTE, 
				@OSTLT

			WHILE @@FETCH_STATUS = 0
				BEGIN
					SET @CANT = @CANT + 1
					IF(EXISTS(
						SELECT *
						FROM WORKERSLOCAL WL
						INNER JOIN WORKERSCATEGORIA WR
							ON WR.RUT = WL.RUT AND WR.DIVISION = WL.DIVISION
						WHERE
							WR.RUT = @RUTLOTE AND
							WL.FINIPASE <= @FEC_FIN AND
							WL.FFINPASE >= @FEC_FIN AND
							WL.OST = @OSTLT AND
							WR.CODSUBCATEGORIA = @TIPO AND
							(WL.AUTOR = 'BL' OR WL.AUTOR = 'XX')
							))
						BEGIN
							SET @CANT = @CANT - 1
						END

					FETCH NEXT FROM cursor_pases INTO 
						@RUTLOTE, 
						@OSTLT
				END

			CLOSE cursor_pases

			DEALLOCATE cursor_pases

			SET @CANT_ACTUAL = @CONT_DOTACION + @CANT

			IF(@DOTALOJA >= @CANT_ACTUAL)
				BEGIN
					SET @RET = 1
				END
			ELSE
				BEGIN
					SET @RET = 0
				END
		END
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_SELECT_ONE_V2_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_ONE_V2_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_ONE_V2_PASES_CTTA]
(
  @OST			    NVARCHAR(14)
 ,@CONT_RUT_HOTEL	INT
 ,@LOTENUM			INT
 ,@FEC_INI			NVARCHAR(8)
 ,@FEC_FIN			NVARCHAR(8)
 ,@ESALIDA			INT OUTPUT
 ,@RET				BIT OUTPUT
) AS 
BEGIN
	DECLARE @DOTALOJA INT = 0
	DECLARE @CANT INT = 0
	DECLARE @CANT_ACTUAL INT = 0
	DECLARE @ALOJA NVARCHAR(2) = 'NO'
	DECLARE @RUTLOTE NVARCHAR(10)
	DECLARE @OSTLT NVARCHAR(14)
	DECLARE @LOTE INT = 0
	
	SET @RET = 1
	SET @ESALIDA = -1

	IF(@CONT_RUT_HOTEL >= 0)
		BEGIN
			SELECT
				TOP 1
				@ALOJA = ALOJA,
				@DOTALOJA = DOTALOJA
			FROM OST
			WHERE NROOST = @OST 

			IF(@ALOJA = 'SI' AND @DOTALOJA <> 0)
				BEGIN
					DECLARE cursor_pases CURSOR
					FOR SELECT
							L.RUTLOTE, L.OSTLT
						FROM LOTEPASESFUN L
						INNER JOIN LOTEPASES LP
							ON LP.LOTENUM = L.NLOTEPROC
						WHERE
							L.OSTLT = @OST AND 
							LP.LOTEFINICIO <= @FEC_FIN AND
							LP.LOTEFFINAL >= @FEC_INI AND
							L.ALOJAMIENTOLT ='SI' AND
							L.SINOLT NOT IN ('BL','NO') AND
							L.TIPORUT = 'FUNCIONARIO' AND
							LP.LOTENUM <> @LOTENUM

					OPEN cursor_pases

					FETCH NEXT FROM cursor_pases INTO 
						@RUTLOTE, 
						@OSTLT

					WHILE @@FETCH_STATUS = 0
						BEGIN
							SET @CANT = @CANT + 1
							IF(EXISTS(
								SELECT *
								FROM WORKERSLOCAL WL
								WHERE
									WL.RUT = @RUTLOTE AND
									WL.FINIPASE <= @FEC_FIN AND
									WL.FFINPASE >= @FEC_FIN AND
									WL.OST = @OSTLT AND
									(WL.AUTOR = 'BL' OR WL.AUTOR = 'XX')
									))
								BEGIN
									SET @CANT = @CANT - 1
								END

							FETCH NEXT FROM cursor_pases INTO 
								@RUTLOTE, 
								@OSTLT
						END

					CLOSE cursor_pases

					DEALLOCATE cursor_pases

					IF(@CANT <= @DOTALOJA)
						BEGIN
							SET @LOTE = @CANT
						END
					ELSE
						BEGIN
							SET @LOTE = @CANT
						END

					IF(@ALOJA = 'NO')
						BEGIN
							SET @RET = 0
							SET @ESALIDA = 0
							/*El contrato no tiene ninguna dotacion asignada*/
						END
					ELSE
						BEGIN
							SET @CANT_ACTUAL = @CONT_RUT_HOTEL + @LOTE
							IF(@DOTALOJA < @CANT_ACTUAL)
								BEGIN
									SET @RET = 0
									SET @ESALIDA = 1
									/*Usted supero la dotacion de Hoteleria*/
								END
						END
				END
		END
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_SELECT_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_PASES_CTTA]
(
  @IDPASE		INT
 ,@DIVCOD		NVARCHAR(4) = ''
 ,@ID_EMPRESA	NVARCHAR(10)
 ,@FEC_INI		NVARCHAR(8) = '19000101'
 ,@FEC_FIN		NVARCHAR(8) = '19000101'
 ,@TIPO_PASE	NVARCHAR(20) = ''
) AS 
BEGIN
	DECLARE @MAX_NUM_VISITAS INT = 4
	DECLARE @FILTRO_VISITA_PERIODO NVARCHAR(8) = ''
	DECLARE @TXT_PERIODO NVARCHAR(8) = ''
	DECLARE @MAXIMO_VISITA INT = -1
	DECLARE @ANIO_ACTUAL NVARCHAR(4) = CONVERT(NVARCHAR(4), YEAR(GETDATE()))
	DECLARE @MES_ACTUAL NVARCHAR(2) = FORMAT(GETDATE(),'MM')
	DECLARE @APRUEBA_MEDICO NVARCHAR(2) = ''
	DECLARE @ID_DOC_52 INT = 52
	DECLARE @COMUN NVARCHAR(2) = ''
	DECLARE @ID_DOC_FEC INT = -1
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */

	SELECT
		TOP 1
		@TXT_PERIODO = PERIODOVISITA,
		@MAXIMO_VISITA = CONVERT(INT, CASE 
										WHEN ISNUMERIC(CANTVISITA) = 1 THEN CANTVISITA
										ELSE '-1' END)
	FROM A024_DIVISIONES WHERE DIVCOD = @DIVCOD

	IF(@TXT_PERIODO = 'MENSUAL')
		BEGIN
			SET @FILTRO_VISITA_PERIODO = CONCAT(@ANIO_ACTUAL, @MES_ACTUAL)
		END
	ELSE IF(@TXT_PERIODO = 'ANUAL')
		BEGIN
			SET @FILTRO_VISITA_PERIODO = @ANIO_ACTUAL
		END	

	SELECT
		TOP 1
		@APRUEBA_MEDICO = APRUEBA_MEDICO
	FROM TAB_TIPOPASE
	WHERE TIPOPASE = @TIPO_PASE

	SELECT
		TOP 1
		@ID_DOC_FEC = DF1.ID_DOC_FEC
	FROM DOCS_FEC DF1
	WHERE (DF1.ID_DOC_DEPEND IN (@ID_DOC_52)) AND (DF1.ACTIVO = 'SI')
	ORDER BY DF1.ORDEN

	SELECT
		@COMUN = D.COMUN
	 FROM DOCS_FEC AS DF
	 INNER JOIN DOCS AS D
		ON DF.ID_DOC_DEPEND = D.ID_DOC 
	 WHERE (DF.ID_DOC_FEC = @ID_DOC_FEC)
	/*------------------------------------------------------*/

	SELECT
		SS.RUT AS RUTLOTE,
		SS.NOMBRES AS NOMBRESLT,
		SS.APELLIDOS AS APELLIDOSLT,
		SS.EMPRESA_FUNC,
		COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = SS.EMPRESA_FUNC
					), ''
				 ) AS NOMBRE_EMPRESA_FUNC,
		SS.AUTOR,
		SS.PUEDE_PEDIR_PASE,
		SS.CUENTA_VISITAS,
		SS.CONDUCE_TXT,
		SS.CONDUCE,
		SS.HOTEL,
		SS.HOTEL_TXT,
		SS.CASINOLT,
		SS.CASINO,
		SS.SINOLT,
		SS.PERIODO,
		SS.LIMITEPASESV,
		SS.EXAMEN,
		SS.CERTT,
		(CASE 
			WHEN SS.EXAMEN = 'SI' THEN (
										CASE
										WHEN @COMUN = 'SI' THEN COALESCE((
																			SELECT
																				TOP 1
																				DW3.VALIDADO
																			FROM DOCS_WORKERS DW3
																			WHERE
																				(DW3.RUT = SS.RUT) AND
																				(DW3.ID_DOC IN (@ID_DOC_52)) AND
																				(DW3.DIVISION = @DIVCOD)
																			ORDER BY DW3.ID_DOCS_WORKERS DESC
																			), '')
										WHEN @COMUN = 'NO' THEN COALESCE((
																			SELECT
																				TOP 1
																				DW4.VALIDADO
																			FROM DOCS_WORKERS DW4
																			WHERE
																				(DW4.RUT = SS.RUT) AND
																				(DW4.ID_DOC IN (@ID_DOC_52)) AND
																				(DW4.DIVISION = @DIVCOD) AND
																				(DW4.EMPRESA = @ID_EMPRESA)
																			ORDER BY DW4.ID_DOCS_WORKERS DESC
																			), '')
										ELSE '' END
									)
			ELSE 'NO' END) AS VALIDADO,
		SS.PASES_ACTIVOS,
		SS.COMUN,
		SS.EMPRESA_FINIQ,
		COALESCE(
					(
						SELECT
							TOP 1
							E2.ACRONIMO
						FROM ENTERPRISE E2
						WHERE E2.IDEMPRESA = SS.EMPRESA_FINIQ
					), '') AS NOMBRE_EMPRESA_FINIQ,
		SS.EMPRESA_NOMINA,
		COALESCE(
					(
						SELECT
							TOP 1
							E3.ACRONIMO
						FROM ENTERPRISE E3
						WHERE E3.IDEMPRESA = SS.EMPRESA_NOMINA
					), '') AS NOMBRE_EMPRESA_NOMINA,
		SS.EMPRESA_NOMINA,
		COALESCE(
					(
						SELECT
							TOP 1
							E4.ACRONIMO
						FROM ENTERPRISE E4
						WHERE E4.IDEMPRESA = SS.EMPRESA_NOMINA
					), '') AS NOMBRE_EMPRESA_FINIQ_NOMINA,		
		SS.SEXO AS SEXOLT,
		SS.FECNACIM,
		SS.CODCATEGORIA AS IDCATEGORIACTTA,
		SS.CODSUBCATEGORIA AS IDSUBCATEGORIACCTTA,
		COALESCE(
			(
				SELECT
					TOP 1
					C3.CATEGORIA
				FROM CATEGORIACONTRATISTA C3
				WHERE C3.Id = SS.CODCATEGORIA
			), '') AS CATEGORIA_TXT,
		COALESCE(
			(
				SELECT
					TOP 1
					S2.CATEGORIA
				FROM SUB_CATEGORIACONTRATISTA S2
				WHERE S2.Id = SS.CODSUBCATEGORIA
			), '') AS SUBCATEGORIA_TXT
	FROM
	(
		SELECT
			LPF.RUTLOTE AS RUT,
			ISNULL(LPF.NOMBRESLT, '') AS NOMBRES,
			ISNULL(LPF.APELLIDOSLT, '') AS APELLIDOS,
			ISNULL(LPF.EMPRESALT, '') AS EMPRESA_FUNC,
			ISNULL(LPF.SINOLT, '') AS AUTOR,
			(CASE 
				WHEN LPF.SINOLT = 'XX' THEN 0
				ELSE 1 END) AS PUEDE_PEDIR_PASE,
			(CASE
				WHEN @TIPO_PASE = 'VISITA' THEN (
												  CASE 
													WHEN @DIVCOD = '' THEN (
																			CASE 
																				WHEN @MAX_NUM_VISITAS > -1 THEN
																										   (
																											SELECT COUNT(LPF1.RUTLOTE)
																											FROM LOTEPASESFUN LPF1
																											INNER JOIN LOTEPASES LP1 
																												ON LPF1.NLOTEPROC = LP1.LOTENUM
																											WHERE
																												(LPF1.TIPORUT = 'FUNCIONARIO') AND
																												(LPF1.SINOLT = 'SI') AND
																												(LPF1.TIPOLT = N'VISITA' OR LPF1.TIPOLT = N'VISITATEC') AND
																												(LP1.LOTEESTADO = 'SI') AND
																												(LPF1.RUTLOTE = LPF.RUTLOTE) AND
																												(LP1.LOTEFINICIO LIKE @FILTRO_VISITA_PERIODO + '%') AND
																												(ISNULL(LPF1.UTILIZOLT, 'SI') = 'SI')
																											GROUP BY LPF1.RUTLOTE
																											)
																				ELSE -1 END
																			)
													ELSE (
															CASE 
																WHEN @MAX_NUM_VISITAS > -1 THEN
																						   (
																							SELECT COUNT(LPF2.RUTLOTE)
																							FROM LOTEPASESFUN LPF2
																							INNER JOIN LOTEPASES LP2 
																								ON LPF2.NLOTEPROC = LP2.LOTENUM
																							WHERE
																								(LPF2.TIPORUT = 'FUNCIONARIO') AND
																								(LPF2.SINOLT = 'SI') AND
																								(LPF2.TIPOLT = N'VISITA' OR LPF2.TIPOLT = N'VISITATEC') AND
																								(LP2.LOTEESTADO = 'SI') AND
																								(LPF2.RUTLOTE = LPF.RUTLOTE) AND
																								(LP2.LOTEFINICIO LIKE @FILTRO_VISITA_PERIODO + '%') AND
																								(LP2.DIVISION = @DIVCOD) AND (ISNULL(LPF2.UTILIZOLT, 'SI') = 'SI')
																							GROUP BY LPF2.RUTLOTE 						
																							)
																ELSE -1 END
													) END)
				  ELSE -1 END
			) AS CUENTA_VISITAS,
			(CASE WHEN LPF.LICONDLT IS NULL OR LPF.LICONDLT = 'NO' THEN 0 ELSE 1 END) AS CONDUCE,
			ISNULL(LPF.LICONDLT, 'NO') AS CONDUCE_TXT,
			ISNULL(LPF.ALOJAMIENTOLT, 'NO') AS HOTEL_TXT,
			(CASE WHEN LPF.ALOJAMIENTOLT IS NULL OR LPF.ALOJAMIENTOLT = 'NO' THEN 0 ELSE 1 END) AS HOTEL,
			'SI' AS CASINOLT,
			1 AS CASINO,
			'SI' AS SINOLT,
			@TXT_PERIODO AS PERIODO,
			@MAXIMO_VISITA AS LIMITEPASESV,
			(CASE 
				WHEN @COMUN = 'SI' THEN ( CASE 
											WHEN EXISTS(
														SELECT
															TOP 1
															DW1.RUT
														FROM DOCS_WORKERS DW1
														WHERE
															DW1.RUT = LPF.RUTLOTE) THEN
																				   [dbo].[V4MVC_FGET_FECHA_ES_VIGENTE](
																								[dbo].[V4MVC_FGET_FECHA_WORKER_LOCAL](
																														@ID_DOC_FEC,
																														LPF.RUTLOTE,
																														@DIVCOD,
																														@ID_EMPRESA,
																														0),
																								@CURR_FECHA)
											ELSE 'NO' END
											)
				WHEN @COMUN = 'NO' THEN ( CASE
											WHEN EXISTS(
														SELECT
															TOP 1
															DW2.RUT
														FROM DOCS_WORKERS DW2
														WHERE
															DW2.RUT = LPF.RUTLOTE AND
															DW2.EMPRESA = @ID_EMPRESA) THEN
																					   [dbo].[V4MVC_FGET_FECHA_ES_VIGENTE](
																								[dbo].[V4MVC_FGET_FECHA_WORKER_LOCAL](
																														@ID_DOC_FEC,
																														LPF.RUTLOTE,
																														@DIVCOD,
																														@ID_EMPRESA,
																														0),
																								@CURR_FECHA)
											ELSE 'NO' END
											)
				ELSE '' END) AS EXAMEN,
			(
				SELECT
					COUNT(*)
				FROM WORKERSLOCAL WL
				WHERE
				   (WL.RUT = LPF.RUTLOTE) AND
				   (WL.AUTOR = 'SI') AND
				   (WL.DIVISION = @DIVCOD) AND
				   (WL.LOTE <> @IDPASE) AND
				   (
					 (@FEC_INI BETWEEN WL.FINIPASE AND WL.FFINPASE) OR
					 (@FEC_FIN BETWEEN WL.FINIPASE AND WL.FFINPASE) OR
					 (@FEC_INI < WL.FINIPASE AND WL.FFINPASE < @FEC_FIN)
				   )
			 ) AS PASES_ACTIVOS,
			@COMUN AS COMUN,
			COALESCE(
			 (
				SELECT 
					TOP 1
					WL1.EMPRESA
				FROM WORKERSLOCAL WL1
				WHERE
					(dbo.hoy(GETDATE()) BETWEEN WL1.FINIPASE AND WL1.FFINPASE) AND
					(WL1.AUTOR IN ('SI','NO')) AND
					(WL1.RUT = LPF.RUTLOTE) AND
					(WL1.DIVISION = @DIVCOD)
			), 'SinEmpresa') AS EMPRESA_FINIQ,
			(CASE 
				WHEN ISNULL(LPF.SEXOLT, '') = '' THEN (SELECT W1.SEXO FROM WORKERS W1 WHERE W1.RUT = LPF.RUTLOTE)
				ELSE LPF.SEXOLT END) AS SEXO,
			(CASE
				WHEN LPF.FNACIMLT = '19000101' OR LPF.FNACIMLT IS NULL THEN (
																			CASE
																				WHEN (
																						SELECT
																							TOP 1
																							W2.FECHNACIM
																						FROM WORKERS W2
																						WHERE W2.RUT = LPF.RUTLOTE) = '19000101' THEN ''
																				ELSE ISNULL(
																							(
																							  SELECT
																								TOP 1
																								W3.FECHNACIM
																							  FROM WORKERS W3
																							  WHERE W3.RUT = LPF.RUTLOTE
																							 ), '') END
																			 )
				ELSE ISNULL(LPF.FNACIMLT, '') END) AS FECNACIM,
			LPF.CODCATEGORIA,
			LPF.CODSUBCATEGORIA,
			COALESCE(
			 (
				SELECT 
					TOP 1
					WL3.EMPRESA
				FROM WORKERSLOCAL WL3
				WHERE
					(dbo.hoy(GETDATE()) BETWEEN WL3.FINIPASE AND WL3.FFINPASE) AND
					(WL3.AUTOR IN ('SI','NO')) AND
					(WL3.RUT = LPF.RUTLOTE) AND
					(WL3.EMPRESA = @ID_EMPRESA)
				ORDER BY WL3.LOTE DESC
			 ), '') AS EMPRESA_NOMINA,
			 [dbo].[fn_WL_Certificado](LPF.RUTLOTE, @ID_EMPRESA, @TIPO_PASE, @DIVCOD, @CURR_FECHA) AS CERTT

		FROM LOTEPASESFUN LPF
		WHERE
			LPF.NLOTEPROC = @IDPASE AND
			LPF.TIPORUT = 'FUNCIONARIO'
		ORDER BY LPF.RUTLOTE ASC
		OFFSET 0 ROWS
	) SS
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_SELECT_PASESHISTORICOS_INFORMEFUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_PASESHISTORICOS_INFORMEFUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_PASESHISTORICOS_INFORMEFUNCIONARIOS_CTTA]
(
  @RUTLOTE NVARCHAR(10)
) AS 
BEGIN

SELECT		LOTENUM			,LOTEESTADO		, LOTEFINICIO		, LOTEFFINAL
		  , DIVISION		, RUTLOTE		, ACRONIMO			, IDEMPRESA
		  , TIPOLT			, LICONDLT		, OSTLT				, DESC_ESTADO
		  , NOMBRES			, APELLIDOS		, AUTOR				, SINOLT 
FROM WC3_VISTA_PASES 
WHERE RUTLOTE = @RUTLOTE ORDER BY LOTEFINICIO

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_SELECT_V2_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_V2_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_V2_PASES_CTTA]
(
  @IDPASE		INT
 ,@DIVCOD		NVARCHAR(4) = ''
 ,@ID_EMPRESA	NVARCHAR(10)
 ,@FEC_INI		NVARCHAR(8) = '19000101'
 ,@FEC_FIN		NVARCHAR(8) = '19000101'
) AS 
BEGIN
	
	SELECT
		SS.RUT AS PATENTE,
		SS.MARCA,
		SS.MODELO,
		SS.ANIO,
		SS.TIPOVEHI,
		COALESCE(
					(
						SELECT
							TOP 1
							TT.DSCTIPOV
						FROM TYPETRANS TT
						WHERE TT.IDTIPO = SS.TIPOVEHI
					),
				 '') AS TIPOVEHI_TXT,
		SS.SINOLT,
		SS.EMPRESA_VEH AS EMPRESA,
		COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = SS.EMPRESA_VEH
					),
				 '') AS NOMBRE_EMPRESA,
		SS.PERTENECE_NOMINA AS NOMINA,
		SS.PASES_ACTIVOS
	FROM
	(
		SELECT
			LPF.RUTLOTE AS RUT,
			ISNULL(LPF.NOMBRESLT, '') AS MARCA,
			ISNULL(LPF.APELLIDOSLT, '') AS MODELO,
			ISNULL(LPF.FNACIMLT, '') AS ANIO,
			ISNULL(LPF.TIPOVEHI, 0) AS TIPOVEHI,
			ISNULL(LPF.SINOLT, '') AS SINOLT,
			ISNULL(LPF.EMPRESALT, '') AS EMPRESA_VEH,
			(CASE
				WHEN CONVERT(NVARCHAR(10), @ID_EMPRESA) = CONVERT(NVARCHAR(10), LPF.EMPRESALT) THEN 1
				ELSE 0 END
			) AS PERTENECE_NOMINA,
			(
			  SELECT COUNT(*)
			  FROM TRANSPORT_DIVISION_PASES TDP
			  WHERE 
					(TDP.PATENTE = LPF.RUTLOTE) AND
					(TDP.LOTE <> '0') AND
					(TDP.AUTOR = 'SI') AND
					(TDP.DIVISION = @DIVCOD) AND
					(TDP.LOTE <> @IDPASE) AND 
					(
					  (@FEC_INI BETWEEN TDP.FINIPASE AND TDP.FFINPASE) OR
					  (@FEC_FIN BETWEEN TDP.FINIPASE AND TDP.FFINPASE) OR
					  (@FEC_INI < TDP.FINIPASE AND TDP.FFINPASE < @FEC_FIN)
					)
			) AS PASES_ACTIVOS
		FROM LOTEPASESFUN LPF
		WHERE
			LPF.NLOTEPROC = @IDPASE AND
			LPF.TIPORUT = 'VEHICULO'
	) SS
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_SELECT_VALIDA_EXISTENCIA_NLOTE_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_VALIDA_EXISTENCIA_NLOTE_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_VALIDA_EXISTENCIA_NLOTE_INFORMECONSULTARAPIDA_CTTA]
(
     @NLOTEPROC INT 
   , @EXISTE BIT  OUTPUT
) AS 
BEGIN

 IF EXISTS(SELECT * FROM LOTEPASES AS L, LOTEPASESFUN AS LF, ADMIN AS A WHERE L.LOTENUM = LF.NLOTEPROC   AND (L.LOTENUM = @NLOTEPROC))
 BEGIN
  SET @EXISTE = 1
 END
 ELSE
 BEGIN
  SET @EXISTE = 0
 END


END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_SELECT_VEHICULO_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_VEHICULO_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_SELECT_VEHICULO_INFORMECONSULTARAPIDA_CTTA]
(
  @NLOTEPROC INT 
) AS 
BEGIN

SELECT RUTLOTE			, NOMBRESLT			, APELLIDOSLT		, SINOLT
     , EMPRESALT		, ALOJAMIENTOLT		, CASINOLT			, LICONDLT
	 , FNACIMLT			, TIPOLT			,  [dbo].[fn_WL_Certificado] (RUTLOTE, EMPRESALT , TIPOLT, 'CH', dbo.hoy(getdate())) AS CERT 
	 FROM LOTEPASESFUN  
	 WHERE NLOTEPROC = @NLOTEPROC AND TIPORUT = 'VEHICULO'
	 ORDER BY RUTLOTE ASC

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_UPDATE_CONDUCCIONPASE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_UPDATE_CONDUCCIONPASE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_UPDATE_CONDUCCIONPASE]
( @RUT				nvarchar(10) = NULL
, @IDEMPRESA        nvarchar(10) = NULL
, @DIVCOD			nvarchar(30) = NULL
, @LICONDLT			nvarchar(2) = NULL
) AS 
BEGIN
	DECLARE @LICONDLT_INVERSO NVARCHAR(2) = CASE WHEN @LICONDLT = 'SI' THEN 'NO' ELSE 'SI' END
	IF(@LICONDLT = 'NO')
		BEGIN
			UPDATE LOTEPASESFUN 
			SET LICONDLT = 'NO' 
			WHERE RUTLOTE = @RUT AND 
			NLOTEPROC IN ( SELECT  L.LOTENUM 
							FROM LOTEPASES AS L 
							INNER JOIN LOTEPASESFUN AS LF ON L.LOTENUM = LF.NLOTEPROC 
							WHERE (L.DIVISION = @DIVCOD) AND 
							(LF.RUTLOTE = @RUT) AND 
							(L.LOTEFINICIO <= [dbo].HOY(GETDATE())) AND 
							(L.LOTEFFINAL >= [dbo].HOY(GETDATE())) AND 
							LF.EMPRESALT = @IDEMPRESA AND 
							(LF.LICONDLT = 'SI'))
		END
	ELSE
		BEGIN
			UPDATE LOTEPASESFUN SET LICONDLT='SI' 
							WHERE RUTLOTE = @RUT AND 
							NLOTEPROC IN (SELECT LOTE FROM WORKERSLOCAL WHERE (RUT = @RUT) 
							AND (DIVISION = @DIVCOD) 
							AND (FFINPASE >= DBO.HOY(GETDATE())) AND (AUTOR IN ('SI','NO')))
		END

END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_UPSERT_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_UPSERT_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_UPSERT_PASES_CTTA]
( 
  @PASE_ID			INT
 ,@RUT_FUNC			NVARCHAR(10)
 ,@IDEMPRESA        NVARCHAR(10)
 ,@TIPO_PASE		NVARCHAR(9) = ''
 ,@NOMBRES			NVARCHAR(50)
 ,@APELLIDOS		NVARCHAR(50)
 ,@HOTEL			BIT = 0
 ,@ALIMENTACION		BIT = 0
 ,@CONDUCE			BIT = 0
 ,@OST				NVARCHAR(14) = ''
 ,@SEXO				NVARCHAR(15)
 ,@FEC_NAC			NVARCHAR(8) = ''
 ,@ID_CATEGORIA		INT
 ,@ID_SUBCATEGORIA	INT
) AS 
BEGIN
	IF(
		(
			SELECT
				COUNT(*) 
			FROM LOTEPASESFUN
			WHERE
				NLOTEPROC = @PASE_ID AND
				RUTLOTE = @RUT_FUNC AND
				TIPORUT = 'FUNCIONARIO'
		) > 0
	  )
		BEGIN
			UPDATE LOTEPASESFUN 
			SET
				ALOJAMIENTOLT = IIF(@HOTEL = 1, 'SI', 'NO'),
				CASINOLT = IIF(@ALIMENTACION = 1, 'SI', 'NO'),
				LICONDLT = IIF(@CONDUCE = 1, 'SI', 'NO'),
				SEXOLT = @SEXO,
				FNACIMLT = @FEC_NAC,
				CODCATEGORIA = @ID_CATEGORIA,
				CODSUBCATEGORIA = @ID_SUBCATEGORIA
			WHERE
				NLOTEPROC = @PASE_ID AND
				RUTLOTE = @RUT_FUNC AND
				TIPORUT = 'FUNCIONARIO'
		END
	ELSE
		BEGIN
			INSERT LOTEPASESFUN
					(
					 NLOTEPROC,
					 RUTLOTE,
					 EMPRESALT,
					 TIPORUT,
					 SINOLT,
					 APELLIDOSLT,
					 NOMBRESLT,
					 TIPOLT,
					 ALOJAMIENTOLT,
					 CASINOLT,
					 LICONDLT,
					 OSTLT,
					 SEXOLT,
					 FNACIMLT,
					 CODCATEGORIA,
					 CODSUBCATEGORIA)
			VALUES
					(
					 @PASE_ID,
					 @RUT_FUNC,
					 @IDEMPRESA,
					 'FUNCIONARIO',
					 'SI',
					 @APELLIDOS,
					 @NOMBRES,
					 @TIPO_PASE,
					 IIF(@HOTEL = 1, 'SI', 'NO'),
					 IIF(@ALIMENTACION = 1, 'SI', 'NO'),
					 IIF(@CONDUCE = 1, 'SI', 'NO'),
					 @OST,
					 @SEXO,
					 @FEC_NAC,
					 @ID_CATEGORIA,
					 @ID_SUBCATEGORIA
					)
		END

END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_LOTEPASESFUN_UPSERT_V2_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_UPSERT_V2_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_LOTEPASESFUN_UPSERT_V2_PASES_CTTA]
(
  @PASE_ID			INT
 ,@PATENTE			NVARCHAR(10)
 ,@IDEMPRESA        NVARCHAR(10)
 ,@TIPO_VEH			INT
 ,@MARCA			NVARCHAR(50)
 ,@MODELO			NVARCHAR(50)
 ,@TIPO_PASE		NVARCHAR(9) = ''
 ,@ANIO				NVARCHAR(8)
 ,@OST				NVARCHAR(14) = ''
) AS 
BEGIN
	IF(
		(
			SELECT COUNT(*) 
			FROM LOTEPASESFUN
			WHERE
				NLOTEPROC = @PASE_ID AND
				RUTLOTE = @PATENTE AND
				TIPORUT = 'VEHICULO'
		) > 0
	  )
		BEGIN
			UPDATE LOTEPASESFUN 
			SET
				NOMBRESLT = @MARCA,
				APELLIDOSLT = @MODELO,
				TIPOVEHI = @TIPO_VEH,
				FNACIMLT = @ANIO
			WHERE
				NLOTEPROC = @PASE_ID AND
				RUTLOTE = @PATENTE AND
				TIPORUT = 'VEHICULO'
		END
	ELSE
		BEGIN
			INSERT LOTEPASESFUN
					(
					 NLOTEPROC,
					 RUTLOTE,
					 EMPRESALT,
					 TIPORUT,
					 SINOLT,
					 NOMBRESLT,
					 APELLIDOSLT,
					 TIPOVEHI,
					 FNACIMLT,
					 TIPOLT,
					 OSTLT)
			VALUES
					(
					 @PASE_ID,
					 @PATENTE,
					 @IDEMPRESA,
					 'VEHICULO',
					 'SI',
					 @MARCA,
					 @MODELO,
					 @TIPO_VEH,
					 @ANIO,
					 @TIPO_PASE,
					 @OST
					)
		END

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_MODULOS_VIDEOS_V4_INSERT_VIDEOS_MDTE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_MODULOS_VIDEOS_V4_INSERT_VIDEOS_MDTE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_MODULOS_VIDEOS_V4_INSERT_VIDEOS_MDTE]
(
  @NOMBRE_MODULO	NVARCHAR(50)
 ,@GLOSA			NVARCHAR(50)
 ,@ACTIVO			NVARCHAR(2)
 ,@RET_RESULTADO	INT OUTPUT
 ,@NUEVO_ID			INT OUTPUT
) AS
BEGIN
	SET @RET_RESULTADO = -1
	IF(NOT EXISTS(SELECT TOP 1 * FROM MODULOS_VIDEOS_V4 WHERE MODULO = @NOMBRE_MODULO))
		BEGIN
			INSERT INTO MODULOS_VIDEOS_V4(MODULO, GLOSA, ACTIVO) VALUES(@NOMBRE_MODULO, @GLOSA, @ACTIVO)
			SET @NUEVO_ID = SCOPE_IDENTITY()
		END
	ELSE
		BEGIN
			SET @RET_RESULTADO = 1
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_MODULOS_VIDEOS_V4_SELECT_VIDEOS_MDTE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_MODULOS_VIDEOS_V4_SELECT_VIDEOS_MDTE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_MODULOS_VIDEOS_V4_SELECT_VIDEOS_MDTE]
AS
BEGIN
	SELECT
		ID,
		MODULO
	FROM MODULOS_VIDEOS_V4
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_MOTIVO_REVISION_VEHICULAR_SELECT_ACREDITACIONVEHICULARCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_MOTIVO_REVISION_VEHICULAR_SELECT_ACREDITACIONVEHICULARCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_MOTIVO_REVISION_VEHICULAR_SELECT_ACREDITACIONVEHICULARCTTA]
AS
BEGIN
SELECT ID , MOTIVO AS MOTIVO_DESC FROM MOTIVO_REVISION_VEHICULAR ORDER BY MOTIVO ASC
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_MUTUALIDAD_SELECT_DOCUMENTACION_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_MUTUALIDAD_SELECT_DOCUMENTACION_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_MUTUALIDAD_SELECT_DOCUMENTACION_CTTA]
(@ID_DOC		INT = NULL ) AS
BEGIN

   SELECT IDMUTUAL, MUTUAL 
   FROM MUTUALIDAD 
   WHERE ID_DOC = @ID_DOC 
   ORDER BY MUTUAL

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_OST_DOC_FEC_VARIOS]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_OST_DOC_FEC_VARIOS]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_OST_DOC_FEC_VARIOS]   
(@IDEMPRESA            NVARCHAR(10) = NULL) AS           
BEGIN    
  
	CREATE TABLE #DOCS (              
	DESCRIPCION_DOC VARCHAR(20)	 COLLATE DATABASE_DEFAULT NOT NULL,            
	CANTIDAD_DOC INT,                     
	)           
  
	INSERT INTO #DOCS  
	SELECT 'VIGENTES' ,SUM(CASE WHEN GETDATE() BETWEEN FINICIO AND FTERMINO THEN 1 ELSE 0 END)  
	FROM OSTARBOL   
	WHERE EMPRESA = @IDEMPRESA OR MADRE = @IDEMPRESA  
  
	INSERT INTO #DOCS  
	SELECT 'VENCIDAS' ,SUM(CASE WHEN GETDATE() NOT BETWEEN FINICIO AND FTERMINO THEN 1 ELSE 0 END)  
	FROM OSTARBOL   
	WHERE EMPRESA = @IDEMPRESA OR MADRE = @IDEMPRESA  
  
	INSERT INTO #DOCS  
	SELECT 'CANTOST' ,COUNT(OST)    
	FROM OSTARBOL   
	WHERE (EMPRESA = @IDEMPRESA OR MADRE = @IDEMPRESA) AND FTERMINO <= DATEADD(d,30,GETDATE()) AND FTERMINO >= GETDATE()  
  
	INSERT INTO #DOCS  
	SELECT 'CANTVEH' ,COUNT(DISTINCT PATENTE)   
	FROM V_DOCS_FEC_VEH   
	WHERE EMPRESA = @IDEMPRESA AND FECHA >= GETDATE() AND FECHA <= DATEADD(d,30,GETDATE())  
  
	INSERT INTO #DOCS  
	SELECT 'CANTWORK',COUNT(DISTINCT RUT)  
	FROM V_DOCS_FEC_WORK   
	WHERE EMPRESA = @IDEMPRESA AND FECHA >= CONVERT(VARCHAR(8),GETDATE(),112) AND FECHA <= CONVERT(VARCHAR(8),DATEADD(d,30,GETDATE()),112)  
  
	SELECT CANTIDAD_DOC,DESCRIPCION_DOC FROM #DOCS  
  
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_OST_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_OST_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_OST_SELECT_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		NROOST
	FROM OST
	WHERE
		LEFT(CONVERT(NVARCHAR(8), DATEADD(MM,1,FECTERM),112),6) = @PERIODO AND
		IDEMPRESA = @IDEMPRESA
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_OST_SELECT_ONE_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_OST_SELECT_ONE_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_OST_SELECT_ONE_CONTRATOST_CTTA]
(
  @NROOST			NVARCHAR(14)
 ,@IDEMPRESA		NVARCHAR(10)
 ,@MADRE			NVARCHAR(10)
 ,@NIVEL			SMALLINT
) AS
BEGIN
	DECLARE @CANT_DOCS_PENDIENTE INT = -1
	DECLARE @NUM_SOLICITUD BIGINT = -1
	DECLARE @ESTADO_PREV NVARCHAR(2) = ''
	DECLARE @VALIDA_PREV NVARCHAR(2) = 'NO'

	SELECT
		@CANT_DOCS_PENDIENTE = COUNT(DOCS_OST2.VALIDADO)
	FROM DOCS_OST2
	INNER JOIN DOCS D
	ON D.ID_DOC = DOCS_OST2.ID_DOC AND
		D.ID_DOC_OPCION = '1' AND
		D.ACTIVO = 'SI'
	WHERE
		(DOCS_OST2.OST = @NROOST) AND
		(DOCS_OST2.MADRE = @MADRE) AND
		(DOCS_OST2.EMPRESA = @IDEMPRESA) AND
		(DOCS_OST2.NIVEL = @NIVEL) AND
		(ISNULL(DOCS_OST2.VALIDADO,'NO') = 'NO')

	SELECT
		TOP 1
			@NUM_SOLICITUD = ID,
			@ESTADO_PREV = ESTADO,
			@VALIDA_PREV = 'SI'
	FROM DOCS_OST_PREVENCIONISTA
	WHERE
		OST = @NROOST AND
		MADRE = @MADRE AND
		EMPRESA = @IDEMPRESA

	/********************************************/


	SELECT
		O.ID_INSTALACION_FAENA,
		O.ID_INF_RECEPCION,
		O.ID_FORM_RECEPCION,
		O.EDIFICIO_INSTALACION,
		ISNULL(OS.VALIDA_CARRANQUE,'NO') AS VALIDA_CARRANQUE,
		OS.FINICIO AS FECINICIO,
		OS.FTERMINO AS FECTERM,
		O.DESCRIPOST,
		O.VALIDADOR,
		O.DOTTRANS,
		O.DOTACION,
		@CANT_DOCS_PENDIENTE AS CANT_DOCS_PENDIENTE,
		@NUM_SOLICITUD AS NUM_SOLICITUD,
		@ESTADO_PREV AS ESTADO_PREV,
		@VALIDA_PREV AS VALIDA_PREV
	FROM OST O
	INNER JOIN OSTARBOL OS
		ON OS.OST = O.NROOST
	WHERE
		O.NROOST = @NROOST AND 
		OS.EMPRESA = @IDEMPRESA AND
		OS.MADRE = @MADRE AND
		OS.NIVEL = @NIVEL
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_OST_SELECT_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_OST_SELECT_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_OST_SELECT_PASES_CTTA]
(
  @DIVISION				NVARCHAR(10)
 ,@IDEMPRESA			NVARCHAR(10)
 ,@OST_UNICA			NVARCHAR(14) OUTPUT
 ,@CUENTA_CONTR			INT OUTPUT
 ,@FECINICIO			NVARCHAR(8) OUTPUT
 ,@FECTERM				NVARCHAR(8) OUTPUT
 ,@ESPOR				NVARCHAR(2) OUTPUT
 ,@PERIODOS				NVARCHAR(MAX) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CONTR_OST NVARCHAR(14)
	DECLARE @CONTR_FECINICIO NVARCHAR(8)
	DECLARE @CONTR_FECTERM NVARCHAR(8)
	DECLARE @CONTR_FFINCERT NVARCHAR(8)
	DECLARE @CONTR_ESPORADICO NVARCHAR(2)
	DECLARE @CONTR_DESCRIPOST NVARCHAR(100)
	DECLARE @PERIODO_FECHAINICIO NVARCHAR(8)
	DECLARE @PERIODO_FECHAFIN NVARCHAR(8)
	DECLARE @FRMT_DESCRIPOST NVARCHAR(50)
	DECLARE @OST2 NVARCHAR(14)
	DECLARE @OST3 NVARCHAR(14)

	CREATE TABLE #SET_OST(
		NROOST				NVARCHAR(14)	 COLLATE DATABASE_DEFAULT NOT NULL,   
		FECINICIO			NVARCHAR(8)		 COLLATE DATABASE_DEFAULT NOT NULL,   
		FECTERM				NVARCHAR(8)		 COLLATE DATABASE_DEFAULT NOT NULL,   
		ESPORADICO			NVARCHAR(2)		 COLLATE DATABASE_DEFAULT NOT NULL,   
		PERIODOS			NVARCHAR(MAX)	 COLLATE DATABASE_DEFAULT NOT NULL,   
		OST2				NVARCHAR(14)	 COLLATE DATABASE_DEFAULT NOT NULL,   
		OST3				NVARCHAR(14)	 COLLATE DATABASE_DEFAULT NOT NULL,   
		DESCRIPOST			NVARCHAR(55)	 COLLATE DATABASE_DEFAULT NOT NULL
		)

	SET @CUENTA_CONTR = -1
	SET @OST_UNICA = ''
	SET @PERIODOS = ''

	SELECT
		@CUENTA_CONTR = COUNT(DISTINCT DL.OST)
	FROM OSTDIVLOCAL DL
	INNER JOIN OST AS O
		ON DL.OST = O.NROOST
	INNER JOIN OSTSUBC OSC
		ON DL.OST = OSC.OST
	WHERE
		(DL.DIVISION = @DIVISION) AND
		(O.FECTERM >= @CURR_FECHA) AND
		(OSC.FTERMINO >= @CURR_FECHA) AND
		(DL.ACTIVO = 'SI') AND
		(OSC.EMPRESA = @IDEMPRESA)
	IF(@CUENTA_CONTR > 0)
		BEGIN

			DECLARE getContratos CURSOR FOR
			SELECT
				DISTINCT
					OSC.FFINCERT,
					DL.OST,
					OSC.FINICIO AS FECINICIO,
					OSC.FTERMINO AS FECTERM,
					OSC.DESCRIPOST,
					OSC.ESPORADICO
				FROM OSTDIVLOCAL AS DL
				INNER JOIN dbo.OSTSUBC_V2 AS OSC
					ON DL.OST = OSC.OST AND ((DL.EMPRESA = OSC.EMPRESA) OR (DL.EMPRESA = OSC.MADRE))
				WHERE (DL.DIVISION = @DIVISION) AND
						(OSC.FTERMINO >= @CURR_FECHA) AND
						(DL.ACTIVO = 'SI') AND
						(OSC.EMPRESA = @IDEMPRESA)
				ORDER BY DL.OST DESC

			OPEN getContratos
			FETCH NEXT
			FROM getContratos INTO @CONTR_FFINCERT, @CONTR_OST, @CONTR_FECINICIO, @CONTR_FECTERM, @CONTR_DESCRIPOST, @CONTR_ESPORADICO  
			WHILE @@FETCH_STATUS = 0
				BEGIN
					IF(@CUENTA_CONTR = 1 AND @OST_UNICA = '')
						BEGIN
							SET @OST_UNICA = LTRIM(RTRIM(@CONTR_OST))
						END
					IF(@CONTR_ESPORADICO = 'SI')
						BEGIN
							
							DECLARE getPeriodoEsp CURSOR FOR
							SELECT
								FECHAINICIO,
								FECHAFIN
							FROM OST_ESPORADICO
							WHERE FECHAFIN >= @CURR_FECHA AND OST = @CONTR_OST
							ORDER BY FECHAINICIO

							SET @PERIODOS = ''

							OPEN getPeriodoEsp
							FETCH NEXT
							FROM getPeriodoEsp INTO @PERIODO_FECHAINICIO, @PERIODO_FECHAFIN
							
							WHILE @@FETCH_STATUS = 0
								BEGIN
									SET @PERIODOS = CONCAT(@PERIODOS, ISNULL(@PERIODO_FECHAINICIO, ''), '|', ISNULL(@PERIODO_FECHAFIN, ''), '*' )

									FETCH NEXT
									FROM getPeriodoEsp INTO @PERIODO_FECHAINICIO, @PERIODO_FECHAFIN									
								END

							CLOSE getPeriodoEsp
							DEALLOCATE getPeriodoEsp

						END
						
						IF(@FRMT_DESCRIPOST IS NOT NULL AND LEN(@FRMT_DESCRIPOST) > 50)
							BEGIN
								SET @FRMT_DESCRIPOST = LEFT(@CONTR_DESCRIPOST, 50) + '...'
							END
						ELSE
							BEGIN
								SET @FRMT_DESCRIPOST = @CONTR_DESCRIPOST
							END

						SET @OST2 = REPLACE(LTRIM(RTRIM(@CONTR_OST)), ' ', '')
						SET @OST3 = LTRIM(RTRIM(@CONTR_OST))

						INSERT INTO #SET_OST(
							NROOST,
							FECINICIO,
							FECTERM,
							ESPORADICO,
							PERIODOS,
							OST2,
							OST3,
							DESCRIPOST)
						VALUES(@CONTR_OST, @CONTR_FECINICIO, @CONTR_FECTERM, @CONTR_ESPORADICO, @PERIODOS, @OST2, @OST3, @FRMT_DESCRIPOST)
					
					FETCH NEXT
					FROM getContratos INTO @CONTR_FFINCERT, @CONTR_OST, @CONTR_FECINICIO, @CONTR_FECTERM, @CONTR_DESCRIPOST, @CONTR_ESPORADICO

				END

			CLOSE getContratos
			DEALLOCATE getContratos			
			
			SET @FECINICIO = @CONTR_FECINICIO
			SET @FECTERM = @CONTR_FECTERM
			SET @ESPOR = @CONTR_ESPORADICO
					
		END

		SELECT *
		FROM #SET_OST
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_OST_SELECT_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_OST_SELECT_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_OST_SELECT_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(10)
 ,@DIVISION		NVARCHAR(10)
) AS
BEGIN
	SELECT
		DISTINCT
			DL.OST AS OOST,
			OSC.FINICIO AS FECINICIO,
			OSC.FTERMINO AS FECTERM,
			OST.DESCRIPOST
	FROM OSTDIVLOCAL DL
	INNER JOIN OSTSUBC OSC
		ON DL.OST = OSC.OST AND ((DL.EMPRESA = OSC.EMPRESA) OR (DL.EMPRESA = OSC.MADRE))
	INNER JOIN OST
		ON OSC.OST = dbo.OST.NROOST AND ((OSC.EMPRESA = OST.IDEMPRESA) OR (OSC.MADRE = OST.IDEMPRESA))
	WHERE
		(DL.DIVISION = @DIVISION) AND
		(DL.ACTIVO = 'SI') AND
		(OSC.EMPRESA = @IDEMPRESA)
	ORDER BY DL.OST DESC
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_OST_SELECT_V2_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_OST_SELECT_V2_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_OST_SELECT_V2_PASES_CTTA]
(
  @IDISPLAYSTART		INT           
 ,@IDISPLAYLENGTH		INT
 ,@IDEMPRESA			NVARCHAR(10)
 ,@SEARCH_NROOST		NVARCHAR(14) = ''
 ,@SEARCH_DESCRIPOST	NVARCHAR(100) = ''
 ,@SORT_COLUMN			NVARCHAR(4) = NULL  
 ,@SORT_DIRECTION		NVARCHAR(4) = NULL
 ,@TOTAL_COUNT			INT OUTPUT
) AS
BEGIN
	SELECT
		@TOTAL_COUNT = COUNT(*)
	FROM
	(
		SELECT 
			DISTINCT
			O.NROOST,
			O.DESCRIPOST,
			O.FECINICIO,
			O.FECTERM
		FROM OST O
		INNER JOIN OSTARBOL OA
			ON OA.OST = O.NROOST
		WHERE
			(OA.EMPRESA = @IDEMPRESA OR OA.MADRE = @IDEMPRESA) AND
			(O.FECTERM >= CONVERT(VARCHAR(8),GETDATE(),112)) AND
			(
			  ( O.NROOST IS NOT NULL AND
			    O.NROOST <> '' AND
				O.NROOST LIKE CONCAT('%', @SEARCH_NROOST, '%')
			  ) OR
			  (O.NROOST IS NULL OR O.NROOST = '')
			) AND
			(
			  (
			   O.DESCRIPOST IS NOT NULL AND
			   O.DESCRIPOST <> '' AND
			   O.DESCRIPOST LIKE CONCAT('%', @SEARCH_DESCRIPOST, '%')
			  ) OR
			  (O.DESCRIPOST IS NULL OR O.DESCRIPOST = '')
			)
	) Y

	IF(@SORT_DIRECTION = 'ASC')
		BEGIN
			SELECT
				X.NROOST,
				X.DESCRIPOST,
				[dbo].[V4MVC_FGET_FEC_USER](X.FECINICIO) AS FECINICIO,
				[dbo].[V4MVC_FGET_FEC_USER](X.FECTERM) AS FECTERM
			FROM
			(
				SELECT 
					DISTINCT
					O.NROOST,
					O.DESCRIPOST,
					O.FECINICIO,
					O.FECTERM
				FROM OST O
				INNER JOIN OSTARBOL OA
					ON OA.OST = O.NROOST
				WHERE
					(OA.EMPRESA = @IDEMPRESA OR OA.MADRE = @IDEMPRESA) AND
					(O.FECTERM >= CONVERT(VARCHAR(8),GETDATE(),112)) AND
					(
					  (
					    O.NROOST IS NOT NULL AND
						O.NROOST <> '' AND
						O.NROOST LIKE CONCAT('%', @SEARCH_NROOST, '%')
					   ) OR 
					   (O.NROOST IS NULL OR O.NROOST = '')
					 ) AND
					(
					 (
					   O.DESCRIPOST IS NOT NULL AND
					   O.DESCRIPOST <> '' AND
					   O.DESCRIPOST LIKE CONCAT('%', @SEARCH_DESCRIPOST, '%')
					 ) OR
					 (O.DESCRIPOST IS NULL OR O.DESCRIPOST = '')
					)
			) X
			ORDER BY 
				CASE WHEN @SORT_COLUMN = '0' THEN X.NROOST END ASC,
				CASE WHEN @SORT_COLUMN = '1' THEN X.DESCRIPOST END ASC,
				CASE WHEN @SORT_COLUMN = '2' THEN X.FECINICIO END ASC,
				CASE WHEN @SORT_COLUMN = '3' THEN X.FECTERM END ASC
			OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY
		END
	ELSE
		BEGIN
			SELECT
				X.NROOST,
				X.DESCRIPOST,
				[dbo].[V4MVC_FGET_FEC_USER](X.FECINICIO) AS FECINICIO,
				[dbo].[V4MVC_FGET_FEC_USER](X.FECTERM) AS FECTERM
			FROM
			(
				SELECT 
					DISTINCT
					O.NROOST,
					O.DESCRIPOST,
					O.FECINICIO,
					O.FECTERM
				FROM OST O
				INNER JOIN OSTARBOL OA
					ON OA.OST = O.NROOST
				WHERE
					(OA.EMPRESA = @IDEMPRESA OR OA.MADRE = @IDEMPRESA) AND
					(O.FECTERM >= CONVERT(VARCHAR(8),GETDATE(),112)) AND
					(
					  (
					    O.NROOST IS NOT NULL AND
						O.NROOST <> '' AND
						O.NROOST LIKE CONCAT('%', @SEARCH_NROOST, '%')
					  ) OR
					  (O.NROOST IS NULL OR O.NROOST = '')
					) AND
					(
					  (
					    O.DESCRIPOST IS NOT NULL AND
						O.DESCRIPOST <> '' AND
						O.DESCRIPOST LIKE CONCAT('%', @SEARCH_DESCRIPOST, '%')
					  ) OR
					  (O.DESCRIPOST IS NULL OR O.DESCRIPOST = '')
					)
			) X
			ORDER BY 
				CASE WHEN @SORT_COLUMN = '0' THEN X.NROOST END DESC,
				CASE WHEN @SORT_COLUMN = '1' THEN X.DESCRIPOST END DESC,
				CASE WHEN @SORT_COLUMN = '2' THEN X.FECINICIO END DESC,
				CASE WHEN @SORT_COLUMN = '3' THEN X.FECTERM END DESC
			OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY
		END

		PRINT(@TOTAL_COUNT)
ENDIF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_OST_UPDATE_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_OST_UPDATE_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_OST_UPDATE_CONTRATOST_CTTA]   
(
  @ID_ARCHIVO	UNIQUEIDENTIFIER
 ,@INDEX		INT
 ,@NROOST		NVARCHAR(14)
) AS           
BEGIN
	IF(@INDEX = 1)
		BEGIN
			UPDATE OST
			SET
				ID_INF_RECEPCION = @ID_ARCHIVO
			WHERE NROOST = @NROOST
		END
	ELSE IF(@INDEX = 2)
		BEGIN
			UPDATE OST
			SET
				ID_FORM_RECEPCION = @ID_ARCHIVO
			WHERE NROOST = @NROOST
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_OSTARBOL_SELECT_BYEMPRESA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_OSTARBOL_SELECT_BYEMPRESA_CTTA]\nGO\n
CREATE PROCEDURE [dbo].[V4MVC_OSTARBOL_SELECT_BYEMPRESA_CTTA]    
(@EMPRESA            NVARCHAR(11) = NULL) AS           
BEGIN    
  
	SELECT OST	,NIVEL,FINICIO,FTERMINO
	FROM OSTARBOL 
	WHERE  EMPRESA = @EMPRESA AND FTERMINO >= GETDATE() 
	ORDER BY NIVEL ASC

  
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_OSTARBOL_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_OSTARBOL_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_OSTARBOL_SELECT_ONE_CONTROLLABORAL_CTTA]    
(
  @IDEMPRESA   NVARCHAR(10)
) AS           
BEGIN 
	SELECT
		TOP 1
		OST,
		DATEDIFF(M, FINICIO, FTERMINO) AS MESES 
	FROM OSTARBOL 
	WHERE
		(EMPRESA = @IDEMPRESA OR MADRE = @IDEMPRESA) AND
		dbo.hoy(GETDATE()) BETWEEN FINICIO AND FTERMINO
	ORDER BY MESES DESC
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_OSTARBOL_SELECT_POREMPRESA_TURNOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_OSTARBOL_SELECT_POREMPRESA_TURNOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_OSTARBOL_SELECT_POREMPRESA_TURNOS_CTTA]    
(@IDEMPRESA            NVARCHAR(10) = NULL) AS           
BEGIN    
  
	SELECT DISTINCT OST 
	FROM OSTARBOL 
	WHERE (MADRE = @IDEMPRESA OR EMPRESA = @IDEMPRESA) AND FTERMINO >= GETDATE() 
	ORDER BY 1 
  
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_OSTARBOL_UPDATE_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_OSTARBOL_UPDATE_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_OSTARBOL_UPDATE_CONTRATOST_CTTA]   
(
  @ID_DOC			INT
 ,@EXT				NVARCHAR(10)
 ,@NROOST			NVARCHAR(50)
 ,@MADRE			NVARCHAR(10)
 ,@IDEMPRESA		NVARCHAR(10)
 ,@NIVEL			SMALLINT
 ,@EXISTE_QUERY		INT OUTPUT
) AS           
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	SET @EXISTE_QUERY = 0 
	IF(EXISTS(
		SELECT DOCS_EXT.ID_DOC_EXT
		FROM DOCS_FORMATO, DOCS_EXT
		WHERE
			(DOCS_FORMATO.ID_DOC = @ID_DOC) AND
			(DOCS_EXT.EXTENSION = @EXT) AND
			(DOCS_FORMATO.ID_DOC_EXT = DOCS_EXT.ID_DOC_EXT)
	))
		BEGIN
			SET @EXISTE_QUERY = 1
			IF(EXISTS(
				SELECT ID_DOC
				FROM DOCS_OST2
				WHERE
					(OST = @NROOST) AND
					(MADRE = @MADRE) AND
					(EMPRESA = @IDEMPRESA) AND
					(NIVEL = @NIVEL)
			))
				BEGIN
					UPDATE OSTARBOL
					SET
						FINICERT = @CURR_FECHA
					WHERE
						(OST = @NROOST) AND
						(MADRE = @MADRE) AND
						(EMPRESA = @IDEMPRESA) AND
						(NIVEL = @NIVEL)
				END

			UPDATE OSTARBOL
			SET
				FFINCERT = '', 
				FENTDOCS = '',
				FFINVALIDA = '',
				FFINVALIDA_ADMIN = ''
			WHERE
				(OST = @NROOST) AND
				(MADRE = @MADRE) AND
				(EMPRESA = @IDEMPRESA) AND
				(NIVEL = @NIVEL)
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_OSTDIVLOCAL_SELECT_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_OSTDIVLOCAL_SELECT_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_OSTDIVLOCAL_SELECT_CONTRATOST_CTTA]
(
 @NROOST		NVARCHAR(14)
) AS
BEGIN
	SELECT
		ODL.DIVISION,
		ODL.ADMINOST,
		ODL.ADMINCONTR,
		COALESCE(
			(
			  SELECT TOP 1 CONCAT(W1.NOMBRES, ' ', W1.APELLIDOS)
			  FROM WORKERS W1
			  WHERE W1.RUT = ODL.ADMINOST
			)
		, '') AS NOMBRES_ADMINOST,
		COALESCE(
			(
			  SELECT TOP 1 CONCAT(W2.NOMBRES, ' ', W2.APELLIDOS)
			  FROM WORKERS W2
			  WHERE W2.RUT = ODL.ADMINCONTR
			)
		, '') AS NOMBRES_ADMINCONTR
	FROM OSTDIVLOCAL ODL
	WHERE ODL.OST = @NROOST
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_OSTSUBC_SELECT_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_OSTSUBC_SELECT_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_OSTSUBC_SELECT_CONTRATOST_CTTA]
(
 @IDEMPRESA  NVARCHAR(10)
) AS
BEGIN
	SELECT
		OST AS NROOST,
		NIVEL,
		EMPRESA AS IDEMPRESA,
		MADRE,
		ACRONIMOMADRE,
		ACRONIMO,
		FINICIO AS FECINICIO,
		IIF(FINICIO IS NULL OR FINICIO = '19000101', 0, 1) AS TIENE_FINICIO,
		FTERMINO AS FECTERM,
		IIF(FTERMINO IS NULL OR FTERMINO = '19000101', 0, 1) AS TIENE_FTERMINO
	FROM OSTSUBC
	WHERE
		(EMPRESA = @IDEMPRESA) OR
		(MADRE = @IDEMPRESA)
	ORDER BY OST ASC
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_OSTSUBC_SELECT_POLIZAS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_OSTSUBC_SELECT_POLIZAS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_OSTSUBC_SELECT_POLIZAS_CTTA]   
(
@EMPRESA NVARCHAR(10) = NULL
) AS           
BEGIN    
  
	SELECT DISTINCT OST 
	FROM OSTSUBC 
	WHERE (EMPRESA=@EMPRESA OR MADRE= @EMPRESA) 
	AND FTERMINO >= GETDATE() 
	AND AUTOR='SI'
  
END
/****** Object:  StoredProcedure [dbo].[V4MVC_POLIZAS_DELETE_EDITAR_DATATABLE_POLIZAS_CTTA]    Script Date: 9/11/2020 14:49:42 ******/
SET ANSI_NULLS ON
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_PAIS_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_PAIS_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_PAIS_SELECT]
AS
BEGIN
   SELECT DISTINCT PAIS FROM PAIS ORDER BY PAIS ASC
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_PARAMETROS_V2_CURSOS_RESTRICCIONES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_PARAMETROS_V2_CURSOS_RESTRICCIONES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_PARAMETROS_V2_CURSOS_RESTRICCIONES_CTTA]
( @CODIGO   INT = NULL)
AS
BEGIN
	DECLARE @QUERY NVARCHAR(MAX)
	DECLARE @VAR1 NVARCHAR(500) = ''
	DECLARE @VAR2 NVARCHAR(500) = ''
	SELECT	@VAR1 = Valor1 FROM	PARAMETROS_V2 WHERE	DESCRIPCION = 'Cursos A1'
    SELECT	@VAR2 = Valor1 FROM	PARAMETROS_V2 WHERE	DESCRIPCION = 'Cursos Persona Nueva'
    SET @QUERY = 'DECLARE @RESTRICCION INT = 0
				  IF '''+ @VAR1 +''' IS NOT NULL
					IF EXISTS(SELECT * FROM A141_CURSOS WHERE (CODIGO = '+ CAST(@CODIGO AS NVARCHAR) + ') AND (CURSO IN ( '+ @VAR1 +')))
						SET @RESTRICCION = 1
				  IF '''+ @VAR2 +''' IS NOT NULL
					IF EXISTS(SELECT * FROM A141_CURSOS WHERE (CODIGO = ' + CAST(@CODIGO AS NVARCHAR) + ') AND (CURSO IN ('+ @VAR1 +')))
						SET @RESTRICCION = 2
				  SELECT @RESTRICCION AS RESTRICCION'
	EXEC(@QUERY)

ENDIF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_PARAMETROS_V2_SELECT_BY_DESCRIPCION_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_PARAMETROS_V2_SELECT_BY_DESCRIPCION_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_PARAMETROS_V2_SELECT_BY_DESCRIPCION_CTTA]
(
 @DESCRIPCION	NVARCHAR(50)
)
AS
BEGIN

	SELECT	ISNULL(Valor1,-1) AS Valor1
	FROM	PARAMETROS_V2
	WHERE	DESCRIPCION = @DESCRIPCION

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_PARAMETROS_V2_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_PARAMETROS_V2_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_PARAMETROS_V2_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @Id_Parametro	INT
) AS
BEGIN
	SELECT
		TOP 1
		Valor1
	FROM PARAMETROS_V2
	WHERE Id_Parametro = @Id_Parametro
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_PARAMETROS_V2_SELECT_ONE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_PARAMETROS_V2_SELECT_ONE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_PARAMETROS_V2_SELECT_ONE_V2_CONTROLLABORAL_CTTA]
(
  @DESCRIPCION	NVARCHAR(50)
) AS
BEGIN
	SELECT
		TOP 1
		ISNULL(Valor1,-1) AS Valor1
	FROM parametros_v2
	WHERE
		Descripcion = @DESCRIPCION
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_PLANILLA_COTIZACION_DELETE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_DELETE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_DELETE_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@PERIODO			NVARCHAR(6)
 ,@DIVISION			NVARCHAR(4)
 ,@OST				NVARCHAR(20)
 ,@ID_DOC			INT
 ,@USUARIO			NVARCHAR(10)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @PC_EXISTS BIT = 0
	DECLARE @PC_EMPRESA NVARCHAR(10)
	DECLARE @PC_PERIODO NVARCHAR(6)
	
	DECLARE @PC_DIVISION NVARCHAR(4)
	DECLARE @PC_OST NVARCHAR(20)
	DECLARE @PC_CANTFUNC INT
	DECLARE @PC_MONTOIMP INT
	
	DECLARE @PC_VALIDADO NVARCHAR(2)
	DECLARE @PC_ID UNIQUEIDENTIFIER
	DECLARE @PC_OBSERVACION NVARCHAR(500)
	DECLARE @PC_USUARIO NVARCHAR(20)
	DECLARE @PC_FECHAMOD NVARCHAR(8)
	DECLARE @PC_HORAMOD NVARCHAR(8)
	DECLARE @PC_CERTUSUARIO NVARCHAR(20)
	DECLARE @PC_CERTFECHA NVARCHAR(8)
	DECLARE @PC_CERTHORA NVARCHAR(8)

	
	DECLARE @DSP_ID_DISPUTA INT
	

	DECLARE @DSP_DIVISION NVARCHAR(4)
	DECLARE @DSP_OST NVARCHAR(20)

	DECLARE @DSP_ID_DOC INT
	DECLARE @DSP_ID UNIQUEIDENTIFIER
	DECLARE @DSP_USUARIO NVARCHAR(10)
	DECLARE @DSP_HORA NVARCHAR(8)
	DECLARE @DSP_OBSERVACION NVARCHAR(1000)
	DECLARE @DSP_CERTUSUARIO NVARCHAR(10)
	DECLARE @DSP_CERTFECHA NVARCHAR(8)
	DECLARE @DSP_CERTHORA NVARCHAR(8)
	DECLARE @DSP_ESTADO	NVARCHAR(2)
	DECLARE @DSP_REVALUSUARIO NVARCHAR(10)
	DECLARE @DSP_REVALFECHA	NVARCHAR(8)
	DECLARE @DSP_REVALHORA	NVARCHAR(8)
	DECLARE @DSP_OBSERVACION_REVAL	NVARCHAR(1000)
	DECLARE @DSP_VALIDADO NVARCHAR(2)
	DECLARE @DSP_PERIODO NVARCHAR(6)
	DECLARE @DSP_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0
	SET @DISPUTA_EMPRESA = ''
	SET @DISPUTA_FECHA = ''

	SELECT
		TOP 1
		@PC_EXISTS = 1,
		@PC_EMPRESA = EMPRESA,
		@PC_PERIODO = PERIODO,
		@PC_DIVISION = DIVISION,
		@PC_OST = OST,
		@PC_CANTFUNC = CANTFUNC,
		@PC_MONTOIMP = MONTOIMP, 
		@PC_VALIDADO = VALIDADO,
		@PC_ID = ID,
		@PC_OBSERVACION = OBSERVACION,
		@PC_USUARIO = USUARIO,
		@PC_FECHAMOD = FECHAMOD,
		@PC_HORAMOD = HORAMOD,
		@PC_CERTUSUARIO = CERTUSUARIO,
		@PC_CERTFECHA = CERTFECHA,
		@PC_CERTHORA = CERTHORA
	FROM PLANILLA_COTIZACION
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO AND
		DIVISION = @DIVISION AND
		OST = @OST

	IF(@PC_EXISTS = 1)
		BEGIN
			INSERT INTO PLANILLA_COTIZACION_LOG
						(
							EMPRESA,
							PERIODO,
							DIVISION,
							OST,
							ID,
							USUARIO,
							FECHAMOD,
							HORAMOD,
							VALIDADO,
							OBSERVACION,
							CANTFUNC,
							MONTOIMP,
							CERTUSUARIO,
							CERTFECHA,
							CERTHORA,
							USUARIODEL,
							FECHADEL,
							HORADEL
						)
			VALUES
						(
							@PC_EMPRESA,
							@PC_PERIODO,
							@PC_DIVISION,
							@PC_OST,
							@PC_ID,
							@PC_USUARIO,
							@PC_FECHAMOD,
							@PC_HORAMOD,
							@PC_VALIDADO,
							@PC_OBSERVACION,
							@PC_CANTFUNC,
							@PC_MONTOIMP,
							@PC_CERTUSUARIO,
							@PC_CERTFECHA,
							@PC_CERTHORA,
							@USUARIO,
							@CURR_FECHA,
							@CURR_TIEMPOFULL
						)

			/*--------------------------*/
						

			SELECT
				TOP 1
				@DISPUTA_EXISTE = 1,
				@DSP_ID_DISPUTA = ID_DISPUTA,
				@DISPUTA_EMPRESA = EMPRESA,
				@DSP_DIVISION = DIVISION,
				@DSP_OST = OST,
				@DSP_ID_DOC = ID_DOC,
				@DSP_ID = ID,
				@DSP_USUARIO = USUARIO,
				@DISPUTA_FECHA = FECHA,
				@DSP_HORA = HORA,
				@DSP_OBSERVACION = OBSERVACION,
				@DSP_CERTUSUARIO = CERTUSUARIO,
				@DSP_CERTFECHA = CERTFECHA,
				@DSP_CERTHORA = CERTHORA,
				@DSP_ESTADO = ESTADO,
				@DSP_REVALUSUARIO = REVALUSUARIO,
				@DSP_REVALFECHA = REVALFECHA,
				@DSP_REVALHORA = REVALHORA,
				@DSP_OBSERVACION_REVAL = OBSERVACION_REVAL,
				@DSP_VALIDADO = VALIDADO,
				@DSP_PERIODO = PERIODO,
				@DSP_ID_CERTIFICADO = ID_CERTIFICADO
			FROM DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ID_DOC = @ID_DOC AND
				ESTADO = 'NO'

			IF(@DISPUTA_EXISTE = 1)
				BEGIN
					INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
							(
								ID_DISPUTA,
								EMPRESA,
								DIVISION,
								OST,
								ID_DOC,
								ID,
								USUARIO,
								FECHA,
								HORA,
								OBSERVACION,
								CERTUSUARIO,
								CERTFECHA,
								CERTHORA,
								ESTADO,
								REVALUSUARIO,
								REVALFECHA,
								REVALHORA,
								OBSERVACION_REVAL,
								VALIDADO,
								PERIODO,
								ID_CERTIFICADO,
								USRMOD,
								FECHAMOD,
								HORAMOD,
								ACCION
							)
					VALUES (
								@DSP_ID_DISPUTA,
								@DISPUTA_EMPRESA,
								@DSP_DIVISION,
								@DSP_OST,
								@DSP_ID_DOC,
								@DSP_ID,
								@DSP_USUARIO,
								@DISPUTA_FECHA,
								@DSP_HORA,
								@DSP_OBSERVACION,
								@DSP_CERTUSUARIO,
								@DSP_CERTFECHA,
								@DSP_CERTHORA,
								@DSP_ESTADO,
								@DSP_REVALUSUARIO,
								@DSP_REVALFECHA,
								@DSP_REVALHORA,
								@DSP_OBSERVACION_REVAL,
								@DSP_VALIDADO,
								@DSP_PERIODO,
								@DSP_ID_CERTIFICADO,
								@USUARIO,
								@CURR_FECHA,
								@CURR_TIEMPOFULL,
								'ELIMINADO'
							)

					DELETE DOCS_DISPUTA_CLABORAL
					WHERE
						ID_DISPUTA = @DISPUTA_ID AND
						ID_DOC = @ID_DOC AND
						ESTADO = 'NO'
				END

			DELETE FROM PLANILLA_COTIZACION
			WHERE PERIODO = @PERIODO AND
			EMPRESA = @IDEMPRESA AND
			DIVISION = @DIVISION AND
			OST = @OST

		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_PLANILLA_COTIZACION_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_INSERT_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@DIVISION		NVARCHAR(4)
 ,@OST			NVARCHAR(20)
 ,@MONTOIMP		INT
 ,@CANTFUNC		INT
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN
	SET @RET_CODE = -1

	IF(EXISTS(
			SELECT
				PERIODO
			FROM PLANILLA_COTIZACION
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO AND
				DIVISION = @DIVISION AND
				OST = @OST
	))
		BEGIN
			SET @RET_CODE = 1  /*ERROR LOGICO; YA EXISTE*/
			RETURN
		END
	INSERT INTO PLANILLA_COTIZACION(PERIODO, EMPRESA, DIVISION, OST, CANTFUNC, MONTOIMP)
	VALUES (@PERIODO, @IDEMPRESA, @DIVISION, @OST, @CANTFUNC, @MONTOIMP)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_PLANILLA_COTIZACION_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_SELECT_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(11)
) AS
BEGIN
	DECLARE @ID_DOC INT = 108
	SELECT
		SS.PERIODO,
		SS.VALIDADO,
		SS.EMPRESA,
		SS.DIVISION,
		SS.OST,
		SS.ID,
		SS.UNIQUE_ID,
		SS.DOC_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		) AS DISPUTA_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ESTADO
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), ''
		) AS DISPUTA_ESTADO,
		IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		), 1 , 0) AS DISPUTA_EXISTE		
	FROM
	(
		SELECT
			PERIODO,
			VALIDADO,
			EMPRESA,
			DIVISION,
			OST,
			ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS UNIQUE_ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS DOC_ID
		FROM PLANILLA_COTIZACION
		WHERE
			EMPRESA = @IDEMPRESA
		ORDER BY PERIODO DESC
		OFFSET 0 ROWS
	) SS	
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_PLANILLA_COTIZACION_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@DIVISION		NVARCHAR(4)
 ,@OST			NVARCHAR(20)
) AS
BEGIN
	SELECT
		VALIDADO,
		STUFF(
				(
					SELECT ';' + TR.TIPO_RECHAZO
					FROM DOCS_CLABORAL_EMP_RECHAZO MR
					INNER JOIN DOCS_TIPO_RECHAZO TR
						ON MR.ID_TIPO_RECHAZO = TR.ID_TIPO_RECHAZO
					WHERE ID = PLANILLA_COTIZACION.ID FOR XML PATH ('')
				)
				, 1, 1, '') AS OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
					(
						SELECT
							TOP 1
							D.NOMBRE
						FROM DOCS D
						WHERE D.ID_DOC = @ID_DOC
					),''
				) AS NOM_DOC
	FROM PLANILLA_COTIZACION
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO AND
		DIVISION = @DIVISION AND
		OST = @OST
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_PLANILLA_COTIZACION_SELECT_ONE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_SELECT_ONE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_SELECT_ONE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@DIVISION		NVARCHAR(4)
 ,@OST			NVARCHAR(20)
) AS
BEGIN
	SELECT
		CERTUSUARIO,
		CERTFECHA,
		CERTHORA,
		VALIDADO,
		EMPRESA,
		DIVISION,
		PERIODO,
		OST
	FROM PLANILLA_COTIZACION
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO AND
		DIVISION = @DIVISION AND
		OST = @OST
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_PLANILLA_COTIZACION_SELECT_ONE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_SELECT_ONE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_SELECT_ONE_V3_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@DIVISION		NVARCHAR(4)
 ,@OST			NVARCHAR(20)
) AS
BEGIN
	SELECT
		 PERIODO,
		 EMPRESA,
		 MONTOIMP,
		 ID,
		 VALIDADO,
		 CANTFUNC,
		 OBSERVACION,
		 DIVISION,
		 OST,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = PLANILLA_COTIZACION.EMPRESA AND
					DD.PERIODO = PLANILLA_COTIZACION.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = PLANILLA_COTIZACION.ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		 ) AS DISPUTA_ID,
		 IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = PLANILLA_COTIZACION.EMPRESA AND
					DD.PERIODO = PLANILLA_COTIZACION.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = PLANILLA_COTIZACION.ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		 ), 1 , 0) AS DISPUTA_EXISTE,
		 COALESCE(
			(
				SELECT
					TOP 1
					ARCHIVO
				FROM ARCHIVOS A
				WHERE A.ID = PLANILLA_COTIZACION.ID
			), NULL
		 ) AS ADJUNTO_CONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					TIPOCONTENIDO
				FROM ARCHIVOS A
				WHERE A.ID = PLANILLA_COTIZACION.ID
			), NULL
		 ) AS ADJUNTO_TIPOCONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					NOMBRE
				FROM ARCHIVOS A
				WHERE A.ID = PLANILLA_COTIZACION.ID
			), NULL
		 ) AS ADJUNTO_NOMBRE		 	
	FROM PLANILLA_COTIZACION
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO AND
		DIVISION = @DIVISION AND
		OST = @OST
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_PLANILLA_COTIZACION_UPDATE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_UPDATE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_UPDATE_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@DIVISION		NVARCHAR(4)
 ,@OST			NVARCHAR(20)
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN
	SET @RET_CODE = -1

	IF(NOT EXISTS(
			SELECT
				PERIODO
			FROM PLANILLA_COTIZACION
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO AND
				DIVISION = @DIVISION AND
				OST = @OST
	))
		BEGIN
			SET @RET_CODE = 2  /*ERROR LOGICO; NO EXISTE*/
			RETURN
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_PLANILLA_COTIZACION_UPDATE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_UPDATE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_UPDATE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA			NVARCHAR(10)
 ,@PERIODO				NVARCHAR(6)
 ,@DIVISION				NVARCHAR(4)
 ,@ID					UNIQUEIDENTIFIER
 ,@USUARIO				NVARCHAR(10)
 ,@OST					NVARCHAR(20)
 ,@DISPUTA_ID			INT
 ,@DISPUTA_EXISTE		INT OUTPUT
 ,@DISPUTA_EMPRESA		NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA		NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @DDC_ID_DISPUTA INT
	DECLARE @DDC_DIVISION NVARCHAR(4)
	DECLARE @DDC_OST NVARCHAR(20)
	DECLARE @DDC_ID_DOC INT
	DECLARE @DDC_ID UNIQUEIDENTIFIER
	DECLARE @DDC_USUARIO NVARCHAR(10)
	DECLARE @DDC_HORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION NVARCHAR(1000)
	DECLARE @DDC_CERTUSUARIO NVARCHAR(10)
	DECLARE @DDC_CERTFECHA NVARCHAR(8)
	DECLARE @DDC_CERTHORA NVARCHAR(8)
	DECLARE @DDC_ESTADO NVARCHAR(2)
	DECLARE @DDC_REVALUSUARIO NVARCHAR(10)
	DECLARE @DDC_REVALFECHA NVARCHAR(8)
	DECLARE @DDC_REVALHORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION_REVAL NVARCHAR(1000)
	DECLARE @DDC_VALIDADO NVARCHAR(2)
	DECLARE @DDC_PERIODO NVARCHAR(6)
	DECLARE @DDC_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0

	SELECT
		TOP 1
		@DISPUTA_EXISTE = 1,
		@DDC_ID_DISPUTA = ID_DISPUTA,
		@DISPUTA_EMPRESA = EMPRESA,
		@DDC_ID_DOC = ID_DOC,
		@DDC_ID = ID,
		@DDC_USUARIO = USUARIO,
		@DISPUTA_FECHA = FECHA,
		@DDC_HORA = HORA,
		@DDC_OBSERVACION = OBSERVACION,
		@DDC_CERTUSUARIO = CERTUSUARIO,
		@DDC_CERTFECHA = CERTFECHA,
		@DDC_CERTHORA = CERTHORA,
		@DDC_ESTADO = ESTADO,
		@DDC_REVALUSUARIO = REVALUSUARIO,
		@DDC_REVALFECHA = REVALFECHA,
		@DDC_REVALHORA = REVALHORA,
		@DDC_OBSERVACION_REVAL = OBSERVACION_REVAL,
		@DDC_VALIDADO = VALIDADO,
		@DDC_PERIODO = PERIODO,
		@DDC_ID_CERTIFICADO = ID_CERTIFICADO
	FROM DOCS_DISPUTA_CLABORAL
	WHERE
		ID_DISPUTA = @DISPUTA_ID AND
		ESTADO = 'NO'

	IF(@DISPUTA_EXISTE = 1)
		BEGIN
			INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
				(
					ID_DISPUTA,
					EMPRESA,
					ID_DOC,
					ID,
					USUARIO,
					FECHA,
					HORA,
					OBSERVACION,
					CERTUSUARIO,
					CERTFECHA,
					CERTHORA,
					ESTADO,
					REVALUSUARIO,
					REVALFECHA,
					REVALHORA,
					OBSERVACION_REVAL,
					VALIDADO,
					PERIODO,
					ID_CERTIFICADO,
					USRMOD,
					FECHAMOD,
					HORAMOD,
					ACCION
				)
			VALUES 
				(
					@DDC_ID_DISPUTA,
					@DISPUTA_EMPRESA,
					@DDC_ID_DOC,
					@DDC_ID,
					@DDC_USUARIO,
					@DISPUTA_FECHA,
					@DDC_HORA,
					@DDC_OBSERVACION,
					@DDC_CERTUSUARIO,
					@DDC_CERTFECHA,
					@DDC_CERTHORA,
					@DDC_ESTADO,
					@DDC_REVALUSUARIO,
					@DDC_REVALFECHA,
					@DDC_REVALHORA,
					@DDC_OBSERVACION_REVAL,
					@DDC_VALIDADO,
					@DDC_PERIODO,
					@DDC_ID_CERTIFICADO,
					@USUARIO,
					@CURR_FECHA,
					@CURR_TIEMPOFULL,
					'ELIMINADO'
				)

			DELETE DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'
		END

		DELETE FROM ARCHIVOS
		WHERE ID = @ID

		UPDATE PLANILLA_COTIZACION
		SET
			ID = NULL,
			VALIDADO = 'NO',
			USUARIO = @USUARIO,
			FECHAMOD = @CURR_FECHA,
			HORAMOD = @CURR_TIEMPOFULL
		WHERE
			EMPRESA = @IDEMPRESA AND
			PERIODO = @PERIODO AND
			DIVISION = @DIVISION AND
			OST = @OST

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_PLANILLA_COTIZACION_UPDATE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_UPDATE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_PLANILLA_COTIZACION_UPDATE_V3_CONTROLLABORAL_CTTA]
(
  @ID			UNIQUEIDENTIFIER = NULL
 ,@USUARIO		NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@DIVISION		NVARCHAR(4)
 ,@OST			NVARCHAR(20)
 ,@MONTOIMP		INT
 ,@CANTFUNC		INT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	IF(@ID IS NOT NULL)
		BEGIN
			UPDATE PLANILLA_COTIZACION
			SET
				ID = @ID,
				VALIDADO = 'NO',
				CANTFUNC = @CANTFUNC,
				MONTOIMP = @MONTOIMP,
				USUARIO = @USUARIO,
				FECHAMOD = @CURR_FECHA,
				HORAMOD = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO) AND
				(DIVISION = @DIVISION) AND
				(OST = @OST)
		END
	ELSE
		BEGIN
			UPDATE PLANILLA_COTIZACION
			SET
				VALIDADO = 'NO',
				CANTFUNC = @CANTFUNC,
				MONTOIMP = @MONTOIMP,
				USUARIO = @USUARIO,
				FECHAMOD = @CURR_FECHA,
				HORAMOD = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO) AND
				(DIVISION = @DIVISION) AND
				(OST = @OST)
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTE_DELETE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_DELETE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_DELETE_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@PERIODO			NVARCHAR(6)
 ,@USUARIO			NVARCHAR(10)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @PM_EXISTS BIT = 0
	DECLARE @PM_EMPRESA NVARCHAR(10)
	DECLARE @PM_PERIODO NVARCHAR(6)
	DECLARE @PM_VALIDADO NVARCHAR(2)
	DECLARE @PM_ID UNIQUEIDENTIFIER
	DECLARE @PM_OBSERVACION NVARCHAR(500)
	DECLARE @PM_USUARIO NVARCHAR(20)
	DECLARE @PM_FECHAMOD NVARCHAR(8)
	DECLARE @PM_HORAMOD NVARCHAR(8)
	DECLARE @PM_CERTUSUARIO NVARCHAR(20)
	DECLARE @PM_CERTFECHA NVARCHAR(8)
	DECLARE @PM_CERTHORA NVARCHAR(8)

	
	DECLARE @DSP_ID_DISPUTA INT
	DECLARE @DSP_ID_DOC INT
	DECLARE @DSP_ID UNIQUEIDENTIFIER
	DECLARE @DSP_USUARIO NVARCHAR(10)
	DECLARE @DSP_HORA NVARCHAR(8)
	DECLARE @DSP_OBSERVACION NVARCHAR(1000)
	DECLARE @DSP_CERTUSUARIO NVARCHAR(10)
	DECLARE @DSP_CERTFECHA NVARCHAR(8)
	DECLARE @DSP_CERTHORA NVARCHAR(8)
	DECLARE @DSP_ESTADO	NVARCHAR(2)
	DECLARE @DSP_REVALUSUARIO NVARCHAR(10)
	DECLARE @DSP_REVALFECHA	NVARCHAR(8)
	DECLARE @DSP_REVALHORA	NVARCHAR(8)
	DECLARE @DSP_OBSERVACION_REVAL	NVARCHAR(1000)
	DECLARE @DSP_VALIDADO NVARCHAR(2)
	DECLARE @DSP_PERIODO NVARCHAR(6)
	DECLARE @DSP_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE  = 0
	SET @DISPUTA_EMPRESA = ''
	SET @DISPUTA_FECHA = ''

	SELECT
		TOP 1
		@PM_EXISTS = 1,
		@PM_EMPRESA = EMPRESA,
		@PM_PERIODO = PERIODO,
		@PM_VALIDADO = VALIDADO,
		@PM_ID = ID,
		@PM_OBSERVACION = OBSERVACION,
		@PM_USUARIO = USUARIO,
		@PM_FECHAMOD = FECHAMOD,
		@PM_HORAMOD = HORAMOD,
		@PM_CERTUSUARIO = CERTUSUARIO,
		@PM_CERTFECHA = CERTFECHA,
		@PM_CERTHORA = CERTHORA
	FROM POLIZA_MUERTE
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO

	IF(@PM_EXISTS = 1)
		BEGIN
			INSERT INTO POLIZA_MUERTE_LOG
						(
							EMPRESA,
							PERIODO,
							ID,
							USUARIO,
							FECHAMOD,
							HORAMOD,
							VALIDADO,
							OBSERVACION,
							CERTUSUARIO,
							CERTFECHA,
							CERTHORA,
							USUARIODEL,
							FECHADEL,
							HORADEL
						)
			VALUES
						(
							@PM_EMPRESA,
							@PM_PERIODO,
							@PM_ID,
							@PM_USUARIO,
							@PM_FECHAMOD,
							@PM_HORAMOD,
							@PM_VALIDADO,
							@PM_OBSERVACION,
							@PM_CERTUSUARIO,
							@PM_CERTFECHA,
							@PM_CERTHORA,
							@USUARIO,
							@CURR_FECHA,
							@CURR_TIEMPOFULL
						)

			/*--------------------------*/

			SELECT
				TOP 1
				@DISPUTA_EXISTE = 1,
				@DSP_ID_DISPUTA = ID_DISPUTA,
				@DISPUTA_EMPRESA = EMPRESA,
				@DSP_ID_DOC = ID_DOC,
				@DSP_ID = ID,
				@DSP_USUARIO = USUARIO,
				@DISPUTA_FECHA = FECHA,
				@DSP_HORA = HORA,
				@DSP_OBSERVACION = OBSERVACION,
				@DSP_CERTUSUARIO = CERTUSUARIO,
				@DSP_CERTFECHA = CERTFECHA,
				@DSP_CERTHORA = CERTHORA,
				@DSP_ESTADO = ESTADO,
				@DSP_REVALUSUARIO = REVALUSUARIO,
				@DSP_REVALFECHA = REVALFECHA,
				@DSP_REVALHORA = REVALHORA,
				@DSP_OBSERVACION_REVAL = OBSERVACION_REVAL,
				@DSP_VALIDADO = VALIDADO,
				@DSP_PERIODO = PERIODO,
				@DSP_ID_CERTIFICADO = ID_CERTIFICADO
			FROM DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'

			IF(@DISPUTA_EXISTE = 1)
				BEGIN
					INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
							(
								ID_DISPUTA,
								EMPRESA,
								ID_DOC,
								ID,
								USUARIO,
								FECHA,
								HORA,
								OBSERVACION,
								CERTUSUARIO,
								CERTFECHA,
								CERTHORA,
								ESTADO,
								REVALUSUARIO,
								REVALFECHA,
								REVALHORA,
								OBSERVACION_REVAL,
								VALIDADO,
								PERIODO,
								ID_CERTIFICADO,
								USRMOD,
								FECHAMOD,
								HORAMOD,
								ACCION
							)
					VALUES (
								@DSP_ID_DISPUTA,
								@DISPUTA_EMPRESA,
								@DSP_ID_DOC,
								@DSP_ID,
								@DSP_USUARIO,
								@DISPUTA_FECHA,
								@DSP_HORA,
								@DSP_OBSERVACION,
								@DSP_CERTUSUARIO,
								@DSP_CERTFECHA,
								@DSP_CERTHORA,
								@DSP_ESTADO,
								@DSP_REVALUSUARIO,
								@DSP_REVALFECHA,
								@DSP_REVALHORA,
								@DSP_OBSERVACION_REVAL,
								@DSP_VALIDADO,
								@DSP_PERIODO,
								@DSP_ID_CERTIFICADO,
								@USUARIO,
								@CURR_FECHA,
								@CURR_TIEMPOFULL,
								'ELIMINADO'
							)

					DELETE DOCS_DISPUTA_CLABORAL
					WHERE ID_DISPUTA = @DISPUTA_ID AND ESTADO = 'NO'
				END

			DELETE FROM POLIZA_MUERTE
			WHERE PERIODO = @PERIODO AND EMPRESA = @IDEMPRESA

		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTE_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_INSERT_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN

	SET @RET_CODE = -1

	IF(EXISTS(
			SELECT
				PERIODO
			FROM POLIZA_MUERTE
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 1  /*ERROR LOGICO; YA EXISTE*/
			RETURN
		END
	INSERT INTO POLIZA_MUERTE(PERIODO, EMPRESA)
	VALUES (@PERIODO, @IDEMPRESA)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTE_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_SELECT_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(11)
) AS
BEGIN
	DECLARE @ID_DOC INT = 110
	SELECT
		SS.PERIODO,
		SS.VALIDADO,
		SS.EMPRESA,
		SS.ID,
		SS.UNIQUE_ID,
		SS.DOC_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		) AS DISPUTA_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ESTADO
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), ''
		) AS DISPUTA_ESTADO,
		IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		), 1 , 0) AS DISPUTA_EXISTE		
	FROM
	(
		SELECT
			PERIODO,
			VALIDADO,
			EMPRESA,
			ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS UNIQUE_ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS DOC_ID
		FROM POLIZA_MUERTE
		WHERE
			EMPRESA = @IDEMPRESA
		ORDER BY PERIODO DESC
		OFFSET 0 ROWS
	) SS	
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTE_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		VALIDADO,
		(CASE WHEN OBSERVACION IS NULL THEN STUFF(
													(
													  SELECT
															';' + TR.TIPO_RECHAZO
													  FROM DOCS_CLABORAL_EMP_RECHAZO MR
													  INNER JOIN DOCS_TIPO_RECHAZO TR
														ON MR.ID_TIPO_RECHAZO = TR.ID_TIPO_RECHAZO
													  WHERE ID = POLIZA_MUERTE.ID FOR XML PATH ('')
													 ), 1, 1, '')
		 ELSE OBSERVACION END) AS OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
					(
						SELECT
							TOP 1
							D.NOMBRE
						FROM DOCS D
						WHERE D.ID_DOC = @ID_DOC
					),''
				) AS NOM_DOC
	FROM POLIZA_MUERTE
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTE_SELECT_ONE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_SELECT_ONE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_SELECT_ONE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		CERTUSUARIO,
		CERTFECHA,
		CERTHORA,
		VALIDADO,
		EMPRESA,
		PERIODO
	FROM POLIZA_MUERTE
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTE_SELECT_ONE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_SELECT_ONE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_SELECT_ONE_V3_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		 PERIODO,
		 EMPRESA,
		 ID,
		 VALIDADO,
		 OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = POLIZA_MUERTE.EMPRESA AND
					DD.PERIODO = POLIZA_MUERTE.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = POLIZA_MUERTE.ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		 ) AS DISPUTA_ID,
		 IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = POLIZA_MUERTE.EMPRESA AND
					DD.PERIODO = POLIZA_MUERTE.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = POLIZA_MUERTE.ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		 ), 1 , 0) AS DISPUTA_EXISTE,
		 COALESCE(
			(
				SELECT
					TOP 1
					ARCHIVO
				FROM ARCHIVOS A
				WHERE A.ID = POLIZA_MUERTE.ID
			), NULL
		 ) AS ADJUNTO_CONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					TIPOCONTENIDO
				FROM ARCHIVOS A
				WHERE A.ID = POLIZA_MUERTE.ID
			), NULL
		 ) AS ADJUNTO_TIPOCONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					NOMBRE
				FROM ARCHIVOS A
				WHERE A.ID = POLIZA_MUERTE.ID
			), NULL
		 ) AS ADJUNTO_NOMBRE	
	FROM POLIZA_MUERTE
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTE_UPDATE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_UPDATE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_UPDATE_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN
	
	SET @RET_CODE = -1

	IF(NOT EXISTS(
			SELECT
				PERIODO
			FROM POLIZA_MUERTE
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 2  /*ERROR LOGICO; NO EXISTE*/
			RETURN
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTE_UPDATE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_UPDATE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_UPDATE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA			NVARCHAR(10)
 ,@PERIODO				NVARCHAR(6)
 ,@ID					UNIQUEIDENTIFIER
 ,@USUARIO				NVARCHAR(10)
 ,@DISPUTA_ID			INT
 ,@DISPUTA_EXISTE		INT OUTPUT
 ,@DISPUTA_EMPRESA		NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA		NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @DDC_ID_DISPUTA INT
	DECLARE @DDC_ID_DOC INT
	DECLARE @DDC_ID UNIQUEIDENTIFIER
	DECLARE @DDC_USUARIO NVARCHAR(10)
	DECLARE @DDC_HORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION NVARCHAR(1000)
	DECLARE @DDC_CERTUSUARIO NVARCHAR(10)
	DECLARE @DDC_CERTFECHA NVARCHAR(8)
	DECLARE @DDC_CERTHORA NVARCHAR(8)
	DECLARE @DDC_ESTADO NVARCHAR(2)
	DECLARE @DDC_REVALUSUARIO NVARCHAR(10)
	DECLARE @DDC_REVALFECHA NVARCHAR(8)
	DECLARE @DDC_REVALHORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION_REVAL NVARCHAR(1000)
	DECLARE @DDC_VALIDADO NVARCHAR(2)
	DECLARE @DDC_PERIODO NVARCHAR(6)
	DECLARE @DDC_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0

	SELECT
		TOP 1
		@DISPUTA_EXISTE = 1,
		@DDC_ID_DISPUTA = ID_DISPUTA,
		@DISPUTA_EMPRESA = EMPRESA,
		@DDC_ID_DOC = ID_DOC,
		@DDC_ID = ID,
		@DDC_USUARIO = USUARIO,
		@DISPUTA_FECHA = FECHA,
		@DDC_HORA = HORA,
		@DDC_OBSERVACION = OBSERVACION,
		@DDC_CERTUSUARIO = CERTUSUARIO,
		@DDC_CERTFECHA = CERTFECHA,
		@DDC_CERTHORA = CERTHORA,
		@DDC_ESTADO = ESTADO,
		@DDC_REVALUSUARIO = REVALUSUARIO,
		@DDC_REVALFECHA = REVALFECHA,
		@DDC_REVALHORA = REVALHORA,
		@DDC_OBSERVACION_REVAL = OBSERVACION_REVAL,
		@DDC_VALIDADO = VALIDADO,
		@DDC_PERIODO = PERIODO,
		@DDC_ID_CERTIFICADO = ID_CERTIFICADO
	FROM DOCS_DISPUTA_CLABORAL
	WHERE
		ID_DISPUTA = @DISPUTA_ID AND
		ESTADO = 'NO'

	IF(@DISPUTA_EXISTE = 1)
		BEGIN
			INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
				(
					ID_DISPUTA,
					EMPRESA,
					ID_DOC,
					ID,
					USUARIO,
					FECHA,
					HORA,
					OBSERVACION,
					CERTUSUARIO,
					CERTFECHA,
					CERTHORA,
					ESTADO,
					REVALUSUARIO,
					REVALFECHA,
					REVALHORA,
					OBSERVACION_REVAL,
					VALIDADO,
					PERIODO,
					ID_CERTIFICADO,
					USRMOD,
					FECHAMOD,
					HORAMOD,
					ACCION
				)
			VALUES 
				(
					@DDC_ID_DISPUTA,
					@DISPUTA_EMPRESA,
					@DDC_ID_DOC,
					@DDC_ID,
					@DDC_USUARIO,
					@DISPUTA_FECHA,
					@DDC_HORA,
					@DDC_OBSERVACION,
					@DDC_CERTUSUARIO,
					@DDC_CERTFECHA,
					@DDC_CERTHORA,
					@DDC_ESTADO,
					@DDC_REVALUSUARIO,
					@DDC_REVALFECHA,
					@DDC_REVALHORA,
					@DDC_OBSERVACION_REVAL,
					@DDC_VALIDADO,
					@DDC_PERIODO,
					@DDC_ID_CERTIFICADO,
					@USUARIO,
					@CURR_FECHA,
					@CURR_TIEMPOFULL,
					'ELIMINADO'
				)

			DELETE DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'
		END

		DELETE FROM ARCHIVOS
		WHERE ID = @ID

		UPDATE POLIZA_MUERTE
		SET
			ID = NULL,
			VALIDADO = 'NO',
			USUARIO = @USUARIO,
			FECHAMOD = @CURR_FECHA,
			HORAMOD = @CURR_TIEMPOFULL
		WHERE
			EMPRESA = @IDEMPRESA AND
			PERIODO = @PERIODO

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTE_UPDATE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_UPDATE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTE_UPDATE_V3_CONTROLLABORAL_CTTA]
(
  @ID			UNIQUEIDENTIFIER = NULL
 ,@USUARIO		NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	IF(@ID IS NOT NULL)
		BEGIN
			UPDATE POLIZA_MUERTE
			SET
				ID = @ID,
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHAMOD = @CURR_FECHA,
				HORAMOD = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO)
		END
	ELSE
		BEGIN
			UPDATE POLIZA_MUERTE
			SET
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHAMOD = @CURR_FECHA,
				HORAMOD = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO)
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTENATURAL_DELETE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_DELETE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_DELETE_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@PERIODO			NVARCHAR(6)
 ,@USUARIO			NVARCHAR(10)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @PMN_EXISTS BIT = 0
	DECLARE @PMN_EMPRESA NVARCHAR(10)
	DECLARE @PMN_PERIODO NVARCHAR(6)
	DECLARE @PMN_VALIDADO NVARCHAR(2)
	DECLARE @PMN_ID UNIQUEIDENTIFIER
	DECLARE @PMN_OBSERVACION NVARCHAR(500)
	DECLARE @PMN_USUARIO NVARCHAR(20)
	DECLARE @PMN_FECHAMOD NVARCHAR(8)
	DECLARE @PMN_HORAMOD NVARCHAR(8)
	DECLARE @PMN_CERTUSUARIO NVARCHAR(20)
	DECLARE @PMN_CERTFECHA NVARCHAR(8)
	DECLARE @PMN_CERTHORA NVARCHAR(8)

	
	DECLARE @DSP_ID_DISPUTA INT
	
	DECLARE @DSP_ID_DOC INT
	DECLARE @DSP_ID UNIQUEIDENTIFIER
	DECLARE @DSP_USUARIO NVARCHAR(10)
	DECLARE @DSP_HORA NVARCHAR(8)
	DECLARE @DSP_OBSERVACION NVARCHAR(1000)
	DECLARE @DSP_CERTUSUARIO NVARCHAR(10)
	DECLARE @DSP_CERTFECHA NVARCHAR(8)
	DECLARE @DSP_CERTHORA NVARCHAR(8)
	DECLARE @DSP_ESTADO	NVARCHAR(2)
	DECLARE @DSP_REVALUSUARIO NVARCHAR(10)
	DECLARE @DSP_REVALFECHA	NVARCHAR(8)
	DECLARE @DSP_REVALHORA	NVARCHAR(8)
	DECLARE @DSP_OBSERVACION_REVAL	NVARCHAR(1000)
	DECLARE @DSP_VALIDADO NVARCHAR(2)
	DECLARE @DSP_PERIODO NVARCHAR(6)
	DECLARE @DSP_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0
	SET @DISPUTA_EMPRESA = ''
	SET @DISPUTA_FECHA = ''

	SELECT
		TOP 1
		@PMN_EXISTS = 1,
		@PMN_EMPRESA = EMPRESA,
		@PMN_PERIODO = PERIODO,
		@PMN_VALIDADO = VALIDADO,
		@PMN_ID = ID,
		@PMN_OBSERVACION = OBSERVACION,
		@PMN_USUARIO = USUARIO,
		@PMN_FECHAMOD = FECHAMOD,
		@PMN_HORAMOD = HORAMOD,
		@PMN_CERTUSUARIO = CERTUSUARIO,
		@PMN_CERTFECHA = CERTFECHA,
		@PMN_CERTHORA = CERTHORA
	FROM POLIZA_MUERTENATURAL
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO

	IF(@PMN_EXISTS = 1)
		BEGIN
			INSERT INTO POLIZA_MUERTENATURAL_LOG
						(
							EMPRESA,
							PERIODO,
							ID,
							USUARIO,
							FECHAMOD,
							HORAMOD,
							VALIDADO,
							OBSERVACION,
							CERTUSUARIO,
							CERTFECHA,
							CERTHORA,
							USUARIODEL,
							FECHADEL,
							HORADEL
						)
			VALUES
						(
							@PMN_EMPRESA,
							@PMN_PERIODO,
							@PMN_ID,
							@PMN_USUARIO,
							@PMN_FECHAMOD,
							@PMN_HORAMOD,
							@PMN_VALIDADO,
							@PMN_OBSERVACION,
							@PMN_CERTUSUARIO,
							@PMN_CERTFECHA,
							@PMN_CERTHORA,
							@USUARIO,
							@CURR_FECHA,
							@CURR_TIEMPOFULL
						)

			/*--------------------------*/

			SELECT
				TOP 1
				@DISPUTA_EXISTE = 1,
				@DSP_ID_DISPUTA = ID_DISPUTA,
				@DISPUTA_EMPRESA = EMPRESA,
				@DSP_ID_DOC = ID_DOC,
				@DSP_ID = ID,
				@DSP_USUARIO = USUARIO,
				@DISPUTA_FECHA = FECHA,
				@DSP_HORA = HORA,
				@DSP_OBSERVACION = OBSERVACION,
				@DSP_CERTUSUARIO = CERTUSUARIO,
				@DSP_CERTFECHA = CERTFECHA,
				@DSP_CERTHORA = CERTHORA,
				@DSP_ESTADO = ESTADO,
				@DSP_REVALUSUARIO = REVALUSUARIO,
				@DSP_REVALFECHA = REVALFECHA,
				@DSP_REVALHORA = REVALHORA,
				@DSP_OBSERVACION_REVAL = OBSERVACION_REVAL,
				@DSP_VALIDADO = VALIDADO,
				@DSP_PERIODO = PERIODO,
				@DSP_ID_CERTIFICADO = ID_CERTIFICADO
			FROM DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'

			IF(@DISPUTA_EXISTE = 1)
				BEGIN
					INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
							(
								ID_DISPUTA,
								EMPRESA,
								ID_DOC,
								ID,
								USUARIO,
								FECHA,
								HORA,
								OBSERVACION,
								CERTUSUARIO,
								CERTFECHA,
								CERTHORA,
								ESTADO,
								REVALUSUARIO,
								REVALFECHA,
								REVALHORA,
								OBSERVACION_REVAL,
								VALIDADO,
								PERIODO,
								ID_CERTIFICADO,
								USRMOD,
								FECHAMOD,
								HORAMOD,
								ACCION
							)
					VALUES (
								@DSP_ID_DISPUTA,
								@DISPUTA_EMPRESA,
								@DSP_ID_DOC,
								@DSP_ID,
								@DSP_USUARIO,
								@DISPUTA_FECHA,
								@DSP_HORA,
								@DSP_OBSERVACION,
								@DSP_CERTUSUARIO,
								@DSP_CERTFECHA,
								@DSP_CERTHORA,
								@DSP_ESTADO,
								@DSP_REVALUSUARIO,
								@DSP_REVALFECHA,
								@DSP_REVALHORA,
								@DSP_OBSERVACION_REVAL,
								@DSP_VALIDADO,
								@DSP_PERIODO,
								@DSP_ID_CERTIFICADO,
								@USUARIO,
								@CURR_FECHA,
								@CURR_TIEMPOFULL,
								'ELIMINADO'
							)

					DELETE DOCS_DISPUTA_CLABORAL
					WHERE ID_DISPUTA = @DISPUTA_ID AND ESTADO = 'NO'
				END

			DELETE FROM POLIZA_MUERTENATURAL
			WHERE PERIODO = @PERIODO AND EMPRESA = @IDEMPRESA

		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTENATURAL_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_INSERT_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN

	SET @RET_CODE = -1

	IF(EXISTS(
			SELECT
				PERIODO
			FROM POLIZA_MUERTENATURAL
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 1  /*ERROR LOGICO; YA EXISTE*/
			RETURN
		END
	INSERT INTO POLIZA_MUERTENATURAL(PERIODO, EMPRESA)
	VALUES (@PERIODO, @IDEMPRESA)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTENATURAL_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_SELECT_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(11)
) AS
BEGIN
	DECLARE @ID_DOC INT = -1
	
	SELECT
		TOP 1
		@ID_DOC = ISNULL(Valor1, -1)
	FROM parametros_v2
	WHERE Descripcion = 'Pago de Poliza Muerte Natural'
	
	SELECT
		SS.PERIODO,
		SS.VALIDADO,
		SS.EMPRESA,
		SS.ID,
		SS.UNIQUE_ID,
		SS.DOC_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		) AS DISPUTA_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ESTADO
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), ''
		) AS DISPUTA_ESTADO,
		IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		), 1 , 0) AS DISPUTA_EXISTE		
	FROM
	(
		SELECT
			PERIODO,
			VALIDADO,
			EMPRESA,
			ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS UNIQUE_ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS DOC_ID
		FROM POLIZA_MUERTENATURAL
		WHERE
			EMPRESA = @IDEMPRESA
		ORDER BY PERIODO DESC
		OFFSET 0 ROWS
	) SS	
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTENATURAL_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	IF(@ID_DOC = -1)
		BEGIN
			SELECT
				TOP 1 
				@ID_DOC = CONVERT(INT, ISNULL(Valor1,-1))
			FROM parametros_v2
			WHERE
				Descripcion = 'Pago de Poliza Muerte Natural'
		END

	SELECT
		VALIDADO,
		(CASE WHEN OBSERVACION IS NULL THEN STUFF(
													(
													  SELECT
															';' + TR.TIPO_RECHAZO
													  FROM DOCS_CLABORAL_EMP_RECHAZO MR
													  INNER JOIN DOCS_TIPO_RECHAZO TR
														ON MR.ID_TIPO_RECHAZO = TR.ID_TIPO_RECHAZO
													  WHERE ID = POLIZA_MUERTENATURAL.ID FOR XML PATH ('')
													 ), 1, 1, '')
		 ELSE OBSERVACION END) AS OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
					(
						SELECT
							TOP 1
							D.NOMBRE
						FROM DOCS D
						WHERE D.ID_DOC = @ID_DOC
					),''
				) AS NOM_DOC
	FROM POLIZA_MUERTENATURAL
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTENATURAL_SELECT_ONE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_SELECT_ONE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_SELECT_ONE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		CERTUSUARIO,
		CERTFECHA,
		CERTHORA,
		VALIDADO,
		EMPRESA,
		PERIODO
	FROM POLIZA_MUERTENATURAL
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTENATURAL_SELECT_ONE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_SELECT_ONE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_SELECT_ONE_V3_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	IF(@ID_DOC = -1)
		BEGIN
			SELECT
				TOP 1 
				@ID_DOC = CONVERT(INT, ISNULL(Valor1,-1))
			FROM parametros_v2
			WHERE
				Descripcion = 'Pago de Poliza Muerte Natural'
		END
	SELECT
		 PERIODO,
		 EMPRESA,
		 ID,
		 VALIDADO,
		 OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = POLIZA_MUERTENATURAL.EMPRESA AND
					DD.PERIODO = POLIZA_MUERTENATURAL.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = POLIZA_MUERTENATURAL.ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		 ) AS DISPUTA_ID,
		 IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = POLIZA_MUERTENATURAL.EMPRESA AND
					DD.PERIODO = POLIZA_MUERTENATURAL.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = POLIZA_MUERTENATURAL.ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		 ), 1 , 0) AS DISPUTA_EXISTE,
		 COALESCE(
			(
				SELECT
					TOP 1
					ARCHIVO
				FROM ARCHIVOS A
				WHERE A.ID = POLIZA_MUERTENATURAL.ID
			), NULL
		 ) AS ADJUNTO_CONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					TIPOCONTENIDO
				FROM ARCHIVOS A
				WHERE A.ID = POLIZA_MUERTENATURAL.ID
			), NULL
		 ) AS ADJUNTO_TIPOCONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					NOMBRE
				FROM ARCHIVOS A
				WHERE A.ID = POLIZA_MUERTENATURAL.ID
			), NULL
		 ) AS ADJUNTO_NOMBRE	
	FROM POLIZA_MUERTENATURAL
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTENATURAL_UPDATE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_UPDATE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_UPDATE_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN

	SET @RET_CODE = -1
	
	IF(NOT EXISTS(
			SELECT
				PERIODO
			FROM POLIZA_MUERTENATURAL
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 2  /*ERROR LOGICO; NO EXISTE*/
			RETURN
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTENATURAL_UPDATE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_UPDATE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_UPDATE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA			NVARCHAR(10)
 ,@PERIODO				NVARCHAR(6)
 ,@ID					UNIQUEIDENTIFIER
 ,@USUARIO				NVARCHAR(10)
 ,@DISPUTA_ID			INT
 ,@DISPUTA_EXISTE		INT OUTPUT
 ,@DISPUTA_EMPRESA		NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA		NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @DDC_ID_DISPUTA INT
	DECLARE @DDC_ID_DOC INT
	DECLARE @DDC_ID UNIQUEIDENTIFIER
	DECLARE @DDC_USUARIO NVARCHAR(10)
	DECLARE @DDC_HORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION NVARCHAR(1000)
	DECLARE @DDC_CERTUSUARIO NVARCHAR(10)
	DECLARE @DDC_CERTFECHA NVARCHAR(8)
	DECLARE @DDC_CERTHORA NVARCHAR(8)
	DECLARE @DDC_ESTADO NVARCHAR(2)
	DECLARE @DDC_REVALUSUARIO NVARCHAR(10)
	DECLARE @DDC_REVALFECHA NVARCHAR(8)
	DECLARE @DDC_REVALHORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION_REVAL NVARCHAR(1000)
	DECLARE @DDC_VALIDADO NVARCHAR(2)
	DECLARE @DDC_PERIODO NVARCHAR(6)
	DECLARE @DDC_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0

	SELECT
		TOP 1
		@DISPUTA_EXISTE = 1,
		@DDC_ID_DISPUTA = ID_DISPUTA,
		@DISPUTA_EMPRESA = EMPRESA,
		@DDC_ID_DOC = ID_DOC,
		@DDC_ID = ID,
		@DDC_USUARIO = USUARIO,
		@DISPUTA_FECHA = FECHA,
		@DDC_HORA = HORA,
		@DDC_OBSERVACION = OBSERVACION,
		@DDC_CERTUSUARIO = CERTUSUARIO,
		@DDC_CERTFECHA = CERTFECHA,
		@DDC_CERTHORA = CERTHORA,
		@DDC_ESTADO = ESTADO,
		@DDC_REVALUSUARIO = REVALUSUARIO,
		@DDC_REVALFECHA = REVALFECHA,
		@DDC_REVALHORA = REVALHORA,
		@DDC_OBSERVACION_REVAL = OBSERVACION_REVAL,
		@DDC_VALIDADO = VALIDADO,
		@DDC_PERIODO = PERIODO,
		@DDC_ID_CERTIFICADO = ID_CERTIFICADO
	FROM DOCS_DISPUTA_CLABORAL
	WHERE
		ID_DISPUTA = @DISPUTA_ID AND
		ESTADO = 'NO'

	IF(@DISPUTA_EXISTE = 1)
		BEGIN
			INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
				(
					ID_DISPUTA,
					EMPRESA,
					ID_DOC,
					ID,
					USUARIO,
					FECHA,
					HORA,
					OBSERVACION,
					CERTUSUARIO,
					CERTFECHA,
					CERTHORA,
					ESTADO,
					REVALUSUARIO,
					REVALFECHA,
					REVALHORA,
					OBSERVACION_REVAL,
					VALIDADO,
					PERIODO,
					ID_CERTIFICADO,
					USRMOD,
					FECHAMOD,
					HORAMOD,
					ACCION
				)
			VALUES 
				(
					@DDC_ID_DISPUTA,
					@DISPUTA_EMPRESA,
					@DDC_ID_DOC,
					@DDC_ID,
					@DDC_USUARIO,
					@DISPUTA_FECHA,
					@DDC_HORA,
					@DDC_OBSERVACION,
					@DDC_CERTUSUARIO,
					@DDC_CERTFECHA,
					@DDC_CERTHORA,
					@DDC_ESTADO,
					@DDC_REVALUSUARIO,
					@DDC_REVALFECHA,
					@DDC_REVALHORA,
					@DDC_OBSERVACION_REVAL,
					@DDC_VALIDADO,
					@DDC_PERIODO,
					@DDC_ID_CERTIFICADO,
					@USUARIO,
					@CURR_FECHA,
					@CURR_TIEMPOFULL,
					'ELIMINADO'
				)

			DELETE DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'
		END

		DELETE FROM ARCHIVOS
		WHERE ID = @ID

		UPDATE POLIZA_MUERTENATURAL
		SET
			ID = NULL,
			VALIDADO = 'NO',
			USUARIO = @USUARIO,
			FECHAMOD = @CURR_FECHA,
			HORAMOD = @CURR_TIEMPOFULL
		WHERE
			EMPRESA = @IDEMPRESA AND
			PERIODO = @PERIODO

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_MUERTENATURAL_UPDATE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_UPDATE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_MUERTENATURAL_UPDATE_V3_CONTROLLABORAL_CTTA]
(
  @ID			UNIQUEIDENTIFIER = NULL
 ,@USUARIO		NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	IF(@ID IS NOT NULL)
		BEGIN
			UPDATE POLIZA_MUERTENATURAL
			SET
				ID = @ID,
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHAMOD = @CURR_FECHA,
				HORAMOD = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO)
		END
	ELSE
		BEGIN
			UPDATE POLIZA_MUERTENATURAL
			SET
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHAMOD = @CURR_FECHA,
				HORAMOD = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO)
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_SALUD_DELETE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_DELETE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_DELETE_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@PERIODO			NVARCHAR(6)
 ,@USUARIO			NVARCHAR(10)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @PS_EXISTS BIT = 0
	DECLARE @PS_EMPRESA NVARCHAR(10)
	DECLARE @PS_PERIODO NVARCHAR(6)
	DECLARE @PS_VALIDADO NVARCHAR(2)
	DECLARE @PS_ID UNIQUEIDENTIFIER
	DECLARE @PS_OBSERVACION NVARCHAR(500)
	DECLARE @PS_USUARIO NVARCHAR(20)
	DECLARE @PS_FECHAMOD NVARCHAR(8)
	DECLARE @PS_HORAMOD NVARCHAR(8)
	DECLARE @PS_CERTUSUARIO NVARCHAR(20)
	DECLARE @PS_CERTFECHA NVARCHAR(8)
	DECLARE @PS_CERTHORA NVARCHAR(8)

	DECLARE @DSP_ID_DISPUTA INT
	DECLARE @DSP_ID_DOC INT
	DECLARE @DSP_ID UNIQUEIDENTIFIER
	DECLARE @DSP_USUARIO NVARCHAR(10)
	DECLARE @DSP_HORA NVARCHAR(8)
	DECLARE @DSP_OBSERVACION NVARCHAR(1000)
	DECLARE @DSP_CERTUSUARIO NVARCHAR(10)
	DECLARE @DSP_CERTFECHA NVARCHAR(8)
	DECLARE @DSP_CERTHORA NVARCHAR(8)
	DECLARE @DSP_ESTADO	NVARCHAR(2)
	DECLARE @DSP_REVALUSUARIO NVARCHAR(10)
	DECLARE @DSP_REVALFECHA	NVARCHAR(8)
	DECLARE @DSP_REVALHORA	NVARCHAR(8)
	DECLARE @DSP_OBSERVACION_REVAL	NVARCHAR(1000)
	DECLARE @DSP_VALIDADO NVARCHAR(2)
	DECLARE @DSP_PERIODO NVARCHAR(6)
	DECLARE @DSP_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0
	SET @DISPUTA_EMPRESA = ''
	SET @DISPUTA_FECHA = ''

	SELECT
		TOP 1
		@PS_EXISTS = 1,
		@PS_EMPRESA = EMPRESA,
		@PS_PERIODO = PERIODO,
		@PS_VALIDADO = VALIDADO,
		@PS_ID = ID,
		@PS_OBSERVACION = OBSERVACION,
		@PS_USUARIO = USUARIO,
		@PS_FECHAMOD = FECHAMOD,
		@PS_HORAMOD = HORAMOD,
		@PS_CERTUSUARIO = CERTUSUARIO,
		@PS_CERTFECHA = CERTFECHA,
		@PS_CERTHORA = CERTHORA
	FROM POLIZA_SALUD
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO

	IF(@PS_EXISTS = 1)
		BEGIN
			INSERT INTO POLIZA_SALUD_LOG
						(
							EMPRESA,
							PERIODO,
							ID,
							USUARIO,
							FECHAMOD,
							HORAMOD,
							VALIDADO,
							OBSERVACION,
							CERTUSUARIO,
							CERTFECHA,
							CERTHORA,
							USUARIODEL,
							FECHADEL,
							HORADEL
						)
			VALUES
						(
							@PS_EMPRESA,
							@PS_PERIODO,
							@PS_ID,
							@PS_USUARIO,
							@PS_FECHAMOD,
							@PS_HORAMOD,
							@PS_VALIDADO,
							@PS_OBSERVACION,
							@PS_CERTUSUARIO,
							@PS_CERTFECHA,
							@PS_CERTHORA,
							@USUARIO,
							@CURR_FECHA,
							@CURR_TIEMPOFULL
						)

			/*--------------------------*/

			SELECT
				TOP 1
				@DISPUTA_EXISTE = 1,
				@DSP_ID_DISPUTA = ID_DISPUTA,
				@DISPUTA_EMPRESA = EMPRESA,
				@DSP_ID_DOC = ID_DOC,
				@DSP_ID = ID,
				@DSP_USUARIO = USUARIO,
				@DISPUTA_FECHA = FECHA,
				@DSP_HORA = HORA,
				@DSP_OBSERVACION = OBSERVACION,
				@DSP_CERTUSUARIO = CERTUSUARIO,
				@DSP_CERTFECHA = CERTFECHA,
				@DSP_CERTHORA = CERTHORA,
				@DSP_ESTADO = ESTADO,
				@DSP_REVALUSUARIO = REVALUSUARIO,
				@DSP_REVALFECHA = REVALFECHA,
				@DSP_REVALHORA = REVALHORA,
				@DSP_OBSERVACION_REVAL = OBSERVACION_REVAL,
				@DSP_VALIDADO = VALIDADO,
				@DSP_PERIODO = PERIODO,
				@DSP_ID_CERTIFICADO = ID_CERTIFICADO
			FROM DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'

			IF(@DISPUTA_EXISTE = 1)
				BEGIN
					INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
							(
								ID_DISPUTA,
								EMPRESA,
								ID_DOC,
								ID,
								USUARIO,
								FECHA,
								HORA,
								OBSERVACION,
								CERTUSUARIO,
								CERTFECHA,
								CERTHORA,
								ESTADO,
								REVALUSUARIO,
								REVALFECHA,
								REVALHORA,
								OBSERVACION_REVAL,
								VALIDADO,
								PERIODO,
								ID_CERTIFICADO,
								USRMOD,
								FECHAMOD,
								HORAMOD,
								ACCION
							)
					VALUES (
								@DSP_ID_DISPUTA,
								@DISPUTA_EMPRESA,
								@DSP_ID_DOC,
								@DSP_ID,
								@DSP_USUARIO,
								@DISPUTA_FECHA,
								@DSP_HORA,
								@DSP_OBSERVACION,
								@DSP_CERTUSUARIO,
								@DSP_CERTFECHA,
								@DSP_CERTHORA,
								@DSP_ESTADO,
								@DSP_REVALUSUARIO,
								@DSP_REVALFECHA,
								@DSP_REVALHORA,
								@DSP_OBSERVACION_REVAL,
								@DSP_VALIDADO,
								@DSP_PERIODO,
								@DSP_ID_CERTIFICADO,
								@USUARIO,
								@CURR_FECHA,
								@CURR_TIEMPOFULL,
								'ELIMINADO'
							)

					DELETE DOCS_DISPUTA_CLABORAL
					WHERE ID_DISPUTA = @DISPUTA_ID AND ESTADO = 'NO'
				END

			DELETE FROM POLIZA_SALUD
			WHERE PERIODO = @PERIODO AND EMPRESA = @IDEMPRESA

		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_SALUD_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_INSERT_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN
	
	SET @RET_CODE = -1

	IF(EXISTS(
			SELECT
				PERIODO
			FROM POLIZA_SALUD
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 1  /*ERROR LOGICO; YA EXISTE*/
			RETURN
		END
	INSERT INTO POLIZA_SALUD(PERIODO, EMPRESA)
	VALUES (@PERIODO, @IDEMPRESA)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_SALUD_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_SELECT_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(11)
) AS
BEGIN
	DECLARE @ID_DOC INT = 109
	
	SELECT
		SS.PERIODO,
		SS.VALIDADO,
		SS.EMPRESA,
		SS.ID,
		SS.UNIQUE_ID,
		SS.DOC_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		) AS DISPUTA_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ESTADO
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), ''
		) AS DISPUTA_ESTADO,
		IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		), 1 , 0) AS DISPUTA_EXISTE		
	FROM
	(
		SELECT
			PERIODO,
			VALIDADO,
			EMPRESA,
			ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS UNIQUE_ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS DOC_ID
		FROM POLIZA_SALUD
		WHERE
			EMPRESA = @IDEMPRESA
		ORDER BY PERIODO DESC
		OFFSET 0 ROWS
	) SS	
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_SALUD_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		VALIDADO,
		(CASE WHEN OBSERVACION IS NULL THEN STUFF(
													(
													  SELECT
															';' + TR.TIPO_RECHAZO
													  FROM DOCS_CLABORAL_EMP_RECHAZO MR
													  INNER JOIN DOCS_TIPO_RECHAZO TR
														ON MR.ID_TIPO_RECHAZO = TR.ID_TIPO_RECHAZO
													  WHERE ID = POLIZA_SALUD.ID FOR XML PATH ('')
													 ), 1, 1, '')
		 ELSE OBSERVACION END) AS OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
					(
						SELECT
							TOP 1
							D.NOMBRE
						FROM DOCS D
						WHERE D.ID_DOC = @ID_DOC
					),''
				) AS NOM_DOC
	FROM POLIZA_SALUD
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_SALUD_SELECT_ONE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_SELECT_ONE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_SELECT_ONE_V3_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
) AS
BEGIN
	SELECT
		 PERIODO,
		 EMPRESA,
		 ID,
		 VALIDADO,
		 OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = POLIZA_SALUD.EMPRESA AND
					DD.PERIODO = POLIZA_SALUD.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = POLIZA_SALUD.ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		 ) AS DISPUTA_ID,
		 IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = POLIZA_SALUD.EMPRESA AND
					DD.PERIODO = POLIZA_SALUD.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = POLIZA_SALUD.ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		 ), 1 , 0) AS DISPUTA_EXISTE,
		 COALESCE(
			(
				SELECT
					TOP 1
					ARCHIVO
				FROM ARCHIVOS A
				WHERE A.ID = POLIZA_SALUD.ID
			), NULL
		 ) AS ADJUNTO_CONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					TIPOCONTENIDO
				FROM ARCHIVOS A
				WHERE A.ID = POLIZA_SALUD.ID
			), NULL
		 ) AS ADJUNTO_TIPOCONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					NOMBRE
				FROM ARCHIVOS A
				WHERE A.ID = POLIZA_SALUD.ID
			), NULL
		 ) AS ADJUNTO_NOMBRE		 	
	FROM POLIZA_SALUD
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_SALUD_UPDATE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_UPDATE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_UPDATE_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN

	SET @RET_CODE = -1
	
	IF(NOT EXISTS(
			SELECT
				PERIODO
			FROM POLIZA_SALUD
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO
	))
		BEGIN
			SET @RET_CODE = 2  /*ERROR LOGICO; NO EXISTE*/
			RETURN
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_SALUD_UPDATE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_UPDATE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_UPDATE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA			NVARCHAR(10)
 ,@PERIODO				NVARCHAR(6)
 ,@ID					UNIQUEIDENTIFIER
 ,@USUARIO				NVARCHAR(10)
 ,@DISPUTA_ID			INT
 ,@DISPUTA_EXISTE		INT OUTPUT
 ,@DISPUTA_EMPRESA		NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA		NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @DDC_ID_DISPUTA INT
	DECLARE @DDC_ID_DOC INT
	DECLARE @DDC_ID UNIQUEIDENTIFIER
	DECLARE @DDC_USUARIO NVARCHAR(10)
	DECLARE @DDC_HORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION NVARCHAR(1000)
	DECLARE @DDC_CERTUSUARIO NVARCHAR(10)
	DECLARE @DDC_CERTFECHA NVARCHAR(8)
	DECLARE @DDC_CERTHORA NVARCHAR(8)
	DECLARE @DDC_ESTADO NVARCHAR(2)
	DECLARE @DDC_REVALUSUARIO NVARCHAR(10)
	DECLARE @DDC_REVALFECHA NVARCHAR(8)
	DECLARE @DDC_REVALHORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION_REVAL NVARCHAR(1000)
	DECLARE @DDC_VALIDADO NVARCHAR(2)
	DECLARE @DDC_PERIODO NVARCHAR(6)
	DECLARE @DDC_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0

	SELECT
		TOP 1
		@DISPUTA_EXISTE = 1,
		@DDC_ID_DISPUTA = ID_DISPUTA,
		@DISPUTA_EMPRESA = EMPRESA,
		@DDC_ID_DOC = ID_DOC,
		@DDC_ID = ID,
		@DDC_USUARIO = USUARIO,
		@DISPUTA_FECHA = FECHA,
		@DDC_HORA = HORA,
		@DDC_OBSERVACION = OBSERVACION,
		@DDC_CERTUSUARIO = CERTUSUARIO,
		@DDC_CERTFECHA = CERTFECHA,
		@DDC_CERTHORA = CERTHORA,
		@DDC_ESTADO = ESTADO,
		@DDC_REVALUSUARIO = REVALUSUARIO,
		@DDC_REVALFECHA = REVALFECHA,
		@DDC_REVALHORA = REVALHORA,
		@DDC_OBSERVACION_REVAL = OBSERVACION_REVAL,
		@DDC_VALIDADO = VALIDADO,
		@DDC_PERIODO = PERIODO,
		@DDC_ID_CERTIFICADO = ID_CERTIFICADO
	FROM DOCS_DISPUTA_CLABORAL
	WHERE
		ID_DISPUTA = @DISPUTA_ID AND
		ESTADO = 'NO'

	IF(@DISPUTA_EXISTE = 1)
		BEGIN
			INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
				(
					ID_DISPUTA,
					EMPRESA,
					ID_DOC,
					ID,
					USUARIO,
					FECHA,
					HORA,
					OBSERVACION,
					CERTUSUARIO,
					CERTFECHA,
					CERTHORA,
					ESTADO,
					REVALUSUARIO,
					REVALFECHA,
					REVALHORA,
					OBSERVACION_REVAL,
					VALIDADO,
					PERIODO,
					ID_CERTIFICADO,
					USRMOD,
					FECHAMOD,
					HORAMOD,
					ACCION
				)
			VALUES 
				(
					@DDC_ID_DISPUTA,
					@DISPUTA_EMPRESA,
					@DDC_ID_DOC,
					@DDC_ID,
					@DDC_USUARIO,
					@DISPUTA_FECHA,
					@DDC_HORA,
					@DDC_OBSERVACION,
					@DDC_CERTUSUARIO,
					@DDC_CERTFECHA,
					@DDC_CERTHORA,
					@DDC_ESTADO,
					@DDC_REVALUSUARIO,
					@DDC_REVALFECHA,
					@DDC_REVALHORA,
					@DDC_OBSERVACION_REVAL,
					@DDC_VALIDADO,
					@DDC_PERIODO,
					@DDC_ID_CERTIFICADO,
					@USUARIO,
					@CURR_FECHA,
					@CURR_TIEMPOFULL,
					'ELIMINADO'
				)

			DELETE DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ESTADO = 'NO'
		END

		DELETE FROM ARCHIVOS
		WHERE ID = @ID

		UPDATE POLIZA_SALUD
		SET
			ID = NULL,
			VALIDADO = 'NO',
			USUARIO = @USUARIO,
			FECHAMOD = @CURR_FECHA,
			HORAMOD = @CURR_TIEMPOFULL
		WHERE
			EMPRESA = @IDEMPRESA AND
			PERIODO = @PERIODO

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZA_SALUD_UPDATE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_UPDATE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZA_SALUD_UPDATE_V3_CONTROLLABORAL_CTTA]
(
  @ID			UNIQUEIDENTIFIER = NULL
 ,@USUARIO		NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	IF(@ID IS NOT NULL)
		BEGIN
			UPDATE POLIZA_SALUD
			SET
				ID = @ID,
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHAMOD = @CURR_FECHA,
				HORAMOD = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO)
		END
	ELSE
		BEGIN
			UPDATE POLIZA_SALUD
			SET
				VALIDADO = 'NO',
				USUARIO = @USUARIO,
				FECHAMOD = @CURR_FECHA,
				HORAMOD = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO)
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZAS_DELETE_EDITAR_DATATABLE_POLIZAS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZAS_DELETE_EDITAR_DATATABLE_POLIZAS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZAS_DELETE_EDITAR_DATATABLE_POLIZAS_CTTA]
(
  @IDDOC INT               = NULL
, @NROPOLIZA NVARCHAR(50)  = NULL
, @USUARIOMOD NVARCHAR(10) = NULL
) 
AS
BEGIN

	--ELIMINA PAGO
	INSERT INTO POLIZAS_PAGO_DEL (NROPOLIZA			,IDDOC					,PERINI						,PERFIN
								 ,IDPAGO			,VALIDADO				,CERTFECHA					,CERTHORA
								 ,CERTUSUARIO		, OBSERVACION			,USUARIOMOD					,FECHAMOD
								 ,HORAMOD			,FECHADEL				,HORADEL					,USUARIODEL) 
						   SELECT NROPOLIZA			,IDDOC					,PERINI						,PERFIN
								 ,IDPAGO			,VALIDADO				,CERTFECHA					,CERTHORA
								 ,CERTUSUARIO		,OBSERVACION			,USUARIOMOD					,FECHAMOD
								 ,HORAMOD			,[dbo].[hoy](GETDATE())	,[dbo].[ahora](GETDATE())	,@USUARIOMOD 
						   FROM POLIZAS_PAGO WHERE IDDOC=@IDDOC AND NROPOLIZA=@NROPOLIZA

	DELETE FROM POLIZAS_PAGO WHERE IDDOC=@IDDOC AND NROPOLIZA=@NROPOLIZA
	
	--ELIMINA NOMINA
	INSERT INTO POLIZAS_NOMINA_DEL(RUT				,NROPOLIZA				,IDDOC				,VALIDADO)
	                        SELECT RUT				,NROPOLIZA				,IDDOC				,VALIDADO 
	FROM POLIZAS_NOMINA WHERE IDDOC=@IDDOC AND NROPOLIZA=@NROPOLIZA
	DELETE FROM POLIZAS_NOMINA WHERE IDDOC=@IDDOC AND NROPOLIZA=@NROPOLIZA

	--ELIMINA POLIZA
	INSERT INTO POLIZAS_DEL (NROPOLIZA					,IDDOC				,FECINI				,FECFIN
	                        ,EMPRESA					,DIVISION			,ID					,VALIDADO			
							,CERTFECHA					,CERTHORA			,CERTUSUARIO		,OBSERVACION		
							,USUARIOMOD					,FECHAMOD			,HORAMOD			,FECHADEL			
							,HORADEL					,USUARIODEL			,OST) 
                      SELECT NROPOLIZA					,IDDOC				,FECINI				,FECFIN
							,EMPRESA					,DIVISION			,ID					,VALIDADO
							,CERTFECHA					,CERTHORA			,CERTUSUARIO		,OBSERVACION
							,USUARIOMOD					,FECHAMOD			,HORAMOD			,[dbo].[hoy](GETDATE())
							,[dbo].[ahora](GETDATE())	,@USUARIOMOD		,OST 
							FROM POLIZAS WHERE IDDOC=@IDDOC AND NROPOLIZA=@NROPOLIZA
	DELETE FROM POLIZAS WHERE IDDOC=@IDDOC AND NROPOLIZA=@NROPOLIZA 

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZAS_INSERT_EDITAR_DATATABLE_POLIZAS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZAS_INSERT_EDITAR_DATATABLE_POLIZAS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZAS_INSERT_EDITAR_DATATABLE_POLIZAS_CTTA]
(
  @IDDOC INT               = NULL
, @NROPOLIZA NVARCHAR(50)  = NULL
, @ID UNIQUEIDENTIFIER     = NULL
, @FECINI NVARCHAR(8)      = NULL
, @FECFIN NVARCHAR(8)      = NULL
, @EMPRESA NVARCHAR(10)    = NULL
, @DIVISION NVARCHAR(4)    = NULL
, @USUARIOMOD NVARCHAR(10) = NULL
, @OST NVARCHAR(14)        = NULL
) 
AS
BEGIN

    INSERT INTO POLIZAS( NROPOLIZA		,IDDOC					,FECINI					    ,FECFIN	
						,EMPRESA		,DIVISION				,ID						    ,VALIDADO	
						,USUARIOMOD		,FECHAMOD				,HORAMOD				    ,OST)
			    VALUES( @NROPOLIZA		,@IDDOC					,@FECINI				    ,@FECFIN	
						,@EMPRESA		,@DIVISION				,@ID					    ,'NO'		
						,@USUARIOMOD	,[dbo].[hoy](GETDATE())	,[dbo].[ahora](GETDATE())	,@OST)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZAS_NOMINA_DELETE_PORNROPOLIZA_POLIZAS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZAS_NOMINA_DELETE_PORNROPOLIZA_POLIZAS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZAS_NOMINA_DELETE_PORNROPOLIZA_POLIZAS_CTTA]
(
  @IDDOC INT              = NULL
, @NROPOLIZA NVARCHAR(50) = NULL
) AS
BEGIN

	--ELIMINA NOMINA
	INSERT INTO POLIZAS_NOMINA_DEL(RUT				,NROPOLIZA				,IDDOC				,VALIDADO)
	                        SELECT RUT				,NROPOLIZA				,IDDOC				,VALIDADO 
	FROM POLIZAS_NOMINA WHERE IDDOC=@IDDOC AND NROPOLIZA=@NROPOLIZA
	DELETE FROM POLIZAS_NOMINA WHERE IDDOC=@IDDOC AND NROPOLIZA=@NROPOLIZA

END
/****** Object:  StoredProcedure [dbo].[V4MVC_POLIZAS_NOMINA_INSERT_POLIZAS_CTTA]    Script Date: 9/11/2020 14:50:31 ******/
SET ANSI_NULLS ON
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZAS_NOMINA_INSERT_POLIZAS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZAS_NOMINA_INSERT_POLIZAS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZAS_NOMINA_INSERT_POLIZAS_CTTA]
(
  @IDDOC INT              = NULL
, @NROPOLIZA NVARCHAR(50) = NULL
, @RUT NVARCHAR(10)       = NULL
) AS
BEGIN

		INSERT INTO POLIZAS_NOMINA(RUT		,NROPOLIZA		,IDDOC		,VALIDADO)
						   VALUES (@RUT		,@NROPOLIZA		,@IDDOC		,'NO')

END
/****** Object:  StoredProcedure [dbo].[V4MVC_POLIZAS_NOMINA_SELECT_DATATABLE_POLIZAS_CTTA]    Script Date: 9/11/2020 14:50:45 ******/
SET ANSI_NULLS ON
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZAS_NOMINA_SELECT_DATATABLE_POLIZAS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZAS_NOMINA_SELECT_DATATABLE_POLIZAS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZAS_NOMINA_SELECT_DATATABLE_POLIZAS_CTTA]
(
  @IDDOC INT              = NULL
, @NROPOLIZA NVARCHAR(50) = NULL
) AS
BEGIN

	SELECT P.RUT, NOMBRES, APELLIDOS, P.VALIDADO,  ROW_NUMBER() OVER(ORDER BY W.RUT ASC) ROWNUMBER--ROW_NUMBER() OVER(ORDER BY W.RUT ASC) ROWNUMBER
	FROM POLIZAS_NOMINA P INNER JOIN WORKERS W ON P.RUT=W.RUT 
	WHERE NROPOLIZA=@NROPOLIZA AND IDDOC=@IDDOC 

END
/****** Object:  StoredProcedure [dbo].[V4MVC_POLIZAS_PAGO_INSERT_POLIZAS_CTTA]    Script Date: 9/11/2020 14:51:01 ******/
SET ANSI_NULLS ON
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZAS_PAGO_DELETE_DATATABLE_POLIZAS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZAS_PAGO_DELETE_DATATABLE_POLIZAS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZAS_PAGO_DELETE_DATATABLE_POLIZAS_CTTA]
(
  @ID INT               = NULL
, @NROPOLIZA NVARCHAR(50)  = NULL
, @USUARIOMOD NVARCHAR(10) = NULL
, @EXITOSO BIT  OUTPUT
, @MENSAJE NVARCHAR(500) OUTPUT
) AS
BEGIN
 BEGIN TRANSACTION;
    SAVE TRANSACTION ELIMINACION_POLIZA;

    BEGIN TRY
	--ELIMINA PAGO
	INSERT INTO POLIZAS_PAGO_DEL (NROPOLIZA			,IDDOC					,PERINI						,PERFIN
								 ,IDPAGO			,VALIDADO				,CERTFECHA					,CERTHORA
								 ,CERTUSUARIO		, OBSERVACION			,USUARIOMOD					,FECHAMOD
								 ,HORAMOD			,FECHADEL				,HORADEL					,USUARIODEL) 
						   SELECT NROPOLIZA			,IDDOC					,PERINI						,PERFIN
								 ,IDPAGO			,VALIDADO				,CERTFECHA					,CERTHORA
								 ,CERTUSUARIO		,OBSERVACION			,USUARIOMOD					,FECHAMOD
								 ,HORAMOD			,[dbo].[hoy](GETDATE())	,[dbo].[ahora](GETDATE())	,@USUARIOMOD 
						   FROM POLIZAS_PAGO WHERE ID=@ID 

	DELETE FROM POLIZAS_PAGO WHERE ID=@ID 
			
        COMMIT TRANSACTION 
		SET @EXITOSO = 1																													
		SET @MENSAJE = 'EXITOSO'
    END TRY
    BEGIN CATCH
        IF @@TRANCOUNT > 0
        BEGIN
            ROLLBACK TRANSACTION ELIMINACION_POLIZA;
			SET @EXITOSO = 0																													
			SET @MENSAJE = 'Ocurrio un error'
        END
    END CATCH

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZAS_PAGO_INSERT_POLIZAS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZAS_PAGO_INSERT_POLIZAS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZAS_PAGO_INSERT_POLIZAS_CTTA]
(
  @IDDOC INT               = NULL
, @NROPOLIZA NVARCHAR(50)  = NULL
, @PERINI NVARCHAR(6)      = NULL
, @PERFIN NVARCHAR(6)      = NULL
, @USUARIOMOD NVARCHAR(10) = NULL
, @IDPAGO UNIQUEIDENTIFIER = NULL
) AS
BEGIN

  INSERT INTO POLIZAS_PAGO( NROPOLIZA		,IDDOC			,PERINI			,PERFIN		
                           ,VALIDADO		,USUARIOMOD		,FECHAMOD		,HORAMOD					
						   ,IDPAGO) 
					VALUES( @NROPOLIZA		,@IDDOC			,@PERINI		,@PERFIN	
						   ,'NO'			,@USUARIOMOD	,[dbo].[hoy](GETDATE()),[dbo].[ahora](GETDATE())	
						   ,@IDPAGO)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZAS_PAGO_SELECT_POLIZAS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZAS_PAGO_SELECT_POLIZAS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZAS_PAGO_SELECT_POLIZAS_CTTA]
(
  @IDDOC INT               = NULL
, @NROPOLIZA NVARCHAR(50)  = NULL
) AS
BEGIN

SELECT TOP 6 
VALIDADO,		USUARIOMOD,		FECHAMOD,		HORAMOD,
CERTUSUARIO,	CERTFECHA,		CERTHORA,		FECHAMOD,
PERINI,			PERFIN,			IDPAGO,			ID AS ID_TABLA,
IDDOC 
FROM POLIZAS_PAGO WHERE IDDOC=@IDDOC AND NROPOLIZA=@NROPOLIZA ORDER BY PERFIN DESC

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZAS_SELECT_DATATABLE_POLIZAS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZAS_SELECT_DATATABLE_POLIZAS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZAS_SELECT_DATATABLE_POLIZAS_CTTA]
AS
BEGIN

	SELECT DISTINCT D.NOMBRE,T.COMUN,T.ID_DOC AS IDDOC, DF.ID_DOC_EXT
	,(SELECT TOP 1 VALIDADO FROM POLIZAS WHERE IDDOC = D.ID_DOC ORDER BY FECHAMOD+HORAMOD DESC) AS POLIZA_VALIDADO
	,(SELECT DISTINCT TOP 1 PP.VALIDADO AS POLIZAPAGO_VALIDADO  
	FROM TAB_POLIZA T 
	INNER JOIN DOCS D ON T.ID_DOC=D.ID_DOC 
	LEFT JOIN  POLIZAS P  ON  P.IDDOC=D.ID_DOC
	LEFT JOIN  POLIZAS_PAGO PP ON PP.NROPOLIZA=P.NROPOLIZA AND PP.IDDOC=D.ID_DOC 
	WHERE T.ACTIVO='SI' AND P.IDDOC = D.ID_DOC) AS POLIZAPAGO_VALIDADO
	, CASE WHEN (SELECT TOP 1 FECFIN FROM POLIZAS WHERE IDDOC = D.ID_DOC ORDER BY FECHAMOD+HORAMOD DESC)<GETDATE() THEN 'SI' ELSE 'NO' END AS POLIZA_VENCIDA  
	, CASE WHEN (SELECT TOP 1 PP.PERINI FROM POLIZAS_PAGO PP INNER JOIN POLIZAS P ON PP.NROPOLIZA=P.NROPOLIZA
	WHERE PP.IDDOC= D.ID_DOC ORDER BY PERFIN DESC)<=LEFT(CONVERT(varchar, GetDate(),112),6) AND (SELECT TOP 1 PP.PERFIN FROM POLIZAS_PAGO PP INNER JOIN POLIZAS P ON PP.NROPOLIZA=P.NROPOLIZA
	WHERE PP.IDDOC= D.ID_DOC ORDER BY PERFIN DESC)>=LEFT(CONVERT(varchar, GetDate(),112),6) THEN 'SI' ELSE 'NO' END AS PAGOALDIA ,
	STUFF((
	      SELECT ',' + DOCS_EXT.EXTENSION
		   FROM DOCS_FORMATO, DOCS_EXT 
		   WHERE 
		   (DOCS_FORMATO.ID_DOC = T.ID_DOC) AND
		   (DOCS_FORMATO.ID_DOC_EXT = DOCS_EXT.ID_DOC_EXT)
       FOR XML PATH('')
	),1,1, '') AS EXTENSIONES
	FROM TAB_POLIZA T INNER JOIN DOCS D ON T.ID_DOC=D.ID_DOC 
	INNER JOIN DOCS_FORMATO DF ON T.ID_DOC = DF.ID_DOC
	WHERE T.ACTIVO='SI'

ENDIF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZAS_SELECT_EDITAR_DATATABLE_POLIZAS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZAS_SELECT_EDITAR_DATATABLE_POLIZAS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZAS_SELECT_EDITAR_DATATABLE_POLIZAS_CTTA]
(
  @IDDOC INT            = NULL
, @DIVISION NVARCHAR(4) = NULL
) AS
BEGIN

    DECLARE @strSQL as nvarchar(MAX)
	SET @strSQL= 'SELECT  T1.NROPOLIZA,					T1.IDDOC,			T1.FECINI,				T1.FECFIN,
						  T1.EMPRESA,					T1.DIVISION,		T1.ID,					T1.VALIDADO,
						  T1.CERTFECHA,					T1.CERTHORA,		T1.CERTUSUARIO,			T1.OBSERVACION,
						  ISNULL(T1.OST,'''') AS OST,	T1.USUARIOMOD,		T2.NOMBRE,				T3.ACRONIMO,
						  STUFF((
								SELECT ' + '''' + ',' + '''' + ' + ' + ' DOCS_EXT.EXTENSION
								FROM DOCS_FORMATO, DOCS_EXT 
								WHERE 
								(DOCS_FORMATO.ID_DOC = T1.IDDOC) AND
								(DOCS_FORMATO.ID_DOC_EXT = DOCS_EXT.ID_DOC_EXT)
								FOR XML PATH('''')
								),1,1, '''') AS EXTENSIONES
	FROM POLIZAS T1
	INNER JOIN DOCS T2 ON T1.IDDOC = T2.ID_DOC
	INNER JOIN ENTERPRISE T3 ON T1.EMPRESA = T3.IDEMPRESA
	WHERE T1.IDDOC= ''' + CONVERT(VARCHAR(10),@IDDOC) + ''' '
  

	IF @DIVISION <> '' OR @DIVISION <> NULL
	BEGIN
	 SET @strSQL = @strSQL + N' AND T1.DIVISION = ''' + @DIVISION + ''''
	END
 
	SET @strSQL = @strSQL + N' ORDER BY T1.FECFIN DESC, T1.VALIDADO'
	EXEC sp_executesql @strSQL  

ENDIF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_POLIZAS_SELECT_POLIZACARGADA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_POLIZAS_SELECT_POLIZACARGADA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_POLIZAS_SELECT_POLIZACARGADA_CTTA]
(
 @IDDOC			INT				= NULL
,@NROPOLIZA		NVARCHAR(50)	= NULL
)
AS
BEGIN

	SELECT NROPOLIZA,IDDOC 
	FROM POLIZAS
	WHERE IDDOC = @IDDOC
	AND NROPOLIZA = @NROPOLIZA

ENDIF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_REGION_SELECT_BYPAIS]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_REGION_SELECT_BYPAIS]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_REGION_SELECT_BYPAIS]
(@PAIS NVARCHAR(50) = NULL)
AS
BEGIN
   SELECT DISTINCT REGION, DESCRIPCION  FROM REGION  WHERE (PAIS = @PAIS)  ORDER BY DESCRIPCION
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_REGION_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_REGION_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_REGION_SELECT_CONTROLLABORAL_CTTA]
(
  @PAIS	NVARCHAR(50)
) AS
BEGIN
	SELECT *
	FROM REGION
	WHERE
		PAIS = @PAIS
	ORDER BY CREGION ASC
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_REMULOGPROCESO_SELECT_INFORME_DOCUMENTOSCARGADOSAUDITORIALABORALMENSUAL_DETALLE_INFORME_CONTROLLABAROAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_REMULOGPROCESO_SELECT_INFORME_DOCUMENTOSCARGADOSAUDITORIALABORALMENSUAL_DETALLE_INFORME_CONTROLLABAROAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_REMULOGPROCESO_SELECT_INFORME_DOCUMENTOSCARGADOSAUDITORIALABORALMENSUAL_DETALLE_INFORME_CONTROLLABAROAL_CTTA]
(
@PERIODO  NVARCHAR(6)       = NULL,
@EMPRESA  NVARCHAR(10)       = NULL
) AS
BEGIN

DECLARE @strSQL as nvarchar(MAX)

 SET @strSQL='SELECT 
 COUNT(R.RUT) OVER() TOTALREGISTROS
,ROW_NUMBER() OVER(ORDER BY R.PAIS, R.EMPRESA, R.RUT) ROWNUMBER
,R.PAIS
,R.RUT
,R.OST
,R.EMPRESA
,R.TIPOCONTRATO
,R.FPROCESO
,R.PREVIRED
,R.L_SUELDO
,R.PBANCO
,R.CUMPLE
,R.P_CUMPLE
,R.IMPONIBLE_P
,R.IMPONIBLE_L
,R.LIQUIDO
,R.TRANSFERIDO
,R.FINIQUITO
,R.VALIDADO
,R.BONOIP
,R.DIFBONOIS
,R.BONOIS 
,(SELECT NOMBRES FROM WORKERS WHERE RUT= R.RUT) AS NOMBRES
,(SELECT APELLIDOS FROM WORKERS WHERE RUT= R.RUT) AS APELLIDOS
 FROM REMULOGPROCESO R WHERE PERIODO= ''' + @PERIODO + ''''

	IF @EMPRESA <> '' OR @EMPRESA <> NULL
	BEGIN
		Set @strSQL = @strSQL + N' AND EMPRESA = ''' + @EMPRESA + ''''
	END			           

	exec sp_executesql @strSQL  
	PRINT @strSQL
 
END	
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_REMUNERACIONES_PROPIO_DELETE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_DELETE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_DELETE_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA		NVARCHAR(10)
 ,@PERIODO			NVARCHAR(6)
 ,@DIVISION			NVARCHAR(4)
 ,@OST				NVARCHAR(20)
 ,@ID_DOC			INT
 ,@USUARIO			NVARCHAR(10)
 ,@DISPUTA_ID		INT
 ,@DISPUTA_EXISTE	INT OUTPUT
 ,@DISPUTA_EMPRESA	NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA	NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @RP_EXISTS BIT = 0
	DECLARE @RP_EMPRESA NVARCHAR(10)
	DECLARE @RP_PERIODO NVARCHAR(6)
	
	DECLARE @RP_DIVISION NVARCHAR(4)
	DECLARE @RP_OST NVARCHAR(20)
	
	DECLARE @RP_VALIDADO NVARCHAR(2)
	DECLARE @RP_ID UNIQUEIDENTIFIER
	DECLARE @RP_OBSERVACION NVARCHAR(500)
	DECLARE @RP_USUARIO NVARCHAR(20)
	DECLARE @RP_FECHAMOD NVARCHAR(8)
	DECLARE @RP_HORAMOD NVARCHAR(8)
	DECLARE @RP_CERTUSUARIO NVARCHAR(20)
	DECLARE @RP_CERTFECHA NVARCHAR(8)
	DECLARE @RP_CERTHORA NVARCHAR(8)

	
	DECLARE @DSP_ID_DISPUTA INT

	DECLARE @DSP_DIVISION NVARCHAR(4)
	DECLARE @DSP_OST NVARCHAR(20)

	DECLARE @DSP_ID_DOC INT
	DECLARE @DSP_ID UNIQUEIDENTIFIER
	DECLARE @DSP_USUARIO NVARCHAR(10)
	DECLARE @DSP_HORA NVARCHAR(8)
	DECLARE @DSP_OBSERVACION NVARCHAR(1000)
	DECLARE @DSP_CERTUSUARIO NVARCHAR(10)
	DECLARE @DSP_CERTFECHA NVARCHAR(8)
	DECLARE @DSP_CERTHORA NVARCHAR(8)
	DECLARE @DSP_ESTADO	NVARCHAR(2)
	DECLARE @DSP_REVALUSUARIO NVARCHAR(10)
	DECLARE @DSP_REVALFECHA	NVARCHAR(8)
	DECLARE @DSP_REVALHORA	NVARCHAR(8)
	DECLARE @DSP_OBSERVACION_REVAL	NVARCHAR(1000)
	DECLARE @DSP_VALIDADO NVARCHAR(2)
	DECLARE @DSP_PERIODO NVARCHAR(6)
	DECLARE @DSP_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0
	SET @DISPUTA_FECHA = ''
	SET @DISPUTA_EMPRESA = ''

	SELECT
		TOP 1
		@RP_EXISTS = 1,
		@RP_EMPRESA = EMPRESA,
		@RP_PERIODO = PERIODO,
		@RP_DIVISION = DIVISION,
		@RP_OST = OST,
		@RP_VALIDADO = VALIDADO,
		@RP_ID = ID,
		@RP_OBSERVACION = OBSERVACION,
		@RP_USUARIO = USUARIO,
		@RP_FECHAMOD = FECHAMOD,
		@RP_HORAMOD = HORAMOD,
		@RP_CERTUSUARIO = CERTUSUARIO,
		@RP_CERTFECHA = CERTFECHA,
		@RP_CERTHORA = CERTHORA
	FROM REMUNERACIONES_PROPIO
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO AND
		DIVISION = @DIVISION AND
		OST = @OST

	IF(@RP_EXISTS = 1)
		BEGIN
			INSERT INTO REMUNERACIONES_PROPIO_LOG
						(
							EMPRESA,
							PERIODO,
							DIVISION,
							OST,
							ID,
							USUARIO,
							FECHAMOD,
							HORAMOD,
							VALIDADO,
							OBSERVACION,
							CERTUSUARIO,
							CERTFECHA,
							CERTHORA,
							USUARIODEL,
							FECHADEL,
							HORADEL
						)
			VALUES
						(
							@RP_EMPRESA,
							@RP_PERIODO,
							@RP_DIVISION,
							@RP_OST,
							@RP_ID,
							@RP_USUARIO,
							@RP_FECHAMOD,
							@RP_HORAMOD,
							@RP_VALIDADO,
							@RP_OBSERVACION,
							@RP_CERTUSUARIO,
							@RP_CERTFECHA,
							@RP_CERTHORA,
							@USUARIO,
							@CURR_FECHA,
							@CURR_TIEMPOFULL
						)

			/*--------------------------*/

			SELECT
				TOP 1
				@DISPUTA_EXISTE = 1,
				@DSP_ID_DISPUTA = ID_DISPUTA,
				@DISPUTA_EMPRESA = EMPRESA,
				@DSP_DIVISION = DIVISION,
				@DSP_OST = OST,
				@DSP_ID_DOC = ID_DOC,
				@DSP_ID = ID,
				@DSP_USUARIO = USUARIO,
				@DISPUTA_FECHA = FECHA,
				@DSP_HORA = HORA,
				@DSP_OBSERVACION = OBSERVACION,
				@DSP_CERTUSUARIO = CERTUSUARIO,
				@DSP_CERTFECHA = CERTFECHA,
				@DSP_CERTHORA = CERTHORA,
				@DSP_ESTADO = ESTADO,
				@DSP_REVALUSUARIO = REVALUSUARIO,
				@DSP_REVALFECHA = REVALFECHA,
				@DSP_REVALHORA = REVALHORA,
				@DSP_OBSERVACION_REVAL = OBSERVACION_REVAL,
				@DSP_VALIDADO = VALIDADO,
				@DSP_PERIODO = PERIODO,
				@DSP_ID_CERTIFICADO = ID_CERTIFICADO
			FROM DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ID_DOC = @ID_DOC AND
				ESTADO = 'NO'

			IF(@DISPUTA_EXISTE = 1)
				BEGIN
					INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
							(
								ID_DISPUTA,
								EMPRESA,
								DIVISION,
								OST,
								ID_DOC,
								ID,
								USUARIO,
								FECHA,
								HORA,
								OBSERVACION,
								CERTUSUARIO,
								CERTFECHA,
								CERTHORA,
								ESTADO,
								REVALUSUARIO,
								REVALFECHA,
								REVALHORA,
								OBSERVACION_REVAL,
								VALIDADO,
								PERIODO,
								ID_CERTIFICADO,
								USRMOD,
								FECHAMOD,
								HORAMOD,
								ACCION
							)
					VALUES (
								@DSP_ID_DISPUTA,
								@DISPUTA_EMPRESA,
								@DSP_DIVISION,
								@DSP_OST,
								@DSP_ID_DOC,
								@DSP_ID,
								@DSP_USUARIO,
								@DISPUTA_FECHA,
								@DSP_HORA,
								@DSP_OBSERVACION,
								@DSP_CERTUSUARIO,
								@DSP_CERTFECHA,
								@DSP_CERTHORA,
								@DSP_ESTADO,
								@DSP_REVALUSUARIO,
								@DSP_REVALFECHA,
								@DSP_REVALHORA,
								@DSP_OBSERVACION_REVAL,
								@DSP_VALIDADO,
								@DSP_PERIODO,
								@DSP_ID_CERTIFICADO,
								@USUARIO,
								@CURR_FECHA,
								@CURR_TIEMPOFULL,
								'ELIMINADO'
							)

					DELETE DOCS_DISPUTA_CLABORAL
					WHERE
						ID_DISPUTA = @DISPUTA_ID AND
						ID_DOC = @ID_DOC AND
						ESTADO = 'NO'
				END

			DELETE FROM REMUNERACIONES_PROPIO
			WHERE PERIODO = @PERIODO AND
			EMPRESA = @IDEMPRESA AND
			DIVISION = @DIVISION AND
			OST = @OST

		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_REMUNERACIONES_PROPIO_INSERT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_INSERT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_INSERT_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@DIVISION		NVARCHAR(4)
 ,@OST			NVARCHAR(20)
 ,@MONTOIMP		INT
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN
	SET @RET_CODE = -1

	IF(EXISTS(
			SELECT
				PERIODO
			FROM REMUNERACIONES_PROPIO
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO AND
				DIVISION = @DIVISION AND
				OST = @OST
	))
		BEGIN
			SET @RET_CODE = 1  /*ERROR LOGICO; YA EXISTE*/
			RETURN
		END
	INSERT INTO REMUNERACIONES_PROPIO(PERIODO, EMPRESA, DIVISION, OST, MONTOIMP)
	VALUES (@PERIODO, @IDEMPRESA, @DIVISION, @OST, @MONTOIMP)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_REMUNERACIONES_PROPIO_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_SELECT_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(11)
) AS
BEGIN
	DECLARE @ID_DOC INT = 115
	SELECT
		SS.PERIODO,
		SS.VALIDADO,
		SS.EMPRESA,
		SS.DIVISION,
		SS.OST,
		SS.ID,
		SS.UNIQUE_ID,
		SS.DOC_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		) AS DISPUTA_ID,
		COALESCE(
			(
				SELECT
					TOP 1
						DD.ESTADO
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
			), ''
		) AS DISPUTA_ESTADO,
		IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = SS.EMPRESA AND
					DD.PERIODO = SS.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = SS.UNIQUE_ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		), 1 , 0) AS DISPUTA_EXISTE		
	FROM
	(
		SELECT
			PERIODO,
			VALIDADO,
			EMPRESA,
			DIVISION,
			OST,
			ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS UNIQUE_ID,
			IIF(ID IS NULL OR CONVERT(NVARCHAR(40), ID) = '', NULL, ID) AS DOC_ID
		FROM REMUNERACIONES_PROPIO
		WHERE
			EMPRESA = @IDEMPRESA
		ORDER BY PERIODO DESC
		OFFSET 0 ROWS
	) SS	
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_REMUNERACIONES_PROPIO_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@DIVISION		NVARCHAR(4)
 ,@OST			NVARCHAR(20)
) AS
BEGIN
	SELECT
		VALIDADO,
		STUFF(
				(
					SELECT ';' + TR.TIPO_RECHAZO
					FROM DOCS_CLABORAL_EMP_RECHAZO MR
					INNER JOIN DOCS_TIPO_RECHAZO TR
						ON MR.ID_TIPO_RECHAZO = TR.ID_TIPO_RECHAZO
					WHERE ID = REMUNERACIONES_PROPIO.ID FOR XML PATH ('')
				)
				, 1, 1, '') AS OBSERVACION,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
					(
						SELECT
							TOP 1
							D.NOMBRE
						FROM DOCS D
						WHERE D.ID_DOC = @ID_DOC
					),''
				) AS NOM_DOC
	FROM REMUNERACIONES_PROPIO
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO AND
		DIVISION = @DIVISION AND
		OST = @OST
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_REMUNERACIONES_PROPIO_SELECT_ONE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_SELECT_ONE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_SELECT_ONE_V2_CONTROLLABORAL_CTTA]
(
  @IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@DIVISION		NVARCHAR(4)
 ,@OST			NVARCHAR(20)
) AS
BEGIN
	SELECT
		CERTUSUARIO,
		CERTFECHA,
		CERTHORA,
		VALIDADO,
		EMPRESA,
		PERIODO,
		DIVISION,
		OST
	FROM REMUNERACIONES_PROPIO
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO AND
		DIVISION = @DIVISION AND
		OST = @OST
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_REMUNERACIONES_PROPIO_SELECT_ONE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_SELECT_ONE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_SELECT_ONE_V3_CONTROLLABORAL_CTTA]
(
  @ID_DOC		INT
 ,@IDEMPRESA	NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@DIVISION		NVARCHAR(4)
 ,@OST			NVARCHAR(20)
) AS
BEGIN
	SELECT
		 PERIODO,
		 EMPRESA,
		 MONTOIMP,
		 ID,
		 VALIDADO,
		 OBSERVACION,
		 DIVISION,
		 OST,
		 COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = @IDEMPRESA
					), ''
				) AS ACRO_EMPRESA,
		 [dbo].[V4MVC_FSTR_RUT](@IDEMPRESA) AS STRUT_EMPRESA,
		 COALESCE(
			(
				SELECT
					TOP 1
						DD.ID_DISPUTA
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = REMUNERACIONES_PROPIO.EMPRESA AND
					DD.PERIODO = REMUNERACIONES_PROPIO.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = REMUNERACIONES_PROPIO.ID
				ORDER BY DD.ID_DISPUTA DESC
			), -1
		 ) AS DISPUTA_ID,
		 IIF(EXISTS(
				SELECT * 
				FROM DOCS_DISPUTA_CLABORAL DD
				WHERE
					DD.EMPRESA = REMUNERACIONES_PROPIO.EMPRESA AND
					DD.PERIODO = REMUNERACIONES_PROPIO.PERIODO AND
					DD.ID_DOC = @ID_DOC AND
					DD.ID = REMUNERACIONES_PROPIO.ID
				ORDER BY DD.ID_DISPUTA DESC
				OFFSET 0 ROWS
		 ), 1 , 0) AS DISPUTA_EXISTE,
		 COALESCE(
			(
				SELECT
					TOP 1
					ARCHIVO
				FROM ARCHIVOS A
				WHERE A.ID = REMUNERACIONES_PROPIO.ID
			), NULL
		 ) AS ADJUNTO_CONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					TIPOCONTENIDO
				FROM ARCHIVOS A
				WHERE A.ID = REMUNERACIONES_PROPIO.ID
			), NULL
		 ) AS ADJUNTO_TIPOCONTENIDO,
		 COALESCE(
			(
				SELECT
					TOP 1
					NOMBRE
				FROM ARCHIVOS A
				WHERE A.ID = REMUNERACIONES_PROPIO.ID
			), NULL
		 ) AS ADJUNTO_NOMBRE		 	
	FROM REMUNERACIONES_PROPIO
	WHERE
		EMPRESA = @IDEMPRESA AND
		PERIODO = @PERIODO AND
		DIVISION = @DIVISION AND
		OST = @OST
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_REMUNERACIONES_PROPIO_UPDATE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_UPDATE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_UPDATE_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@DIVISION		NVARCHAR(4)
 ,@OST			NVARCHAR(20)
 ,@RET_CODE		INT OUTPUT
) AS
BEGIN
	SET @RET_CODE = -1

	IF(NOT EXISTS(
			SELECT
				PERIODO
			FROM REMUNERACIONES_PROPIO
			WHERE
				EMPRESA = @IDEMPRESA AND
				PERIODO = @PERIODO AND
				DIVISION = @DIVISION AND
				OST = @OST
	))
		BEGIN
			SET @RET_CODE = 2  /*ERROR LOGICO; NO EXISTE*/
			RETURN
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_REMUNERACIONES_PROPIO_UPDATE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_UPDATE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_UPDATE_V2_CONTROLLABORAL_CTTA]
(
  @ID_DOC				INT
 ,@IDEMPRESA			NVARCHAR(10)
 ,@PERIODO				NVARCHAR(6)
 ,@DIVISION				NVARCHAR(4)
 ,@ID					UNIQUEIDENTIFIER
 ,@USUARIO				NVARCHAR(10)
 ,@OST					NVARCHAR(20)
 ,@DISPUTA_ID			INT
 ,@DISPUTA_EXISTE		INT OUTPUT
 ,@DISPUTA_EMPRESA		NVARCHAR(12) OUTPUT
 ,@DISPUTA_FECHA		NVARCHAR(8) OUTPUT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	DECLARE @DDC_ID_DISPUTA INT
	DECLARE @DDC_DIVISION NVARCHAR(4)
	DECLARE @DDC_OST NVARCHAR(20)
	DECLARE @DDC_ID_DOC INT
	DECLARE @DDC_ID UNIQUEIDENTIFIER
	DECLARE @DDC_USUARIO NVARCHAR(10)
	DECLARE @DDC_HORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION NVARCHAR(1000)
	DECLARE @DDC_CERTUSUARIO NVARCHAR(10)
	DECLARE @DDC_CERTFECHA NVARCHAR(8)
	DECLARE @DDC_CERTHORA NVARCHAR(8)
	DECLARE @DDC_ESTADO NVARCHAR(2)
	DECLARE @DDC_REVALUSUARIO NVARCHAR(10)
	DECLARE @DDC_REVALFECHA NVARCHAR(8)
	DECLARE @DDC_REVALHORA NVARCHAR(8)
	DECLARE @DDC_OBSERVACION_REVAL NVARCHAR(1000)
	DECLARE @DDC_VALIDADO NVARCHAR(2)
	DECLARE @DDC_PERIODO NVARCHAR(6)
	DECLARE @DDC_ID_CERTIFICADO INT

	SET @DISPUTA_EXISTE = 0

	SELECT
		TOP 1
		@DISPUTA_EXISTE = 1,
		@DDC_ID_DISPUTA = ID_DISPUTA,
		@DISPUTA_EMPRESA = EMPRESA,
		@DDC_DIVISION = DIVISION,
		@DDC_OST = OST,
		@DDC_ID_DOC = ID_DOC,
		@DDC_ID = ID,
		@DDC_USUARIO = USUARIO,
		@DISPUTA_FECHA = FECHA,
		@DDC_HORA = HORA,
		@DDC_OBSERVACION = OBSERVACION,
		@DDC_CERTUSUARIO = CERTUSUARIO,
		@DDC_CERTFECHA = CERTFECHA,
		@DDC_CERTHORA = CERTHORA,
		@DDC_ESTADO = ESTADO,
		@DDC_REVALUSUARIO = REVALUSUARIO,
		@DDC_REVALFECHA = REVALFECHA,
		@DDC_REVALHORA = REVALHORA,
		@DDC_OBSERVACION_REVAL = OBSERVACION_REVAL,
		@DDC_VALIDADO = VALIDADO,
		@DDC_PERIODO = PERIODO,
		@DDC_ID_CERTIFICADO = ID_CERTIFICADO
	FROM DOCS_DISPUTA_CLABORAL
	WHERE
		ID_DISPUTA = @DISPUTA_ID AND
		ESTADO = 'NO'

	IF(@DISPUTA_EXISTE = 1)
		BEGIN
			INSERT INTO DOCS_DISPUTA_CLABORAL_LOG
				(
					ID_DISPUTA,
					EMPRESA,
					DIVISION,
					OST,
					ID_DOC,
					ID,
					USUARIO,
					FECHA,
					HORA,
					OBSERVACION,
					CERTUSUARIO,
					CERTFECHA,
					CERTHORA,
					ESTADO,
					REVALUSUARIO,
					REVALFECHA,
					REVALHORA,
					OBSERVACION_REVAL,
					VALIDADO,
					PERIODO,
					ID_CERTIFICADO,
					USRMOD,
					FECHAMOD,
					HORAMOD,
					ACCION
				)
			VALUES 
				(
					@DDC_ID_DISPUTA,
					@DISPUTA_EMPRESA,
					@DDC_DIVISION,
					@DDC_OST,
					@DDC_ID_DOC,
					@DDC_ID,
					@DDC_USUARIO,
					@DISPUTA_FECHA,
					@DDC_HORA,
					@DDC_OBSERVACION,
					@DDC_CERTUSUARIO,
					@DDC_CERTFECHA,
					@DDC_CERTHORA,
					@DDC_ESTADO,
					@DDC_REVALUSUARIO,
					@DDC_REVALFECHA,
					@DDC_REVALHORA,
					@DDC_OBSERVACION_REVAL,
					@DDC_VALIDADO,
					@DDC_PERIODO,
					@DDC_ID_CERTIFICADO,
					@USUARIO,
					@CURR_FECHA,
					@CURR_TIEMPOFULL,
					'ELIMINADO'
				)

			DELETE DOCS_DISPUTA_CLABORAL
			WHERE
				ID_DISPUTA = @DISPUTA_ID AND
				ID_DOC =  @ID_DOC AND 
				ESTADO = 'NO'
		END

		DELETE FROM ARCHIVOS
		WHERE ID = @ID

		UPDATE REMUNERACIONES_PROPIO
		SET
			ID = NULL,
			VALIDADO = 'NO',
			USUARIO = @USUARIO,
			FECHAMOD = @CURR_FECHA,
			HORAMOD = @CURR_TIEMPOFULL
		WHERE
			EMPRESA = @IDEMPRESA AND
			PERIODO = @PERIODO AND
			DIVISION = @DIVISION AND
			OST = @OST

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_REMUNERACIONES_PROPIO_UPDATE_V3_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_UPDATE_V3_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_REMUNERACIONES_PROPIO_UPDATE_V3_CONTROLLABORAL_CTTA]
(
  @ID			UNIQUEIDENTIFIER = NULL
 ,@USUARIO		NVARCHAR(10)
 ,@PERIODO		NVARCHAR(6)
 ,@IDEMPRESA	NVARCHAR(10)
 ,@DIVISION		NVARCHAR(4)
 ,@OST			NVARCHAR(20)
 ,@MONTOIMP		INT
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	IF(@ID IS NOT NULL)
		BEGIN
			UPDATE REMUNERACIONES_PROPIO
			SET
				ID = @ID,
				VALIDADO = 'NO',
				MONTOIMP = @MONTOIMP,
				USUARIO = @USUARIO,
				FECHAMOD = @CURR_FECHA,
				HORAMOD = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO) AND
				(DIVISION = @DIVISION) AND
				(OST = @OST)
		END
	ELSE
		BEGIN
			UPDATE REMUNERACIONES_PROPIO
			SET
				VALIDADO = 'NO',
				MONTOIMP = @MONTOIMP,
				USUARIO = @USUARIO,
				FECHAMOD = @CURR_FECHA,
				HORAMOD = @CURR_TIEMPOFULL
			WHERE
				(EMPRESA = @IDEMPRESA) AND
				(PERIODO = @PERIODO) AND
				(DIVISION = @DIVISION) AND
				(OST = @OST)
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_REQVAL_DOCS_SELECT_DOCUMENTO_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_REQVAL_DOCS_SELECT_DOCUMENTO_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_REQVAL_DOCS_SELECT_DOCUMENTO_CTTA]
(@ID_DOC		INT = NULL ) AS
BEGIN

	SELECT REQUISITO 
	FROM REQVAL_DOCS 
	WHERE ID_DOC = @ID_DOC

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_RESERVA_BUS_DELETE_ASIENTOSRESERVADOS_BUSESRESERVA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_RESERVA_BUS_DELETE_ASIENTOSRESERVADOS_BUSESRESERVA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_RESERVA_BUS_DELETE_ASIENTOSRESERVADOS_BUSESRESERVA_CTTA]
(  @IDPROG NUMERIC(18,0) = NULL
 , @RUT NVARCHAR(10) = NULL
 , @USUARIO NVARCHAR(10) = NULL) AS
BEGIN

	UPDATE RESERVA_BUS 
	SET ESTADO='NO', 
	FECHA_CANCELA = [dbo].[hoy](GETDATE()), 
	HORA_CANCELA = [dbo].[ahora](GETDATE()), 
	USUARIO_CANCELA = @USUARIO
	WHERE  (IDPROG = @IDPROG) AND (RUT = @RUT)
																			
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_RESERVA_BUS_INSERT_BUSESRESERVA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_RESERVA_BUS_INSERT_BUSESRESERVA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_RESERVA_BUS_INSERT_BUSESRESERVA_CTTA]
( @IDPROG		NUMERIC(18,0) = NULL
, @RUT			NVARCHAR(10) = NULL
, @EMPRESA		NVARCHAR(10) = NULL
, @OST			NVARCHAR(10) = NULL
, @USUARIO		NVARCHAR(10) = NULL
) AS
BEGIN
	DECLARE  
	 @Rs_DisponibleDISPONIBLES		INT
	,@Rs_DisponibleBUSDIRORI		NVARCHAR(50)
	,@Rs_DisponibleBUSDIRDES		NVARCHAR(50)
	,@Rs_DisponibleFECHA			NVARCHAR(8)
	,@Rs_DisponibleDIRECCION		NVARCHAR(10)
	,@Rs_DisponibleORIGEN			NVARCHAR(20)
	,@Rs_DisponibleHORA				NVARCHAR(8)
	,@Rs_DisponibleDIVISION			NVARCHAR(4)
	,@SubidaPerez					BIT
	,@Cantidad_Viajes				INT
	,@ControlPerez					NVARCHAR(2)
	,@NOMBRES						NVARCHAR(100)
	,@APELLIDOS						NVARCHAR(100)	

	CREATE TABLE #RESULTADOS 
	(EXITOSO		INT
	,MENSAJE		NVARCHAR(MAX)
	,RUT			NVARCHAR(20)
	,NOMBRES		NVARCHAR(100)
	,APELLIDOS		NVARCHAR(100)
	,ORIGEN			NVARCHAR(100)
	,DESTINO		NVARCHAR(100)
	,FECHA			NVARCHAR(100))

	SELECT TOP 1 @Rs_DisponibleDISPONIBLES=DISPONIBLES			,@Rs_DisponibleFECHA=FECHA			,@Rs_DisponibleHORA= HORA				,@Rs_DisponibleBUSDIRORI=BUSDIRORI
			,@Rs_DisponibleBUSDIRDES=BUSDIRDES				,@Rs_DisponibleDIRECCION=DIRECCION	,@Rs_DisponibleORIGEN=ORIGEN			,@Rs_DisponibleDIVISION=DIVISION 
			FROM A203_BUS_PAS WHERE (IDPROG = @IDPROG)
	
	SELECT TOP 1 @NOMBRES= NOMBRES ,@APELLIDOS= APELLIDOS FROM WORKERS WHERE RUT = @RUT

	IF(@Rs_DisponibleDISPONIBLES>=1)
		BEGIN
			--PRINT'VALIDACION 1'
			IF EXISTS (SELECT CONTROL_PEREZ, ISNULL(CANTIDAD_SUBIDAS,1) AS CANTIDAD_SUBIDAS, ISNULL(CANTIDAD_BAJADAS,1) AS CANTIDAD_BAJADAS FROM VIAJES_PARAMETROS) 
				BEGIN
		
					DECLARE  @Rs_ParametrosCONTROL_PEREZ		NVARCHAR(2)
							,@Rs_ParametrosCANTIDAD_SUBIDAS		INT
							,@Rs_ParametrosCANTIDAD_BAJADAS		INT

					SELECT @Rs_ParametrosCONTROL_PEREZ=CONTROL_PEREZ			,@Rs_ParametrosCANTIDAD_SUBIDAS= ISNULL(CANTIDAD_SUBIDAS,1)			,@Rs_ParametrosCANTIDAD_BAJADAS= ISNULL(CANTIDAD_BAJADAS,1) 
					FROM VIAJES_PARAMETROS

					SET @ControlPerez = @Rs_ParametrosCONTROL_PEREZ
					IF @Rs_DisponibleDIRECCION= 'SUBIDA'
						BEGIN
							SET @Cantidad_Viajes = @Rs_ParametrosCANTIDAD_SUBIDAS
						END
						ELSE IF @Rs_DisponibleDIRECCION='BAJADA'
						BEGIN
							SET @Cantidad_Viajes = @Rs_ParametrosCANTIDAD_BAJADAS
						END
				END
			ELSE
				BEGIN
					SET @ControlPerez = 'SI'
					SET @Cantidad_Viajes = 1
				END		
			
			If @ControlPerez = 'SI' 
				BEGIN
					If @Rs_DisponibleORIGEN = 'PEREZ_CALDERA' 
						BEGIN
							IF EXISTS (	SELECT TOP 1 P.DESTINO FROM RESERVA_BUS R 
										INNER JOIN PROGBUS P ON P.IDPROG = R.IDPROG 
										WHERE R.RUT = @RUT AND R.ESTADO = 'SI' 
										AND DATEDIFF(day, P.FECHA, @Rs_DisponibleFECHA) <= 15 
										AND P.FECHA <= @Rs_DisponibleFECHA 
										ORDER BY P.FECHA DESC)
							BEGIN
							    DECLARE @Rs_DestinoPerezDESTINO		NVARCHAR(20)

							    SELECT TOP 1 @Rs_DestinoPerezDESTINO=P.DESTINO 
								FROM RESERVA_BUS R 
								INNER JOIN PROGBUS P ON P.IDPROG = R.IDPROG 
								WHERE R.RUT = @RUT AND R.ESTADO = 'SI' 
								AND DATEDIFF(day, P.FECHA, @Rs_DisponibleFECHA) <= 15 
								AND P.FECHA <= @Rs_DisponibleFECHA 
								ORDER BY P.FECHA DESC
								If @Rs_DestinoPerezDESTINO = 'PEREZ_CALDERA' 
								BEGIN
									 SET @SubidaPerez = 1
						        END
								ELSE
								BEGIN									
									 SET @SubidaPerez = 0
								END
							END
							ELSE
							BEGIN
								 SET @SubidaPerez = 0
							END
						END
					ELSE
						BEGIN
						 SET @SubidaPerez = 1
						END
				END
			ELSE
				BEGIN
					SET @SubidaPerez = 1
				END		
			
			IF(@SubidaPerez=1)
				BEGIN
					--PRINT'VALIDACION 2'
					DECLARE @Rs_HoraHORA NVARCHAR(8)
							,@Rs_HoraHORAFIN NVARCHAR(8)
							,@Rs_HoraFECHA NVARCHAR(8)
							,@CANTIDAD_RESERVAS INT = 0
					
					SELECT @Rs_HoraHORA=HORA		,@Rs_HoraHORAFIN=CONVERT(VARCHAR(8)		,DATEADD(HH, CONVERT(INT, DURACION), HORA), 8)		,@Rs_HoraFECHA=FECHA 
					FROM PROGBUS WHERE FECHA >= GETDATE() AND IDPROG = @IDPROG

					SELECT @CANTIDAD_RESERVAS= COUNT(RUT)
					FROM RESERVA_BUS R 
					INNER JOIN PROGBUS P ON P.IDPROG = R.IDPROG 
					WHERE P.FECHA = @Rs_DisponibleFECHA 
					AND R.RUT = @RUT 
					AND P.DIRECCION = @Rs_DisponibleDIRECCION 
					AND R.ESTADO = 'SI'

					IF(@CANTIDAD_RESERVAS<@Cantidad_Viajes)
						BEGIN
							--PRINT'VALIDACION 3'
							IF NOT EXISTS (SELECT RUT FROM RESERVA_BUS R 
										   INNER JOIN PROGBUS P ON P.IDPROG = R.IDPROG 
										   WHERE P.FECHA = @Rs_DisponibleFECHA 
										   AND P.HORA = @Rs_DisponibleHORA 
										   AND R.RUT = @RUT AND ESTADO='SI')
								BEGIN
									--PRINT'VALIDACION 4'
									DECLARE @Rs_ViajeBUSDIRORI		NVARCHAR(50)
											,@Rs_ViajeBUSDIRDES		NVARCHAR(50)
											,@Rs_ViajeFECHA			NVARCHAR(8)
											,@Rs_ViajeHORA			NVARCHAR(8)
											,@Rs_ViajeDURACION		NVARCHAR(2)
											
									SELECT @Rs_ViajeFECHA= p.FECHA		,@Rs_ViajeHORA=p.HORA		,@Rs_ViajeDURACION=p.DURACION		,@Rs_ViajeBUSDIRORI=O.BUSDIRORI		,@Rs_ViajeBUSDIRDES=D.BUSDIRDES 
									FROM RESERVA_BUS r 
									INNER JOIN PROGBUS p ON r.IDPROG = p.IDPROG 
									INNER JOIN BUSORIGEN O ON O.BUSORIGEN = P.ORIGEN 
									INNER JOIN BUSDESTINO D ON D.BUSDESTINO = P.DESTINO 
									WHERE P.FECHA >= GETDATE() 
									AND R.RUT=@RUT 
									AND CONVERT(VARCHAR(8),DATEADD(HH,CONVERT(INT,P.DURACION),P.HORA),8) >@Rs_HoraHORA 
									AND CONVERT(VARCHAR(8),P.HORA,8) < @Rs_HoraHORAFIN 
									AND P.FECHA = @Rs_HoraFECHA 
									AND R.ESTADO='SI'
									
									IF NOT EXISTS (SELECT p.ORIGEN, p.DESTINO, p.FECHA, p.HORA, p.DURACION, O.BUSDIRORI, D.BUSDIRDES 
										FROM RESERVA_BUS r 
										INNER JOIN PROGBUS p ON r.IDPROG = p.IDPROG 
										INNER JOIN BUSORIGEN O ON O.BUSORIGEN = P.ORIGEN 
										INNER JOIN BUSDESTINO D ON D.BUSDESTINO = P.DESTINO 
										WHERE P.FECHA >= GETDATE() 
										AND R.RUT=@RUT 
										AND CONVERT(VARCHAR(8),DATEADD(HH,CONVERT(INT,P.DURACION),P.HORA),8) >@Rs_HoraHORA 
										AND CONVERT(VARCHAR(8),P.HORA,8) < @Rs_HoraHORAFIN 
										AND P.FECHA = @Rs_HoraFECHA 
										AND R.ESTADO='SI')--VALIDACION 5
										BEGIN
											--PRINT'VALIDACION 5'
											IF EXISTS (SELECT TOP 1 FINIPASE, FFINPASE, VALIDADO, AUTOR, TIPOPASE, EMPRESA, OST 
											FROM WORKERSLOCAL 
											WHERE RUT=@RUT 
											AND DIVISION=@Rs_DisponibleDIVISION  
											AND EMPRESA = @EMPRESA 
											AND AUTOR='SI' 
											AND VALIDADO='SI' 
											AND @Rs_DisponibleFECHA BETWEEN FINIPASE AND FFINPASE 
											ORDER BY LOTE DESC)
											BEGIN
												--PRINT'VALIDACION 6'
												DECLARE @Rs_DatosAUTOR			NVARCHAR(2)
												,@Rs_DatosVALIDADO				NVARCHAR(2)
												,@Rs_DatosEMPRESAW				NVARCHAR(10)
												,@Rs_DatosOSTW					NVARCHAR(14)
												,@Rs_DatosTIPOPASE				NVARCHAR(9)
												,@Rs_DatosFINIPASE				NVARCHAR(8)
												,@Rs_DatosFFINPASE				NVARCHAR(8)
												,@Rs_CantReservaCANTRESERVAS	INT = 0
												,@Rs_CuotaOSTCUOTATRANS			INT = 0
												,@DISPONE_CUOTA					BIT

												SELECT TOP 1 @Rs_DatosAUTOR=AUTOR		,@Rs_DatosVALIDADO=VALIDADO		,@Rs_DatosFINIPASE=FINIPASE		,@Rs_DatosFFINPASE=FFINPASE
													,@Rs_DatosTIPOPASE= TIPOPASE,@Rs_DatosEMPRESAW= EMPRESA		,@Rs_DatosOSTW=OST 
												FROM WORKERSLOCAL 
												WHERE RUT=@RUT 
												AND DIVISION=@Rs_DisponibleDIVISION  
												AND EMPRESA = @EMPRESA 
												AND AUTOR='SI' 
												AND VALIDADO='SI' 
												AND @Rs_DisponibleFECHA BETWEEN FINIPASE AND FFINPASE 
												ORDER BY LOTE DESC	
													
												SELECT @Rs_CantReservaCANTRESERVAS=ISNULL(SUM(CANTIDAD), 0) 
												FROM WC3_VISTA_RESERVA_BUS_SI 
												WHERE OST = @Rs_DatosOSTW 
												AND EMPRESA = @Rs_DatosEMPRESAW 
												AND SUBSTRING(FECHA, 1,6) = SUBSTRING(@Rs_HoraFECHA, 1,6)
											
												SELECT @Rs_CuotaOSTCUOTATRANS=CUOTATRANS 
												FROM OST_TRANSPORTE_CUOTA 
												WHERE OST = @Rs_DatosOSTW 
												AND EMPRESA = @Rs_DatosEMPRESAW											

												If EXISTS(SELECT CUOTATRANS FROM OST_TRANSPORTE_CUOTA WHERE OST = @Rs_DatosOSTW AND EMPRESA = @Rs_DatosEMPRESAW) 
													BEGIN
														If @Rs_CantReservaCANTRESERVAS >= @Rs_CuotaOSTCUOTATRANS 
															BEGIN
																SET @DISPONE_CUOTA = 0
															END
														ELSE
															BEGIN
																SET @DISPONE_CUOTA = 1
														END
													END
												ELSE
													BEGIN
														SET @DISPONE_CUOTA = 1
													END

												IF @DISPONE_CUOTA = 1 --VALIDACION 7
													BEGIN
														--PRINT'VALIDACION 7'
														DECLARE @Rs_EstadoAlertaESTADO	NVARCHAR(10)
														,@ESTADO					BIT

														SELECT @Rs_EstadoAlertaESTADO=ESTADO 
														FROM ALERTA_FAENA 
														WHERE DIVISION = @Rs_DisponibleDIVISION
														If EXISTS(SELECT ESTADO FROM ALERTA_FAENA WHERE DIVISION = @Rs_DisponibleDIVISION)
															BEGIN
																IF @Rs_EstadoAlertaESTADO = 'ROJA'
																	BEGIN
																		SET @ESTADO = 0
																	END
																ELSE
																	BEGIN
																		IF @Rs_DatosTIPOPASE = 'VISITA' And @Rs_EstadoAlertaESTADO = 'AMARILLA' 
																			BEGIN
																				SET @ESTADO = 0
																			END
																		ELSE
																			BEGIN
																				SET @ESTADO = 1
																			END
																	END
															END
														ELSE
															BEGIN
																SET @ESTADO = 1
															END
														
														IF @ESTADO = 1 --VALIDACION 8
														BEGIN
															--PRINT'VALIDACION 8'
															DECLARE @Rs_DocsID_DOC_FEC INT 

															SELECT DISTINCT  DF.ID_DOC_FEC,ROW_NUMBER() OVER(ORDER BY DF.ID_DOC_FEC ASC) AS ID
															INTO #TIPOS_PASE
															FROM DOCS_TIPOPASE DT 
															INNER JOIN DOCS D ON D.ID_DOC = DT.ID_DOC 
															INNER JOIN DOCS_FEC DF ON DF.ID_DOC_DEPEND = D.ID_DOC 
															INNER JOIN DOCS_FEC_TIPOPASE DFT ON DFT.ID_DOC_FEC = DF.ID_DOC_FEC 
															WHERE D.ACTIVO = 'SI' AND DF.ACTIVO = 'SI' 
															AND DT.TIPOPASE = @Rs_DatosTIPOPASE
															AND DT.DIVISION = @Rs_DisponibleDIVISION
															AND DF.VALIDO_MAYOR_HOY = 1 AND D.ID_TIPO_PROPIETARIO = 1 
															AND D.ID_DOC_OPCION = 0 
															AND DFT.TIPOPASE = @Rs_DatosTIPOPASE
															AND DFT.DIVISION = @Rs_DisponibleDIVISION

															DECLARE @CONTADOR_PASES					INT = 1
															DECLARE @MAXIMO_PASES					INT
															DECLARE @VALIDACION_FECHA_CORRECTA		INT = 0
															DECLARE @FECHA_FUNCION					NVARCHAR(8)

															SELECT @MAXIMO_PASES = MAX(ID) FROM #TIPOS_PASE

															WHILE  (@MAXIMO_PASES<= @CONTADOR_PASES)
																BEGIN
																	DECLARE  @ID_DOC_FE_WHILE INT 
																	SELECT @ID_DOC_FE_WHILE=  ID_DOC_FEC FROM #TIPOS_PASE
																	WHERE ID = @CONTADOR_PASES
																
																	SELECT @FECHA_FUNCION = dbo.[V4MVC_FN_GET_FECHA_VEHICULO_BUSESRESERVA](@ID_DOC_FE_WHILE,@RUT,@Rs_DisponibleDIVISION,@EMPRESA)
																	
																	IF @FECHA_FUNCION < @Rs_DisponibleFECHA 
																		SET @VALIDACION_FECHA_CORRECTA = 1
                                                                    SET @CONTADOR_PASES = @CONTADOR_PASES + 1
																END
															IF @Rs_DatosFINIPASE <= @Rs_DisponibleFECHA AND @Rs_DatosFFINPASE >= @Rs_DisponibleFECHA --VALIDACION 9
																BEGIN									                                                           
																	--PRINT'VALIDACION 9'
																	IF (@Rs_DatosAUTOR = 'SI' And @Rs_DatosVALIDADO = 'SI' AND @VALIDACION_FECHA_CORRECTA = 0)
																		BEGIN
																			--PRINT'VALIDACION 10'
																			IF  EXISTS (SELECT RUT FROM RESERVA_BUS WHERE (IDPROG = @IDPROG) AND (RUT = @RUT)) 
																				BEGIN
																					UPDATE RESERVA_BUS 
																					SET ESTADO = 'SI', 
																					FECHA_RESERVA = [dbo].[hoy](GETDATE()),
																					HORA_RESERVA = [dbo].[ahora](GETDATE())
																					WHERE (IDPROG = @IDPROG) AND (RUT = @RUT)

																					INSERT INTO #RESULTADOS
																					(EXITOSO		,MENSAJE		,RUT			,NOMBRES
																					 ,APELLIDOS		,ORIGEN			,DESTINO		,FECHA)
																					 VALUES(
																					 1		,'EXITOSO'   ,@RUT		,@NOMBRES
																					 ,@APELLIDOS,@Rs_DisponibleBUSDIRORI			,@Rs_DisponibleBUSDIRDES	,@Rs_DisponibleFECHA)
																				END
																			ELSE
																				BEGIN
																					INSERT INTO RESERVA_BUS(IDPROG		,RUT		,EMPRESA		,OST	,UTILIZO
																											,USUARIO	,ESTADO		,FECHA_RESERVA	,HORA_RESERVA) 
																					VALUES  (@IDPROG		,@RUT		,@EMPRESA				,@OST						,'NO'  
																							,@USUARIO		,'SI'		,[dbo].[hoy](GETDATE())	,[dbo].[ahora](GETDATE()));

																					INSERT INTO #RESULTADOS
																						(EXITOSO		,MENSAJE		,RUT			,NOMBRES
																					 ,APELLIDOS		,ORIGEN			,DESTINO		,FECHA)
																					 VALUES(
																					 1		,'EXITOSO'   ,@RUT		,@NOMBRES
																					 ,@APELLIDOS,@Rs_DisponibleBUSDIRORI			,@Rs_DisponibleBUSDIRDES	,@Rs_DisponibleFECHA)	
																				END
																		END
																	ELSE
																		BEGIN
																			INSERT INTO #RESULTADOS
																			(EXITOSO		,MENSAJE		,RUT			,NOMBRES
																			 ,APELLIDOS		,ORIGEN			,DESTINO		,FECHA)
																			 VALUES(
																			 '0'		,'Funcionarios que no se Encuentran Acreditados'   ,@RUT		,@NOMBRES
																			 ,@APELLIDOS,@Rs_DisponibleBUSDIRORI			,@Rs_DisponibleBUSDIRDES	,@Rs_DisponibleFECHA)
																		END
																END
															ELSE
																BEGIN
																	INSERT INTO #RESULTADOS
																	(EXITOSO		,MENSAJE		,RUT			,NOMBRES
																	 ,APELLIDOS		,ORIGEN			,DESTINO		,FECHA)
																	 VALUES(
																	 '0'		,'Funcionarios con Pase Vencido.'   ,@RUT						,@NOMBRES
																	 ,@APELLIDOS,@Rs_DisponibleBUSDIRORI			,@Rs_DisponibleBUSDIRDES	,@Rs_DisponibleFECHA)
																END

														END
														ELSE --VALIDACION 8
															BEGIN
																INSERT INTO #RESULTADOS
																(EXITOSO		,MENSAJE		,RUT			,NOMBRES
																,APELLIDOS		,ORIGEN			,DESTINO		,FECHA)
																VALUES(
																'0'		,'Funcionarios que no pueden reservar por alerta en faena'   ,@RUT						,@NOMBRES
																,@APELLIDOS,@Rs_DisponibleBUSDIRORI			,@Rs_DisponibleBUSDIRDES	,@Rs_DisponibleFECHA)
															END
													END
														ELSE --VALIDACION 7
															BEGIN
																INSERT INTO #RESULTADOS
																(EXITOSO		,MENSAJE		,RUT			,NOMBRES
																,APELLIDOS		,ORIGEN			,DESTINO		,FECHA)
																VALUES(
																'0'		,'Funcionarios que no pueden reservar por superar cuota mensual por Contrato'   ,@RUT						,@NOMBRES
																,@APELLIDOS,@Rs_DisponibleBUSDIRORI			,@Rs_DisponibleBUSDIRDES	,@Rs_DisponibleFECHA)
															END
					 							END
					 						ELSE --VALIDACION 6
					 							BEGIN
													INSERT INTO #RESULTADOS
													(EXITOSO		,MENSAJE		,RUT			,NOMBRES
													,APELLIDOS		,ORIGEN			,DESTINO		,FECHA)
													VALUES(
													'0'		,'Funcionarios que no se Encuentran Acreditados'   ,@RUT						,@NOMBRES
													,@APELLIDOS,@Rs_DisponibleBUSDIRORI			,@Rs_DisponibleBUSDIRDES	,@Rs_DisponibleFECHA)
												END
					 
					 					END
									ELSE
					 					BEGIN
											INSERT INTO #RESULTADOS
											(EXITOSO		,MENSAJE		,RUT			,NOMBRES
											,APELLIDOS		,ORIGEN			,DESTINO		,FECHA)
											VALUES(
											'0'		,'Funcionarios que ya cuentan con una reserva dentro del horario del viaje'   ,@RUT						,@NOMBRES
											,@APELLIDOS,@Rs_DisponibleBUSDIRORI			,@Rs_DisponibleBUSDIRDES	,@Rs_DisponibleFECHA)
											--SET @EXITOSO = 0
											--SET @MENSAJE = 'Funcionarios que ya cuentan con una reserva dentro del horario del viaje.'
											--SET @TABLA = N'<Table width="100%" class="table table-striped table-hover">'
											--SET @TABLA = @TABLA + N'<Tr><Td colspan = "5" align="center" class="Msg"><strong>Funcionarios que ya cuentan con una reserva dentro del horario del viaje</strong></Td></Tr>'
											--SET @TABLA = @TABLA + N'<tr><td class="Titulo">RUT</td><td class="Titulo">Nombres</td>'
											--SET @TABLA = @TABLA + N'<td class="Titulo">Origen</td><td class="Titulo">Destino</td><td class="Titulo">Fecha</td></tr>'
											--SET @TABLA = @TABLA + N'<Tr><Td class="Contenido">' + @RUT + '</Td>' 
											--SET @TABLA = @TABLA + N'<Td class="Contenido">' + (SELECT TOP 1 NOMBRES + ' ' + APELLIDOS FROM WORKERS WHERE RUT = @RUT) + '</Td>'
											--SET @TABLA = @TABLA + N'<td class="Contenido">' + @Rs_DisponibleBUSDIRORI + '</td>'
											--SET @TABLA = @TABLA + N'<td class="Contenido">' + @Rs_DisponibleBUSDIRDES + '</td>'
											--SET @TABLA = @TABLA + N'<td class="Contenido">' + CONVERT(varchar,CONVERT (datetime, @Rs_DisponibleFECHA),106) + '</td></Tr>'
											--SET @TABLA = @TABLA + N'<tr><td class="Titulo" colspan=""5"" align="center"><strong>Viaje que no permite la reserva</strong></td></tr>'
											--SET @TABLA = @TABLA + N'<tr><td class="Titulo">Origen</td><td class=""Titulo"">Destino</td>'
											--SET @TABLA = @TABLA + N'<td class="Titulo">Fecha</td><td class="Titulo">Hora</td>'
											--SET @TABLA = @TABLA + N'<td class="Titulo">Duraci&oacute;n</td></tr>'
											--SET @TABLA = @TABLA + N'<tr><td class="Contenido">' + @Rs_ViajeBUSDIRORI + '</td>'
											--SET @TABLA = @TABLA + N'<td class="Contenido">' + @Rs_ViajeBUSDIRDES + '</td>'
											--SET @TABLA = @TABLA + N'<td class="Contenido">' + CONVERT(varchar,CONVERT (datetime, @Rs_ViajeFECHA),106)  + '</td>'
											--SET @TABLA = @TABLA + N'<td class="Contenido">' + @Rs_ViajeHORA + '</td>'
											--SET @TABLA = @TABLA + N'<td class="Contenido">' + ISNULL(@Rs_ViajeDURACION,'Hrs') + ' </td></Tr>'
											--SET @TABLA = @TABLA + N'</Table>'
										END
								END
							ELSE
								BEGIN
									INSERT INTO #RESULTADOS
									(EXITOSO		,MENSAJE		,RUT			,NOMBRES
									,APELLIDOS		,ORIGEN			,DESTINO		,FECHA)
									VALUES(
									'0'		,'Funcionarios que ya cuentan con una reserva en este horario'   ,@RUT						,@NOMBRES
									,@APELLIDOS,@Rs_DisponibleBUSDIRORI			,@Rs_DisponibleBUSDIRDES	,@Rs_DisponibleFECHA)
								END
						END
					ELSE
						BEGIN
							INSERT INTO #RESULTADOS
							(EXITOSO		,MENSAJE		,RUT			,NOMBRES
							,APELLIDOS		,ORIGEN			,DESTINO		,FECHA)
							VALUES(
							'0'		,'Funcionarios que no pueden reservar por contar con reserva en misma direcci&oacute;n para el d&iacute;a seleccionado.'   ,@RUT						,@NOMBRES
							,@APELLIDOS,@Rs_DisponibleBUSDIRORI			,@Rs_DisponibleBUSDIRDES	,@Rs_DisponibleFECHA)
						END
				END
			ELSE
				BEGIN
					INSERT INTO #RESULTADOS
					(EXITOSO		,MENSAJE		,RUT			,NOMBRES
					,APELLIDOS		,ORIGEN			,DESTINO		,FECHA)
					VALUES(
					'0'		,'Funcionarios que no cuentan con reserva anterior de subida a PEREZ CALDERA.'   ,@RUT						,@NOMBRES
					,@APELLIDOS,@Rs_DisponibleBUSDIRORI			,@Rs_DisponibleBUSDIRDES	,@Rs_DisponibleFECHA)
				END
		
		END
	ELSE
		BEGIN
			INSERT INTO #RESULTADOS
			(EXITOSO		,MENSAJE		,RUT			,NOMBRES
			,APELLIDOS		,ORIGEN			,DESTINO		,FECHA)
			VALUES(
			'0'		,'Funcionarios que quedaron sin Reservas por superar limite de capacidad.'   ,@RUT						,@NOMBRES
			,@APELLIDOS,@Rs_DisponibleBUSDIRORI			,@Rs_DisponibleBUSDIRDES	,@Rs_DisponibleFECHA)
		END
	SELECT * FROM #RESULTADOS
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_RESERVA_BUS_SELECT_ASIENTOSRESERVADOS_BUSESRESERVA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_RESERVA_BUS_SELECT_ASIENTOSRESERVADOS_BUSESRESERVA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_RESERVA_BUS_SELECT_ASIENTOSRESERVADOS_BUSESRESERVA_CTTA]
( @IDPROG NUMERIC(18,0) = NULL
, @EMPRESA NVARCHAR(10) = NULL) AS
BEGIN

	SELECT ROW_NUMBER() OVER(ORDER BY R.IDPROG ASC) ROWNUMBER				,R.RUT				, W.NOMBRES				, W.APELLIDOS
		 , E.ACRONIMO														, R.EMPRESA			,R.IDPROG 
    FROM RESERVA_BUS R INNER JOIN WORKERS W ON W.RUT = R.RUT 
					   INNER JOIN ENTERPRISE E ON E.IDEMPRESA = R.EMPRESA 
	WHERE R.IDPROG=@IDPROG AND R.EMPRESA = @EMPRESA AND R.ESTADO='SI'
	GROUP BY R.IDPROG,R.RUT,W.NOMBRES, W.APELLIDOS, E.ACRONIMO, R.EMPRESA 																			
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_RESERVA_BUS_SELECT_VALIDAEMPRESA_BUSESRESERVA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_RESERVA_BUS_SELECT_VALIDAEMPRESA_BUSESRESERVA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_RESERVA_BUS_SELECT_VALIDAEMPRESA_BUSESRESERVA_CTTA]   
(      
@EMPRESA NVARCHAR(10) = NULL
)      
AS      
BEGIN      
	DECLARE @PORCNO INT,
			@MENSAJE NVARCHAR(500)
     
	DECLARE @CONTROL_NOUTILIZA VARCHAR(4)
		   ,@PORC_NOUTILIZA INT
		   ,@DIAS_CASTIGO INT
		   ,@PERIODO_NOUTILIZA INT
	SELECT @CONTROL_NOUTILIZA = ISNULL(CONTROL_NOUTILIZA, 'NO')
		 , @PORC_NOUTILIZA    = ISNULL(PORC_NOUTILIZA, 100) 
		 , @DIAS_CASTIGO      = ISNULL(DIAS_CASTIGO, 7) 
		 , @PERIODO_NOUTILIZA = ISNULL(PERIODO_NOUTILIZA, 30) 
	FROM VIAJES_PARAMETROS

	DECLARE @CANTNO INT
		   ,@CANTOT INT
	SELECT  @CANTNO = SUM(CASE WHEN R.ESTADO = 'SI' AND R.UTILIZO = 'NO' THEN 1 ELSE 0 END) 
		  , @CANTOT = SUM(CASE WHEN R.ESTADO = 'SI' THEN 1 ELSE 0 END) 
	FROM RESERVA_BUS R
	INNER JOIN PROGBUS P ON P.IDPROG = R.IDPROG 
	WHERE R.EMPRESA = @EMPRESA
	AND P.FECHA BETWEEN DATEADD(DAY,-1*@PERIODO_NOUTILIZA,GETDATE()) AND DATEADD(DAY,-1,GETDATE())

				IF @CANTNO > 0 And @CANTOT > 0 
				BEGIN
					SET @PORCNO = (@CANTNO / @CANTOT) * 100
					IF(@PORCNO) >= @PORC_NOUTILIZA
					BEGIN
							SET @MENSAJE = 'Estimado usuario su empresa se encuentra con restriccion de reservas por reservas no utilizadas. Solo podra reservar ' + CONVERT(VARCHAR(10),@DIAS_CASTIGO) + ' dias en adelante.'
					END
					ELSE
					BEGIN
							SET @MENSAJE = ''
					END
				END
	SELECT @MENSAJE AS MENSAJE     
END 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_RESERVAS_EXSICO_DELETE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_RESERVAS_EXSICO_DELETE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_RESERVAS_EXSICO_DELETE_CTTA]
(
 @USUARIO		NVARCHAR(10)
,@LIST_ID		NVARCHAR(250)
)
AS
BEGIN

	SELECT value AS ID_RESERVA INTO #TEMP_SPLIT_LIST_ID       
	FROM string_split(@LIST_ID,',')   

	SELECT  ROW_NUMBER() OVER(ORDER BY ID_RESERVA ASC) AS ID , * INTO #TEMP_SPLIT_B from                     
	#TEMP_SPLIT_LIST_ID      
	
	DECLARE @CONTADOR INT 
	DECLARE @MAXIMO INT 
	DECLARE @DATO VARCHAR(10) 

	SET @CONTADOR = 1    
	SELECT @MAXIMO = MAX(ID) FROM  #TEMP_SPLIT_B  

	WHILE ( @CONTADOR <= @MAXIMO )                     
	BEGIN        

		SELECT @DATO = ID_RESERVA FROM #TEMP_SPLIT_B                
		WHERE ID = @CONTADOR 

		SELECT				 EMPRESA							,RUT							,FECHARES			,HORAINICIO 
							,HORATERMINO						,TIPO							,ASISTIO			,MOTIVO 
							,FECHASOL							,HORASOL						,USUARIOSOL			,dbo.HOY(GETDATE()) AS FECHAMOD
							,dbo.AHORA(GETDATE()) AS HORAMOD	,@USUARIO AS USUARIOMOD			,'DEL' AS TIPOMOD
							INTO #TEMP
		FROM RESERVAS_EXSICO WHERE ID = @DATO

		INSERT INTO LOG_RESERVA_SICO (
										EMPRESA					,RUT							,FECHARES			,HORAINICIO 
									   ,HORATERMINO				,TIPO							,ASISTIO			,MOTIVO 
									   ,FECHASOL				,HORASOL						,USUARIOSOL			,FECHAMOD 
									   ,HORAMOD					,USUARIOMOD						,TIPOMOD
									 )
					SELECT				EMPRESA					,RUT							,FECHARES			,HORAINICIO 
									   ,HORATERMINO				,TIPO							,ASISTIO			,MOTIVO 
									   ,FECHASOL				,HORASOL						,USUARIOSOL			,FECHAMOD
									   ,HORAMOD					,USUARIOMOD						,TIPOMOD 
					FROM #TEMP

		DELETE FROM RESERVAS_EXSICO WHERE ID = @DATO

		DROP TABLE #TEMP

		SET @CONTADOR = @CONTADOR +1                     
	END  
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_RESERVAS_EXSICO_INSERT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_RESERVAS_EXSICO_INSERT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_RESERVAS_EXSICO_INSERT_CTTA]
(
 @IDEMPRESA					NVARCHAR(10)
,@USUARIO					NVARCHAR(10)
,@LIST_RUT					NVARCHAR(MAX)
,@FECHARES					NVARCHAR(8)
,@HORAINICIO				NVARCHAR(8)
,@HORATERMINO				NVARCHAR(8)
,@TIPO						DECIMAL(18,2)
)
AS
BEGIN

	CREATE TABLE #LISTA_WORKERS
	(
	 RUT					NVARCHAR(10)    COLLATE DATABASE_DEFAULT NOT NULL,
	 MSG_EXISTE				NVARCHAR(MAX)   COLLATE DATABASE_DEFAULT NOT NULL,
	 MSG_TIENE				NVARCHAR(MAX)   COLLATE DATABASE_DEFAULT NOT NULL,
	 MSG_TIENE_FECHA		NVARCHAR(8)	    COLLATE DATABASE_DEFAULT NOT NULL,
	 MSG_RESERVA			NVARCHAR(MAX)   COLLATE DATABASE_DEFAULT NOT NULL
	)

	SELECT value AS RUT INTO #TEMP_SPLIT_LIST_RUT      
	FROM string_split(@LIST_RUT,',')   

	SELECT  ROW_NUMBER() OVER(ORDER BY RUT ASC) AS ID , * INTO #TEMP_SPLIT_B from                     
	#TEMP_SPLIT_LIST_RUT     
	
	DECLARE @CONTADOR		INT 
	DECLARE @MAXIMO			INT 
	DECLARE @RUT			VARCHAR(10) 
	DECLARE @A				DATETIME  
	DECLARE @B				DATETIME  
	DECLARE @C				NVARCHAR(8)  
	DECLARE @MES			NVARCHAR(2)
	DECLARE @FECHA_EXSICO	NVARCHAR(8)
	DECLARE @QUERY			NVARCHAR(MAX)

	SET @MES = (SELECT TIEMPORENUEVA FROM TAB_RESERVASICO WHERE ACTIVO='SI')

	SET @CONTADOR = 1    
	SELECT @MAXIMO = MAX(ID) FROM  #TEMP_SPLIT_B  

	WHILE ( @CONTADOR <= @MAXIMO )                     
	BEGIN        

		SELECT @RUT = RUT FROM #TEMP_SPLIT_B                
		WHERE ID = @CONTADOR 

		IF EXISTS(
			SELECT * FROM RESERVAS_EXSICO 
			WHERE EMPRESA=@IDEMPRESA 
			AND RUT= @RUT
			AND ASISTIO='NO' 
			AND MOTIVO IS NULL AND (FECHARES>dbo.HOY(GETDATE()) OR (FECHARES=dbo.HOY(GETDATE()) AND HORATERMINO>dbo.AHORA(GETDATE())))
		)
		BEGIN
			INSERT INTO #LISTA_WORKERS VALUES (@RUT,'No puede realizarse la reserva por poseer ya una vigente.(Puede cancelar la reserva y hacer una nueva)',NULL,NULL,NULL)
		END
		ELSE
		BEGIN
		
			SET @FECHA_EXSICO = (SELECT TOP 1 FECHA FROM DOCS_FEC_WORKERS WHERE RUT = @RUT AND DIVISION='ES' AND ID_DOC_FEC='32' ORDER BY FECHA DESC)

			IF EXISTS(
				SELECT FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @RUT) AND DIVISION='ES' AND ID_DOC_FEC='32'
			)

			BEGIN
				INSERT INTO #LISTA_WORKERS VALUES (@RUT,NULL,'No puede realizarse la reserva por tener Examen Vigente.Puede solicitar una Reserva, '+ @MES +' mes(es) antes del vencimiento)', @FECHA_EXSICO ,NULL)
			END
			ELSE
			BEGIN

					SET @A = CAST(@FECHA_EXSICO AS DATETIME)   
					SET @B = DATEADD(MONTH, -(SELECT TIEMPORENUEVA FROM TAB_RESERVASICO WHERE ACTIVO='SI'), @A)  
					SET @C = CONVERT(VARCHAR(8), @B, 112); 

					INSERT INTO RESERVAS_EXSICO (
									EMPRESA			,RUT				,FECHARES			,HORAINICIO
								,HORATERMINO		,TIPO				,FECHASOL			,HORASOL 
								,USUARIOSOL			,FECHAMOD			,HORAMOD
							)
											
					VALUES (
									@IDEMPRESA			,@RUT				,@FECHARES			,@HORAINICIO
									,@HORATERMINO		,@TIPO				,DBO.HOY(GETDATE())	,DBO.AHORA(GETDATE())
									,@USUARIO			,DBO.HOY(GETDATE())	,DBO.AHORA(GETDATE())
							)

				INSERT INTO #LISTA_WORKERS VALUES (@RUT,NULL,NULL,NULL,'Reserva realizada Correctamente, ademas se envio correo para la notificacion')

			END
		END

		SET @CONTADOR = @CONTADOR + 1

	END
	SELECT * FROM #LISTA_WORKERS

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_RESERVAS_EXSICO_SELECT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_RESERVAS_EXSICO_SELECT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_RESERVAS_EXSICO_SELECT_CTTA]
(
 @FECHARES  NVARCHAR(8)  = NULL
)
AS
BEGIN

	SELECT			 T1.ID				,T1.EMPRESA			,T1.RUT			,T1.FECHARES
					,T1.HORAINICIO		,T1.HORATERMINO		,T1.TIPO		,T1.ASISTIO
					,T1.MOTIVO			,T1.FECHASOL		,T1.HORASOL		,T1.USUARIOSOL
					,T1.FECHAMOD		,T1.HORAMOD			,T1.APROBO		,T2.NOMBRES
					,T2.APELLIDOS		,T3.DESCRIPCION		

	FROM			RESERVAS_EXSICO			T1
	INNER JOIN		WORKERS					T2		ON		T1.RUT		=	T2.RUT
	INNER JOIN		TAB_TIPOEXSICO			T3		ON		T1.TIPO		=	T3.ID

	WHERE			T1.FECHARES		=		@FECHARES
	AND				T1.FECHASOL		=		T1.FECHAMOD
	AND				T1.HORASOL		=		T1.HORAMOD

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_RESERVAS_EXSICO_SELECT_ENTERPRISE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_RESERVAS_EXSICO_SELECT_ENTERPRISE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_RESERVAS_EXSICO_SELECT_ENTERPRISE_CTTA]
(
 @FECHARES  NVARCHAR(8)  = NULL
,@IDEMPRESA NVARCHAR(10) = NULL
)
AS
BEGIN

	SELECT			 T1.ID				,T1.EMPRESA			,T1.RUT			,T1.FECHARES
					,T1.HORAINICIO		,T1.HORATERMINO		,T1.TIPO		,T1.ASISTIO
					,T1.MOTIVO			,T1.FECHASOL		,T1.HORASOL		,T1.USUARIOSOL
					,T1.FECHAMOD		,T1.HORAMOD			,T1.APROBO		,T2.NOMBRES
					,T2.APELLIDOS		,T3.DESCRIPCION		

	FROM			RESERVAS_EXSICO			T1
	INNER JOIN		WORKERS					T2		ON		T1.RUT		=	T2.RUT
	INNER JOIN		TAB_TIPOEXSICO			T3		ON		T1.TIPO		=	T3.ID

	WHERE			T1.EMPRESA		=		@IDEMPRESA
	AND				T1.FECHARES		=		@FECHARES
	AND				T1.FECHASOL		=		T1.FECHAMOD
	AND				T1.HORASOL		=		T1.HORAMOD

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_RESERVAS_REVISION_VEHICULAR_DELETE_ACREDITACIONVEHICULAR_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_RESERVAS_REVISION_VEHICULAR_DELETE_ACREDITACIONVEHICULAR_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_RESERVAS_REVISION_VEHICULAR_DELETE_ACREDITACIONVEHICULAR_CTTA]
(@USUARIOSOL  NVARCHAR(10) = NULL
,@ID  INT = NULL) AS
BEGIN
      INSERT INTO LOG_RESERVA_VEHICULAR(EMPRESA,				 PATENTE		,FECHARES,		 HORAINICIO
	                                   ,HORATERMINO				,MINUTOS		,ASISTIO		,MOTIVO
									   ,FECHASOL				,HORASOL		,USUARIOSOL		,FECHAMOD
									   ,HORAMOD					,USUARIOMOD		,TIPOMOD) 
								 SELECT EMPRESA					,PATENTE		,FECHARES		,HORAINICIO
									   ,HORATERMINO				,MINUTOS		,ASISTIO		,MOTIVO
									   ,FECHASOL				,HORASOL		,USUARIOSOL		,[dbo].[hoy](GETDATE()) 
									   ,[dbo].[ahora](GETDATE()),@USUARIOSOL    ,'DEL' FROM RESERVAS_REVISION_VEHICULAR WHERE ID = @ID
      DELETE FROM RESERVAS_REVISION_VEHICULAR WHERE ID = @ID

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_RESERVAS_REVISION_VEHICULAR_INSERT_PEDIRRESERVA_ACREDITACIONVEHICULAR_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_RESERVAS_REVISION_VEHICULAR_INSERT_PEDIRRESERVA_ACREDITACIONVEHICULAR_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_RESERVAS_REVISION_VEHICULAR_INSERT_PEDIRRESERVA_ACREDITACIONVEHICULAR_CTTA]
(
  @EMPRESA				NVARCHAR(10) = NULL
 ,@PATENTE				NVARCHAR(8) = NULL
 ,@FECHARES				NVARCHAR(8) = NULL
 ,@HORAINICIO			NVARCHAR(8) = NULL
 ,@HORATERMINO			NVARCHAR(8) = NULL
 ,@MINUTOS				INT = NULL
 ,@USUARIOSOL			NVARCHAR(10) = NULL
 ,@DIVISION				NVARCHAR(10) = NULL
 ,@OST					NVARCHAR(20) = NULL
 ,@IDMOTIVORESERVA		INT = NULL
 ,@EXITOSO				BIT  OUTPUT
 ,@SALIDA				INT OUTPUT
) AS
BEGIN

	SET @SALIDA = 0
	IF NOT EXISTS(
			SELECT *
			FROM RESERVAS_REVISION_VEHICULAR
			WHERE
				EMPRESA = @EMPRESA AND
				PATENTE = @PATENTE AND
				ASISTIO = 'NO' AND
				MOTIVO IS NULL AND
				(
					FECHARES > CONVERT(NVARCHAR(8),GETDATE(),112) OR
					(FECHARES = CONVERT(NVARCHAR(8),GETDATE(),112) AND
					HORATERMINO > [dbo].[ahora](GETDATE()))
				)
			)
	BEGIN

			INSERT INTO RESERVAS_REVISION_VEHICULAR(EMPRESA					, PATENTE					, FECHARES					, HORAINICIO, 
													HORATERMINO				, MINUTOS					, FECHASOL					, HORASOL, 
													FECHAMOD				, HORAMOD					, USUARIOSOL				, DIVISION, 
													OST						, IDMOTIVORESERVA) 
											VALUES (@EMPRESA				, @PATENTE					, @FECHARES					, @HORAINICIO, 
													@HORATERMINO			,30							, [dbo].[hoy](GETDATE())	, [dbo].[ahora](GETDATE()), 
													[dbo].[hoy](GETDATE())	,[dbo].[ahora](GETDATE())	, @USUARIOSOL				,@DIVISION, 
													@OST					,@IDMOTIVORESERVA)

			SET @EXITOSO = 1																													

	END
	ELSE
	BEGIN

			 SET @EXITOSO = 0
			 SET @SALIDA = 1  --'La Reserva no puede ser realizada.  El vehículo con patente P ya posee una reserva Vigente  para el día X.Podría cancelar la reserva y hacer una nueva solamente con 48 hrs. de anticipación.'

	END

END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_RESERVAS_REVISION_VEHICULAR_SELECT_PORFECHARES_ACREDITACIONVEHICULAR_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_RESERVAS_REVISION_VEHICULAR_SELECT_PORFECHARES_ACREDITACIONVEHICULAR_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_RESERVAS_REVISION_VEHICULAR_SELECT_PORFECHARES_ACREDITACIONVEHICULAR_CTTA]
(
 @EMPRESA  NVARCHAR(10) = NULL
,@FECHARES  NVARCHAR(8) = NULL) AS
BEGIN


SELECT HORAINICIO,HORATERMINO,PATENTE,FECHARES,ID,ASISTIO,DIVISION,OST,IDMOTIVORESERVA FROM RESERVAS_REVISION_VEHICULAR WHERE FECHARES = @FECHARES AND EMPRESA = @EMPRESA

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_SELECT_OSTARBOL_CONTRATOSEMPRESA_INFORMESEMPRESAS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_SELECT_OSTARBOL_CONTRATOSEMPRESA_INFORMESEMPRESAS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_SELECT_OSTARBOL_CONTRATOSEMPRESA_INFORMESEMPRESAS_CTTA]
(
 @EMPRESA	NVARCHAR(10) = NULL,
 @DIVISION	NVARCHAR(2) = NULL
)
AS
BEGIN

SELECT OD.OST, OD.ADMINOST, OA.NIVEL, OD.MANDANTE, OA.FINICIO, OA.FTERMINO,
--(SELECT COUNT(DISTINCT RUT) FROM VW_WL_ACREDITADOOST WHERE (EMPRESA = @EMPRESA) AND (OST = OD.OST) AND (DIVISION = @DIVISION)) AS CUENTA 
'0' AS CUENTA
FROM OSTARBOL OA INNER JOIN OSTDIVLOCAL OD ON OA.OST = OD.OST 
WHERE OA.EMPRESA = @EMPRESA AND OD.DIVISION = @DIVISION AND (dbo.hoy(GETDATE()) BETWEEN OA.FINICIO AND OA.FTERMINO) 

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_SELECT_ROL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_SELECT_ROL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_SELECT_ROL_CTTA]
(
  @IDISPLAYSTART	 INT           
 ,@IDISPLAYLENGTH	 INT
 ,@SEARCH_ID_ROL	 NVARCHAR(8) = ''
 ,@SEARCH_ROL		 NVARCHAR(200) = ''
 ,@SORT_COLUMN		 NVARCHAR(4) = NULL  
 ,@SORT_DIRECTION	 NVARCHAR(4) = NULL
 ,@TOTAL_COUNT		 INT OUTPUT
)
AS
BEGIN
	DECLARE @ID_ROL INT = 0

	IF(@SORT_DIRECTION = 'ASC')
		BEGIN
			IF((@SEARCH_ID_ROL IS NULL OR @SEARCH_ID_ROL = '') AND (@SEARCH_ROL IS NULL OR @SEARCH_ROL = ''))
				BEGIN
					SELECT
						@TOTAL_COUNT = COUNT(*)
					FROM ROL

					SELECT
						ID_ROL,
						ROL
					FROM ROL
					ORDER BY 
						CASE WHEN @SORT_COLUMN = '0' THEN ID_ROL END ASC,
						CASE WHEN @SORT_COLUMN = '1' THEN ROL END ASC
					OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY
				END
			ELSE IF (@SEARCH_ID_ROL IS NOT NULL AND @SEARCH_ID_ROL <> '')
				BEGIN
					IF(ISNUMERIC(@SEARCH_ID_ROL) = 1)
						BEGIN
							SET @ID_ROL = CONVERT(INT, @SEARCH_ID_ROL)
						END

					SELECT
						@TOTAL_COUNT = COUNT(*)
					FROM ROL 
					WHERE ID_ROL = @ID_ROL

					SELECT
						ID_ROL,
						ROL
					FROM ROL 
					WHERE ID_ROL = @ID_ROL
					ORDER BY 
						CASE WHEN @SORT_COLUMN = '0' THEN ID_ROL END ASC,
						CASE WHEN @SORT_COLUMN = '1' THEN ROL END ASC
					OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY
				END
			ELSE IF (@SEARCH_ROL IS NOT NULL AND @SEARCH_ROL <> '')
				BEGIN
					SELECT
						@TOTAL_COUNT = COUNT(*)
					FROM ROL
					WHERE ROL LIKE CONCAT('%', @SEARCH_ROL, '%')

					SELECT
						ID_ROL,
						ROL
					FROM ROL
					WHERE ROL LIKE CONCAT('%', @SEARCH_ROL, '%')
					ORDER BY 
						CASE WHEN @SORT_COLUMN = '0' THEN ID_ROL END ASC,
						CASE WHEN @SORT_COLUMN = '1' THEN ROL END ASC
					OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY
				END
		END
	ELSE
		BEGIN
			IF((@SEARCH_ID_ROL IS NULL OR @SEARCH_ID_ROL = '') AND (@SEARCH_ROL IS NULL OR @SEARCH_ROL = ''))
				BEGIN
					SELECT
						@TOTAL_COUNT = COUNT(*)
					FROM ROL

					SELECT
						ID_ROL,
						ROL
					FROM ROL
					ORDER BY 
						CASE WHEN @SORT_COLUMN = '0' THEN ID_ROL END DESC,
						CASE WHEN @SORT_COLUMN = '1' THEN ROL END DESC
					OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY
				END
			ELSE IF (@SEARCH_ID_ROL IS NOT NULL AND @SEARCH_ID_ROL <> '')
				BEGIN
					IF(ISNUMERIC(@SEARCH_ID_ROL) = 1)
						BEGIN
							SET @ID_ROL = CONVERT(INT, @SEARCH_ID_ROL)
						END

					SELECT
						@TOTAL_COUNT = COUNT(*)
					FROM ROL 
					WHERE ID_ROL = @ID_ROL

					SELECT
						ID_ROL,
						ROL
					FROM ROL 
					WHERE ID_ROL = @ID_ROL
					ORDER BY 
						CASE WHEN @SORT_COLUMN = '0' THEN ID_ROL END DESC,
						CASE WHEN @SORT_COLUMN = '1' THEN ROL END DESC
					OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY
				END
			ELSE IF (@SEARCH_ROL IS NOT NULL AND @SEARCH_ROL <> '')
				BEGIN
					SELECT
						@TOTAL_COUNT = COUNT(*)
					FROM ROL
					WHERE ROL LIKE CONCAT('%', @SEARCH_ROL, '%')

					SELECT
						ID_ROL,
						ROL
					FROM ROL
					WHERE ROL LIKE CONCAT('%', @SEARCH_ROL, '%')
					ORDER BY 
						CASE WHEN @SORT_COLUMN = '0' THEN ID_ROL END DESC,
						CASE WHEN @SORT_COLUMN = '1' THEN ROL END DESC
					OFFSET @IDISPLAYSTART ROWS FETCH NEXT @IDISPLAYLENGTH ROWS ONLY
				END
		END

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_SERVICIO_SELECT_DIVISION]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_SERVICIO_SELECT_DIVISION]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_SERVICIO_SELECT_DIVISION]
(
 @DIVISION NVARCHAR(20)
)
AS
BEGIN

	SELECT				T2.LOCAL		,T1.SERVICIO	,T1.DESCRIPCION		,T1.VALOR	
						,T1.HORAINI		,T1.HORAFIN
	FROM				SERVICIO		AS T1
	INNER JOIN	LOCAL	T2				ON T1.LOCAL		= T2.LOCAL
	WHERE				T2.LOCALL						= 'CASINO'
	AND					T2.DIVISION						= @DIVISION
	ORDER BY			T1.LOCAL		,T1.HORAINI

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_SET_FECHA_EMPRESA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_SET_FECHA_EMPRESA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_SET_FECHA_EMPRESA]
(
@ID_DOC_FEC		INT
,@IDEMPRESA		NVARCHAR(10)
,@FECHA			NVARCHAR(8)
)
AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	DECLARE @FEC NVARCHAR(8) = NULL
	
	IF(@FECHA = '19000101')
		BEGIN
			DELETE FROM DOCS_FEC_WORKERS WHERE (RUT = @IDEMPRESA) AND (ID_DOC_FEC = @ID_DOC_FEC)
		END
	ELSE
		BEGIN
			SELECT TOP 1 @FEC = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @IDEMPRESA) AND (ID_DOC_FEC = @ID_DOC_FEC)
			IF(@FEC IS NULL)
				BEGIN
					INSERT INTO DOCS_FEC_WORKERS (RUT, ID_DOC_FEC, EMPRESA, DIVISION, FECHA, FECHAMOD, HORAMOD) VALUES (@IDEMPRESA, @ID_DOC_FEC, 'NO', 'NO', @FECHA, @CURR_FECHA, @CURR_TIEMPOFULL)
				END
			ELSE
				BEGIN
					UPDATE DOCS_FEC_WORKERS SET FECHA = @FECHA , FECHAMOD = @CURR_FECHA, HORAMOD = @CURR_TIEMPOFULL
					WHERE (RUT = @IDEMPRESA) AND (ID_DOC_FEC = @ID_DOC_FEC)
				END
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_SET_FECHA_WORKER_LOCAL]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_SET_FECHA_WORKER_LOCAL]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_SET_FECHA_WORKER_LOCAL]
(
@ID_DOC_FEC		INT = NULL
,@RUT			NVARCHAR(8) = NULL
,@DIVCOD			NVARCHAR(4) = NULL
,@IDEMPRESA			NVARCHAR(11) = NULL
,@FECHA				NVARCHAR(8) = NULL
,@USUARIO			NVARCHAR(11) = NULL
)
AS
BEGIN
	DECLARE @EMP_COMUN INT = 0
	DECLARE @DIV_COMUN INT = 0
	DECLARE @VAL_FECHA NVARCHAR(8) = ''
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	SELECT @EMP_COMUN = D.COMUN, @DIV_COMUN = DF.COMUN  
	FROM DOCS_FEC AS DF 
	INNER JOIN DOCS AS D ON DF.ID_DOC_DEPEND = D.ID_DOC 
	WHERE  (DF.ID_DOC_FEC = @ID_DOC_FEC)
	IF(@FECHA = '19000101')
		BEGIN
			IF(@EMP_COMUN = 0)
				BEGIN
					IF(@DIV_COMUN = 0)
						BEGIN
							DELETE FROM DOCS_FEC_WORKERS WHERE (RUT = @RUT ) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (DIVISION = @DIVCOD) AND (EMPRESA = @IDEMPRESA)
						END
					ELSE
						BEGIN
							DELETE FROM DOCS_FEC_WORKERS WHERE (RUT = @RUT) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (EMPRESA = @IDEMPRESA)
						END
				END
			ELSE
				BEGIN
					DELETE FROM DOCS_FEC_WORKERS WHERE (RUT = @RUT) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (DIVISION = @DIVCOD)
				END
		END
	ELSE
		BEGIN
			IF(@EMP_COMUN = 0)
				BEGIN
					IF(@DIV_COMUN = 0)
						BEGIN
							SELECT TOP 1 @VAL_FECHA = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @RUT ) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (DIVISION = @DIVCOD) AND (EMPRESA = @IDEMPRESA) ORDER BY FECHA DESC
						END
					ELSE
						BEGIN
							SELECT TOP 1 @VAL_FECHA = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @RUT ) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (EMPRESA = @IDEMPRESA) ORDER BY FECHA DESC
						END
				END
			ELSE
				BEGIN
					IF(@DIV_COMUN = 0)
						BEGIN
							SELECT TOP 1 @VAL_FECHA = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @RUT ) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (DIVISION = @DIVCOD) ORDER BY FECHA DESC
						END
					ELSE
						BEGIN
							SELECT TOP 1 @VAL_FECHA = FECHA FROM DOCS_FEC_WORKERS WHERE (RUT = @RUT ) AND (ID_DOC_FEC = @ID_DOC_FEC) ORDER BY FECHA DESC
						END
				END
			/*----- -------*/
			IF(@VAL_FECHA IS NOT NULL AND @VAL_FECHA <> '')
				BEGIN
					IF(@EMP_COMUN = 0)
						BEGIN
							IF(@DIV_COMUN = 0)
								BEGIN
									UPDATE DOCS_FEC_WORKERS
										SET FECHA = @FECHA,
											FECHAMOD = @CURR_FECHA,
											HORAMOD = @CURR_TIEMPOFULL,
											USUARIO = @USUARIO,
											EMPRESA = @IDEMPRESA
										WHERE (RUT = @RUT ) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (EMPRESA = @IDEMPRESA) AND (DIVISION = @DIVCOD)
								END
							ELSE
								BEGIN
									UPDATE DOCS_FEC_WORKERS
										SET FECHA = @FECHA,
											FECHAMOD = @CURR_FECHA,
											HORAMOD = @CURR_TIEMPOFULL,
											USUARIO = @USUARIO,
											EMPRESA = @IDEMPRESA
										WHERE (RUT = @RUT ) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (EMPRESA = @IDEMPRESA)
								END
						END
					ELSE
						BEGIN
							IF(@DIV_COMUN = 0)
								BEGIN
									UPDATE DOCS_FEC_WORKERS
										SET FECHA = @FECHA,
											FECHAMOD = @CURR_FECHA,
											HORAMOD = @CURR_TIEMPOFULL,
											USUARIO = @USUARIO,
											EMPRESA = @IDEMPRESA
										WHERE (RUT = @RUT ) AND (ID_DOC_FEC = @ID_DOC_FEC) AND (DIVISION = @DIVCOD)
								END
							ELSE
								BEGIN
									UPDATE DOCS_FEC_WORKERS
										SET FECHA = @FECHA,
											FECHAMOD = @CURR_FECHA,
											HORAMOD = @CURR_TIEMPOFULL,
											USUARIO = @USUARIO,
											EMPRESA = @IDEMPRESA
										WHERE (RUT = @RUT ) AND (ID_DOC_FEC = @ID_DOC_FEC)
								END
						END					
				END
			ELSE
				BEGIN
					INSERT INTO DOCS_FEC_WORKERS (RUT, ID_DOC_FEC, EMPRESA, DIVISION, FECHA, FECHAMOD, HORAMOD, USUARIO) VALUES(@RUT, @ID_DOC_FEC, @IDEMPRESA, @DIVCOD, @FECHA, @CURR_FECHA, @CURR_TIEMPOFULL, @USUARIO);
				END
		END

	INSERT INTO DOCS_FEC_WORKERS_HST (RUT, ID_DOC_FEC, EMPRESA, DIVISION, FECHA, FECHAMOD, HORAMOD, USUARIO) VALUES(@RUT, @ID_DOC_FEC, @IDEMPRESA, @DIVCOD, @FECHA, @CURR_FECHA, @CURR_TIEMPOFULL, @USUARIO);

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_SET_WORKER_DATOS]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_SET_WORKER_DATOS]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_SET_WORKER_DATOS]
(
@RUT			NVARCHAR(8) = NULL
,@IDEMPRESA			NVARCHAR(10) = NULL
,@FECHA_FINIQ		NVARCHAR(8) = NULL
,@USUARIO			NVARCHAR(20) = NULL
,@DIVCOD			NVARCHAR(10) = NULL
,@ARCHIVO			UNIQUEIDENTIFIER = NULL
,@OBSERVACION		NVARCHAR(500) = NULL
)
AS
BEGIN
	DECLARE @FECHA_INGRESO NVARCHAR(8) = ''
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	DECLARE @OST NVARCHAR(14) = ''
	IF(@FECHA_FINIQ <> '')
		BEGIN
			SELECT TOP 1 @FECHA_INGRESO = FINIPASE  
			FROM WORKERSLOCAL
			WHERE  (RUT = @RUT) AND (EMPRESA = @IDEMPRESA) AND (DIVISION = @DIVCOD) AND (FFINPASE >= @CURR_FECHA) AND (AUTOR IN ('SI','NO'))
			ORDER BY FINIPASE ASC
	
			IF (EXISTS
				(
					SELECT *
					FROM WORKERSDATOS
					WHERE (RUT = @RUT) AND (EMPRESA = @IDEMPRESA) AND (FINGRESO = @FECHA_INGRESO)
				))
				BEGIN
					UPDATE WORKERSDATOS SET FINIQUITO = @FECHA_FINIQ, OBSERVACION = @OBSERVACION 
						WHERE RUT = @RUT AND EMPRESA = @IDEMPRESA AND  FINGRESO = @FECHA_INGRESO
				END
			ELSE
				BEGIN
					INSERT INTO WORKERSDATOS(RUT, EMPRESA, FINGRESO, FINIQUITO, OBSERVACION)
						VALUES(@RUT, @IDEMPRESA, @FECHA_INGRESO, @FECHA_FINIQ, @OBSERVACION) 
				END
			/*---------------------------------*/
			DECLARE getOST CURSOR FOR
			SELECT OST
			FROM WORKERSLOCAL
			WHERE RUT = @RUT AND EMPRESA = @IDEMPRESA AND DIVISION = @DIVCOD AND FFINPASE >= @CURR_FECHA AND AUTOR IN ('SI','NO')

			OPEN getOST
			FETCH NEXT
			FROM getOST INTO @OST
			WHILE @@FETCH_STATUS = 0
				BEGIN
					INSERT INTO WORKERSDATOS_HST(RUT, EMPRESA, FINGRESO, DIVISION, IDARCHIVO, AFP, ISAPRE, ECIVIL, SANGRE, RESTRIC, DESTINO, PASAJES, FINIQUITO, MOTIVO, OBSERVACION, USRREGISTRA, FECHAREGISTRA, HORAREGISTRA, USRMOD, FECHAMOD, HORAMOD, OST)
						SELECT RUT, EMPRESA, FINGRESO, @DIVCOD, @ARCHIVO, AFP, ISAPRE, ECIVIL, SANGRE, RESTRIC, DESTINO, PASAJES, FINIQUITO, MOTIVO, OBSERVACION, @USUARIO, @CURR_FECHA, @CURR_TIEMPOFULL, @USUARIO, @CURR_FECHA, @CURR_TIEMPOFULL, @OST
						FROM WORKERSDATOS WHERE RUT = @RUT AND EMPRESA = @IDEMPRESA AND  FINGRESO = @FECHA_INGRESO
					FETCH NEXT
					FROM getOST INTO @OST
				END

			CLOSE getOST
			DEALLOCATE getOST
		END

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_SUB_CATEGORIACONTRATISTA_SELECT_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_SUB_CATEGORIACONTRATISTA_SELECT_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_SUB_CATEGORIACONTRATISTA_SELECT_PASES_CTTA]
AS
BEGIN
	SELECT
		Id,
		CODIGO,
		UPPER(CATEGORIA) AS CATEGORIA,
		UPPER(DESCRIPCION) AS DESCRIPCION,
		ACTIVO,
		FECREGISTRO,
		HORAREGISTRO,
		USRREGISTRO
	FROM SUB_CATEGORIACONTRATISTA
	ORDER BY CATEGORIA ASC
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TAB_COMBUSTIBLE_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TAB_COMBUSTIBLE_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TAB_COMBUSTIBLE_SELECT]
( @IDCOMBUSTIBLE  int = NULL ) AS
BEGIN

   SELECT IDCOMBUSTIBLE , COMBUSTIBLE
     FROM TAB_COMBUSTIBLE
    WHERE IDCOMBUSTIBLE = ISNULL( @IDCOMBUSTIBLE, IDCOMBUSTIBLE )
	ORDER BY COMBUSTIBLE

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TAB_MODULOEC_SELECT_EMPUSUARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TAB_MODULOEC_SELECT_EMPUSUARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TAB_MODULOEC_SELECT_EMPUSUARIOS_CTTA]
AS
BEGIN
	SELECT *
	FROM TAB_MODULOEC
	WHERE ACTIVO = 'SI'
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TAB_TIPOCONTRATO_SELECT_DOCUMENTACION_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TAB_TIPOCONTRATO_SELECT_DOCUMENTACION_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TAB_TIPOCONTRATO_SELECT_DOCUMENTACION_CTTA]
(@RUT		NVARCHAR(10) = NULL
,@DIVCOD	NVARCHAR(4) = NULL
,@IDEMPRESA	NVARCHAR(10)= NULL) AS
BEGIN

	SELECT TC.TIPOCONTRATO AS TipoContrato
		 , TC.DESCRIPCION AS Descripcion
		 , CASE WHEN WC.TIPOCONTRATO IS NULL THEN 'false' ELSE 'true' END AS CHECKED
	FROM TAB_TIPOCONTRATO  AS TC
	LEFT JOIN WORKERSLOCAL AS WC ON WC.TIPOCONTRATO = TC.TIPOCONTRATO 
								AND (WC.DIVISION = @DIVCOD) 
								AND (WC.RUT = @RUT) 
								AND (WC.TIPOCONTRATO IS NOT NULL) 
								AND (WC.EMPRESA = @IDEMPRESA)
	WHERE (TC.ACTIVO = 'SI') 
	ORDER BY TC.DESCRIPCION
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TAB_TIPOEXSICO_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TAB_TIPOEXSICO_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TAB_TIPOEXSICO_SELECT]
(
 @ID	NUMERIC(18,0) = NULL
)
AS
BEGIN

	SELECT		 ID			,DESCRIPCION	,ACTIVO		,FECHAMOD
				,HORAMOD	,USUARIOMOD		,DURACION

	FROM		TAB_TIPOEXSICO
	WHERE		ID	=  ISNULL(@ID,ID)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TAB_TIPOPASE_SELECT_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TAB_TIPOPASE_SELECT_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TAB_TIPOPASE_SELECT_PASES_CTTA]
AS
BEGIN
	SELECT DISTINCT
		T.TIPOPASE,
		T.DESC_TIPOPASE
	FROM TAB_TIPOPASE T
	INNER JOIN TAB_TIPOPASE_DIVISION TD
		ON T.TIPOPASE = TD.TIPOPASE
	WHERE
		(T.ACTIVO = 'SI') AND
		T.TIPOPASE IN ('VISITA','TRABAJO')
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TAB_TRACCION_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TAB_TRACCION_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TAB_TRACCION_SELECT]
( @IDTRACCION  int = NULL ) AS
BEGIN

   SELECT IDTRACCION , TRACCION
     FROM TAB_TRACCION
    WHERE IDTRACCION = ISNULL( @IDTRACCION, IDTRACCION )
	ORDER BY TRACCION
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TIMELINE_SELECT_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TIMELINE_SELECT_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TIMELINE_SELECT_CONTROLLABORAL_CTTA]
AS
BEGIN
	SELECT
		DIAMES,
		DESCRIPCION,
		AUTHOR,
		ESPACIOATRAS,
		ESPACIODELANTE,
		DATEPART(DAY, GETDATE()) AS DIAHOY,
		DATENAME(MONTH, GETDATE()) AS MESHOY
	FROM TIMELINE
	ORDER BY DIAMES
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_COUNT_BUSCADORCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_COUNT_BUSCADORCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_COUNT_BUSCADORCTTA]        
(        
@SEARCH_PATENTE NVARCHAR(8) = NULL,        
@SEARCH_MARCA NVARCHAR(50) = NULL,        
@SEARCH_MODELO NVARCHAR(50) = NULL,  
@SEARCH_TIPO NVARCHAR(20) = NULL,
@SEARCH_ANOFAB NVARCHAR(4) = NULL
)        
AS        
BEGIN  
	 DECLARE @QUERY NVARCHAR(MAX)
	SET @QUERY  = 'SELECT  COUNT(T.PATENTE) AS COUNT_TRANSPORT                        
    FROM TRANSPORT AS T
	LEFT JOIN TYPETRANS AS TT ON TT.IDTIPO = T.TIPO WHERE 1=1 '
	
	IF @SEARCH_PATENTE IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.PATENTE LIKE ' + '''%' + @SEARCH_PATENTE + '%''' END
	IF @SEARCH_MARCA IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MARCA LIKE ' + '''%' + @SEARCH_MARCA + '%''' END
	IF @SEARCH_MODELO IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MODELO LIKE ' + '''%' + @SEARCH_MODELO + '%''' END
	IF @SEARCH_TIPO IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND TT.TIPO LIKE ' + '''%' + @SEARCH_TIPO + '%''' END
	IF @SEARCH_ANOFAB IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.ANOFAB LIKE ' + '''%' + @SEARCH_ANOFAB + '%''' END

	EXEC(@QUERY)
        
--IF ISNULL(@SEARCH_PATENTE,'') != '' OR ISNULL(@SEARCH_MARCA,'') != '' OR ISNULL(@SEARCH_MODELO,'') != '' OR ISNULL(@SEARCH_TIPO,'') != '' OR ISNULL(@SEARCH_ANOFAB,'') != ''
--BEGIN    
    
-- IF ISNULL(@SEARCH_PATENTE,'') !='' AND ISNULL(@SEARCH_MARCA,'') ='' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') = ''
    
--  BEGIN    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--   FROM TRANSPORT          
--   WHERE PATENTE LIKE '%' + @SEARCH_PATENTE + '%'            
--  END    
    
-- IF ISNULL(@SEARCH_PATENTE,'') ='' AND ISNULL(@SEARCH_MARCA,'') != '' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') = ''
--  BEGIN    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                       
--   FROM TRANSPORT          
--   WHERE MARCA LIKE '%' + @SEARCH_MARCA+ '%'           
--  END    
    
-- IF ISNULL(@SEARCH_PATENTE,'') ='' AND ISNULL(@SEARCH_MARCA,'') = '' AND ISNULL(@SEARCH_MODELO,'') != '' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') = ''  
--  BEGIN    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--   FROM TRANSPORT          
--   WHERE MODELO LIKE '%' + @SEARCH_MODELO + '%'            
--  END    
    
-- IF ISNULL(@SEARCH_PATENTE,'') ='' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') != '' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') = ''  
--  BEGIN    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--   FROM TRANSPORT          
--   WHERE MARCA LIKE '%' + @SEARCH_MARCA + '%'    
--   AND MODELO LIKE '%' + @SEARCH_MODELO + '%'          
--  END    
    
-- IF ISNULL(@SEARCH_PATENTE,'') !='' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') !='' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') = ''   
--  BEGIN    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                      
--   FROM TRANSPORT          
--   WHERE PATENTE LIKE '%' + @SEARCH_PATENTE + '%'    
--   AND MARCA LIKE '%' + @SEARCH_MARCA + '%'    
--   AND MODELO LIKE '%' + @SEARCH_MODELO + '%'            
--  END    
    
-- IF ISNULL(@SEARCH_PATENTE,'') !='' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') = ''    
--  BEGIN    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                       
--   FROM TRANSPORT          
--   WHERE PATENTE LIKE '%' + @SEARCH_PATENTE + '%'    
--   AND MARCA LIKE '%' + @SEARCH_MARCA + '%'       
--  END    
    
-- IF ISNULL(@SEARCH_PATENTE,'') !='' AND ISNULL(@SEARCH_MARCA,'') ='' AND ISNULL(@SEARCH_MODELO,'') !='' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') = ''   
--  BEGIN    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--   FROM TRANSPORT          
--   WHERE PATENTE LIKE '%' + @SEARCH_PATENTE + '%'    
--   AND MODELO LIKE '%' + @SEARCH_MODELO + '%'        
--  END    

--IF ISNULL(@SEARCH_PATENTE,'') ='' AND ISNULL(@SEARCH_MARCA,'') ='' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') = ''     
--BEGIN        

--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'              
        
--END 

--IF ISNULL(@SEARCH_PATENTE,'') !='' AND ISNULL(@SEARCH_MARCA,'') ='' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') = ''     
--BEGIN        
     
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'  
--  AND PATENTE LIKE '%' + @SEARCH_PATENTE + '%'   
      
--END 

--IF ISNULL(@SEARCH_PATENTE,'') ='' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') = ''     
--BEGIN        
    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                         
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'  
--  AND MARCA LIKE '%' + @SEARCH_MARCA + '%' 
        
--END 

--IF ISNULL(@SEARCH_PATENTE,'') ='' AND ISNULL(@SEARCH_MARCA,'') ='' AND ISNULL(@SEARCH_MODELO,'') !='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') = ''     
--BEGIN        
       
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                         
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'  
--  AND MODELO LIKE '%' + @SEARCH_MODELO + '%' 
  
--END 

--IF ISNULL(@SEARCH_PATENTE,'') ='' AND ISNULL(@SEARCH_MARCA,'') ='' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
      
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                         
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'  
--  AND ANOFAB LIKE '%' + @SEARCH_ANOFAB+ '%' 
  
--END

--IF ISNULL(@SEARCH_PATENTE,'') !='' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') = ''     
--BEGIN        
    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'  
--  AND PATENTE LIKE '%' + @SEARCH_PATENTE + '%'
--  AND MARCA LIKE '%' + @SEARCH_MARCA + '%' 
  
--END 

--IF ISNULL(@SEARCH_PATENTE,'') ='' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') !='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') = ''     
--BEGIN        
    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'  
--  AND MODELO LIKE '%' + @SEARCH_MODELO + '%'
--  AND MARCA LIKE '%' + @SEARCH_MARCA + '%' 
      
--END 

--IF ISNULL(@SEARCH_PATENTE,'') ='' AND ISNULL(@SEARCH_MARCA,'') ='' AND ISNULL(@SEARCH_MODELO,'') !='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
     
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                         
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'  
--  AND MODELO LIKE '%' + @SEARCH_MODELO + '%'
--  AND ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
      
--END 

--IF ISNULL(@SEARCH_PATENTE,'') ='' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') !='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'  
--  AND MODELO LIKE '%' + @SEARCH_MODELO + '%'
--  AND ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
--  AND MARCA LIKE '%' + @SEARCH_MARCA + '%' 
  
--END 

--IF ISNULL(@SEARCH_PATENTE,'') !='' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') !='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
      
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                      
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'  
--  AND MODELO LIKE '%' + @SEARCH_MODELO + '%'
--  AND ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
--  AND MARCA LIKE '%' + @SEARCH_MARCA + '%' 
--  AND PATENTE LIKE '%' + @SEARCH_PATENTE + '%' 
       
--END 

--IF ISNULL(@SEARCH_PATENTE,'') !='' AND ISNULL(@SEARCH_MARCA,'') ='' AND ISNULL(@SEARCH_MODELO,'') !='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
     
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                       
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'  
--  AND MODELO LIKE '%' + @SEARCH_MODELO + '%'
--  AND ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
--  AND PATENTE LIKE '%' + @SEARCH_PATENTE + '%' 
      
--END

--IF ISNULL(@SEARCH_PATENTE,'') !='' AND ISNULL(@SEARCH_MARCA,'') ='' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
       
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'  
--  AND PATENTE LIKE '%' + @SEARCH_PATENTE + '%' 
--  AND ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
--  AND PATENTE LIKE '%' + @SEARCH_PATENTE + '%' 
       
--END 

--IF ISNULL(@SEARCH_PATENTE,'') ='' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
     
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                      
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'  
--  AND MARCA LIKE '%' + @SEARCH_MARCA + '%' 
--  AND ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
      
--END 

--IF ISNULL(@SEARCH_PATENTE,'') !='' AND ISNULL(@SEARCH_MARCA,'') ='' AND ISNULL(@SEARCH_MODELO,'') !='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') = ''     
--BEGIN        
    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'  
--  AND MODELO LIKE '%' + @SEARCH_MODELO + '%' 
--  AND PATENTE LIKE '%' + @SEARCH_PATENTE + '%' 
        
--END

--IF ISNULL(@SEARCH_PATENTE,'') !='' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
     
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                       
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%'  
--  AND MARCA LIKE '%' + @SEARCH_MARCA + '%' 
--  AND PATENTE LIKE '%' + @SEARCH_PATENTE + '%' 
--  AND ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
  
--END 

--IF ISNULL(@SEARCH_PATENTE,'') ='' AND ISNULL(@SEARCH_MARCA,'') ='' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                          
--  FROM TRANSPORT              
--  WHERE ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
       
--END

--IF ISNULL(@SEARCH_PATENTE,'') != '' AND ISNULL(@SEARCH_MARCA,'') ='' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
      
--  SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                          
--  FROM TRANSPORT              
--  WHERE ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
--  AND PATENTE LIKE '%' + @SEARCH_PATENTE + '%'
      
--END

--IF ISNULL(@SEARCH_PATENTE,'') = '' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
     
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                       
--  FROM TRANSPORT              
--  WHERE ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
--  AND MARCA LIKE '%' + @SEARCH_MARCA + '%'
   
--END

--IF ISNULL(@SEARCH_PATENTE,'') = '' AND ISNULL(@SEARCH_MARCA,'') ='' AND ISNULL(@SEARCH_MODELO,'') !='' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--  FROM TRANSPORT              
--  WHERE ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
--  AND MODELO LIKE '%' + @SEARCH_MODELO + '%'
      
--END

--IF ISNULL(@SEARCH_PATENTE,'') != '' AND ISNULL(@SEARCH_MARCA,'') ='' AND ISNULL(@SEARCH_MODELO,'') !='' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
      
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--  FROM TRANSPORT              
--  WHERE ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
--  AND MODELO LIKE '%' + @SEARCH_MODELO + '%'
--  AND PATENTE LIKE '%' + @SEARCH_PATENTE + '%'
      
--END

--IF ISNULL(@SEARCH_PATENTE,'') != '' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') !='' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
     
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                     
--  FROM TRANSPORT              
--  WHERE ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
--  AND MODELO LIKE '%' + @SEARCH_MODELO + '%'
--  AND PATENTE LIKE '%' + @SEARCH_PATENTE + '%'
--  AND MARCA LIKE '%' + @SEARCH_MARCA + '%'
       
--END

--IF ISNULL(@SEARCH_PATENTE,'') = '' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') !='' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                         
--  FROM TRANSPORT              
--  WHERE ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
--  AND MODELO LIKE '%' + @SEARCH_MODELO + '%'
--  AND MARCA LIKE '%' + @SEARCH_MARCA + '%'
      
--END

--IF ISNULL(@SEARCH_PATENTE,'') != '' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') ='' AND ISNULL(@SEARCH_TIPO,'') = '' AND ISNULL(@SEARCH_ANOFAB,'') != ''     
--BEGIN        
       
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--  FROM TRANSPORT              
--  WHERE ANOFAB LIKE '%' + @SEARCH_ANOFAB + '%' 
--  AND PATENTE LIKE '%' + @SEARCH_PATENTE + '%'
--  AND MARCA LIKE '%' + @SEARCH_MARCA + '%'
       
--END

--IF ISNULL(@SEARCH_PATENTE,'') != '' AND ISNULL(@SEARCH_MARCA,'') !='' AND ISNULL(@SEARCH_MODELO,'') !='' AND ISNULL(@SEARCH_TIPO,'') != '' AND ISNULL(@SEARCH_ANOFAB,'') = ''     
--BEGIN        
     
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                       
--  FROM TRANSPORT              
--  WHERE (SELECT DSCTIPOV FROM TYPETRANS WHERE IDTIPO=TIPO) LIKE '%' + @SEARCH_TIPO + '%' 
--  AND PATENTE LIKE '%' + @SEARCH_PATENTE + '%'
--  AND MARCA LIKE '%' + @SEARCH_MARCA + '%'
--  AND MODELO LIKE '%' + @SEARCH_MODELO + '%'
  
--END
    
--END    
--ELSE    
-- BEGIN    
    
--   SELECT  COUNT(PATENTE) AS COUNT_TRANSPORT                        
--   FROM TRANSPORT           
    
-- END    
       
END    
    
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_DELETE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_DELETE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_DELETE_CTTA]
( @PATENTE           nvarchar(8) = NULL
, @TIPO              int = NULL
, @IDEMPRESA		 nvarchar(10) = NULL
, @USUARIO			 nvarchar(10) = NULL)AS
BEGIN
	DECLARE @DSCTIPOV NVARCHAR(50)
	SELECT @DSCTIPOV = DSCTIPOV FROM TYPETRANS WHERE IDTIPO = @TIPO
	INSERT INTO TRANSPORT_HIST( EMPRESA		, PATENTE	, TIPOVEHICULO	,RUT
							  , FECHA		, HORA		, ACCION) 
						VALUES(@IDEMPRESA	, @PATENTE	, @DSCTIPOV		,@USUARIO
							  , [dbo].[hoy](GETDATE())	, [dbo].[ahora](GETDATE()) ,'ELIMINA')

	UPDATE TRANSPORT SET EMPRESA='' WHERE PATENTE = @PATENTE

END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_DIVISION_ACTIVAVEHICULO_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_DIVISION_ACTIVAVEHICULO_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_DIVISION_ACTIVAVEHICULO_CTTA]
(@PATENTE			NVARCHAR(6) = NULL
,@IDEMPRESA			NVARCHAR(11) = NULL
,@DIVCOD			NVARCHAR(4) = NULL)
AS
BEGIN
	IF NOT EXISTS(SELECT * FROM TRANSPORT_DIVISION WHERE PATENTE= @PATENTE AND DIVISION = @DIVCOD) 
		BEGIN 
		INSERT INTO TRANSPORT_DIVISION (PATENTE	, DIVISION	, AUTOR	, FECHAMOD				 , HORAMOD) 
								 VALUES(@PATENTE, @DIVCOD	, 'NO'	, [dbo].[hoy](GETDATE()) , [dbo].[ahora](GETDATE())) 
		END 
	ELSE 
		BEGIN  
			UPDATE TRANSPORT_DIVISION SET FECHAMOD= [dbo].[hoy](GETDATE()) 
										, HORAMOD= [dbo].[ahora](GETDATE()) 
			WHERE PATENTE= @PATENTE AND DIVISION= @DIVCOD
		END

	IF EXISTS(SELECT * FROM A024_DIVISIONES WHERE ISNULL(PASES_VEHICULARES,'NO') = 'SI' AND DIVCOD = @DIVCOD)
		BEGIN
			IF NOT EXISTS(SELECT * FROM TRANSPORT_DIVISION_PASES WHERE PATENTE = @PATENTE AND DIVISION =@DIVCOD AND LOTE = 0 AND EMPRESA = @IDEMPRESA)
				BEGIN 
				INSERT INTO TRANSPORT_DIVISION_PASES (PATENTE		, EMPRESA		, DIVISION				, AUTOR
													, LOTE			, TIPOPASE		, FINIPASE				, FFINPASE
													, OST			, FECHAMOD		, HORAMOD) 
												VALUES(@PATENTE		, @IDEMPRESA	, @DIVCOD	, 'NO'
													, 0				, 'TRABAJO'		, [dbo].[hoy](GETDATE()), [dbo].[HOY](DATEADD(MONTH,120,GETDATE()))
													, 'NOMINA'		,  [dbo].[hoy](GETDATE()),[dbo].[ahora](GETDATE())) 
				END 
			ELSE 
				BEGIN  
					UPDATE TRANSPORT_DIVISION_PASES SET TIPOPASE = 'TRABAJO'
														, FINIPASE = [dbo].[hoy](GETDATE())
														, FFINPASE = [dbo].[HOY](DATEADD(MONTH,120,GETDATE()))
														, AUTOR = 'NO'
														, OST = 'NOMINA' 
					WHERE PATENTE = @PATENTE AND DIVISION = @DIVCOD AND LOTE = 0 AND EMPRESA = @IDEMPRESA 
				END
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_DIVISION_PASES_SELECT_AUTORIZADO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_DIVISION_PASES_SELECT_AUTORIZADO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_DIVISION_PASES_SELECT_AUTORIZADO]
(@DIVCOD	NVARCHAR(4) = NULL
,@PATENTE	NVARCHAR(6) = NULL) AS
BEGIN
	SELECT TD.PATENTE, TD.DIVISION, TD.AUTOR, ISNULL(E.ACRONIMO, '') AS EMPRESA 
		, TD.LOTE, ISNULL(TD.TIPOPASE, '') AS TIPOPASE 
		, ISNULL(TD.FINIPASE, '') AS  FINIPASE, ISNULL(TD.FFINPASE, '') AS FFINPASE 
		, ISNULL(TD.OST, '') AS OST, ISNULL(TD.VALIDADO, 'NO') AS VALIDADO 
		FROM TRANSPORT_DIVISION_PASES TD 
		INNER JOIN ENTERPRISE AS E ON TD.EMPRESA = E.IDEMPRESA
		WHERE TD.PATENTE = @PATENTE AND TD.DIVISION = @DIVCOD AND TD.AUTOR <> 'BL' ORDER BY TD.LOTE
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_DIVISION_SELECT_AUTORIZADO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_DIVISION_SELECT_AUTORIZADO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_DIVISION_SELECT_AUTORIZADO]
(@DIVCOD	NVARCHAR(4) = NULL
,@PATENTE	NVARCHAR(6) = NULL) AS
BEGIN
	SELECT TD.PATENTE, TD.DIVISION, TD.AUTOR , D.PASES_VEHICULARES
	FROM TRANSPORT_DIVISION TD 
	INNER JOIN A024_DIVISIONES AS D ON D.DIVCOD = TD.DIVISION
	WHERE TD.PATENTE = @PATENTE AND TD.DIVISION = @DIVCOD AND TD.AUTOR <> 'BL' 
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_INSERT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_INSERT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_INSERT]  
(
@PATENTE			NVARCHAR(8) = NULL
,@TIPO				INT = NULL
,@COLOR				NVARCHAR(30) = NULL
,@EMPRESA			NVARCHAR(10) = NULL
,@ANOFAB			NVARCHAR(4) = NULL
,@PERMISOCIRC		NVARCHAR(8) = NULL
,@FECSEGURO			NVARCHAR(8) = NULL
,@REVTEC			NVARCHAR(8) = NULL
,@CAPACIDAD			INT = NULL
,@OPERINVIER		NVARCHAR(2) = NULL
,@NRO				INT = NULL
,@AUTOR				NVARCHAR(2) = NULL
,@MARCA				NVARCHAR(50) = NULL
,@MODELO			NVARCHAR(50) = NULL
,@CODMOP			NVARCHAR(3) = NULL
,@FECHAMOD			NVARCHAR(8) = NULL
,@HORAMOD			NVARCHAR(8) = NULL
,@GRABO				NVARCHAR(1) = NULL
,@FECCHECK			NVARCHAR(8) = NULL
,@FECMINERA			NVARCHAR(8) = NULL
,@LABEL				NVARCHAR(2) = NULL
,@OBS				NVARCHAR(100) = NULL
,@TIENEWISE			NVARCHAR(2) = NULL
,@FUNCACARGO		NVARCHAR(50) = NULL
,@FUNCNOM			NVARCHAR(50) = NULL
,@AREA				NVARCHAR(50) = NULL
,@NUMINT			NVARCHAR(50) = NULL
,@TIPO_PROPIETARIO	NVARCHAR(1) = NULL
,@RUT_PROPIETARIO	NVARCHAR(10) = NULL
,@USUARIO			NVARCHAR(10) = NULL
,@COMBUSTIBLE		NVARCHAR(4) = NULL
,@TRACCION			INT = NULL
,@CILINDRADA		NVARCHAR(50) = NULL
,@POTENCIA			NVARCHAR(50) = NULL
,@TURNO				NVARCHAR(50) = NULL
,@SERVICIO			NVARCHAR(50) = NULL
,@MONITOREADO		NVARCHAR(2) = NULL 
,@EQUIPOADAS		NVARCHAR(2) = NULL ) AS   
BEGIN  
  
   INSERT INTO [TRANSPORT]  
        ( PATENTE,	TIPO	,COLOR	,EMPRESA	,ANOFAB	,PERMISOCIRC	,FECSEGURO	,REVTEC	
		,CAPACIDAD,	OPERINVIER	,NRO	,AUTOR	,MARCA	,MODELO		,CODMOP	,FECHAMOD	,HORAMOD	
		,GRABO	,FECCHECK	,FECMINERA	,LABEL	,OBS	,TIENEWISE	,FUNCACARGO	,FUNCNOM			
		,AREA	,NUMINT		,TIPO_PROPIETARIO	,RUT_PROPIETARIO	,USUARIO	,COMBUSTIBLE		
		,TRACCION	,CILINDRADA		,POTENCIA	,TURNO		,SERVICIO		,MONITOREADO	,EQUIPOADAS  )  
   VALUES  
        ( 
			@PATENTE			,@TIPO				,@COLOR				,@EMPRESA			,@ANOFAB			
			,@PERMISOCIRC		,@FECSEGURO			,@REVTEC			,@CAPACIDAD			,@OPERINVIER		
			,@NRO				,@AUTOR				,@MARCA				,@MODELO			,@CODMOP			
			,DBO.HOY(GETDATE())			,DBO.AHORA(GETDATE())			,@GRABO				,@FECCHECK			
			,@FECMINERA			,@LABEL				,@OBS				,@TIENEWISE			,@FUNCACARGO		
			,@FUNCNOM			,@AREA				,@NUMINT			,@TIPO_PROPIETARIO	,@RUT_PROPIETARIO	
			,@USUARIO			,@COMBUSTIBLE		,@TRACCION			,@CILINDRADA		,@POTENCIA			
			,@TURNO				,@SERVICIO			,@MONITOREADO		,@EQUIPOADAS
			)    
END  
  
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT]  
( @PATENTE           nvarchar(8) = NULL  
, @DIVCOD    nvarchar(4) = NULL) AS  
BEGIN  
  
   SELECT T.PATENTE , T.MARCA , T.MODELO   
  , T.TIPO , T.COLOR , T.ANOFAB  
  , ISNULL(T.RUT_PROPIETARIO,'') AS RUT_PROPIETARIO , ISNULL(T.TIPO_PROPIETARIO,'') AS TIPO_PROPIETARIO  
  , W.NOMBRES,W.APELLIDOS , E.ACRONIMO AS ACRONIMO_PROPIETARIO  
  , E1.ACRONIMO  
  , E1.IDEMPRESA
  , ISNULL(T.EQUIPOADAS,'NO') AS EQUIPOADAS  
  , TT.DSCTIPOV , T.COMBUSTIBLE , T.POTENCIA , T.CILINDRADA , T.TRACCION  
  , ISNULL((SELECT [dbo].[fn_cert_veh2] (T.PATENTE , T.EMPRESA , T.TIPO , @DIVCOD , dbo.hoy(getdate()))),0) AS CERTVEH  
 FROM TRANSPORT  AS T  
 INNER JOIN TYPETRANS AS TT ON TT.IDTIPO = T.TIPO  
 LEFT JOIN WORKERS AS W ON W.RUT = T.RUT_PROPIETARIO  
 LEFT JOIN ENTERPRISE AS E ON E.IDEMPRESA = T.RUT_PROPIETARIO  
 LEFT JOIN ENTERPRISE AS E1 ON E1.IDEMPRESA = T.EMPRESA  
 WHERE (PATENTE = @PATENTE)  
  
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_SELECT_ACREDITACIONVEHICULAR_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_ACREDITACIONVEHICULAR_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_ACREDITACIONVEHICULAR_CTTA]
(
  @EMPRESA		NVARCHAR(10) = NULL
 ,@DIVISION		NVARCHAR(10) = NULL
) AS
BEGIN

	CREATE TABLE #PATENTES (
	PATENTE		VARCHAR(8)		  COLLATE DATABASE_DEFAULT NOT NULL, 
	MARCA		NVARCHAR(50)	  COLLATE DATABASE_DEFAULT NOT NULL, 
	MODELO		NVARCHAR(50) 	  COLLATE DATABASE_DEFAULT NOT NULL
	);

	DECLARE @PATENTE NVARCHAR(8)  
	DECLARE @TIPO NVARCHAR(9)
	DECLARE @MARCA NVARCHAR(50)
	DECLARE @MODELO NVARCHAR(50)
	DECLARE @FECHA_ACTUAL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112)
	DECLARE @QUERY_INTERNO_EXISTE BIT
	DECLARE @QUERY_INTERNO_SEG_EXISTE BIT
	DECLARE @ID_DOC_FEC INT

	DECLARE PATENTE_CURSOR CURSOR  
	FOR
		SELECT
			PATENTE,
			CONVERT(NVARCHAR(9),TIPO) AS TIPO,
			MARCA,
			MODELO
		FROM TRANSPORT
		INNER JOIN TYPETRANS
			ON TIPO = IDTIPO
		WHERE
			EMPRESA = @EMPRESA
 
	OPEN PATENTE_CURSOR 
 
	FETCH NEXT FROM PATENTE_CURSOR INTO @PATENTE,@TIPO, @MARCA , @MODELO
 
	WHILE @@FETCH_STATUS = 0 
		BEGIN
		
		DECLARE @ID_DOC INT
		DECLARE @SUBEDOC NVARCHAR(2) 
		DECLARE @CONTINUAR BIT
		
		SET @CONTINUAR = 1

		DECLARE DOCS_CURSOR CURSOR  
		FOR
			SELECT
				D.ID_DOC,
				ISNULL(D.SUBEDOC,'NO') AS SUBEDOC 
			FROM DOCS D
			WHERE
				D.ID_TIPO_PROPIETARIO = 3 AND
				D.ACTIVO = 'SI' AND
				D.ID_DOC_OPCION = 1 AND
				D.ID_DOC IN
						(
						  SELECT
							DISTINCT ID_DOC
						  FROM DOCS_TIPOPASE
						  WHERE
							TIPOPASE = @TIPO AND
							(DIVISION IN(@DIVISION,'AA'))
						) AND
				D.ID_DOC <> '103'
 
		OPEN DOCS_CURSOR 
 
		FETCH NEXT FROM DOCS_CURSOR INTO @ID_DOC,@SUBEDOC
 
		WHILE (@@FETCH_STATUS = 0 AND @CONTINUAR = 1)
			BEGIN
				

				DECLARE @DOCVALIDADO NVARCHAR(2) = NULL
				SET @QUERY_INTERNO_EXISTE = 0
				SELECT
					TOP 1
					@QUERY_INTERNO_EXISTE = 1,
					@DOCVALIDADO = ISNULL(VALIDADO,'NO') 
				FROM DOCS_TRANSPORT DT 
				INNER JOIN DOCS D
					ON DT.ID_DOC = D.ID_DOC 
				WHERE
					(PATENTE = @PATENTE) AND 
					((DIVISION IN(@DIVISION)) OR (ISNULL(DIVISION, 'AA') = 'AA')) AND 
					(DT.ID_DOC = @ID_DOC) AND 
					(EMPRESA LIKE (CASE WHEN D.COMUN=1 THEN '%' ELSE @EMPRESA END))
				ORDER BY ID_DOCS_VEH DESC

				IF @QUERY_INTERNO_EXISTE = 1
					BEGIN		
						IF @DOCVALIDADO <> 'SI'
							BEGIN
								SET @CONTINUAR = 0
							END
					END
				ELSE
					BEGIN
						IF @SUBEDOC <> 'NO' 
						BEGIN
							SET @CONTINUAR = 0
						END
					END

				SET @QUERY_INTERNO_SEG_EXISTE = 0
				SELECT
					TOP 1
					@QUERY_INTERNO_SEG_EXISTE = 1,
					@ID_DOC_FEC = ID_DOC_FEC
				FROM DOCS_FEC DF
				WHERE
					ID_DOC_DEPEND = @ID_DOC AND
					ACTIVO = 'SI' AND
					VALIDO_MAYOR_HOY = 1
				
				IF @QUERY_INTERNO_SEG_EXISTE = 1
					BEGIN
						DECLARE @FECHA_DOC NVARCHAR(8) = NULL
						EXEC [V4MVC_DOCS_FEC_GETFECHAVEHLOCAL_NUEVALISTA_VEHICULOS_CTTA] @PATENTE = @PATENTE, @ID_DOC_FEC = @ID_DOC_FEC, @DIVCOD = @DIVISION, @IDEMPRESA = @EMPRESA, @FECHA_DOC = @FECHA_DOC OUTPUT
						
						IF @FECHA_DOC IS NULL
							BEGIN
								SET @FECHA_DOC = '19000101'
							END

						IF CONVERT(INT, @FECHA_ACTUAL) > CONVERT(INT, @FECHA_DOC)
							BEGIN
								SET @CONTINUAR = 0
							END
										
					END
					
				FETCH NEXT FROM DOCS_CURSOR INTO @ID_DOC,@SUBEDOC 
 
			END

		CLOSE DOCS_CURSOR  
		DEALLOCATE DOCS_CURSOR 

			--CURSOR 2

		IF @CONTINUAR = 1
			BEGIN
				INSERT INTO #PATENTES
				SELECT @PATENTE,@MARCA,@MODELO
			END

		FETCH NEXT FROM PATENTE_CURSOR INTO @PATENTE,@TIPO ,@MARCA,@MODELO
 
	END

	CLOSE PATENTE_CURSOR  
	DEALLOCATE PATENTE_CURSOR 

	SELECT * FROM #PATENTES

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_SELECT_BUSCADORCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_BUSCADORCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_BUSCADORCTTA]                
(             
@IDISPLAYSTART	INT,              
@IDISPLAYLENGTH INT,              
@SEARCH_PATENTE NVARCHAR(8) = NULL,        
@SEARCH_MARCA	NVARCHAR(50) = NULL,        
@SEARCH_MODELO	NVARCHAR(50) = NULL,  
@SEARCH_TIPO	NVARCHAR(20) = NULL,
@SEARCH_ANOFAB	NVARCHAR(4) = NULL,
@SORT_COLUMN	NVARCHAR(4) = NULL,        
@SORT_DIRECTION NVARCHAR(4) = NULL        
) AS                
BEGIN            
      DECLARE @QUERY NVARCHAR(MAX)
	SET @QUERY  = 'SELECT  T.PATENTE,  T.MARCA,  T.MODELO, T.ANOFAB, TT.DSCTIPOV                
    FROM TRANSPORT AS T 
	LEFT JOIN TYPETRANS AS TT ON TT.IDTIPO = T.TIPO
	WHERE 1=1 '
	
	IF @SEARCH_PATENTE IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.PATENTE LIKE ' + '''%' + @SEARCH_PATENTE + '%''' END
	IF @SEARCH_MARCA IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MARCA LIKE ' + '''%' + @SEARCH_MARCA + '%''' END
	IF @SEARCH_MODELO IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MODELO LIKE ' + '''%' + @SEARCH_MODELO + '%''' END
	IF @SEARCH_TIPO IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND TT.TIPO LIKE ' + '''%' + @SEARCH_TIPO + '%''' END
	IF @SEARCH_ANOFAB IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.ANOFAB LIKE ' + '''%' + @SEARCH_ANOFAB + '%''' END

	IF @SORT_COLUMN='0' BEGIN SET @QUERY = @QUERY + ' ORDER BY T.PATENTE ' +  @SORT_DIRECTION END   
   IF @SORT_COLUMN='1' BEGIN SET @QUERY = @QUERY + ' ORDER BY T.MARCA ' + @SORT_DIRECTION END   
   IF @SORT_COLUMN='2' BEGIN SET @QUERY = @QUERY + ' ORDER BY T.MODELO '  + @SORT_DIRECTION END 
   IF @SORT_COLUMN='3' BEGIN SET @QUERY = @QUERY + ' ORDER BY TT.TIPO ' + @SORT_DIRECTION END
   IF @SORT_COLUMN='4' BEGIN SET @QUERY = @QUERY + ' ORDER BY T.ANOFAB ' + @SORT_DIRECTION END

	SET @QUERY = @QUERY + ' OFFSET ' + CAST(@IDISPLAYSTART AS VARCHAR) + ' ROWS FETCH NEXT ' + CAST(@IDISPLAYLENGTH AS VARCHAR) + ' ROWS ONLY'

	EXEC(@QUERY)

END 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_SELECT_BY_PATENTE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_BY_PATENTE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_BY_PATENTE]
( @PATENTE           nvarchar(8) = NULL) AS
BEGIN

SELECT [PATENTE]
      ,[TIPO]
      ,[COLOR]
      ,[EMPRESA]
      ,[ANOFAB]
      ,[PERMISOCIRC]
      ,[FECSEGURO]
      ,[REVTEC]
      ,[CAPACIDAD]
      ,[OPERINVIER]
      ,[NRO]
      ,[AUTOR]
      ,[MARCA]
      ,[MODELO]
      ,[CODMOP]
      ,[FECHAMOD]
      ,[HORAMOD]
      ,[GRABO]
      ,[FECCHECK]
      ,[FECMINERA]
      ,[LABEL]
      ,[OBS]
      ,[TIENEWISE]
      ,[FUNCACARGO]
      ,[FUNCNOM]
      ,[AREA]
      ,[NUMINT]
      ,[TIPO_PROPIETARIO]
      ,[RUT_PROPIETARIO]
      ,[USUARIO]
      ,[COMBUSTIBLE]
      ,[TRACCION]
      ,[CILINDRADA]
      ,[POTENCIA]
      ,[TURNO]
      ,[SERVICIO]
      ,[MONITOREADO]
      ,[EQUIPOADAS]
  FROM [dbo].[TRANSPORT]
	WHERE (PATENTE = @PATENTE)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_SELECT_DATATABLES_COUNT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_DATATABLES_COUNT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_DATATABLES_COUNT_CTTA]
(
 @IDEMPRESA				NVARCHAR(10)	= NULL
,@SEARCH_PATENTE		NVARCHAR(10)	= NULL
,@SEARCH_MARCA			NVARCHAR(50)	= NULL
,@SEARCH_MODELO			NVARCHAR(50)	= NULL
)
AS
BEGIN

	DECLARE @VALOR1 NVARCHAR(2)
	DECLARE @QUERY	NVARCHAR(MAX)

	SELECT @VALOR1 = ISNULL(VALOR1,'') FROM PARAMETROS_V2 WHERE DESCRIPCION = 'Pases Vehiculares'
	SET @QUERY = ''

	IF(@VALOR1 = '1')
		BEGIN
			SET @QUERY = @QUERY + 'SELECT COUNT(*) AS COUNT_TRANSPORT FROM
				(	SELECT DISTINCT D.PATENTE, D.ACRONIMO, D.MARCA, D.MODELO, D.TIPO FROM ( 
					SELECT T.PATENTE, E.ACRONIMO, T.MARCA, T.MODELO, T.TIPO FROM TRANSPORT_DIVISION_PASES TD 
					INNER JOIN TRANSPORT T ON TD.PATENTE = T.PATENTE 
					INNER JOIN ENTERPRISE E ON TD.EMPRESA = E.IDEMPRESA 
				WHERE (T.EMPRESA = ' + '''' + @IDEMPRESA + ''''
				IF @SEARCH_PATENTE IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.PATENTE LIKE ' + '''%' + @SEARCH_PATENTE + '%''' END
				IF @SEARCH_MARCA IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MARCA LIKE ' + '''%' + @SEARCH_MARCA + '%''' END
				IF @SEARCH_MODELO IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MODELO LIKE ' + '''%' + @SEARCH_MODELO + '%''' END
				SET @QUERY = @QUERY +')'	   
				SET @QUERY = @QUERY + 'UNION ALL  
				SELECT T.PATENTE, E.ACRONIMO, T.MARCA, T.MODELO, T.TIPO FROM TRANSPORT T 
				INNER JOIN ENTERPRISE E ON T.EMPRESA = E.IDEMPRESA
				WHERE (T.EMPRESA = ' + '''' + @IDEMPRESA + '''' 
				IF @SEARCH_PATENTE IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.PATENTE LIKE ' + '''%' + @SEARCH_PATENTE + '%''' END
				IF @SEARCH_MARCA IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MARCA LIKE ' + '''%' + @SEARCH_MARCA + '%''' END
				IF @SEARCH_MODELO IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MODELO LIKE ' + '''%' + @SEARCH_MODELO + '%''' END
				SET @QUERY = @QUERY + ')) D) X'
		END
	ELSE
		BEGIN
			SET @QUERY = @QUERY + 'SELECT COUNT(*) AS COUNT_TRANSPORT FROM
				(	SELECT DISTINCT D.PATENTE, D.ACRONIMO, D.MARCA, D.MODELO, D.TIPO FROM ( 
					SELECT T.PATENTE, E.ACRONIMO, T.MARCA, T.MODELO, T.TIPO FROM TRANSPORT_DIVISION_PASES TD 
					INNER JOIN TRANSPORT T ON TD.PATENTE = T.PATENTE 
					INNER JOIN ENTERPRISE E ON TD.EMPRESA = E.IDEMPRESA
				WHERE (T.EMPRESA = ' + '''' + @IDEMPRESA + ''''
				IF @SEARCH_PATENTE IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.PATENTE LIKE ' + '''%' + @SEARCH_PATENTE + '%''' END
				IF @SEARCH_MARCA IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MARCA LIKE ' + '''%' + @SEARCH_MARCA + '%''' END
				IF @SEARCH_MODELO IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MODELO LIKE ' + '''%' + @SEARCH_MODELO + '%''' END
				SET @QUERY = @QUERY + ')) D) X'
		END

	EXEC(@QUERY)

ENDIF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_SELECT_DATATABLES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_DATATABLES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_DATATABLES_CTTA]
(
 @IDEMPRESA				NVARCHAR(10)	= NULL
,@IDISPLAYSTART			INT				= NULL
,@IDISPLAYLENGTH		INT				= NULL
,@SEARCH_PATENTE		NVARCHAR(10)	= NULL
,@SEARCH_MARCA			NVARCHAR(50)	= NULL
,@SEARCH_MODELO			NVARCHAR(50)	= NULL
,@SORT_COLUMN			NVARCHAR(4)		= NULL
,@SORT_DIRECTION		NVARCHAR(4)		= NULL
,@TOTAL_COUNT			INT	OUTPUT
)
AS
BEGIN

   	DECLARE @VALOR1 NVARCHAR(2)
	DECLARE @QUERY	NVARCHAR(MAX)

	SELECT @VALOR1 = ISNULL(VALOR1,'') FROM PARAMETROS_V2 WHERE DESCRIPCION = 'Pases Vehiculares'
	SET @QUERY = ''

	IF(@VALOR1 = '1')
		BEGIN

			SELECT @TOTAL_COUNT = COUNT(*) FROM (
				SELECT DISTINCT D.PATENTE, D.ACRONIMO, D.MARCA, D.MODELO, D.TIPO FROM ( 
					SELECT T.PATENTE, E.ACRONIMO, T.MARCA, T.MODELO, T.TIPO FROM TRANSPORT_DIVISION_PASES TD 
					INNER JOIN TRANSPORT T ON TD.PATENTE = T.PATENTE 
					INNER JOIN ENTERPRISE E ON TD.EMPRESA = E.IDEMPRESA 
				WHERE (T.EMPRESA = @IDEMPRESA
				AND T.PATENTE LIKE CONCAT('%', @SEARCH_PATENTE , '%')
				AND T.MARCA LIKE CONCAT('%', @SEARCH_MARCA , '%')
				AND T.MODELO LIKE CONCAT('%', @SEARCH_MODELO , '%')
				)
				UNION ALL  
				SELECT T.PATENTE, E.ACRONIMO, T.MARCA, T.MODELO, T.TIPO FROM TRANSPORT T 
				INNER JOIN ENTERPRISE E ON T.EMPRESA = E.IDEMPRESA
				WHERE (T.EMPRESA = @IDEMPRESA
				AND T.PATENTE LIKE CONCAT('%', @SEARCH_PATENTE , '%')
				AND T.MARCA LIKE CONCAT('%', @SEARCH_MARCA , '%')
				AND T.MODELO LIKE CONCAT('%', @SEARCH_MODELO , '%')
				)) D ) E 

			SET @QUERY = @QUERY + '
				SELECT DISTINCT D.PATENTE, D.ACRONIMO, D.MARCA, D.MODELO, D.TIPO FROM ( 
					SELECT T.PATENTE, E.ACRONIMO, T.MARCA, T.MODELO, T.TIPO FROM TRANSPORT_DIVISION_PASES TD 
					INNER JOIN TRANSPORT T ON TD.PATENTE = T.PATENTE 
					INNER JOIN ENTERPRISE E ON TD.EMPRESA = E.IDEMPRESA 
				WHERE (T.EMPRESA = ' + '''' + @IDEMPRESA + ''''
				IF @SEARCH_PATENTE IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.PATENTE LIKE ' + '''%' + @SEARCH_PATENTE + '%''' END
				IF @SEARCH_MARCA IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MARCA LIKE ' + '''%' + @SEARCH_MARCA + '%''' END
				IF @SEARCH_MODELO IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MODELO LIKE ' + '''%' + @SEARCH_MODELO + '%''' END
				SET @QUERY = @QUERY +')'	   
				SET @QUERY = @QUERY + 'UNION ALL  
				SELECT T.PATENTE, E.ACRONIMO, T.MARCA, T.MODELO, T.TIPO FROM TRANSPORT T 
				INNER JOIN ENTERPRISE E ON T.EMPRESA = E.IDEMPRESA
				WHERE (T.EMPRESA = ' + '''' + @IDEMPRESA + '''' 
				IF @SEARCH_PATENTE IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.PATENTE LIKE ' + '''%' + @SEARCH_PATENTE + '%''' END
				IF @SEARCH_MARCA IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MARCA LIKE ' + '''%' + @SEARCH_MARCA + '%''' END
				IF @SEARCH_MODELO IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MODELO LIKE ' + '''%' + @SEARCH_MODELO + '%''' END
				SET @QUERY = @QUERY + ')) D'
		END
	ELSE
		BEGIN
			SELECT @TOTAL_COUNT = COUNT(*) FROM (
			SELECT DISTINCT D.PATENTE, D.ACRONIMO, D.MARCA, D.MODELO, D.TIPO FROM ( 
				SELECT T.PATENTE, E.ACRONIMO, T.MARCA, T.MODELO, T.TIPO FROM TRANSPORT_DIVISION_PASES TD 
				INNER JOIN TRANSPORT T ON TD.PATENTE = T.PATENTE 
				INNER JOIN ENTERPRISE E ON TD.EMPRESA = E.IDEMPRESA 
			WHERE (T.EMPRESA = @IDEMPRESA
			AND T.PATENTE LIKE CONCAT('%', @SEARCH_PATENTE , '%')
			AND T.MARCA LIKE CONCAT('%', @SEARCH_MARCA , '%')
			AND T.MODELO LIKE CONCAT('%', @SEARCH_MODELO , '%')
			)) D ) E 

			SET @QUERY = @QUERY + '
				SELECT DISTINCT D.PATENTE, D.ACRONIMO, D.MARCA, D.MODELO, D.TIPO FROM ( 
				SELECT T.PATENTE, E.ACRONIMO, T.MARCA, T.MODELO, T.TIPO FROM TRANSPORT_DIVISION_PASES TD 
				INNER JOIN TRANSPORT T ON TD.PATENTE = T.PATENTE 
				INNER JOIN ENTERPRISE E ON TD.EMPRESA = E.IDEMPRESA
				WHERE (T.EMPRESA = ' + '''' + @IDEMPRESA + ''''
				IF @SEARCH_PATENTE IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.PATENTE LIKE ' + '''%' + @SEARCH_PATENTE + '%''' END
				IF @SEARCH_MARCA IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MARCA LIKE ' + '''%' + @SEARCH_MARCA + '%''' END
				IF @SEARCH_MODELO IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND T.MODELO LIKE ' + '''%' + @SEARCH_MODELO + '%''' END
				SET @QUERY = @QUERY + ')) D'
		END

	IF @SORT_COLUMN='0' BEGIN SET @QUERY = @QUERY + ' ORDER BY D.PATENTE ' +  @SORT_DIRECTION END   
	IF @SORT_COLUMN='1' BEGIN SET @QUERY = @QUERY + ' ORDER BY D.MARCA ' + @SORT_DIRECTION END   
	IF @SORT_COLUMN='2' BEGIN SET @QUERY = @QUERY + ' ORDER BY D.MODELO '  + @SORT_DIRECTION END 

	SET @QUERY = @QUERY + ' OFFSET ' + CAST(@IDISPLAYSTART AS VARCHAR) + ' ROWS FETCH NEXT ' + CAST(@IDISPLAYLENGTH AS VARCHAR) + ' ROWS ONLY'
	EXEC(@QUERY)

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_SELECT_DATOS_FICHAVEHICULO_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_DATOS_FICHAVEHICULO_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_DATOS_FICHAVEHICULO_INFORMECONSULTARAPIDA_CTTA]
(
 @PATENTE NVARCHAR(8) 
) AS 
BEGIN

SELECT T.PATENTE			, TP.DSCTIPOV			, E.IDEMPRESA			, T.COLOR, 
       T.MARCA				, T.MODELO				, E.ACRONIMO			, T.ANOFAB, 
	   T.PERMISOCIRC		, T.FECSEGURO			, T.REVTEC				, T.AUTOR, 
	   T.CAPACIDAD			, T.OPERINVIER			, T.AREA				, T.TIPO, 
	   TP.TIPOV 
	   FROM  TRANSPORT T LEFT OUTER JOIN TYPETRANS TP ON T.TIPO=TP.IDTIPO 
						 LEFT OUTER JOIN ENTERPRISE E ON E.IDEMPRESA=T.EMPRESA 
	   WHERE PATENTE=@PATENTE
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_SELECT_ENTERPRISE_CTTA2]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_ENTERPRISE_CTTA2]\nGO\n
CREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_ENTERPRISE_CTTA2]
(
 @IDEMPRESA		NVARCHAR(10) = NULL
) 
AS
BEGIN

   	DECLARE @VALOR1 NVARCHAR(2)

	SELECT @VALOR1 = ISNULL(VALOR1,'') FROM PARAMETROS_V2 WHERE DESCRIPCION = 'Pases Vehiculares'
	IF(@VALOR1 = '1')
		BEGIN
			SELECT
				DISTINCT
					D.PATENTE,
					SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('SHA1', convert(nvarchar(50),D.PATENTE))), 3, 10) AS ENCRYPT,
					D.ACRONIMO,
					D.MARCA,
					D.MODELO,
					D.TIPO
			FROM ( 
				   SELECT
						TOP 1000
						T.PATENTE,
						E.ACRONIMO,
						T.MARCA,
						T.MODELO,
						T.TIPO
					FROM TRANSPORT_DIVISION_PASES TD 
				    INNER JOIN TRANSPORT T
						ON TD.PATENTE = T.PATENTE 
				    INNER JOIN ENTERPRISE E
						ON TD.EMPRESA = E.IDEMPRESA 
					WHERE (T.EMPRESA IS NOT NULL)	   

					UNION ALL  
					SELECT
						TOP 1000
						T.PATENTE,
						E.ACRONIMO,
						T.MARCA,
						T.MODELO,
						T.TIPO
					FROM TRANSPORT T 
					INNER JOIN ENTERPRISE E
						ON T.EMPRESA = E.IDEMPRESA
					WHERE (T.EMPRESA IS NOT NULL)
			) D 
		END
	ELSE
		BEGIN
			SELECT
				DISTINCT
					D.PATENTE,
					D.ACRONIMO,
					SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('SHA1', convert(nvarchar(50),D.PATENTE))), 3, 10) AS ENCRYPT,
					D.MARCA,
					D.MODELO,
					D.TIPO
			FROM ( 
				   SELECT
						TOP 1000
						T.PATENTE,
						E.ACRONIMO,
						T.MARCA,
						T.MODELO,
						T.TIPO
					FROM TRANSPORT_DIVISION_PASES TD 
				    INNER JOIN TRANSPORT T
						ON TD.PATENTE = T.PATENTE 
				    INNER JOIN ENTERPRISE E
						ON TD.EMPRESA = E.IDEMPRESA
				    WHERE (T.EMPRESA IS NOT NULL)
				   ) D	   
		END
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_SELECT_IACREDVEHICULAR_INFORMES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_IACREDVEHICULAR_INFORMES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_IACREDVEHICULAR_INFORMES_CTTA]
(
  @DIVISION				NVARCHAR(4)
 ,@EMPRESA				NVARCHAR(10)
 ,@PERIODO_DESDE		NVARCHAR(8) = '19000101'
 ,@PATENTE				NVARCHAR(8) = ''
 ,@TIPO_VEH				NVARCHAR(20) = NULL
 ,@COLUMNAS				NVARCHAR(4000) OUTPUT
 ,@REQUISITOS			NVARCHAR(4000) OUTPUT
) AS
BEGIN
	DECLARE @HOY				NVARCHAR(8) = dbo.hoy(getdate())
	DECLARE @ACRONIMO			NVARCHAR(50)
	DECLARE @CAMPOS_DOC			NVARCHAR(500) = ''
	DECLARE @CAMPOS_FEC			NVARCHAR(500) = ''
	DECLARE @FILTRO_EMPRESA		NVARCHAR(100) = ''
	DECLARE @FILTRO_PATENTE		NVARCHAR(100) = ''
	DECLARE @FILTRO_TIPO		NVARCHAR(100) = ''
	DECLARE @CAMPOS				NVARCHAR(500)
	DECLARE @REGISTRO			NVARCHAR(300)
	DECLARE @SEP				NVARCHAR(2)


	DECLARE @SQL1				NVARCHAR(MAX) = ''

	DECLARE @CRS_ID				INT
	DECLARE @CRS_CAMPO			NVARCHAR(30)
	DECLARE @CRS_NOMBRE			NVARCHAR(50)
	DECLARE @CRS_ORDEN			INT
	DECLARE @CRS_TIPO			NVARCHAR(2)

	DECLARE @CRS_TIPOVEH		NVARCHAR(9)
	DECLARE @CRS_ID_DOC			INT
	DECLARE @PREV_CRS_TIPOVEH	NVARCHAR(9) = ''

	SET @FILTRO_EMPRESA = ''
	SET @FILTRO_PATENTE = ''
	SET @FILTRO_TIPO = ''

	IF(@PATENTE <> '')
		BEGIN
			SET @FILTRO_PATENTE = ' AND T.PATENTE = ''' + @PATENTE + ''' '
		END
	IF(@EMPRESA <> '')
		BEGIN
			SET @FILTRO_EMPRESA = ' AND T.EMPRESA = ''' + @EMPRESA + ''' '
		END
	IF(@TIPO_VEH IS NOT NULL AND @TIPO_VEH <> '')
		BEGIN
			SET @FILTRO_TIPO = ' AND TT.IDTIPO = ' + @TIPO_VEH + ' '
		END

	/**********[STR_CAMPOS]***************/

	DECLARE cursorCampos CURSOR
		FOR
	SELECT
		DATOS.ID,
		DATOS.CAMPO,
		DATOS.NOMBRE,
		DATOS.ORDEN,
		DATOS.TIPO 
	FROM
		(SELECT ID_DOC  AS ID, 
				   ( CASE 
					   WHEN ISNULL(CAMPO, '') = '' THEN 'F' + CAST (ID_DOC AS NVARCHAR(5)) 
					   ELSE CAMPO 
					 END ) AS CAMPO, 
				   NOMBRE, 
				   ORDEN, 
				   'D' AS TIPO 
			FROM   DOCS 
			WHERE  ( ID_TIPO_PROPIETARIO = '3' ) 
				   AND ( ACTIVO = 'SI' ) 
				   AND ( SUBEDOC = 'SI' ) 
			UNION 
			SELECT ID_DOC_FEC AS ID, 
				   ( CASE 
					   WHEN ISNULL(CAMPO_BD, '') = '' THEN 'F' + CAST (ID_DOC_FEC AS NVARCHAR(5)) 
					   ELSE CAMPO_BD 
					 END ) AS CAMPO, 
				   NOMBRE, 
				   ORDEN, 
				   'F'  AS TIPO 
			FROM   DOCS_FEC 
			WHERE  ( ID_DOC_DEPEND IN (SELECT ID_DOC 
									   FROM   DOCS 
									   WHERE  ( ID_TIPO_PROPIETARIO = '3' ) 
											  AND ( ACTIVO = 'SI' )) ) AND
					( ACTIVO = 'SI' )
	) DATOS 
	ORDER BY DATOS.ORDEN 
	
	OPEN cursorCampos

	FETCH NEXT FROM cursorCampos INTO 
		@CRS_ID,
		@CRS_CAMPO,
		@CRS_NOMBRE,
		@CRS_ORDEN,
		@CRS_TIPO
	
	SET @COLUMNAS = ''
	SET @SEP = ''

	WHILE @@FETCH_STATUS = 0
		BEGIN

			SET @CRS_CAMPO = REPLACE(REPLACE(REPLACE(REPLACE(@CRS_CAMPO, '"', '\"'), CHAR(10), ''), CHAR(13), ''), CHAR(9), '') 
			SET @CRS_NOMBRE = REPLACE(REPLACE(REPLACE(REPLACE(@CRS_NOMBRE, '"', '\"'), CHAR(10), ''), CHAR(13), ''), CHAR(9), '')
			SET @CRS_TIPO = REPLACE(REPLACE(REPLACE(REPLACE(@CRS_TIPO, '"', '\"'), CHAR(10), ''), CHAR(13), ''), CHAR(9), '')
			
			SET @REGISTRO = ''
			SET @REGISTRO = @REGISTRO + '"I":' + ISNULL(CONVERT(NVARCHAR(20), @CRS_ID), 'null') + ','      /*ID*/
			SET @REGISTRO = @REGISTRO + '"C":' + '"' + ISNULL(@CRS_CAMPO, '') + '"' + ','			       /*CAMPO*/
			SET @REGISTRO = @REGISTRO + '"N":' + '"' + ISNULL(@CRS_NOMBRE, '') + '"' + ','			       /*NOMBRE*/
			SET @REGISTRO = @REGISTRO + '"T":' + '"' + ISNULL(@CRS_TIPO, '') + '"'						   /*TIPO*/

			SET @COLUMNAS = @COLUMNAS + @SEP + '{' + @REGISTRO + '}'
			SET @SEP = ','	
			
			FETCH NEXT FROM cursorCampos INTO 
				@CRS_ID,
				@CRS_CAMPO,
				@CRS_NOMBRE,
				@CRS_ORDEN,
				@CRS_TIPO


		END

	SET @COLUMNAS = '[ ' + @COLUMNAS + ' ]'

	CLOSE cursorCampos

	DEALLOCATE cursorCampos
	
	/**********[STR_REQUISITOS]***************/

	DECLARE cursorRequisitos CURSOR
		FOR
	SELECT
		DISTINCT
			DT.TIPOPASE AS TIPOVEH, 
			DT.ID_DOC 
	FROM   DOCS_TIPOPASE DT 
	INNER JOIN DOCS D 
			ON DT.ID_DOC = D.ID_DOC 
	INNER JOIN TYPETRANS TT 
			ON DT.TIPOPASE = CAST(TT.IDTIPO AS NVARCHAR(10)) 
	WHERE  DIVISION = @DIVISION 
	ORDER BY DT.TIPOPASE ASC, ID_DOC ASC

	OPEN cursorRequisitos

	FETCH NEXT FROM cursorRequisitos INTO 
		@CRS_TIPOVEH,
		@CRS_ID_DOC
	
	SET @REQUISITOS = ''
	SET @REGISTRO = ''

	WHILE @@FETCH_STATUS = 0
		BEGIN

			SET @CRS_TIPOVEH = REPLACE(REPLACE(REPLACE(REPLACE(@CRS_TIPOVEH, '"', '\"'), CHAR(10), ''), CHAR(13), ''), CHAR(9), '')
			
			IF(@PREV_CRS_TIPOVEH <> @CRS_TIPOVEH)
				BEGIN
					IF(@REGISTRO <> '')
						BEGIN
							SET @REGISTRO = @REGISTRO + ']'
							IF(@REQUISITOS <> '')
								BEGIN
									SET @REQUISITOS = @REQUISITOS + ',' + '{' + @REGISTRO + '}'
								END
							ELSE
								BEGIN
									SET @REQUISITOS = '{' + @REGISTRO + '}'
								END
						END

					SET @REGISTRO = ''
					SET @REGISTRO = @REGISTRO + '"T":' + '"' + ISNULL(@CRS_TIPOVEH, '') + '",'					       /*TIPO VEHICULO*/
					SET @REGISTRO = @REGISTRO + '"I": [' + ISNULL(CONVERT(NVARCHAR(20), @CRS_ID_DOC), 'null')	      /*ID_DOC*/

				END
			ELSE
				BEGIN
					SET @REGISTRO = @REGISTRO + ',' + ISNULL(CONVERT(NVARCHAR(20), @CRS_ID_DOC), 'null')	          /*ID_DOC*/
				END

			SET @PREV_CRS_TIPOVEH = @CRS_TIPOVEH
			
			FETCH NEXT FROM cursorRequisitos INTO 
				@CRS_TIPOVEH,
				@CRS_ID_DOC
		END

	IF(@REGISTRO <> '')
		BEGIN
			SET @REGISTRO = @REGISTRO + ']'
			IF(@REQUISITOS <> '')
				BEGIN
					SET @REQUISITOS = @REQUISITOS + ',' + '{' + @REGISTRO + '}'
				END
			ELSE
				BEGIN
					SET @REQUISITOS = '{' + @REGISTRO + '}'
				END
		END

	SET @REQUISITOS = '[ ' + @REQUISITOS + ' ]'

	CLOSE cursorRequisitos

	DEALLOCATE cursorRequisitos

	/**********[CAMPOS]*********/


	SET @CAMPOS = NULL

	SET @CAMPOS_DOC = '[SIN]'

	SET @CAMPOS = STUFF(
							(
								SELECT 
									',' + SS.CAMPO
								FROM
								(
									SELECT
										( 
										  CASE
											WHEN ISNULL(CAMPO,'') = '' THEN 'F' + CAST(ID_DOC AS NVARCHAR(5))
											ELSE CAMPO
										  END ) AS CAMPO
									FROM DOCS
									WHERE
										(ID_TIPO_PROPIETARIO = '3') AND
										(ACTIVO = 'SI') AND
										(SUBEDOC = 'SI')
								) SS
								FOR XML PATH('')
							)
							, 1, 1, ''
						)

	IF(@CAMPOS IS NOT NULL)
		BEGIN
			SET @CAMPOS_DOC = '[' + REPLACE(@CAMPOS, ',', '], [') + ']'
		END
	ELSE
		BEGIN
			SET @CAMPOS_DOC = '[SIN]'
		END

	/************/
	
	SET @CAMPOS = NULL

	SET @CAMPOS_FEC = '[SIN]'

	SET @CAMPOS = STUFF(
							(
								SELECT
									',' + SS.CAMPO
								FROM
								(
									SELECT
										(
										  CASE
											WHEN ISNULL(CAMPO_BD,'') = '' THEN  'F' + CAST(ID_DOC_FEC AS NVARCHAR(5))
											ELSE CAMPO_BD
										  END ) AS CAMPO
									FROM DOCS_FEC
									WHERE
										(
										  ID_DOC_DEPEND IN ( SELECT ID_DOC FROM DOCS WHERE (ID_TIPO_PROPIETARIO = '3') AND (ACTIVO = 'SI') )
										 ) AND
										 (ACTIVO = 'SI') 
								) SS
								FOR XML PATH('')
							)
							, 1, 1, ''
						) 

	IF(@CAMPOS IS NOT NULL)
		BEGIN
			SET @CAMPOS_FEC = '[' + REPLACE(@CAMPOS, ',', '], [') + ']'
		END
	ELSE
		BEGIN
			SET @CAMPOS_FEC = '[SIN]'
		END


	/************/

	PRINT('@DIVISION:' + @DIVISION)
	PRINT('@EMPRESA:' + @EMPRESA)
	PRINT('@PERIODO_DESDE:' + @PERIODO_DESDE)
	PRINT('@PATENTE:' + @PATENTE)
	PRINT('@TIPO_VEH:' + @TIPO_VEH)
	PRINT('@CAMPOS_FEC:' + @CAMPOS_FEC)
	PRINT('@CAMPOS_DOC:' + @CAMPOS_DOC)
	PRINT('@COLUMNAS:' + @COLUMNAS)
	PRINT('@REQUISITOS:' + @REQUISITOS)
	
	/************/

	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('SELECT PIVOTFECHA.*, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       PIVOTDOCS.* ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('FROM   (SELECT [RUT] AS PATENTE, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               T.[EMPRESA], ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               MAX([FECHA]) AS FECHA, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               ( CASE ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                   WHEN ISNULL(CAMPO_BD, '''') = '''' THEN ''F'' + CAST (DFW.ID_DOC_FEC AS NVARCHAR(5)) ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                   ELSE CAMPO_BD ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                 END ) AS CAMPO_BD ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('        FROM DOCS_FEC_WORKERS AS DFW ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               INNER JOIN TRANSPORT T ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                       ON DFW.RUT = T.PATENTE ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                       ' + @FILTRO_PATENTE + ' ' + @FILTRO_EMPRESA + ' ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               INNER JOIN DOCS_FEC DF ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                       ON DF.ID_DOC_FEC = DFW.ID_DOC_FEC ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               LEFT OUTER JOIN CTRLVEHICULO CV ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                            ON')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('								T.PATENTE = CV.PATENTE AND')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('								CV.FECHAIN >= ''' + @PERIODO_DESDE + ''' AND')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('								CV.DIVISION = ''' + @DIVISION + ''' ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('        WHERE  DFW.DIVISION IN ( ''' + @DIVISION + ''', ''AA'' ) ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               AND DF.COMUN = 0 ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('        GROUP  BY RUT, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                  T.EMPRESA, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                  DFW.ID_DOC_FEC, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                  CAMPO_BD ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('        UNION ALL ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('        SELECT [RUT] AS PATENTE, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               T.[EMPRESA], ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               MAX([FECHA]) AS FECHA, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               ( CASE ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                   WHEN ISNULL(CAMPO_BD, '''') = '''' THEN ''F'' + CAST (DFW.ID_DOC_FEC AS NVARCHAR(5)) ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                   ELSE CAMPO_BD ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                 END )  AS CAMPO_BD ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('        FROM   DOCS_FEC_WORKERS AS DFW ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               INNER JOIN TRANSPORT T ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                       ON DFW.RUT = T.PATENTE ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                       ' + @FILTRO_PATENTE + ' ' + @FILTRO_EMPRESA + ' ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               INNER JOIN DOCS_FEC DF ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                       ON DF.ID_DOC_FEC = DFW.ID_DOC_FEC ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               LEFT OUTER JOIN CTRLVEHICULO CV ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                            ON')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('								T.PATENTE = CV.PATENTE AND')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('								CV.FECHAIN >= ''' + @PERIODO_DESDE + ''' AND')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('								CV.DIVISION = ''' + @DIVISION + ''' ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('        WHERE  DF.COMUN = 1 ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('        GROUP  BY RUT, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                  T.EMPRESA, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                  DFW.ID_DOC_FEC, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                  CAMPO_BD) AS FECHAS ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       PIVOT (MAX(FECHA) ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('             FOR CAMPO_BD IN (' + @CAMPOS_FEC + ') ) AS PIVOTFECHA ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       INNER JOIN (SELECT DT.PATENTE AS PATENTE2, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          CANTIDAD, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          CAMPO, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          T.MODELO, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          T.ANOFAB, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          T.MARCA, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          T.TIPO, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          E.ACRONIMO, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          TT.DSCTIPOV, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          CV.FECHAIN, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          CV.HORAIN, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          TD.AUTOR, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          T.FECHAMOD, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          T.HORAMOD, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          TD.DIVISION, ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          (SELECT TOP 1 DURACION ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                           FROM   TYPETRANS_DIV TD2 ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                           WHERE  TD2.TIPO = T.TIPO ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                  AND TD2.DIVISION = ''' + @DIVISION + ''' ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                  AND TD2.ACTIVO = ''SI'') AS DURACION ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                   FROM   DOCS_TRANSPORT AS DT ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          INNER JOIN TRANSPORT T ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                  ON DT.PATENTE = T.PATENTE ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                  ' + @FILTRO_PATENTE + ' ' + @FILTRO_EMPRESA + ' ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          INNER JOIN DOCS D ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                  ON DT.ID_DOC = D.ID_DOC ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          INNER JOIN ENTERPRISE E ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                  ON T.EMPRESA = E.IDEMPRESA ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          INNER JOIN TYPETRANS TT ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                  ON T.TIPO = TT.IDTIPO ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                  ' + @FILTRO_TIPO + ' ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          LEFT OUTER JOIN CTRLVEHICULO CV ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       ON T.PATENTE = CV.PATENTE ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                          AND CV.FECHAIN >= ''' + @PERIODO_DESDE + ''' ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                          AND CV.DIVISION = ''' + @DIVISION + ''' ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          INNER JOIN TRANSPORT_DIVISION TD ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                  ON T.PATENTE = TD.PATENTE ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                     AND TD.DIVISION = ''' + @DIVISION + ''' ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                   WHERE  ( DT.DIVISION = ( CASE ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                              WHEN D.COMUN_DIV = ''SI'' THEN DT.DIVISION ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                              ELSE ''' + @DIVISION + ''' ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                            END ) ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                             OR ISNULL(DT.DIVISION, ''AA'') = (')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('																CASE ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('																	WHEN D.COMUN_DIV = ''SI'' THEN DT.DIVISION ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('																	ELSE ''AA'' ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('																END ) ) ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                          AND DT.VALIDADO = ''SI'') AS DOCSVEH ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                  PIVOT (SUM(CANTIDAD) ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        FOR CAMPO IN (' + @CAMPOS_DOC + ') ) AS PIVOTDOCS ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               ON PIVOTFECHA.PATENTE = PIVOTDOCS.PATENTE2 ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('WHERE  ISNULL(FECHAIN, '''') >= ''' + @PERIODO_DESDE + ''' ')) + ' '
	SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('ORDER  BY PIVOTFECHA.PATENTE '))

	EXEC(@SQL1)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_SELECT_ONE_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_ONE_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_ONE_PASES_CTTA]
(
  @PATENTE		NVARCHAR(10)
 ,@IDPASE		INT
 ,@DIVCOD		NVARCHAR(4) = ''
 ,@ID_EMPRESA	NVARCHAR(10) = ''
 ,@FEC_INI		NVARCHAR(8) = '19000101'
 ,@FEC_FIN		NVARCHAR(8) = '19000101'
) AS 
BEGIN
	
	SELECT
		SS.PATENTE,
		SS.MARCA,
		SS.MODELO,
		SS.ANOFAB,
		SS.TIPO,
		COALESCE(
				(
				 SELECT TOP 1 TT.DSCTIPOV
				 FROM TYPETRANS TT
				 WHERE TT.IDTIPO = SS.TIPO
				 ), '') AS TIPO_TXT,
		SS.AUTOR,
		SS.EMPRESA,
		COALESCE(
			(
				SELECT
					TOP 1
					E.ACRONIMO
				FROM ENTERPRISE E
				WHERE E.IDEMPRESA = SS.EMPRESA
			),
		'') AS NOMBRE_EMPRESA,
		SS.PERTENECE_NOMINA,
		SS.PASES_ACTIVOS,
		SS.SINOLT
	FROM
	(
		SELECT
			ISNULL(T.PATENTE, '') AS PATENTE,
			ISNULL(T.MARCA, '') AS MARCA,
			ISNULL(T.MODELO, '') AS MODELO,
			ISNULL(T.ANOFAB, '') AS ANOFAB,
			ISNULL(T.TIPO, 0) AS TIPO,
			ISNULL(T.AUTOR, '') AS AUTOR,
			COALESCE(
			(
				SELECT
					TOP 1
					ISNULL(TDP.EMPRESA, '')
				FROM TRANSPORT_DIVISION_PASES TDP
				WHERE
					TDP.PATENTE = @PATENTE AND
					(dbo.hoy(GETDATE()) BETWEEN TDP.FINIPASE AND TDP.FFINPASE) AND
					(TDP.AUTOR IN ('SI','NO'))
				ORDER BY TDP.LOTE DESC
			), ISNULL(T.EMPRESA, '')) AS EMPRESA,
			(CASE
				WHEN CONVERT(NVARCHAR(10), @ID_EMPRESA) = T.EMPRESA THEN 1
				ELSE 0 END
			) AS PERTENECE_NOMINA,
			(
			  SELECT
				COUNT(*)
			  FROM TRANSPORT_DIVISION_PASES TDP1
			  WHERE 
					(TDP1.PATENTE = T.PATENTE) AND
					(TDP1.LOTE) <> '0' AND
					(TDP1.AUTOR) = 'SI' AND
					(TDP1.DIVISION = @DIVCOD) AND
					(TDP1.LOTE <> @IDPASE) AND 
					(
					  (@FEC_INI BETWEEN TDP1.FINIPASE AND TDP1.FFINPASE) OR
					  (@FEC_FIN BETWEEN TDP1.FINIPASE AND TDP1.FFINPASE) OR
					  (@FEC_INI < TDP1.FINIPASE AND TDP1.FFINPASE < @FEC_FIN)
					)
			) AS PASES_ACTIVOS,
			'SI' AS SINOLT
		FROM TRANSPORT T
		WHERE (T.PATENTE = @PATENTE)
	) SS
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_SELECT_VALIDA_EXISTENCIA_PATENTE_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_VALIDA_EXISTENCIA_PATENTE_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_SELECT_VALIDA_EXISTENCIA_PATENTE_INFORMECONSULTARAPIDA_CTTA]
(
   @PATENTE NVARCHAR(8) 
 , @EXISTE BIT  OUTPUT
) AS 
BEGIN

 IF EXISTS(SELECT * FROM  TRANSPORT T LEFT OUTER JOIN TYPETRANS TP ON T.TIPO=TP.IDTIPO 
						              LEFT OUTER JOIN ENTERPRISE E ON E.IDEMPRESA=T.EMPRESA 
           WHERE PATENTE=@PATENTE)
 BEGIN
  SET @EXISTE = 1
 END
 ELSE
 BEGIN
  SET @EXISTE = 0
 END

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_UPDATE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_UPDATE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_UPDATE]
( 
 @PATENTE nvarchar(10)= NULL
,@TIPO int= NULL
,@COLOR nvarchar(30)= NULL
,@EMPRESA  nvarchar(10)= NULL
,@ANOFAB  nvarchar(4)= NULL
,@PERMISOCIRC  nvarchar(8)= NULL
,@FECSEGURO  nvarchar(8)= NULL
,@REVTEC nvarchar(8)= NULL
,@CAPACIDAD  smallint= NULL
,@OPERINVIER  nvarchar(2)= NULL
,@NRO  smallint= NULL
,@AUTOR  nvarchar(2)= NULL
,@MARCA  nvarchar(50)= NULL
,@MODELO  nvarchar(50)= NULL
,@CODMOP  nvarchar(3)= NULL
,@FECHAMOD  nvarchar(8)= NULL
,@HORAMOD  nvarchar(8)= NULL
,@GRABO  nvarchar(1)= NULL
,@FECCHECK  nvarchar(8)= NULL
,@FECMINERA  nvarchar(8)= NULL
,@LABEL  nvarchar(2)= NULL
,@OBS  nvarchar(100)= NULL
,@TIENEWISE  nvarchar(2)= NULL
,@FUNCACARGO  nvarchar(50)= NULL
,@FUNCNOM  nvarchar(50)= NULL
,@AREA  nvarchar(50)= NULL
,@NUMINT  nvarchar(50)= NULL
,@TIPO_PROPIETARIO  nvarchar(1)= NULL
,@RUT_PROPIETARIO  nvarchar(10)= NULL
,@USUARIO  nvarchar(10)= NULL
,@COMBUSTIBLE  int= NULL
,@TRACCION  int= NULL
,@CILINDRADA  nvarchar(50)= NULL
,@POTENCIA nvarchar(50)= NULL
,@TURNO  nvarchar(50)= NULL
,@SERVICIO  nvarchar(50)= NULL
,@MONITOREADO nvarchar(2)= NULL
,@EQUIPOADAS  nvarchar(2)= NULL
 ) AS
BEGIN
UPDATE [dbo].[TRANSPORT]
   SET 
        [TIPO] = @TIPO  
       ,[COLOR] = @COLOR        
       ,[EMPRESA] = @EMPRESA        
       ,[ANOFAB] = @ANOFAB        
       ,[PERMISOCIRC] = @PERMISOCIRC        
       ,[FECSEGURO] = @FECSEGURO        
       ,[REVTEC] = @REVTEC        
       ,[CAPACIDAD] = @CAPACIDAD     
       ,[OPERINVIER] = @OPERINVIER        
       ,[NRO] = @NRO     
       ,[AUTOR] = @AUTOR        
       ,[MARCA] = @MARCA        
       ,[MODELO] = @MODELO        
       ,[CODMOP] = @CODMOP        
       ,[FECHAMOD] = @FECHAMOD        
       ,[HORAMOD] = @HORAMOD        
       ,[GRABO] = @GRABO        
       ,[FECCHECK] = @FECCHECK        
       ,[FECMINERA] = @FECMINERA        
       ,[LABEL] = @LABEL        
       ,[OBS] = @OBS         
       ,[TIENEWISE] = @TIENEWISE        
       ,[FUNCACARGO] = @FUNCACARGO        
       ,[FUNCNOM] = @FUNCNOM        
       ,[AREA] = @AREA        
       ,[NUMINT] = @NUMINT        
       ,[TIPO_PROPIETARIO] = @TIPO_PROPIETARIO        
       ,[RUT_PROPIETARIO] = @RUT_PROPIETARIO        
       ,[USUARIO] = @USUARIO        
       ,[COMBUSTIBLE] = @COMBUSTIBLE   
       ,[TRACCION] = @TRACCION    
       ,[CILINDRADA] = @CILINDRADA        
       ,[POTENCIA] = @POTENCIA        
       ,[TURNO] = @TURNO        
       ,[SERVICIO] = @SERVICIO        
       ,[MONITOREADO] = @MONITOREADO        
       ,[EQUIPOADAS] = @EQUIPOADAS        
 WHERE [PATENTE] = @PATENTE     
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_UPDATE_ENTERPRISE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_UPDATE_ENTERPRISE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_UPDATE_ENTERPRISE_CTTA]
(
@PATENTE NVARCHAR(10),
@EMPRESA NVARCHAR(10)
)
AS
BEGIN

	UPDATE TRANSPORT
	SET EMPRESA = @EMPRESA
	WHERE PATENTE = @PATENTE

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TRANSPORT_UPDATE_VEHICULOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TRANSPORT_UPDATE_VEHICULOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TRANSPORT_UPDATE_VEHICULOS_CTTA]
(
  @RUT_PROPIETARIO	NVARCHAR(10)
 ,@ANOFAB			NVARCHAR(4) = ''
 ,@MODELO			NVARCHAR(50) = ''
 ,@MARCA			NVARCHAR(50) = ''
 ,@TIPO				INT = NULL
 ,@COLOR			NVARCHAR(30) = ''
 ,@TIPO_PROPIETARIO	NVARCHAR(1) = ''
 ,@PATENTE			NVARCHAR(8)
 ,@NOM_DUENO		NVARCHAR(50) = ''
 ,@APELLIDO_DUENO	NVARCHAR(50) = ''
 ,@ACRONIMO_DUENO	NVARCHAR(50) = ''
)
AS
BEGIN
	UPDATE TRANSPORT
	SET
		ANOFAB = @ANOFAB,
		MODELO = @MODELO,
		MARCA = @MARCA,
		TIPO = @TIPO,
		COLOR = @COLOR,
		RUT_PROPIETARIO = @RUT_PROPIETARIO,
		TIPO_PROPIETARIO = @TIPO_PROPIETARIO
	WHERE (PATENTE = @PATENTE)

	IF(@TIPO_PROPIETARIO = 'F')
		BEGIN
			IF(NOT EXISTS(
							SELECT
								NOMBRES
							FROM WORKERS
							WHERE RUT = @RUT_PROPIETARIO
						 )
			)
				BEGIN
					INSERT INTO WORKERS (RUT, NOMBRES, APELLIDOS)
					VALUES (@RUT_PROPIETARIO, @NOM_DUENO, @APELLIDO_DUENO)
				END
		END
	ELSE IF(@TIPO_PROPIETARIO = 'E')
		BEGIN
			IF(NOT EXISTS(
							SELECT
								ACRONIMO
							FROM ENTERPRISE
							WHERE IDEMPRESA = @RUT_PROPIETARIO
						)
			)
				BEGIN
					INSERT INTO ENTERPRISE (IDEMPRESA, ACRONIMO)
					VALUES (@RUT_PROPIETARIO, @ACRONIMO_DUENO)
				END
		END

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TURNO_DISPUTA_INSERT_TURNOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TURNO_DISPUTA_INSERT_TURNOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TURNO_DISPUTA_INSERT_TURNOS_CTTA]
( @IDTURNO INT = NULL 
, @OBSERVACION NVARCHAR(1000) = NULL 
, @USUARIO NVARCHAR(20) = NULL 
, @ID_DISPUTA INT  = NULL OUTPUT 
) AS 
BEGIN

	DECLARE @ID UNIQUEIDENTIFIER = NULL
	DECLARE @TURNO NVARCHAR(20) = ''
	DECLARE @EMPRESA NVARCHAR(10) = ''    
	DECLARE @CURR_FECHA NVARCHAR(8) =  [dbo].[hoy](GETDATE()) 
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = [dbo].[ahora](GETDATE())
	DECLARE @CERTUSUARIO NVARCHAR(20) = ''
	DECLARE @CERTFECHA NVARCHAR(8) = ''
	DECLARE @CERTHORA NVARCHAR(8) = ''
	DECLARE @OBS_RECHAZO NVARCHAR(MAX) = ''
	DECLARE @ESTADO NVARCHAR(2) = 'NO'
	DECLARE @VALIDADO NVARCHAR(2) = ''

	SELECT 
		@ID = ID,
		@TURNO = TURNO,
		@EMPRESA = EMPRESA,
		@CERTUSUARIO = CERTUSUARIO,
		@CERTFECHA = CERTFECHA,
		@CERTHORA = CERTHORA,
		@VALIDADO = VALIDADO,
		@OBS_RECHAZO = OBS_RECHAZO
	FROM TURNOS
	WHERE IDTURNO = @IDTURNO

	INSERT INTO [dbo].[TURNOS_DISPUTA]
           ([IDTURNO]		, [ID]			, [TURNO]	 , [EMPRESA]
           ,[OBSERVACION]	, [USUARIO]		, [FECHA]	 , [HORA]
           ,[CERTUSUARIO]	, [CERTFECHA]	, [CERTHORA] , [OBS_RECHAZO]
		   ,[ESTADO]		, [VALIDADO])
    VALUES
           (@IDTURNO		, @ID			, @TURNO	  , @EMPRESA
           ,@OBSERVACION	, @USUARIO		, @CURR_FECHA , @CURR_TIEMPOFULL
		   ,@CERTUSUARIO	, @CERTFECHA	, @CERTHORA   , @OBS_RECHAZO
		   ,@ESTADO			, @VALIDADO	)

	SET @ID_DISPUTA = SCOPE_IDENTITY()
END
/****** Object:  StoredProcedure [dbo].[V4MVC_TURNOS_SELECT_EDIT_TURNOS_CTTA]    Script Date: 1/11/2020 16:20:53 ******/
SET ANSI_NULLS ON
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TURNO_SELECT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TURNO_SELECT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TURNO_SELECT_CTTA]
(
  @IDEMPRESA	NVARCHAR(10) = NULL
 ,@OST			NVARCHAR(14) = NULL
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	SELECT
		DISTINCT
		TURNO
	FROM TURNOS
	WHERE
		EMPRESA = @IDEMPRESA AND
		OST = @OST AND
		VALIDADO = 'SI' AND
		FVIGENCIA >= @CURR_FECHA
	ORDER BY TURNO
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TURNO_SELECT_ONE_DISPUTA_TURNOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TURNO_SELECT_ONE_DISPUTA_TURNOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TURNO_SELECT_ONE_DISPUTA_TURNOS_CTTA]
(
  @ID_TURNO INT = NULL
, @ID_DISPUTA INT = NULL
) AS 
BEGIN
	DECLARE @EMPRESA NVARCHAR(20) = ''
	DECLARE @TURNO NVARCHAR(20) = ''
	DECLARE @OST NVARCHAR(14) = ''
	DECLARE @DIATRABAJO INT = 0
	DECLARE @DIADESCANSO INT = 0
	DECLARE @CLASETUR NVARCHAR(14) = ''
	DECLARE @ID UNIQUEIDENTIFIER = NULL
	DECLARE @VALIDADO NVARCHAR(2) = ''
	DECLARE @OBS_RECHAZO NVARCHAR(MAX) = ''
	DECLARE @OBSERVACION_REVAL NVARCHAR(1000) = ''
	DECLARE @ESTADO NVARCHAR(2) = ''
	DECLARE @OBSERVACION NVARCHAR(1000) = ''
	DECLARE @IDTURNO INT = -1
	DECLARE @ACRONIMO NVARCHAR(50) = ''
	DECLARE @NUEVA BIT = 1

	IF(@ID_DISPUTA < 0)
		BEGIN
			SET @IDTURNO = @ID_TURNO
			SELECT 
				@EMPRESA = T.EMPRESA,
				@ACRONIMO = COALESCE((SELECT TOP 1 E.ACRONIMO FROM ENTERPRISE E WHERE E.IDEMPRESA = T.EMPRESA), ''),
				@TURNO = T.TURNO,
				@OST = T.OST,
				@DIATRABAJO = T.DIATRABAJO,
				@DIADESCANSO = T.DIADESCANSO,
				@CLASETUR = T.CLASETUR,
				@ID = T.ID,
				@VALIDADO = T.VALIDADO,
				@OBS_RECHAZO = T.OBS_RECHAZO
			FROM TURNOS T
			WHERE T.IDTURNO = @ID_TURNO
		END
	ELSE
		BEGIN
			SELECT 
				@EMPRESA = T.EMPRESA,
				@ACRONIMO = COALESCE((SELECT TOP 1 E.ACRONIMO FROM ENTERPRISE E WHERE E.IDEMPRESA = T.EMPRESA), ''),
				@TURNO = T.TURNO,
				@OST = T.OST,
				@DIATRABAJO = T.DIATRABAJO,
				@DIADESCANSO = T.DIADESCANSO,
				@CLASETUR = T.CLASETUR,
				@ID = TD.ID,
				@VALIDADO = T.VALIDADO,
				@OBS_RECHAZO = T.OBS_RECHAZO,
				@OBSERVACION_REVAL = TD.OBSERVACION_REVAL,
				@ESTADO = TD.ESTADO,
				@OBSERVACION = TD.OBSERVACION,
				@IDTURNO = T.IDTURNO,
				@NUEVA = 0
			FROM TURNOS_DISPUTA TD
			INNER JOIN TURNOS T
				ON TD.IDTURNO = T.IDTURNO
			WHERE TD.ID_DISPUTA = @ID_DISPUTA
		END
	
	SELECT
		@EMPRESA AS EMPRESA,
		@ACRONIMO AS ACRONIMO,
		@TURNO AS TURNO,
		@OST AS OST,
		@DIATRABAJO AS DIATRABAJO,
		@DIADESCANSO AS DIADESCANSO,
		@CLASETUR AS CLASETUR,
		@ID AS ID,
		@VALIDADO AS VALIDADO,
		@OBS_RECHAZO AS OBS_RECHAZO,
		@OBSERVACION_REVAL AS OBSERVACION_REVAL,
		@ESTADO AS ESTADO,
		@OBSERVACION AS OBSERVACION,
		@IDTURNO AS IDTURNO,
		@NUEVA AS NUEVA
END
/****** Object:  StoredProcedure [dbo].[V4MVC_TURNO_DISPUTA_INSERT_TURNOS_CTTA]    Script Date: 1/11/2020 16:20:02 ******/
SET ANSI_NULLS ON
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TURNOS_EXSICO_SELECT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TURNOS_EXSICO_SELECT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TURNOS_EXSICO_SELECT_CTTA]
(
 @FECHARES					NVARCHAR(8)  
)
AS
BEGIN

	CREATE TABLE #LISTA_TURNOS
	(
		HORAINICIO			NVARCHAR(8)		 COLLATE DATABASE_DEFAULT NOT NULL,
		HORATERMINO			NVARCHAR(8)		 COLLATE DATABASE_DEFAULT NOT NULL,
		TURNOS_HORA			INT,
		ACTIVO				NVARCHAR(2)		 COLLATE DATABASE_DEFAULT NOT NULL,
		OCUPADAS			INT,
		HORA_ACTIVO			NVARCHAR(2)		 COLLATE DATABASE_DEFAULT NOT NULL
	)

	DECLARE @CONTADOR		INT   
	DECLARE @HORA_INICIO	NVARCHAR(8)
	DECLARE @HORA_TERMINO	NVARCHAR(8)
	DECLARE @HORA_FIN		NVARCHAR(8)
	DECLARE @HORAINI_COL	NVARCHAR(8)
	DECLARE @HORAFIN_COL	NVARCHAR(8)
	DECLARE @TURNOSPORHORA	INT
	DECLARE @DATE1			DATETIME
	DECLARE @DATE2			DATETIME
	DECLARE @DATE_DIF		INT
	DECLARE @OCUPADAS		INT
	DECLARE @VAR_HORA		NVARCHAR(8)
	DECLARE @FECHAMASHORA	DATETIME


	SET @HORA_INICIO	= (SELECT HORAINI		FROM	TAB_RESERVASICO		WHERE	ACTIVO='SI')
	SET @HORA_FIN		= (SELECT HORAFIN		FROM	TAB_RESERVASICO		WHERE	ACTIVO='SI')
	SET @HORAINI_COL	= (SELECT HORAINI_COL	FROM	TAB_RESERVASICO		WHERE	ACTIVO='SI')
	SET @HORAFIN_COL	= (SELECT HORAFIN_COL	FROM	TAB_RESERVASICO		WHERE	ACTIVO='SI')
	SET @TURNOSPORHORA	= (SELECT FUNCPORHORA	FROM	TAB_RESERVASICO		WHERE	ACTIVO='SI')
	SET @DATE1			= @HORA_INICIO
	SET @DATE2			= @HORA_FIN

	SET @DATE_DIF = (SELECT (CAST((@DATE1 - @DATE2) AS FLOAT) * -24.0))
	SET @CONTADOR = 1

	SET @FECHAMASHORA = @FECHARES
	SET @FECHAMASHORA = DATEADD(HOUR,DATEPART(HOUR, DBO.AHORA(GETDATE())),@FECHAMASHORA)
	SET @FECHAMASHORA = DATEADD(MINUTE,DATEPART(MINUTE, DBO.AHORA(GETDATE())),@FECHAMASHORA)


	PRINT(DATEDIFF(HOUR, GETDATE(),@FECHAMASHORA))

	WHILE ( @CONTADOR <= @DATE_DIF )
	BEGIN
		SET @HORA_TERMINO = CONVERT(VARCHAR,(DATEADD(HOUR, 1 ,@HORA_INICIO)),8)

		SET @OCUPADAS = (SELECT COUNT(ID) FROM RESERVAS_EXSICO WHERE HORAINICIO = @HORA_INICIO AND HORATERMINO = @HORA_TERMINO AND FECHARES = @FECHARES)

		IF(DATEDIFF(HOUR, GETDATE(),@FECHAMASHORA) <= 24)
		BEGIN
				IF(@HORA_INICIO <= dbo.AHORA(GETDATE()))
				BEGIN
					SET @VAR_HORA = 'NO'
				END
				ELSE
				BEGIN
					SET @VAR_HORA = 'SI'
				END
		END
		ELSE
		BEGIN
				SET @VAR_HORA = 'SI'
		END

		INSERT INTO	#LISTA_TURNOS VALUES (@HORA_INICIO,CONVERT(VARCHAR,(DATEADD(HOUR, 1 ,@HORA_INICIO)),8),@TURNOSPORHORA,'SI',@OCUPADAS,@VAR_HORA)
		SET @HORA_INICIO = CONVERT(VARCHAR,(DATEADD(HOUR, 1 ,@HORA_INICIO)),8)
		SET @CONTADOR = @CONTADOR +1   

	END

	UPDATE #LISTA_TURNOS
	SET		ACTIVO='NO'
	WHERE	HORAINICIO		>=		@HORAINI_COL	AND		HORAINICIO		<		@HORAFIN_COL
	AND		HORATERMINO		>		@HORAINI_COL	AND		HORATERMINO		<=		@HORAFIN_COL

	SELECT  HORAINICIO		,HORATERMINO	,TURNOS_HORA	,ACTIVO 
			,OCUPADAS		,HORA_ACTIVO
	FROM #LISTA_TURNOS

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TURNOS_INSERT_TURNOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TURNOS_INSERT_TURNOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TURNOS_INSERT_TURNOS_CTTA]
( @IDTURNO int = NULL
, @EMPRESA nvarchar(10) = NULL
, @TURNO nvarchar(20) = NULL
, @LOCAL nvarchar(50) = NULL
, @DIATRABAJO int = NULL
, @DIADESCANSO int = NULL
, @DDIURNO nvarchar(10) = NULL
, @DNOCHE nvarchar(10) = NULL
, @DDIURNO2 nvarchar(10) = NULL
, @DNOCHE2 nvarchar(10) = NULL
, @FECINICIO nvarchar(8) = NULL
, @TURDESCR nvarchar(100) = NULL
, @DOTTURNO int = NULL
, @CLASETUR nvarchar(15) = NULL
, @ESTADOTUR nvarchar(10) = NULL
, @OBSERVTUR nvarchar(100) = NULL
, @TIENEHE nvarchar(2) = NULL
, @HMAXDIANOR smallmoney = NULL
, @HMAXDIAHE smallmoney = NULL
, @HSEMANA smallmoney = NULL
, @HEXTRAS smallmoney = NULL
, @HINGRESO nvarchar(8) = NULL
, @HINDESDE nvarchar(8) = NULL
, @HINHASTA nvarchar(8) = NULL
, @HOUTDESDE nvarchar(8) = NULL
, @HOUTHASTA nvarchar(8) = NULL
, @HALIMI nvarchar(8) = NULL
, @HALIMS nvarchar(8) = NULL
, @FECHAMOD nvarchar(8) = NULL
, @HORAMOD nvarchar(8) = NULL
, @GRABO nvarchar(1) = NULL
, @TIENEFERIADO nvarchar(2) = NULL
, @HSALIDA nvarchar(8) = NULL
, @USUARIOMOD nvarchar(10) = NULL
, @VISIBLE nvarchar(2) = NULL
, @TIPO nvarchar(1) = NULL
, @HINGRESON nvarchar(8) = NULL
, @HINDESDEN nvarchar(8) = NULL
, @HINHASTAN nvarchar(8) = NULL
, @HSALIDAN nvarchar(8) = NULL
, @HOUTDESDEN nvarchar(8) = NULL
, @HOUTHASTAN nvarchar(8) = NULL
, @HALIMIN nvarchar(8) = NULL
, @HALIMSN nvarchar(8) = NULL
, @HSAL_ULIMODIA nvarchar(8) = NULL
, @FVIGENCIA nvarchar(8) = NULL
, @VALIDADO nvarchar(2) = NULL
, @EMPIEZANOCHEA nvarchar(10) = NULL
, @EMPIEZANOCHEB nvarchar(10) = NULL
, @EMPIEZA nvarchar(10) = NULL
, @OST nvarchar(14) = NULL
, @ID uniqueidentifier = NULL
, @USRSUBE nvarchar(10) = NULL
, @CERTUSUARIO nvarchar(20) = NULL
, @CERTFECHA nvarchar(8) = NULL
, @CERTHORA nvarchar(8) = NULL
, @OBS_RECHAZO text = NULL
, @HSAL_ULIMONOCHE nvarchar(8) = NULL) AS 
BEGIN

INSERT INTO [dbo].[TURNOS]
           ([EMPRESA]				,[TURNO]					,[LOCAL]			,[DIATRABAJO]
           ,[DIADESCANSO]			,[DDIURNO]					,[DNOCHE]			,[DDIURNO2]
           ,[DNOCHE2]				,[FECINICIO]				,[TURDESCR]			,[DOTTURNO]
           ,[CLASETUR]				,[ESTADOTUR]				,[OBSERVTUR]		,[TIENEHE]
           ,[HMAXDIANOR]			,[HMAXDIAHE]				,[HSEMANA]			,[HEXTRAS]
           ,[HINGRESO]				,[HINDESDE]					,[HINHASTA]			,[HOUTDESDE]
           ,[HOUTHASTA]				,[HALIMI]					,[HALIMS]			,[FECHAMOD]
           ,[HORAMOD]				,[GRABO]					,[TIENEFERIADO]		,[HSALIDA]
           ,[USUARIOMOD]			,[VISIBLE]					,[TIPO]				,[HINGRESON]
           ,[HINDESDEN]				,[HINHASTAN]				,[HSALIDAN]			,[HOUTDESDEN]
           ,[HOUTHASTAN]			,[HALIMIN]					,[HALIMSN]			,[HSAL_ULIMODIA]
           ,[FVIGENCIA]				,[EMPIEZANOCHEA]			,[EMPIEZANOCHEB]	,[EMPIEZA]
           ,[OST]					,[ID]						,[VALIDADO]			,[USRSUBE]
           ,[FECSUBE]				,[HORASUBE]					,[CERTUSUARIO]		,[CERTFECHA]
           ,[CERTHORA]				,[OBS_RECHAZO]				,[HSAL_ULIMONOCHE])
     VALUES
           (@EMPRESA				,@TURNO						,@LOCAL				,@DIATRABAJO
           ,@DIADESCANSO			,@DDIURNO					,@DNOCHE			,@DDIURNO2
           ,@DNOCHE2				,@FECINICIO					,@TURDESCR			,@DOTTURNO
           ,@CLASETUR				,@ESTADOTUR					,@OBSERVTUR			,@TIENEHE
           ,@HMAXDIANOR				,@HMAXDIAHE					,@HSEMANA			,@HEXTRAS
           ,@HINGRESO				,@HINDESDE					,@HINHASTA			,@HOUTDESDE
           ,@HOUTHASTA				,@HALIMI					,@HALIMS			,[dbo].[hoy](GETDATE())
           ,[dbo].[ahora](GETDATE()),@GRABO						,@TIENEFERIADO		,@HSALIDA
           ,@USUARIOMOD				,'SI'						,@TIPO				,@HINGRESON
           ,@HINDESDEN				,@HINHASTAN					,@HSALIDAN			,@HOUTDESDEN
           ,@HOUTHASTAN				,@HALIMIN					,@HALIMSN			,@HSAL_ULIMODIA
           ,@FVIGENCIA				,@EMPIEZANOCHEA				,@EMPIEZANOCHEB		,@EMPIEZA
           ,@OST					,@ID						,'NO'				,@USRSUBE
           ,[dbo].[hoy](GETDATE())	,[dbo].[ahora](GETDATE())	,@CERTUSUARIO		,[dbo].[hoy](GETDATE())
           ,[dbo].[ahora](GETDATE()),@OBS_RECHAZO				,@HSAL_ULIMONOCHE)

END
/****** Object:  StoredProcedure [dbo].[V4MVC_TURNOS_UPDATE]    Script Date: 1/11/2020 12:34:20 ******/
SET ANSI_NULLS ON
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TURNOS_SELECT_EDIT_TURNOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TURNOS_SELECT_EDIT_TURNOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TURNOS_SELECT_EDIT_TURNOS_CTTA]
(@IDTURNO INT = NULL) AS 
BEGIN

	SELECT			T.EMPRESA						,T.TURNO							,T.DIATRABAJO								,T.DIADESCANSO
					,ISNULL(T.DDIURNO,0) AS DDIURNO	,ISNULL(T.DNOCHE,0) AS DNOCHE		,ISNULL(T.DDIURNO2,0) AS DDIURNO2			,ISNULL(T.DNOCHE2,0) AS DNOCHE2
					,T.FECINICIO					,T.TURDESCR							,T.DOTTURNO									,T.CLASETUR
					,T.ESTADOTUR					,T.OBSERVTUR						,T.HINGRESO									,T.USUARIOMOD
					,T.FECHAMOD						,T.HORAMOD							,T.HSALIDA									,T.IDTURNO
					,T.VISIBLE						,ISNULL(T.TIPO,0) AS TIPO			,T.HINGRESON								,T.HSALIDAN
					,T.HSAL_ULIMODIA				,T.FVIGENCIA						,ISNULL(T.EMPIEZANOCHEA,0) AS EMPIEZANOCHEA ,ISNULL(T.EMPIEZANOCHEB,0) AS EMPIEZANOCHEB
					,ISNULL(T.EMPIEZA,'') AS EMPIEZA,ISNULL(T.OST,'') AS OST			,T.ID										, A.NOMBRE
					,T.FVIGENCIA AS FECHA			,ISNULL(T.VALIDADO,'NO') AS VALIDADO 
	FROM TURNOS T 
	LEFT OUTER JOIN ARCHIVOS A ON A.ID = T.ID 
	WHERE IDTURNO =@IDTURNO
END
/****** Object:  StoredProcedure [dbo].[V4MVC_TURNOS_UPDATE_TURNOS_CTTA]    Script Date: 1/11/2020 16:21:30 ******/
SET ANSI_NULLS ON
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TURNOS_SELECT_ONE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TURNOS_SELECT_ONE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TURNOS_SELECT_ONE]
(@IDTURNO int = NULL) AS 
BEGIN

SELECT [EMPRESA]
      ,[TURNO]
      ,[LOCAL]
      ,[DIATRABAJO]
      ,[DIADESCANSO]
      ,[DDIURNO]
      ,[DNOCHE]
      ,[DDIURNO2]
      ,[DNOCHE2]
      ,[FECINICIO]
      ,[TURDESCR]
      ,[DOTTURNO]
      ,[CLASETUR]
      ,[ESTADOTUR]
      ,[OBSERVTUR]
      ,[TIENEHE]
      ,[HMAXDIANOR]
      ,[HMAXDIAHE]
      ,[HSEMANA]
      ,[HEXTRAS]
      ,[HINGRESO]
      ,[HINDESDE]
      ,[HINHASTA]
      ,[HOUTDESDE]
      ,[HOUTHASTA]
      ,[HALIMI]
      ,[HALIMS]
      ,[FECHAMOD]
      ,[HORAMOD]
      ,[GRABO]
      ,[TIENEFERIADO]
      ,[HSALIDA]
      ,[IDTURNO]
      ,[USUARIOMOD]
      ,[VISIBLE]
      ,[TIPO]
      ,[HINGRESON]
      ,[HINDESDEN]
      ,[HINHASTAN]
      ,[HSALIDAN]
      ,[HOUTDESDEN]
      ,[HOUTHASTAN]
      ,[HALIMIN]
      ,[HALIMSN]
      ,[HSAL_ULIMODIA]
      ,[FVIGENCIA]
      ,[EMPIEZANOCHEA]
      ,[EMPIEZANOCHEB]
      ,[EMPIEZA]
      ,[OST]
      ,[ID]
      ,[VALIDADO]
      ,[USRSUBE]
      ,[FECSUBE]
      ,[HORASUBE]
      ,[CERTUSUARIO]
      ,[CERTFECHA]
      ,[CERTHORA]
      ,[OBS_RECHAZO]
      ,[HSAL_ULIMONOCHE]
  FROM [dbo].[TURNOS]
  WHERE IDTURNO =@IDTURNO

END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TURNOS_SELECT_PORTURNOOST_TURNOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TURNOS_SELECT_PORTURNOOST_TURNOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TURNOS_SELECT_PORTURNOOST_TURNOS_CTTA]
( @TURNO NVARCHAR(20) = NULL
 ,@OST NVARCHAR(14) = NULL) AS 
BEGIN

	SELECT			T.EMPRESA						,T.TURNO							,T.DIATRABAJO								,T.DIADESCANSO
					,ISNULL(T.DDIURNO,0) AS DDIURNO	,ISNULL(T.DNOCHE,0) AS DNOCHE		,ISNULL(T.DDIURNO2,0) AS DDIURNO2			,ISNULL(T.DNOCHE2,0) AS DNOCHE2
					,T.FECINICIO					,T.TURDESCR							,T.DOTTURNO									,T.CLASETUR
					,T.ESTADOTUR					,T.OBSERVTUR						,T.HINGRESO									,T.USUARIOMOD
					,T.FECHAMOD						,T.HORAMOD							,T.HSALIDA									,T.IDTURNO
					,T.VISIBLE						,ISNULL(T.TIPO,0) AS TIPO			,T.HINGRESON								,T.HSALIDAN
					,T.HSAL_ULIMODIA				,T.FVIGENCIA						,ISNULL(T.EMPIEZANOCHEA,0) AS EMPIEZANOCHEA ,ISNULL(T.EMPIEZANOCHEB,0) AS EMPIEZANOCHEB
					,ISNULL(T.EMPIEZA,'') AS EMPIEZA,ISNULL(T.OST,'') AS OST			,T.ID										, A.NOMBRE
					,T.FVIGENCIA AS FECHA			,ISNULL(T.VALIDADO,'NO') AS VALIDADO 
	FROM TURNOS T 
	LEFT OUTER JOIN ARCHIVOS A ON A.ID = T.ID 
	WHERE TURNO =@TURNO AND OST =@OST
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TURNOS_SELECT_TURNOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TURNOS_SELECT_TURNOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TURNOS_SELECT_TURNOS_CTTA]
( @IDEMPRESA      NVARCHAR(11) = NULL ) AS
BEGIN
	SELECT T.IDTURNO							, T.TURNO			, T.EMPRESA				, T.DIATRABAJO
		 , T.DIADESCANSO						, T.TURDESCR		, T.OST					, ISNULL(T.ESTADOTUR,'PENDIENTE') AS ESTADOTUR 
		 , ISNULL(T.VALIDADO,'NO') AS VALIDADO	, CASE WHEN (SELECT COUNT(*) FROM CAL_TURNO WHERE TURNO = T.TURNO  AND EMPRESA = @IDEMPRESA) > 0 THEN 1 ELSE 0 END AS CALENDARIO,
		 COALESCE((
			SELECT TOP 1 TD.ID_DISPUTA
			FROM TURNOS_DISPUTA TD
			WHERE TD.IDTURNO = T.IDTURNO
			ORDER BY TD.ID_DISPUTA DESC
		 ), -1) AS DISP_IDDISPUTA,
		 COALESCE((
			SELECT TOP 1 TD.ESTADO
			FROM TURNOS_DISPUTA TD
			WHERE TD.IDTURNO = T.IDTURNO
			ORDER BY TD.ID_DISPUTA DESC
		 ), '') AS DISP_ESTADO
	FROM TURNOS T
	WHERE T.EMPRESA = @IDEMPRESA AND 
	T.VISIBLE = 'SI'  
	ORDER BY T.FECHAMOD DESC, T.HORAMOD DESC
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TURNOS_UPDATE_PORTURNOOST_TURNOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TURNOS_UPDATE_PORTURNOOST_TURNOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TURNOS_UPDATE_PORTURNOOST_TURNOS_CTTA]
( @IDTURNO int = NULL
, @EMPRESA nvarchar(10) = NULL
, @TURNO nvarchar(20) = NULL
, @LOCAL nvarchar(50) = NULL
, @DIATRABAJO int = NULL
, @DIADESCANSO int = NULL
, @DDIURNO nvarchar(10) = NULL
, @DNOCHE nvarchar(10) = NULL
, @DDIURNO2 nvarchar(10) = NULL
, @DNOCHE2 nvarchar(10) = NULL
, @FECINICIO nvarchar(8) = NULL
, @TURDESCR nvarchar(100) = NULL
, @DOTTURNO int = NULL
, @CLASETUR nvarchar(15) = NULL
, @ESTADOTUR nvarchar(10) = NULL
, @OBSERVTUR nvarchar(100) = NULL
, @TIENEHE nvarchar(2) = NULL
, @HMAXDIANOR smallmoney = NULL
, @HMAXDIAHE smallmoney = NULL
, @HSEMANA smallmoney = NULL
, @HEXTRAS smallmoney = NULL
, @HINGRESO nvarchar(8) = NULL
, @HINDESDE nvarchar(8) = NULL
, @HINHASTA nvarchar(8) = NULL
, @HOUTDESDE nvarchar(8) = NULL
, @HOUTHASTA nvarchar(8) = NULL
, @HALIMI nvarchar(8) = NULL
, @HALIMS nvarchar(8) = NULL
, @FECHAMOD nvarchar(8) = NULL
, @HORAMOD nvarchar(8) = NULL
, @GRABO nvarchar(1) = NULL
, @TIENEFERIADO nvarchar(2) = NULL
, @HSALIDA nvarchar(8) = NULL
, @USUARIOMOD nvarchar(10) = NULL
, @VISIBLE nvarchar(2) = NULL
, @TIPO nvarchar(1) = NULL
, @HINGRESON nvarchar(8) = NULL
, @HINDESDEN nvarchar(8) = NULL
, @HINHASTAN nvarchar(8) = NULL
, @HSALIDAN nvarchar(8) = NULL
, @HOUTDESDEN nvarchar(8) = NULL
, @HOUTHASTAN nvarchar(8) = NULL
, @HALIMIN nvarchar(8) = NULL
, @HALIMSN nvarchar(8) = NULL
, @HSAL_ULIMODIA nvarchar(8) = NULL
, @FVIGENCIA nvarchar(8) = NULL
, @VALIDADO nvarchar(2) = NULL
, @EMPIEZANOCHEA nvarchar(10) = NULL
, @EMPIEZANOCHEB nvarchar(10) = NULL
, @EMPIEZA nvarchar(10) = NULL
, @OST nvarchar(14) = NULL
, @ID uniqueidentifier = NULL
, @USRSUBE nvarchar(10) = NULL
, @CERTUSUARIO nvarchar(20) = NULL
, @CERTFECHA nvarchar(8) = NULL
, @CERTHORA nvarchar(8) = NULL
, @OBS_RECHAZO text = NULL
, @HSAL_ULIMONOCHE nvarchar(8) = NULL) AS 
BEGIN

UPDATE [dbo].[TURNOS]
   SET [EMPRESA] = @EMPRESA
      ,[LOCAL] = @LOCAL
      ,[DIATRABAJO] = @DIATRABAJO
      ,[DIADESCANSO] = @DIADESCANSO
      ,[DDIURNO] = @DDIURNO
      ,[DNOCHE] = @DNOCHE
      ,[DDIURNO2] = @DDIURNO2
      ,[DNOCHE2] = @DNOCHE2
      ,[FECINICIO] = @FECINICIO
      ,[TURDESCR] = @TURDESCR
      ,[DOTTURNO] = @DOTTURNO
      ,[CLASETUR] = @CLASETUR
      ,[ESTADOTUR] = @ESTADOTUR
      ,[OBSERVTUR] = @OBSERVTUR
      ,[TIENEHE] = @TIENEHE
      ,[HMAXDIANOR] = @HMAXDIANOR
      ,[HMAXDIAHE] = @HMAXDIAHE
      ,[HSEMANA] = @HSEMANA
      ,[HEXTRAS] = @HEXTRAS
      ,[HINGRESO] = @HINGRESO
      ,[HINDESDE] = @HINDESDE
      ,[HINHASTA] = @HINHASTA
      ,[HOUTDESDE] = @HOUTDESDE
      ,[HOUTHASTA] = @HOUTHASTA
      ,[HALIMI] = @HALIMI
      ,[HALIMS] = @HALIMS
      ,[FECHAMOD] = @FECHAMOD
      ,[HORAMOD] = @HORAMOD
      ,[GRABO] = @GRABO
      ,[TIENEFERIADO] = @TIENEFERIADO
      ,[HSALIDA] = @HSALIDA
      ,[USUARIOMOD] = @USUARIOMOD
      ,[VISIBLE] = 'SI'
      ,[TIPO] = @TIPO
      ,[HINGRESON] = @HINGRESON
      ,[HINDESDEN] = @HINDESDEN
      ,[HINHASTAN] = @HINHASTAN
      ,[HSALIDAN] = @HSALIDAN
      ,[HOUTDESDEN] = @HOUTDESDEN
      ,[HOUTHASTAN] = @HOUTHASTAN
      ,[HALIMIN] = @HALIMIN
      ,[HALIMSN] = @HALIMSN
      ,[HSAL_ULIMODIA] = @HSAL_ULIMODIA
      ,[FVIGENCIA] = @FVIGENCIA
      ,[EMPIEZANOCHEA] = @EMPIEZANOCHEA
      ,[EMPIEZANOCHEB] = @EMPIEZANOCHEB
      ,[EMPIEZA] = @EMPIEZA
      ,[ID] = @ID
      ,[VALIDADO] = @VALIDADO
      ,[USRSUBE] = @USRSUBE
      ,[FECSUBE] = [dbo].[hoy](GETDATE())
      ,[HORASUBE] = [dbo].[ahora](GETDATE())      
      ,[CERTUSUARIO] = @CERTUSUARIO
      ,[CERTFECHA] = @CERTFECHA
      ,[CERTHORA] = @CERTHORA
      ,[OBS_RECHAZO] = @OBS_RECHAZO
      ,[HSAL_ULIMONOCHE] = @HSAL_ULIMONOCHE
 WHERE TURNO=@TURNO AND OST=@OST

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TURNOS_UPDATE_TURNOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TURNOS_UPDATE_TURNOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TURNOS_UPDATE_TURNOS_CTTA]
( @IDTURNO int = NULL
, @EMPRESA nvarchar(10) = NULL
, @TURNO nvarchar(20) = NULL
, @LOCAL nvarchar(50) = NULL
, @DIATRABAJO int = NULL
, @DIADESCANSO int = NULL
, @DDIURNO nvarchar(10) = NULL
, @DNOCHE nvarchar(10) = NULL
, @DDIURNO2 nvarchar(10) = NULL
, @DNOCHE2 nvarchar(10) = NULL
, @FECINICIO nvarchar(8) = NULL
, @TURDESCR nvarchar(100) = NULL
, @DOTTURNO int = NULL
, @CLASETUR nvarchar(15) = NULL
, @ESTADOTUR nvarchar(10) = NULL
, @OBSERVTUR nvarchar(100) = NULL
, @TIENEHE nvarchar(2) = NULL
, @HMAXDIANOR smallmoney = NULL
, @HMAXDIAHE smallmoney = NULL
, @HSEMANA smallmoney = NULL
, @HEXTRAS smallmoney = NULL
, @HINGRESO nvarchar(8) = NULL
, @HINDESDE nvarchar(8) = NULL
, @HINHASTA nvarchar(8) = NULL
, @HOUTDESDE nvarchar(8) = NULL
, @HOUTHASTA nvarchar(8) = NULL
, @HALIMI nvarchar(8) = NULL
, @HALIMS nvarchar(8) = NULL
, @FECHAMOD nvarchar(8) = NULL
, @HORAMOD nvarchar(8) = NULL
, @GRABO nvarchar(1) = NULL
, @TIENEFERIADO nvarchar(2) = NULL
, @HSALIDA nvarchar(8) = NULL
, @USUARIOMOD nvarchar(10) = NULL
, @VISIBLE nvarchar(2) = NULL
, @TIPO nvarchar(1) = NULL
, @HINGRESON nvarchar(8) = NULL
, @HINDESDEN nvarchar(8) = NULL
, @HINHASTAN nvarchar(8) = NULL
, @HSALIDAN nvarchar(8) = NULL
, @HOUTDESDEN nvarchar(8) = NULL
, @HOUTHASTAN nvarchar(8) = NULL
, @HALIMIN nvarchar(8) = NULL
, @HALIMSN nvarchar(8) = NULL
, @HSAL_ULIMODIA nvarchar(8) = NULL
, @FVIGENCIA nvarchar(8) = NULL
, @VALIDADO nvarchar(2) = NULL
, @EMPIEZANOCHEA nvarchar(10) = NULL
, @EMPIEZANOCHEB nvarchar(10) = NULL
, @EMPIEZA nvarchar(10) = NULL
, @OST nvarchar(14) = NULL
, @ID uniqueidentifier = NULL
, @USRSUBE nvarchar(10) = NULL
, @CERTUSUARIO nvarchar(20) = NULL
, @CERTFECHA nvarchar(8) = NULL
, @CERTHORA nvarchar(8) = NULL
, @OBS_RECHAZO text = NULL
, @HSAL_ULIMONOCHE nvarchar(8) = NULL) AS 
BEGIN

UPDATE [dbo].[TURNOS]
   SET [EMPRESA] = @EMPRESA
      ,[TURNO] = @TURNO
      ,[LOCAL] = @LOCAL
      ,[DIATRABAJO] = @DIATRABAJO
      ,[DIADESCANSO] = @DIADESCANSO
      ,[DDIURNO] = @DDIURNO
      ,[DNOCHE] = @DNOCHE
      ,[DDIURNO2] = @DDIURNO2
      ,[DNOCHE2] = @DNOCHE2
      ,[FECINICIO] = @FECINICIO
      ,[TURDESCR] = @TURDESCR
      ,[DOTTURNO] = @DOTTURNO
      ,[CLASETUR] = @CLASETUR
      ,[ESTADOTUR] = @ESTADOTUR
      ,[OBSERVTUR] = @OBSERVTUR
      ,[TIENEHE] = @TIENEHE
      ,[HMAXDIANOR] = @HMAXDIANOR
      ,[HMAXDIAHE] = @HMAXDIAHE
      ,[HSEMANA] = @HSEMANA
      ,[HEXTRAS] = @HEXTRAS
      ,[HINGRESO] = @HINGRESO
      ,[HINDESDE] = @HINDESDE
      ,[HINHASTA] = @HINHASTA
      ,[HOUTDESDE] = @HOUTDESDE
      ,[HOUTHASTA] = @HOUTHASTA
      ,[HALIMI] = @HALIMI
      ,[HALIMS] = @HALIMS
      ,[FECHAMOD] = @FECHAMOD
      ,[HORAMOD] = @HORAMOD
      ,[GRABO] = @GRABO
      ,[TIENEFERIADO] = @TIENEFERIADO
      ,[HSALIDA] = @HSALIDA
      ,[USUARIOMOD] = @USUARIOMOD
      ,[VISIBLE] = @VISIBLE
      ,[TIPO] = @TIPO
      ,[HINGRESON] = @HINGRESON
      ,[HINDESDEN] = @HINDESDEN
      ,[HINHASTAN] = @HINHASTAN
      ,[HSALIDAN] = @HSALIDAN
      ,[HOUTDESDEN] = @HOUTDESDEN
      ,[HOUTHASTAN] = @HOUTHASTAN
      ,[HALIMIN] = @HALIMIN
      ,[HALIMSN] = @HALIMSN
      ,[HSAL_ULIMODIA] = @HSAL_ULIMODIA
      ,[FVIGENCIA] = @FVIGENCIA
      ,[EMPIEZANOCHEA] = @EMPIEZANOCHEA
      ,[EMPIEZANOCHEB] = @EMPIEZANOCHEB
      ,[EMPIEZA] = @EMPIEZA
      ,[OST] = @OST
      ,[ID] = @ID
      ,[VALIDADO] = @VALIDADO
      ,[USRSUBE] = @USRSUBE
      ,[FECSUBE] = [dbo].[hoy](GETDATE())
      ,[HORASUBE] = [dbo].[ahora](GETDATE())      
      ,[CERTUSUARIO] = @CERTUSUARIO
      ,[CERTFECHA] = @CERTFECHA
      ,[CERTHORA] = @CERTHORA
      ,[OBS_RECHAZO] = @OBS_RECHAZO
      ,[HSAL_ULIMONOCHE] = @HSAL_ULIMONOCHE
 WHERE IDTURNO=@IDTURNO

END
/****** Object:  StoredProcedure [dbo].[V4MVC_OSTARBOL_SELECT_POREMPRESA_TURNOS_CTTA]    Script Date: 1/11/2020 16:22:26 ******/
SET ANSI_NULLS ON
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TYPETRANS_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TYPETRANS_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TYPETRANS_SELECT]
AS
BEGIN

   SELECT
		IDTIPO,
		DSCTIPOV,
		DURACION,
		TIPOV,
		LICENCIAS,
		FECHAMOD,
		HORAMOD,
		IDSYNC
   FROM TYPETRANS
   ORDER BY DSCTIPOV ASC

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TYPETRANS_SELECT_COMBO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TYPETRANS_SELECT_COMBO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TYPETRANS_SELECT_COMBO]                
AS                
BEGIN            
  SELECT IDTIPO, DSCTIPOV FROM TYPETRANS T WHERE IDTIPO>0     
END 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TYPETRANS_SELECT_INFORMES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TYPETRANS_SELECT_INFORMES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TYPETRANS_SELECT_INFORMES_CTTA]
AS
BEGIN
	SELECT
		IDTIPO,
		DSCTIPOV
	FROM TYPETRANS
	ORDER BY DSCTIPOV

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_TYPETRANS_SELECT_ONE_INFORMES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_TYPETRANS_SELECT_ONE_INFORMES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_TYPETRANS_SELECT_ONE_INFORMES_CTTA]
(
 @IDTIPO INT
) AS
BEGIN
	SELECT
		TOP 1
		IDTIPO,
		DSCTIPOV
	FROM TYPETRANS
	WHERE IDTIPO = @IDTIPO

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_UPDATE_COLABUSUARIO_CAMBIOCLAVE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_UPDATE_COLABUSUARIO_CAMBIOCLAVE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_UPDATE_COLABUSUARIO_CAMBIOCLAVE]  
( @IDEMPRESA NVARCHAR(10) 
, @RUT NVARCHAR(10)
, @NEWPASSWORD NVARCHAR(10)  
)  
AS  
BEGIN  
  
	UPDATE COLAB_USUARIO   
	SET Clave = SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('SHA1', convert(nvarchar(50),@NEWPASSWORD))), 3, 32)
		, FechaVence			= DBO.HOY(GETDATE())
		, Fecha_Modificacion	= DBO.HOY(GETDATE())
	WHERE idempresa	= @IDEMPRESA 
      and rut		= @RUT
  
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_VIDEOS_SELECT_ONE_VIDEOS_MDTE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_VIDEOS_SELECT_ONE_VIDEOS_MDTE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_VIDEOS_SELECT_ONE_VIDEOS_MDTE]
(
  @ID_VIDEO  NVARCHAR(18)
)
AS
BEGIN
	SELECT
		TOP 1
		V.ID,
		V.MODULO_V4 AS MODULO_V4,
		V.DESCRIPCION AS DESCRIPCION,
		V.VERSION AS VERSION,
		V.PRIVADO AS PRIVADO,
		V.USUARIO AS USUARIO,
		COALESCE((SELECT TOP 1 CONCAT(W.NOMBRES, ' ', W.APELLIDOS) FROM WORKERS W WHERE W.RUT = V.USUARIO), '') AS USUARIO_NOMBRES,
		COALESCE((SELECT TOP 1 L.LINK FROM LINKS_VIDEOS_V4 L WHERE L.ID_VIDEO = CONVERT(INT, V.ID)), '') AS VISTA_LINK
	FROM VIDEOS V
	WHERE V.ID = CONVERT(NUMERIC(18,0), @ID_VIDEO)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_VIDEOS_SELECT_ONE_VISORVIDEO]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_VIDEOS_SELECT_ONE_VISORVIDEO]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_VIDEOS_SELECT_ONE_VISORVIDEO]
(
  @ID_VIDEO  NVARCHAR(18)
)
AS
BEGIN
	SELECT
		TOP 1
		V.ARCHIVO AS ARCHIVO,
		V.TIPO_CONTENIDO AS TIPO_CONTENIDO,
		V.NOMBRE_ARCHIVO AS NOMBRE_ARCHIVO
	FROM VIDEOS V
	WHERE V.ID = CONVERT(NUMERIC(18,0), @ID_VIDEO)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_VIDEOS_SELECT_VIDEOS_MDTE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_VIDEOS_SELECT_VIDEOS_MDTE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_VIDEOS_SELECT_VIDEOS_MDTE]
AS
BEGIN
	SELECT
		V.ID AS ID,
		M.MODULO AS MODULO,
		V.VERSION AS VERSION,
		V.DESCRIPCION AS DESCRIPCION,
		V.ACTIVO AS ACTIVO
	FROM VIDEOS V
	LEFT JOIN LINKS_VIDEOS_V4 L
		ON V.ID = CONVERT(NUMERIC(18,0), L.ID_VIDEO)
	LEFT JOIN MODULOS_VIDEOS_V4 M
		ON V.MODULO_V4 = M.ID
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_VIDEOS_UPSERT_VIDEOS_MDTE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_VIDEOS_UPSERT_VIDEOS_MDTE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_VIDEOS_UPSERT_VIDEOS_MDTE]
(
	@STR_ID				NVARCHAR(18) = NULL OUTPUT
   ,@NOMBRE_ARCHIVO		NVARCHAR(100)
   ,@TIPO_CONTENIDO		NVARCHAR(100)
   ,@USUARIO			NVARCHAR(10) 	
   ,@ARCHIVO			IMAGE
   ,@MODULO_V4			INT = NULL
   ,@VISTA_LINK			NVARCHAR(200)
   ,@VERSION			NVARCHAR(20)
   ,@DESCRIPCION		NVARCHAR(100)
   ,@PRIVADO			NVARCHAR(2)
) AS
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	IF(NOT EXISTS(SELECT TOP 1 * FROM VIDEOS WHERE ID = CONVERT(NUMERIC(18,0), @STR_ID)))
		BEGIN
			INSERT INTO VIDEOS
					(
					 MODULO_V4,
					 VERSION,
					 DESCRIPCION,
					 ARCHIVO,
					 FECHA_MOD,
					 HORA_MOD,
					 USUARIO,
					 PRIVADO,
					 NOMBRE_ARCHIVO,
					 TIPO_CONTENIDO
					)
			VALUES (
			         @MODULO_V4,
					 @VERSION,
					 @DESCRIPCION,
					 @ARCHIVO,
					 @CURR_FECHA,
					 @CURR_TIEMPOFULL,
					 @USUARIO,
					 @PRIVADO,
					 @NOMBRE_ARCHIVO,
					 @TIPO_CONTENIDO
					)
			SET @STR_ID	= CONVERT(NVARCHAR(18), SCOPE_IDENTITY())
		END
	ELSE
		BEGIN
			UPDATE VIDEOS
			SET
				MODULO_V4 = @MODULO_V4,
				VERSION = @VERSION,
				DESCRIPCION = @DESCRIPCION,
				FECHA_MOD = @CURR_FECHA,
				HORA_MOD = @CURR_TIEMPOFULL,
				USUARIO = @USUARIO,
				PRIVADO = @PRIVADO,
				NOMBRE_ARCHIVO = @NOMBRE_ARCHIVO,
				TIPO_CONTENIDO = @TIPO_CONTENIDO
			WHERE ID = CONVERT(NUMERIC(18,0), @STR_ID)
		END

	
	IF(NOT EXISTS(SELECT TOP 1 * FROM LINKS_VIDEOS_V4 WHERE ID_VIDEO = CONVERT(INT, @STR_ID)))
		BEGIN
			INSERT INTO LINKS_VIDEOS_V4(LINK, ID_VIDEO) VALUES(@VISTA_LINK, CONVERT(INT, @STR_ID))
		END
	ELSE
		BEGIN
			UPDATE LINKS_VIDEOS_V4
			SET
				LINK = @VISTA_LINK
			WHERE ID_VIDEO = CONVERT(INT, @STR_ID)
		END

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WC_INFORMES_CERTIFICACION_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WC_INFORMES_CERTIFICACION_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WC_INFORMES_CERTIFICACION_SELECT]
AS
BEGIN

SELECT COD_INFCER,DESC_INFCER FROM WC_INFORMES_CERTIFICACION

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WC_SUBMENU_SELECT_MENU]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WC_SUBMENU_SELECT_MENU]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WC_SUBMENU_SELECT_MENU]
( @ADMTIPO	nvarchar(8) = NULL
, @ADMLUGAR nvarchar(15) = NULL) AS
BEGIN

   SELECT WC_SUBMENU.CODMENU,WC_SUBMENU.LINK, WC_SUBMENU.LINKV4 AS LinkV4, WC_SUBMENU.ICONO, WC_SUBMENU.DESCRIPCION    FROM WC_PERFIL , WC_SUBMENU  
	WHERE ( (WC_PERFIL.ADMTIPO = @ADMTIPO)   AND   (ADMLUGAR = @ADMLUGAR)    
	AND     (WC_SUBMENU.ACTIVO = 'SI') 
	AND (WC_PERFIL.CODMENU = WC_SUBMENU.CODMENU) AND (WC_PERFIL.CODSUBMENU = WC_SUBMENU.CODSUBMENU) )  
	UNION  
	SELECT WC_SUBMENU.CODMENU,WC_SUBMENU.LINK,WC_SUBMENU.LINKV4 AS LinkV4, WC_SUBMENU.ICONO, WC_SUBMENU.DESCRIPCION FROM WC_SUBMENU  
	WHERE 
	((WC_SUBMENU.PERMISO = 'TODOS') 
	AND  (WC_SUBMENU.ACTIVO = 'SI')) ORDER BY 3

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WC3_VISTA_CLABORAL_DC_SELECT_ONE_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WC3_VISTA_CLABORAL_DC_SELECT_ONE_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WC3_VISTA_CLABORAL_DC_SELECT_ONE_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@EMPRESA		NVARCHAR(10)
) AS
BEGIN
	SELECT
		EMPRESA,
		PERIODO,
		COUNT(TIPO) AS CANT
	FROM WC3_VISTA_CLABORAL_DC
	WHERE
		TIPO IN ('F30','F301') AND
		PERIODO = @PERIODO AND
		EMPRESA = @EMPRESA
	GROUP BY EMPRESA, PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WC3_VISTA_CLABORAL_DC_SELECT_ONE_V2_CONTROLLABORAL_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WC3_VISTA_CLABORAL_DC_SELECT_ONE_V2_CONTROLLABORAL_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WC3_VISTA_CLABORAL_DC_SELECT_ONE_V2_CONTROLLABORAL_CTTA]
(
  @PERIODO		NVARCHAR(6)
 ,@EMPRESA		NVARCHAR(10)
) AS
BEGIN
	SELECT
		EMPRESA,
		PERIODO,
		COUNT(TIPO) AS CANT
	FROM WC3_VISTA_CLABORAL_DC
	WHERE
		PERIODO = @PERIODO AND
		EMPRESA = @EMPRESA
	GROUP BY EMPRESA, PERIODO
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WCMENU_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WCMENU_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WCMENU_SELECT] AS
BEGIN

	SELECT CODMENU , DESCMENU
    FROM WC_MENU
	ORDER BY WC_MENU.CODMENU

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_BUSESRESERVA_SELECT_DATATABLES]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_BUSESRESERVA_SELECT_DATATABLES]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_BUSESRESERVA_SELECT_DATATABLES]                
(             
@IDISPLAYSTART INT,              
@IDISPLAYLENGTH INT,              
@SEARCH_RUT NVARCHAR(10) = NULL,        
@SEARCH_NOMBRES NVARCHAR(50) = NULL,        
@SEARCH_APELLIDOS NVARCHAR(50) = NULL,     
@SEARCH_EMPRESA NVARCHAR(50) = NULL,
@SEARCH_OST NVARCHAR(14) = NULL,
@SEARCH_IDEMPRESA NVARCHAR(10) = NULL,
@SORT_COLUMN NVARCHAR(4) = NULL,        
@SORT_DIRECTION NVARCHAR(4) = NULL        
) AS                
BEGIN            
	DECLARE @QUERY NVARCHAR(MAX)
	SET @QUERY  = 'SELECT DISTINCT W.RUT,W.NOMBRES,W.APELLIDOS,E.ACRONIMO AS EMPRESA,WL.OST AS OST,W.RUT+''-''+WL.OST AS SELECTED, COUNT(W.RUT) OVER() COUNT_WORKERS                           
	FROM WORKERS AS W
	INNER JOIN WORKERSLOCAL AS WL ON WL.RUT = W.RUT
	INNER JOIN ENTERPRISE AS E ON E.IDEMPRESA = WL.EMPRESA WHERE WL.AUTOR = ''SI'' 
    AND WL.VALIDADO = ''SI'' 
	AND WL.EMPRESA = '''+@SEARCH_IDEMPRESA+'''
	AND ((CONVERT(VARCHAR(8),GETDATE(),112) BETWEEN WL.FINIPASE AND WL.FFINPASE) OR (WL.FINIPASE BETWEEN CONVERT(VARCHAR(8),GETDATE(),112) AND CONVERT(VARCHAR(8), DATEADD(d,45,GETDATE()),112))) '

	IF @SEARCH_RUT IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.RUT LIKE ' + '''%' + @SEARCH_RUT + '%''' END
	IF @SEARCH_NOMBRES IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.NOMBRES LIKE ' + '''%' + @SEARCH_NOMBRES + '%''' END
	IF @SEARCH_APELLIDOS IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.APELLIDOS LIKE ' + '''%' + @SEARCH_APELLIDOS + '%''' END
	IF @SEARCH_EMPRESA IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND E.ACRONIMO LIKE ' + '''%' + @SEARCH_EMPRESA + '%''' END
	IF @SEARCH_OST IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.OST LIKE ' + '''%' + @SEARCH_OST + '%''' END

	    
   IF @SORT_COLUMN='0' BEGIN SET @QUERY = @QUERY + ' ORDER BY RUT ' +  @SORT_DIRECTION END   
   IF @SORT_COLUMN='1' BEGIN SET @QUERY = @QUERY + ' ORDER BY NOMBRES ' + @SORT_DIRECTION END   
   IF @SORT_COLUMN='2' BEGIN SET @QUERY = @QUERY + ' ORDER BY APELLIDOS '  + @SORT_DIRECTION END 
   IF @SORT_COLUMN='3' BEGIN SET @QUERY = @QUERY + ' ORDER BY ACRONIMO ' + @SORT_DIRECTION END
   IF @SORT_COLUMN='4' BEGIN SET @QUERY = @QUERY + ' ORDER BY OST ' + @SORT_DIRECTION END

   SET @QUERY = @QUERY + ' OFFSET ' + CAST(@IDISPLAYSTART AS VARCHAR) + ' ROWS FETCH NEXT ' + CAST(@IDISPLAYLENGTH AS VARCHAR) + ' ROWS ONLY'

	--PRINT(@QUERY)
	EXEC(@QUERY)
  
END   
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_COUNT_BUSCADORCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_COUNT_BUSCADORCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_COUNT_BUSCADORCTTA]      
(      
@SEARCH_RUT			NVARCHAR(10) = NULL,  
@SEARCH_NOMBRES		NVARCHAR(50) = NULL,  
@SEARCH_APELLIDOS	NVARCHAR(50) = NULL,
@SEARCH_EMPRESA		NVARCHAR(50) = NULL,
@IDEMPRESA			NVARCHAR(11) = NULL
)      
AS      
BEGIN      
     
	 DECLARE @QUERY NVARCHAR(MAX)
	SET @QUERY  = 'SELECT COUNT(DISTINCT W.RUT) AS COUNT_WORKERS                             
	FROM WORKERS AS W
	INNER JOIN WORKERSLOCAL AS WL ON WL.RUT = W.RUT
	INNER JOIN ENTERPRISE AS E ON E.IDEMPRESA = WL.EMPRESA 
	WHERE (WL.AUTOR IN (''SI'',''NO'') OR WL.AUTOR IS NULL) 
		  AND WL.EMPRESA =''' + @IDEMPRESA + ''''
	IF @SEARCH_RUT IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.RUT LIKE ' + '''%' + @SEARCH_RUT + '%''' END
	IF @SEARCH_NOMBRES IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.NOMBRES LIKE ' + '''%' + @SEARCH_NOMBRES + '%''' END
	IF @SEARCH_APELLIDOS IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.APELLIDOS LIKE ' + '''%' + @SEARCH_APELLIDOS + '%''' END
	IF @SEARCH_EMPRESA IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND E.ACRONIMO LIKE ' + '''%' + @SEARCH_EMPRESA + '%''' END
	PRINT (@QUERY)
	EXEC(@QUERY)

   
END IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_DATATABLES_ENTERPRISE_COUNT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_DATATABLES_ENTERPRISE_COUNT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_DATATABLES_ENTERPRISE_COUNT_CTTA]      
(      
@IDEMPRESA		NVARCHAR(10) = NULL,
@RUT			NVARCHAR(10) = NULL,  
@NOMBRES		NVARCHAR(50) = NULL,  
@APELLIDOS		NVARCHAR(50) = NULL
)      
AS      
BEGIN      
     
	 DECLARE @QUERY NVARCHAR(MAX)
	SET @QUERY  = 'SELECT COUNT(DISTINCT W.RUT) AS COUNT_WORKERS
	FROM WORKERS W
	INNER JOIN WORKERSLOCAL WL ON WL.RUT = W.RUT
	INNER JOIN ENTERPRISE E ON E.IDEMPRESA = WL.EMPRESA 
	WHERE WL.EMPRESA = ''' + @IDEMPRESA +''' AND (WL.AUTOR IN (''SI'',''NO'') OR WL.AUTOR IS NULL)'

	IF @RUT IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.RUT LIKE ' + '''%' + @RUT + '%''' END
	IF @NOMBRES IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.NOMBRES LIKE ' + '''%' + @NOMBRES + '%''' END
	IF @APELLIDOS IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.APELLIDOS LIKE ' + '''%' + @APELLIDOS + '%''' END
	EXEC(@QUERY)
     
END  
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_DATATABLES_ENTERPRISE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_DATATABLES_ENTERPRISE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_DATATABLES_ENTERPRISE_CTTA]                
(             
@IDEMPRESA			NVARCHAR(10)	= NULL,
@IDISPLAYSTART		INT				= NULL,              
@IDISPLAYLENGTH		INT				= NULL,              
@SEARCH_RUT			NVARCHAR(10)	= NULL,        
@SEARCH_NOMBRES		NVARCHAR(50)	= NULL,        
@SEARCH_APELLIDOS	NVARCHAR(50)	= NULL,     
@SORT_COLUMN		NVARCHAR(4)		= NULL,        
@SORT_DIRECTION		NVARCHAR(4)		= NULL        
) AS                
BEGIN            

	DECLARE @QUERY NVARCHAR(MAX)
	SET @QUERY  = 'SELECT DISTINCT W.RUT, W.NOMBRES, W.APELLIDOS, WL.EMPRESA, E.ACRONIMO              
	FROM WORKERS W
	INNER JOIN WORKERSLOCAL WL ON WL.RUT = W.RUT
	INNER JOIN ENTERPRISE E ON E.IDEMPRESA = WL.EMPRESA 
	WHERE WL.EMPRESA = ''' + @IDEMPRESA +''' AND (WL.AUTOR IN (''SI'',''NO'') OR WL.AUTOR IS NULL)'
	
	IF @SEARCH_RUT IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.RUT LIKE ' + '''%' + @SEARCH_RUT + '%''' END
	IF @SEARCH_NOMBRES IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.NOMBRES LIKE ' + '''%' + @SEARCH_NOMBRES + '%''' END
	IF @SEARCH_APELLIDOS IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.APELLIDOS LIKE ' + '''%' + @SEARCH_APELLIDOS + '%''' END
	
	     
	IF @SORT_COLUMN='0' BEGIN SET @QUERY = @QUERY + ' ORDER BY W.NOMBRES, W.APELLIDOS ' +  @SORT_DIRECTION END   
	IF @SORT_COLUMN='1' BEGIN SET @QUERY = @QUERY + ' ORDER BY NOMBRES ' + @SORT_DIRECTION END   
	IF @SORT_COLUMN='2' BEGIN SET @QUERY = @QUERY + ' ORDER BY APELLIDOS '  + @SORT_DIRECTION END 
	
	SET @QUERY = @QUERY + ' OFFSET ' + CAST(@IDISPLAYSTART AS VARCHAR) + ' ROWS FETCH NEXT ' + CAST(@IDISPLAYLENGTH AS VARCHAR) + ' ROWS ONLY'

	EXEC(@QUERY)
	--PRINT(@QUERY)

END   


--EXEC V4MVC_WORKERS_DATATABLES_ENTERPRISE_CTTA '761264907',10,10,NULL,NULL,NULL,0,'ASC'


--SELECT DISTINCT W.RUT, W.NOMBRES, W.APELLIDOS, WL.EMPRESA, E.ACRONIMO              
--	FROM WORKERS W
--	INNER JOIN WORKERSLOCAL WL ON WL.RUT = W.RUT
--	INNER JOIN ENTERPRISE E ON E.IDEMPRESA = WL.EMPRESA 
--	WHERE WL.EMPRESA = '761264907' 
--	AND (WL.AUTOR IN ('SI','NO') OR WL.AUTOR IS NULL) 
--	ORDER BY W.NOMBRES, W.APELLIDOS ASC 
--	OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_ENTERPRISE_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_ENTERPRISE_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_ENTERPRISE_CTTA]
(
 @IDEMPRESA NVARCHAR(10)
)
AS
BEGIN

	SELECT DISTINCT W.RUT, W.NOMBRES, W.APELLIDOS, WL.EMPRESA, E.ACRONIMO 
	FROM WORKERS W 
	INNER JOIN WORKERSLOCAL WL ON WL.RUT = W.RUT 
	INNER JOIN ENTERPRISE E ON E.IDEMPRESA = WL.EMPRESA 
	WHERE WL.EMPRESA = @IDEMPRESA AND (WL.AUTOR IN ('SI','NO') OR WL.AUTOR IS NULL)
	ORDER BY W.APELLIDOS ASC, W.NOMBRES ASC

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_EXISTENOMINA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_EXISTENOMINA_CTTA]\nGO\n
CREATE PROCEDURE [dbo].[V4MVC_WORKERS_EXISTENOMINA_CTTA]
( @RUT	NVARCHAR(10) = NULL )
AS
BEGIN

	SELECT TOP 1 WL.RUT, W.NOMBRES, W.APELLIDOS, WL.EMPRESA
			   , E.ACRONIMO, WL.FINIPASE, WL.FFINPASE 
	FROM WORKERSLOCAL WL 
	INNER JOIN WORKERS W ON WL.RUT = W.RUT
	INNER JOIN ENTERPRISE E ON WL.EMPRESA = E.IDEMPRESA
	WHERE WL.RUT = @RUT
	AND WL.FFINPASE >= DBO.HOY(GETDATE())
	AND WL.AUTOR <> 'BL'
	AND WL.EMPRESA NOT IN ('999999999')
	ORDER BY WL.LOTE DESC 
	
ENDIF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_INSERT_APROBACION_SUBCONTRATOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_INSERT_APROBACION_SUBCONTRATOS_CTTA]\nGO\nCREATE  PROCEDURE [dbo].[V4MVC_WORKERS_INSERT_APROBACION_SUBCONTRATOS_CTTA]  
(  
 @RUT			NVARCHAR(10) = NULL 
,@NOMBRES		NVARCHAR(50) = NULL 
,@APELLIDOS		NVARCHAR(50) = NULL 
,@EMAIL			NVARCHAR(100)= NULL  
,@CELULAR		NVARCHAR(20) = NULL
,@EMPRESA		NVARCHAR(20) = NULL
)  
AS  
BEGIN  

DECLARE @EXISTE INT

	SELECT @EXISTE= count(1) FROM WORKERS 
	WHERE RUT = @RUT 

	IF  (@EXISTE = 0) 
	BEGIN
		INSERT INTO WORKERS (RUT ,NOMBRES ,APELLIDOS  ,EMAIL)   
		VALUES    (@RUT ,@NOMBRES ,@APELLIDOS  ,@EMAIL)
		;

		INSERT INTO DIRECCION (RUT,CELULAR)
		VALUES(@RUT,@CELULAR)
	END
	ELSE
	BEGIN
		UPDATE WORKERS
		SET  NOMBRES= @NOMBRES
		,APELLIDOS= @APELLIDOS
		,EMPRESA = @EMPRESA
		,AUTOR = 'NO'
		,EMAIL = @EMAIL
		WHERE RUT = @RUT

		UPDATE DIRECCION
		SET CELULAR = @CELULAR
		WHERE RUT = @RUT 
	END
END  
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_INSERT_CURSOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_INSERT_CURSOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_INSERT_CURSOS_CTTA]
(
 @RUT			NVARCHAR(10)
,@NOMBRES		NVARCHAR(50)
,@APELLIDOS		NVARCHAR(50)
,@EMPRESA		NVARCHAR(10)
)
AS
BEGIN

	INSERT INTO WORKERS (RUT	,NOMBRES	,APELLIDOS		,EMPRESA) 
	VALUES				(@RUT	,@NOMBRES	,@APELLIDOS		,@EMPRESA)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_INSERT_NEWENTERPRISECTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_INSERT_NEWENTERPRISECTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_INSERT_NEWENTERPRISECTTA]
(
 @RUT NVARCHAR(10)
,@EMPRESA NVARCHAR(10)
,@NOMBRES NVARCHAR(50)
,@APELLIDOS NVARCHAR(50)
)
AS
BEGIN

	INSERT INTO [WORKERS]
	(
		 RUT	,EMPRESA	,NOMBRES	,APELLIDOS	
	)
	VALUES
	(
		@RUT	,@EMPRESA	,@NOMBRES	,@APELLIDOS
	)
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_INSERT_PERSONALES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_INSERT_PERSONALES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_INSERT_PERSONALES_CTTA]
( @RUT                nvarchar(10) = NULL
, @NOMBRES            nvarchar(50) = NULL
, @APELLIDOS          nvarchar(50) = NULL
, @FECHNACIM          nvarchar(8) = NULL
, @EMPRESA            nvarchar(10) = NULL
, @SEXO               nvarchar(10) = NULL
, @EMAIL              nvarchar(50) = NULL ) AS 
BEGIN

   INSERT INTO [WORKERS]
        ( RUT			  , NOMBRES           , APELLIDOS     , FECHNACIM      
		, EMPRESA         , SEXO			  , EMAIL          )
   VALUES
        ( @RUT			  , @NOMBRES          , @APELLIDOS    , @FECHNACIM      
		, @EMPRESA        , @SEXO			  , @EMAIL  )


END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_LICENCIAS_UPDATE_CONDUCTORES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_LICENCIAS_UPDATE_CONDUCTORES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_LICENCIAS_UPDATE_CONDUCTORES_CTTA]
(@RUT			NVARCHAR(10)
,@LICENCIAS		NVARCHAR(200))AS
BEGIN
	DELETE FROM WORKERS_LICENCIAS WHERE (RUT = @RUT)
	
	SET @LICENCIAS = @LICENCIAS  + ','
	DECLARE @POSICION INT = 0
	DECLARE @LONGITUD INT = 0
	DECLARE @LICENCIA nvarchar(10)

	WHILE CHARINDEX(',', @LICENCIAS, @POSICION + 1 )>0
	BEGIN
		SET @LONGITUD = CHARINDEX(',', @LICENCIAS, @POSICION + 1 ) - @POSICION
		SET @LICENCIA = SUBSTRING(@LICENCIAS, @POSICION, @LONGITUD)
           
		INSERT INTO WORKERS_LICENCIAS (RUT, LICENCIAS) VALUES (@RUT,@LICENCIA)

		SET @POSICION = CHARINDEX(',', @LICENCIAS, @POSICION + @LONGITUD) +1
	END

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_LIST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_LIST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_LIST_CTTA]
( @IDEMPRESA               nvarchar(10) = NULL ) AS
BEGIN
	DECLARE @HOY NVARCHAR(8)
	SET @HOY = dbo.hoy(GETDATE()) 
   SELECT RUT, NOMBRES, APELLIDOS
		, STUFF((    SELECT ',' + DP.DIVISION
                        FROM (SELECT DISTINCT W.DIVISION FROM WORKERSLOCAL AS W 
							, ENTERPRISE AS E
							WHERE  (W.AUTOR <> 'BL') 
							AND (W.RUT = WORKERS.RUT) 
							AND  (@HOY BETWEEN W.FINIPASE AND W.FFINPASE) 
							) AS DP
						ORDER BY DP.DIVISION
                        FOR XML PATH('')
                        ), 1, 1, '' ) AS DIVISIONES
		, STUFF((    SELECT ',' + EP.ACRONIMO
                        FROM (SELECT DISTINCT E.ACRONIMO FROM WORKERSLOCAL AS W 
						, ENTERPRISE AS E
                        WHERE  (W.AUTOR <> 'BL') 
						AND (W.RUT = WORKERS.RUT) 
						AND  (@HOY BETWEEN W.FINIPASE AND W.FFINPASE) 
						AND (W.EMPRESA = E.IDEMPRESA) ) AS EP
						ORDER BY EP.ACRONIMO
                        FOR XML PATH('')
                        ), 1, 1, '' ) AS EMPRESAS
    FROM WORKERS 
    WHERE (RUT IN (SELECT DISTINCT W.RUT 
					FROM WORKERSLOCAL as W 
					WHERE W.FFINPASE > @HOY AND
					 (W.AUTOR <> 'BL') 
					AND (W.EMPRESA IN (SELECT O.EMPRESA 
										FROM OSTARBOL O 
										INNER JOIN OST ON OST.NROOST = O.OST 
										WHERE (O.MADRE = @IDEMPRESA OR O.EMPRESA = @IDEMPRESA))) 
					--AND (W.OST IN (SELECT O.OST 
									--FROM OSTARBOL O 
									--INNER JOIN OST ON OST.NROOST = O.OST 
									--WHERE (O.MADRE = @IDEMPRESA OR O.EMPRESA = @IDEMPRESA)) OR ISNULL(W.OST,'NOMINA') = 'NOMINA') 
					)) ORDER BY RUT ASC

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_MOTIVOFINIQUITO_INSERT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_MOTIVOFINIQUITO_INSERT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_MOTIVOFINIQUITO_INSERT]
( @RUT            nvarchar(10) = NULL
, @EMPRESA        nvarchar(10) = NULL
, @ID_DOC         int = NULL
, @IDARCHIVO      uniqueidentifier = NULL
, @MOTIVO         nvarchar(20) = NULL
, @USRREGISTRA    nvarchar(20) = NULL
, @FECHAREGISTRA  nvarchar(8) = NULL
, @HORAREGISTRA   nvarchar(8) = NULL
, @USRMOD         nvarchar(20) = NULL
, @FECHAMOD       nvarchar(8) = NULL
, @HORAMOD        nvarchar(8) = NULL ) AS 
BEGIN

   INSERT INTO [WORKERS_MOTIVOFINIQUITO]
        ( RUT    , EMPRESA     , ID_DOC        , IDARCHIVO   
        , MOTIVO , USRREGISTRA , FECHAREGISTRA , HORAREGISTRA
        , USRMOD , FECHAMOD    , HORAMOD       )
   VALUES
        ( @RUT    , @EMPRESA     , @ID_DOC				, @IDARCHIVO   
        , @MOTIVO , @USRREGISTRA , DBO.HOY(GETDATE())	, DBO.AHORA(GETDATE())
        , @USRMOD , DBO.HOY(GETDATE()) , DBO.AHORA(GETDATE()))

END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_MOTIVOFINIQUITO_INSERT_FUNCIONARIOS_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_MOTIVOFINIQUITO_INSERT_FUNCIONARIOS_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_MOTIVOFINIQUITO_INSERT_FUNCIONARIOS_CTTA]
(
  @RUT            NVARCHAR(10) = NULL
 ,@EMPRESA        NVARCHAR(10) = NULL
 ,@ID_DOC         INT = NULL
 ,@IDARCHIVO      UNIQUEIDENTIFIER = NULL
 ,@MOTIVO         NVARCHAR(20) = NULL
 ,@USRREGISTRA    NVARCHAR(20) = NULL
 ,@FECHAREGISTRA  NVARCHAR(8) = NULL
 ,@HORAREGISTRA   NVARCHAR(8) = NULL
 ,@USRMOD         NVARCHAR(20) = NULL
 ,@FECHAMOD       NVARCHAR(8) = NULL
 ,@HORAMOD        NVARCHAR(8) = NULL
) AS 
BEGIN
	IF(@FECHAMOD IS NULL OR @FECHAMOD = '')
		BEGIN
			SET @FECHAMOD = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd ; DBO.HOY(GETDATE()) */
		END
	IF(@HORAMOD IS NULL OR @HORAMOD = '')
		BEGIN
			SET @HORAMOD = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss ; DBO.AHORA(GETDATE())*/
		END
	IF(@FECHAREGISTRA IS NULL OR @FECHAREGISTRA = '')
		BEGIN
			SET @FECHAREGISTRA = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
		END
	IF(@HORAREGISTRA IS NULL OR @HORAREGISTRA = '')
		BEGIN
			SET @HORAREGISTRA = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
		END
   INSERT INTO WORKERS_MOTIVOFINIQUITO
        ( RUT    , EMPRESA     , ID_DOC        , IDARCHIVO   
        , MOTIVO , USRREGISTRA , FECHAREGISTRA , HORAREGISTRA
        , USRMOD , FECHAMOD    , HORAMOD       )
   VALUES
        ( @RUT    , @EMPRESA     , @ID_DOC , @IDARCHIVO   
        , @MOTIVO , @USRREGISTRA , @FECHAREGISTRA, @HORAREGISTRA
        , @USRMOD , @FECHAMOD , @HORAMOD)

END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_SELECT]
( @RUT		nvarchar(10) = NULL ) AS
BEGIN

   SELECT W.RUT               , W.NOMBRES       , W.APELLIDOS      , W.FECHNACIM       
        , W.EMPRESA           , W.CASTIGO       , W.POLICLIN       , W.FECHARLA        
        , W.CONTRATO          , W.CEDULA        , W.EXPREOCUP      , W.CERTANTEC       
        , W.FECEXPIREX        , W.LICCONDUC     , W.FECEXPIRALIC   , W.CLASE           
        , W.PARTES            , W.ROL           , W.STAFF          , W.PIEZA           
        , W.AUTOR             , W.CCOSTO        , W.AUTCASINO      , W.GRUPO           
        , W.ZONA              , W.CLAVE         , W.AUTORVISITA    , W.CASINODES       
        , W.CASINOALM         , W.CASINOCEN     , W.CASINOCEN2     , W.CASINOOTR       
        , W.CASINOPERM1       , W.TIPOPASE      , W.TURNO          , W.GRUPOTURN       
        , W.OST               , W.FECHABLOQUEO  , W.SEXO           , W.FINIPASE        
        , W.FFINPASE          , W.FECEXPLICINT  , W.COOL           , W.EMAIL           
        , W.DEFECHA           , W.VIP           , W.CARGO          , W.DOC_DAS         
        , W.DOC_REGINT        , W.DOC_PSICOTEC  , W.TIPOVEHIC      , W.SICOFECHA       
        , W.FECHAMOD          , W.HORAMOD       , W.CONTRATOFEC    , W.CONTRATOTIP     
        , W.DOC_HVIDA         , W.NACIONALIDAD  , W.GRABO          , W.LOTE            
        , W.FINGRESO          , W.FINIQUITO     , W.MOTIVO         , W.DOC_FINIQUITO   
        , W.DIVISION          , W.DOC_FOTO      , W.AUTOR_EXT      , W.FECMEDICO       
        , W.OKMEDICO          , W.DOC_MANEJO    , W.FEC_DAS        , W.VALIDADO        
        , W.QUIEN             , W.FINIQUITO2    , W.DOC_FINIQUITO2 , W.ALTURAEX        
        , W.ID_AREA           , W.GSANGRE       , W.AUT_COND_MAND  , W.TDOC            
        , W.IDGERENCIA        , W.IDUNIDAD      , W.FUNCION        , W.SAP             
        , W.FISCALIZADO       , W.UBIGEO        , W.CODCONSTCIVIL  , W.RESIDENTE       
        , W.CALIFICADO        , W.MANOOBRALOCAL , W.GINSTRUCCION   , W.COD_HABILITACION
        , W.ROL_AAQ           , W.SALARIO       , W.FECINICASINO   , W.FECFINCASINO    
        , W.LOCAL_TRABAJO_AAQ , W.IDSYNC        , W.RESTCREDENCIAL , W.OBSCREDENCIAL
		, W.TIPOSEGURO		  , W.SEGURO		, W.OCUPACION	   , W.TIPODOC
		, DBO.HOY(GETDATE()) AS FECHAHOY        ,D.CELULAR         

		, E.ACRONIMO
     FROM WORKERS AS W
	 INNER JOIN ENTERPRISE AS E ON E.IDEMPRESA = W.EMPRESA
	 LEFT JOIN DIRECCION AS D ON D.RUT = W.RUT
    WHERE W.RUT = @RUT

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_SELECT_BUSCADORCTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_BUSCADORCTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_BUSCADORCTTA]                
(             
@IDISPLAYSTART		INT,              
@IDISPLAYLENGTH		INT,              
@SEARCH_RUT			NVARCHAR(10) = NULL,        
@SEARCH_NOMBRES		NVARCHAR(50) = NULL,        
@SEARCH_APELLIDOS	NVARCHAR(50) = NULL,     
@SEARCH_EMPRESA		NVARCHAR(50) = NULL,
@SORT_COLUMN		NVARCHAR(4) = NULL,        
@SORT_DIRECTION		NVARCHAR(4) = NULL,  
@IDEMPRESA			NVARCHAR(11) = NULL
) AS                
BEGIN            
	DECLARE @QUERY NVARCHAR(MAX)
	SET @QUERY  = 'SELECT DISTINCT W.RUT,W.NOMBRES,W.APELLIDOS,E.ACRONIMO AS EMPRESA                           
	FROM WORKERS AS W
	INNER JOIN WORKERSLOCAL AS WL ON WL.RUT = W.RUT
	INNER JOIN ENTERPRISE AS E ON E.IDEMPRESA = WL.EMPRESA 
	WHERE (WL.AUTOR IN (''SI'',''NO'') OR WL.AUTOR IS NULL) 
		  AND WL.EMPRESA =''' + @IDEMPRESA + ''''

	IF @SEARCH_RUT IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.RUT LIKE ' + '''%' + @SEARCH_RUT + '%''' END
	IF @SEARCH_NOMBRES IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.NOMBRES LIKE ' + '''%' + @SEARCH_NOMBRES + '%''' END
	IF @SEARCH_APELLIDOS IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND W.APELLIDOS LIKE ' + '''%' + @SEARCH_APELLIDOS + '%''' END
	--IF @SEARCH_EMPRESA IS NOT NULL BEGIN SET @QUERY = @QUERY + ' AND E.ACRONIMO LIKE ' + '''%' + @SEARCH_EMPRESA + '%''' END

	    
   IF @SORT_COLUMN='0' BEGIN SET @QUERY = @QUERY + ' ORDER BY RUT ' +  @SORT_DIRECTION END   
   IF @SORT_COLUMN='1' BEGIN SET @QUERY = @QUERY + ' ORDER BY NOMBRES ' + @SORT_DIRECTION END   
   IF @SORT_COLUMN='2' BEGIN SET @QUERY = @QUERY + ' ORDER BY APELLIDOS '  + @SORT_DIRECTION END 
   IF @SORT_COLUMN='3' BEGIN SET @QUERY = @QUERY + ' ORDER BY ACRONIMO ' + @SORT_DIRECTION END

   SET @QUERY = @QUERY + ' OFFSET ' + CAST(@IDISPLAYSTART AS VARCHAR) + ' ROWS FETCH NEXT ' + CAST(@IDISPLAYLENGTH AS VARCHAR) + ' ROWS ONLY'
   EXEC(@QUERY)
   PRINT @QUERY
               
END   
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_SELECT_DATOSPERSONALES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_DATOSPERSONALES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_DATOSPERSONALES_CTTA]    
(    
 @IDEMPRESA	NVARCHAR(10) = NULL    
,@RUT		NVARCHAR(10) = NULL    
)    
AS    
BEGIN    
    
	SELECT	 Rut AS RUT		,NOMBRES		,APELLIDOS			,Correo_Electronico  AS EMAIL  
			,CELULAR		,FONO			,FONOHELP			,PAIS  
			,REGION			,CIUDAD			,COMUNA				,ZONA    
			,DIRECCION    
	FROM [A007_USER_EC]    
	WHERE IdEmpresa = @IDEMPRESA   
	AND Rut = @RUT 
    
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_SELECT_GRID_ADMINCOLABORADORRESUMEN_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_GRID_ADMINCOLABORADORRESUMEN_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_GRID_ADMINCOLABORADORRESUMEN_INFORMECONSULTARAPIDA_CTTA]
(
  @EMPRESA NVARCHAR(20)
) AS 
BEGIN
SELECT distinct CU.RUT, CU.CORREO_ELECTRONICO, W.NOMBRES, W.APELLIDOS FROM COLAB_USUARIO as CU INNER JOIN WORKERS AS W ON CU.RUT = W.RUT WHERE IDEMPRESA = @EMPRESA
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_SELECT_GRID_EMPRESAS_FICHARUT_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_GRID_EMPRESAS_FICHARUT_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_GRID_EMPRESAS_FICHARUT_INFORMECONSULTARAPIDA_CTTA]
(
  @RUT	NVARCHAR(10)
) AS 
BEGIN


SELECT	 W.RUT				, D.DIVISION			, D.DIVCOD			, W.EMPRESA, 
		 W.TIPOPASE			, W.FINIPASE			, W.FFINPASE		, W.LOTE, 
		 E.ACRONIMO			, W.OST					, W.AUTOR			, W.QUIEN, 
		 W.FECHAMOD			, W.HORAMOD				, VALIDADO          , dbo.fn_WL_Conductor(W.RUT, W.DIVISION, dbo.hoy(GETDATE())) AS CONDUCTOR, 
		 dbo.[fn_WL_Certificado] (W.RUT, W.EMPRESA , W.TIPOPASE, D.DIVCOD, dbo.hoy(getdate())) AS CERT
FROM WORKERSLOCAL as W, ENTERPRISE AS E, A024_DIVISIONES as D 
WHERE  (W.FFINPASE >=  dbo.hoy(GETDATE()) ) AND (W.RUT = @RUT) AND (W.EMPRESA = E.IDEMPRESA) AND (D.DIVCOD = W.DIVISION) 
ORDER BY E.ACRONIMO ASC, D.DIVISION, W.LOTE DESC, W.FINIPASE

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_SELECT_GRID_MOVIMIENTOS_FICHARUT_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_GRID_MOVIMIENTOS_FICHARUT_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_GRID_MOVIMIENTOS_FICHARUT_INFORMECONSULTARAPIDA_CTTA]
(
  @RUT	NVARCHAR(10)
) AS 
BEGIN

 SELECT U.RUT, U.[IN], U.OUT, U.LOCAL, U.FECHAIN, U.HORAIN, U.FECHACASINO, U.HORACASINO, U.LOCALCASINO  , U.HORAOUT, U.FECHAOUT, D.DIVISION, U.HORAINZ, U.HORAOUTZ, U.INZ, U.OUTZ, U.ZONA
 , U.FECHAINZ, U.FECHAOUTZ, U.DIVISIONZ   , CASE WHEN (U.FECHAIN + U.HORAIN > U.FECHAOUT + U.HORAOUT OR  U.FECHACASINO + U.HORACASINO > U.FECHAOUT + U.HORAOUT) THEN 1 ELSE 0 END AS IN_CAS  
  FROM  WC3_VISTA_ULT_INOUT AS U LEFT OUTER JOIN A024_DIVISIONES AS D ON U.DIVISION = D.DIVCOD   WHERE RUT = @RUT

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_SELECT_INFORMECONSULTARAPIDA_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_INFORMECONSULTARAPIDA_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_INFORMECONSULTARAPIDA_CTTA]
(
  @RUT	NVARCHAR(10)
) AS 
BEGIN

	SELECT   W.RUT      ,W.NOMBRES ,W.APELLIDOS 
	FROM WORKERS W 
	WHERE (W.RUT LIKE '%'+@RUT+'%')  
	ORDER BY W.RUT, W.NOMBRES, W.APELLIDOS 

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_SELECT_MIXED_VEHICULO_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_MIXED_VEHICULO_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_MIXED_VEHICULO_CTTA]
(
@RUT		NVARCHAR(10) = NULL
,@TIPO		NVARCHAR(1) = ''
) AS
BEGIN
	DECLARE @ACRONIMO VARCHAR(50) = ''
	DECLARE @NOMBRES VARCHAR(50) = ''
	DECLARE @APELLIDOS VARCHAR(50) = ''
	IF(@TIPO = 'E')
		BEGIN
			SELECT TOP 1 @ACRONIMO = ISNULL(E.ACRONIMO, '')
			FROM ENTERPRISE E
			WHERE E.IDEMPRESA = @RUT
		END
	ELSE IF(@TIPO = 'F')
		BEGIN
			SELECT TOP 1 @NOMBRES = ISNULL(W.NOMBRES, ''), @APELLIDOS = ISNULL(W.APELLIDOS, '')
			FROM WORKERS W
			WHERE W.RUT = @RUT
		END

	SELECT @ACRONIMO AS ACRONIMO, @NOMBRES AS NOMBRES, @APELLIDOS AS APELLIDOS
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_SELECT_ONE_CONTRATOST_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_ONE_CONTRATOST_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_ONE_CONTRATOST_CTTA]
(
  @RUT	NVARCHAR(10)
) AS 
BEGIN
	SELECT
		TOP 1
		ISNULL(W.NOMBRES, '') AS NOMBRES,
		ISNULL(W.APELLIDOS, '') AS APELLIDOS,
		ISNULL(D.FONO, '') AS FONO,
		ISNULL(D.EMAIL, '') AS EMAIL,
		W.RUT AS RUT
	FROM WORKERS W
	LEFT JOIN DIRECCION D
		ON W.RUT = D.RUT
	WHERE W.RUT = @RUT
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_SELECT_ONE_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_ONE_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_SELECT_ONE_PASES_CTTA]
(
  @RUT			NVARCHAR(10)
 ,@IDPASE		INT
 ,@DIVCOD		NVARCHAR(4) = ''
 ,@ID_EMPRESA	NVARCHAR(10) = ''
 ,@FEC_INI		NVARCHAR(8) = '19000101'
 ,@FEC_FIN		NVARCHAR(8) = '19000101'
 ,@TIPO_PASE	NVARCHAR(20) = ''
) AS 
BEGIN
	DECLARE @MAX_NUM_VISITAS INT = 4
	DECLARE @FILTRO_VISITA_PERIODO NVARCHAR(8) = ''
	DECLARE @TXT_PERIODO NVARCHAR(8) = ''
	DECLARE @MAXIMO_VISITA INT = -1
	DECLARE @ANIO_ACTUAL NVARCHAR(4) = CONVERT(NVARCHAR(4), YEAR(GETDATE()))
	DECLARE @MES_ACTUAL NVARCHAR(2) = FORMAT(GETDATE(),'MM')
	DECLARE @APRUEBA_MEDICO NVARCHAR(2) = ''
	DECLARE @ID_DOC_52 INT = 52
	DECLARE @COMUN NVARCHAR(2) = ''
	DECLARE @ID_DOC_FEC INT = -1
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */

	SELECT
		TOP 1
		@TXT_PERIODO = PERIODOVISITA,
		@MAXIMO_VISITA = CONVERT(INT, CASE 
										WHEN ISNUMERIC(CANTVISITA) = 1 THEN CANTVISITA
										ELSE '-1' END)
	FROM A024_DIVISIONES WHERE DIVCOD = @DIVCOD

	IF(@TXT_PERIODO = 'MENSUAL')
		BEGIN
			SET @FILTRO_VISITA_PERIODO = CONCAT(@ANIO_ACTUAL, @MES_ACTUAL)
		END
	ELSE IF(@TXT_PERIODO = 'ANUAL')
		BEGIN
			SET @FILTRO_VISITA_PERIODO = @ANIO_ACTUAL
		END	

	SELECT
		TOP 1
		@APRUEBA_MEDICO = APRUEBA_MEDICO
	FROM TAB_TIPOPASE
	WHERE TIPOPASE = @TIPO_PASE

	SELECT
		TOP 1
		@ID_DOC_FEC = DF1.ID_DOC_FEC
	FROM DOCS_FEC DF1
	WHERE (DF1.ID_DOC_DEPEND IN (@ID_DOC_52)) AND (DF1.ACTIVO = 'SI')
	ORDER BY DF1.ORDEN

	SELECT
		@COMUN = D.COMUN
	FROM DOCS_FEC AS DF
	INNER JOIN DOCS AS D
		ON DF.ID_DOC_DEPEND = D.ID_DOC 
	WHERE (DF.ID_DOC_FEC = @ID_DOC_FEC)
	/*------------------------------------------------------*/

	SELECT
		SS.RUT,
		SS.NOMBRES,
		SS.APELLIDOS,
		SS.EMPRESA_FUNC,
		COALESCE(
					(
						SELECT
							TOP 1
							E.ACRONIMO
						FROM ENTERPRISE E
						WHERE E.IDEMPRESA = SS.EMPRESA_FUNC
					),
				'') AS NOMBRE_EMPRESA_FUNC,
		SS.AUTOR,
		SS.PUEDE_PEDIR_PASE,
		COALESCE(SS.CUENTA_VISITAS, -1) AS CUENTA_VISITAS,
		SS.CONDUCE,
		IIF(SS.CONDUCE = 1, 'SI', 'NO') AS CONDUCE_TXT,
		SS.HOTEL,
		SS.HOTEL_TXT,
		SS.CASINO,
		SS.CASINO_TXT,
		SS.SINOLT,
		SS.SINOLT_TXT,
		SS.PERIODO,
		SS.LIMITEPASESV,
		SS.EXAMEN,
		SS.PASES_ACTIVOS,
		SS.CERTT,
		(CASE 
			WHEN SS.EXAMEN = 'SI' THEN (
										CASE
										WHEN @COMUN = 'SI' THEN COALESCE(
																			(
																				SELECT TOP 1 DW3.VALIDADO
																				FROM DOCS_WORKERS DW3
																				WHERE (DW3.RUT = SS.RUT) AND 
																						(DW3.ID_DOC IN (@ID_DOC_52)) AND
																						(DW3.DIVISION = @DIVCOD)
																				ORDER BY DW3.ID_DOCS_WORKERS DESC
																			), '')
										WHEN @COMUN = 'NO' THEN COALESCE(
																			(
																				SELECT TOP 1 DW4.VALIDADO
																				FROM DOCS_WORKERS DW4
																				WHERE (DW4.RUT = SS.RUT) AND
																						(DW4.ID_DOC IN (@ID_DOC_52)) AND
																						(DW4.DIVISION = @DIVCOD) AND
																						(DW4.EMPRESA = @ID_EMPRESA)
																				ORDER BY DW4.ID_DOCS_WORKERS DESC
																			), '')
										ELSE '' END
									)
		ELSE 'NO' END) AS VALIDADO,
		SS.COMUN,
		SS.EMPRESA_FINIQ,
		COALESCE(
					(
						SELECT
							TOP 1
							E2.ACRONIMO
						FROM ENTERPRISE E2
						WHERE E2.IDEMPRESA = SS.EMPRESA_FINIQ
					),
				'') AS NOMBRE_EMPRESA_FINIQ,
		SS.EMPRESA_NOMINA,
		COALESCE(
					(
						SELECT
							TOP 1
							E3.ACRONIMO
						FROM ENTERPRISE E3
						WHERE E3.IDEMPRESA = SS.EMPRESA_NOMINA
					),
				'') AS NOMBRE_EMPRESA_NOMINA,
		SS.EMPRESA_NOMINA AS EMPRESA_FINIQ_NOMINA,
		COALESCE(
					(
						SELECT
							TOP 1
							E4.ACRONIMO
						FROM ENTERPRISE E4
						WHERE E4.IDEMPRESA = SS.EMPRESA_NOMINA
					),
				'') AS NOMBRE_EMPRESA_FINIQ_NOMINA,
		SS.SEXO,
		SS.FECNACIM,
		SS.IDCATEGORIACTTA,
		SS.IDSUBCATEGORIACCTTA,
		COALESCE(
			(
				SELECT TOP 1 C3.CATEGORIA
				FROM CATEGORIACONTRATISTA C3
				WHERE C3.Id = SS.IDCATEGORIACTTA
			), '') AS CATEGORIA_TXT,
		COALESCE(
			(
				SELECT TOP 1 S2.CATEGORIA
				FROM SUB_CATEGORIACONTRATISTA S2
				WHERE S2.Id = SS.IDSUBCATEGORIACCTTA
			), '') AS SUBCATEGORIA_TXT
	FROM
	(
		SELECT
			W.RUT AS RUT,
			ISNULL(W.NOMBRES, '') AS NOMBRES,
			ISNULL(W.APELLIDOS, '') AS APELLIDOS,
			COALESCE(
			 (
				SELECT 
					TOP 1 WL1.EMPRESA
				FROM WORKERSLOCAL WL1
				WHERE
					(dbo.hoy(GETDATE()) BETWEEN WL1.FINIPASE AND WL1.FFINPASE) AND
					(WL1.AUTOR IN ('SI','NO')) AND
					(WL1.RUT = W.RUT) AND
					(WL1.DIVISION = @DIVCOD)
			 ),
			ISNULL(W.EMPRESA, '')) AS EMPRESA_FUNC,
			ISNULL(W.AUTOR, '') AS AUTOR,
			(CASE 
				WHEN W.AUTOR = 'XX' THEN 0
				ELSE 1 END) AS PUEDE_PEDIR_PASE,
			(CASE
				 WHEN @TIPO_PASE = 'VISITA' THEN (
												  CASE 
													WHEN @DIVCOD = '' THEN (
																			CASE 
																				WHEN @MAX_NUM_VISITAS > -1 THEN
																											(
																												SELECT
																													COUNT(W1.RUTLOTE)
																												FROM LOTEPASESFUN W1
																												INNER JOIN LOTEPASES LP1 
																													ON W1.NLOTEPROC = LP1.LOTENUM
																												WHERE (W1.TIPORUT = 'FUNCIONARIO') AND
																														(W1.SINOLT = 'SI') AND
																														(W1.TIPOLT = N'VISITA' OR W1.TIPOLT = N'VISITATEC') AND
																														(LP1.LOTEESTADO = 'SI') AND
																														(W1.RUTLOTE = W.RUT) AND
																														(LP1.LOTEFINICIO LIKE @FILTRO_VISITA_PERIODO + '%') AND
																														(ISNULL(W1.UTILIZOLT, 'SI') = 'SI')
																												GROUP BY W1.RUTLOTE
																											)
																				ELSE -1 END
																			)
													ELSE (
															CASE 
																WHEN @MAX_NUM_VISITAS > -1 THEN
																							(
																								SELECT
																									COUNT(W2.RUTLOTE)
																								FROM LOTEPASESFUN W2
																								INNER JOIN LOTEPASES LP2 
																									ON W2.NLOTEPROC = LP2.LOTENUM
																								WHERE (W2.TIPORUT = 'FUNCIONARIO') AND
																										(W2.SINOLT = 'SI') AND
																										(W2.TIPOLT = N'VISITA' OR W2.TIPOLT = N'VISITATEC') AND
																										(LP2.LOTEESTADO = 'SI') AND
																										(W2.RUTLOTE = W.RUT) AND
																										(LP2.LOTEFINICIO LIKE @FILTRO_VISITA_PERIODO + '%') AND
																										(LP2.DIVISION = @DIVCOD) AND (ISNULL(W2.UTILIZOLT, 'SI') = 'SI')
																								GROUP BY W2.RUTLOTE 						
																							)
																ELSE -1 END				
			
													) END)
				  ELSE -1 END
			) AS CUENTA_VISITAS,
			(CASE
				WHEN @DIVCOD = '' THEN IIF(EXISTS(
												SELECT
													TOP 1
													L1.LOTENUM
												FROM LOTEPASES L1
												INNER JOIN LOTEPASESFUN LF1
													ON L1.LOTENUM = LF1.NLOTEPROC
												WHERE (LF1.RUTLOTE = W.RUT) AND
													  (dbo.hoy(GETDATE()) BETWEEN L1.LOTEFINICIO AND L1.LOTEFFINAL) AND
													  (LF1.SINOLT = 'SI') AND
													  (LF1.LICONDLT = 'SI')
												ORDER BY L1.LOTENUM), 1, 0)
				ELSE IIF(EXISTS(
							SELECT
								TOP 1
								L2.LOTENUM
							FROM LOTEPASES L2
							INNER JOIN LOTEPASESFUN LF2
								ON L2.LOTENUM = LF2.NLOTEPROC
							WHERE (L2.DIVISION = @DIVCOD) AND
								  (LF2.RUTLOTE = W.RUT) AND
								  (dbo.hoy(GETDATE()) BETWEEN L2.LOTEFINICIO AND L2.LOTEFFINAL) AND
								  (LF2.SINOLT = 'SI') AND
								  (LF2.LICONDLT = 'SI')
							ORDER BY L2.LOTENUM
						), 1, 0) END) AS CONDUCE,
			'NO' AS HOTEL_TXT,
			0 AS HOTEL,
			1 AS CASINO,
			'SI' AS CASINO_TXT,
			0 AS SINOLT,
			'SI' AS SINOLT_TXT,
			@TXT_PERIODO AS PERIODO,
			@MAXIMO_VISITA AS LIMITEPASESV,
			(CASE 
				WHEN @COMUN = 'SI' THEN ( CASE 
											WHEN EXISTS(
														SELECT
															TOP 1
															DW1.RUT
														FROM DOCS_WORKERS DW1
														WHERE 
														    DW1.RUT = W.RUT AND
															DW1.DIVISION = @DIVCOD AND
															DW1.ID_DOC IN (@ID_DOC_52)
														ORDER BY DW1.FECHA_MOD DESC, DW1.HORA_MOD DESC
														) THEN
														[dbo].[V4MVC_FGET_FECHA_ES_VIGENTE](
																	[dbo].[V4MVC_FGET_FECHA_WORKER_LOCAL](
																					@ID_DOC_FEC,
																					W.RUT,
																					@DIVCOD,
																					@ID_EMPRESA,
																					0),
																	@CURR_FECHA)
											ELSE 'NO' END
											)
				WHEN @COMUN = 'NO' THEN ( CASE
											WHEN EXISTS(
														SELECT TOP 1 DW2.RUT
														FROM DOCS_WORKERS DW2
														WHERE DW2.RUT = W.RUT AND
															DW2.EMPRESA = @ID_EMPRESA AND
															DW2.DIVISION = @DIVCOD AND
															DW2.ID_DOC IN (@ID_DOC_52)
														ORDER BY DW2.FECHA_MOD DESC, DW2.HORA_MOD DESC
												 ) THEN
													[dbo].[V4MVC_FGET_FECHA_ES_VIGENTE](
																[dbo].[V4MVC_FGET_FECHA_WORKER_LOCAL](
																			@ID_DOC_FEC,
																			W.RUT,
																			@DIVCOD,
																			@ID_EMPRESA,
																			0),
																@CURR_FECHA)
											ELSE 'NO' END
											)
				ELSE '' END) AS EXAMEN,
			(
				SELECT
					COUNT(*)
				FROM WORKERSLOCAL WL
				WHERE
					(WL.RUT = W.RUT) AND
				    (WL.AUTOR = 'SI') AND
				    (WL.DIVISION = @DIVCOD) AND
				    (WL.LOTE <> @IDPASE) AND
				    (
					  (@FEC_INI BETWEEN WL.FINIPASE AND WL.FFINPASE) OR
					  (@FEC_FIN BETWEEN WL.FINIPASE AND WL.FFINPASE) OR
					  (@FEC_INI < WL.FINIPASE AND WL.FFINPASE < @FEC_FIN)
					)
			 ) AS PASES_ACTIVOS,
			@COMUN AS COMUN,
			COALESCE(
			 (
				SELECT 
					TOP 1
					WL2.EMPRESA
				FROM WORKERSLOCAL WL2
				WHERE
					(dbo.hoy(GETDATE()) BETWEEN WL2.FINIPASE AND WL2.FFINPASE) AND
					(WL2.AUTOR IN ('SI','NO')) AND
					(WL2.RUT = W.RUT) AND
					(WL2.DIVISION = @DIVCOD)
			 ), '') AS EMPRESA_FINIQ,
			ISNULL(W.SEXO, '') AS SEXO,
			(CASE
				WHEN W.FECHNACIM = '19000101' THEN ''
				ELSE ISNULL(W.FECHNACIM, '') END) AS FECNACIM,
			COALESCE(
					  (
						SELECT
							TOP 1
							C1.ID
						FROM WORKERSCATEGORIA WC1
						LEFT JOIN CATEGORIACONTRATISTA C1
							ON C1.Id = WC1.CODCATEGORIA
						WHERE
							WC1.RUT = W.RUT AND
							WC1.DIVISION = @DIVCOD
					  ), -1) AS IDCATEGORIACTTA,
			COALESCE(
					  (
						SELECT
							TOP 1
							S.Id
						FROM WORKERSCATEGORIA WC2
						LEFT JOIN CATEGORIACONTRATISTA C2
							ON C2.Id = WC2.CODCATEGORIA
						LEFT JOIN SUB_CATEGORIACONTRATISTA S
							ON S.Id = WC2.CODSUBCATEGORIA
						WHERE
							WC2.RUT = W.RUT AND
							WC2.DIVISION = @DIVCOD
					  ), -1) AS IDSUBCATEGORIACCTTA,
			COALESCE(
			 (SELECT 
				TOP 1
				WL3.EMPRESA
			  FROM WORKERSLOCAL WL3
			  WHERE
				(dbo.hoy(GETDATE()) BETWEEN WL3.FINIPASE AND WL3.FFINPASE) AND
				(WL3.AUTOR IN ('SI','NO')) AND
				(WL3.RUT = W.RUT) AND
				(WL3.EMPRESA = @ID_EMPRESA)
			  ORDER BY WL3.LOTE DESC
			 ), '') AS EMPRESA_NOMINA,
		[dbo].[fn_WL_Certificado](@RUT, @ID_EMPRESA, @TIPO_PASE, @DIVCOD, @CURR_FECHA) AS CERTT
		FROM WORKERS W
		WHERE W.RUT = @RUT
	) SS
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_UPDATE_COVID_DI]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_COVID_DI]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_COVID_DI]
( @TIPODOC			  nvarchar(5) = NULL
, @RUT                nvarchar(10) = NULL
, @NOMBRES            nvarchar(50) = NULL
, @APELLIDOS          nvarchar(50) = NULL
, @FECHNACIM          nvarchar(8) = NULL
, @EMPRESA            nvarchar(10) = NULL
, @SEXO               nvarchar(10) = NULL
, @EMAIL              nvarchar(50) = NULL
, @OCUPACION              nvarchar(200) = NULL
, @TIPOSEGURO              nvarchar(50) = NULL
, @SEGURO              nvarchar(50) = NULL
 ) AS 
BEGIN

   UPDATE [WORKERS]
      SET [TIPODOC]			  = @TIPODOC
	    , [NOMBRES]           = @NOMBRES
        , [APELLIDOS]         = @APELLIDOS
        , [FECHNACIM]         = @FECHNACIM
        , [SEXO]              = @SEXO
        , [EMAIL]             = @EMAIL
		, [OCUPACION]			= @OCUPACION
		, [TIPOSEGURO]			= @TIPOSEGURO
		, [SEGURO]			= @SEGURO
    WHERE [RUT]               = @RUT

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_UPDATE_COVID_F00]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_COVID_F00]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_COVID_F00]
( @TIPODOC			  nvarchar(5) = NULL
, @RUT                nvarchar(10) = NULL
, @NOMBRES            nvarchar(50) = NULL
, @APELLIDOS          nvarchar(50) = NULL
, @FECHNACIM          nvarchar(8) = NULL
, @SEXO               nvarchar(10) = NULL
, @EMAIL              nvarchar(50) = NULL
 ) AS 
BEGIN

   UPDATE [WORKERS]
      SET [TIPODOC]			  = @TIPODOC
		, [NOMBRES]           = @NOMBRES
        , [APELLIDOS]         = @APELLIDOS
        , [FECHNACIM]         = @FECHNACIM
        , [SEXO]              = @SEXO
        , [EMAIL]             = @EMAIL
    WHERE [RUT]               = @RUT

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_UPDATE_COVID_F100]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_COVID_F100]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_COVID_F100]
( @TIPODOC			  nvarchar(5) = NULL
, @RUT                nvarchar(10) = NULL
, @NOMBRES            nvarchar(50) = NULL
, @APELLIDOS          nvarchar(50) = NULL
, @SEXO               nvarchar(10) = NULL
 ) AS 
BEGIN

   UPDATE [WORKERS]
      SET [TIPODOC]			  = @TIPODOC
		, [NOMBRES]           = @NOMBRES
        , [APELLIDOS]         = @APELLIDOS
        , [SEXO]              = @SEXO
    WHERE [RUT]               = @RUT

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_UPDATE_COVID_F200]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_COVID_F200]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_COVID_F200]
( @TIPODOC			  nvarchar(5) = NULL
, @RUT                nvarchar(10) = NULL
, @NOMBRES            nvarchar(50) = NULL
, @APELLIDOS          nvarchar(50) = NULL
, @SEXO               nvarchar(10) = NULL
, @EMAIL              nvarchar(50) = NULL
, @OCUPACION              nvarchar(200) = NULL
, @TIPOSEGURO              nvarchar(50) = NULL
, @SEGURO              nvarchar(50) = NULL
 ) AS 
BEGIN

   UPDATE [WORKERS]
      SET [TIPODOC]			  = @TIPODOC
		, [NOMBRES]           = @NOMBRES
        , [APELLIDOS]         = @APELLIDOS
        , [SEXO]              = @SEXO
		, [EMAIL]             = @EMAIL
		, [OCUPACION]		  = @OCUPACION
		, [TIPOSEGURO]		  = @TIPOSEGURO
		, [SEGURO]			  = @SEGURO
    WHERE [RUT]               = @RUT

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_UPDATE_COVID_F300]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_COVID_F300]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_COVID_F300]
( @TIPODOC			  nvarchar(5) = NULL
, @RUT                nvarchar(10) = NULL
, @NOMBRES            nvarchar(50) = NULL
, @APELLIDOS          nvarchar(50) = NULL
 ) AS 
BEGIN

   UPDATE [WORKERS]
      SET [TIPODOC]			  = @TIPODOC
		, [NOMBRES]           = @NOMBRES
        , [APELLIDOS]         = @APELLIDOS
    WHERE [RUT]               = @RUT

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_UPDATE_DATOSPERSONALES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_DATOSPERSONALES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_DATOSPERSONALES_CTTA]        
(        
 @RUT				NVARCHAR(10) = NULL       
,@EMPRESA			NVARCHAR(10) = NULL    
,@NOMBRES			NVARCHAR(50) = NULL    
,@APELLIDOS			NVARCHAR(50) = NULL    
,@CORREOELECTRONICO NVARCHAR(50) = NULL    
,@CELULAR			NVARCHAR(50) = NULL    
,@FONO				NVARCHAR(50) = NULL    
,@FONOHELP			NVARCHAR(50) = NULL    
,@PAIS				NVARCHAR(50) = NULL    
,@REGION			NVARCHAR(5) = NULL    
,@CIUDAD			NVARCHAR(50) = NULL    
,@COMUNA			NVARCHAR(50) = NULL    
,@ZONA				NVARCHAR(50) = NULL    
,@DIRECCION			NVARCHAR(50) = NULL    
,@EMAILOLD			NVARCHAR(50) = NULL
)        
AS        
BEGIN    
    
	UPDATE COLAB_USUARIO     
			SET Correo_Electronico = @CORREOELECTRONICO    
	WHERE IdEmpresa = @EMPRESA  
	AND Rut = @RUT    
    
	 UPDATE WORKERS     
	 SET NOMBRES	= @NOMBRES
	   , APELLIDOS	= @APELLIDOS
	   , EMAIL		= @CORREOELECTRONICO    
	 WHERE RUT=@RUT    
    
	 IF EXISTS( SELECT * FROM DIRECCION WHERE RUT=@RUT)      
		 BEGIN      
			  UPDATE DIRECCION     
					SET  PAIS		= @PAIS
					   , REGION		= @REGION
					   , COMUNA		= @COMUNA
					   , CIUDAD		= @CIUDAD
					   , ZONA		= @ZONA
					   , DIRECCION	= @DIRECCION
					   , CELULAR	= @CELULAR
					   , FONO		= @FONO
					   , FONOHELP   = @FONOHELP    
			  WHERE RUT=@RUT    
		 END      
	 ELSE      
		BEGIN      
			  INSERT INTO DIRECCION (	RUT			,PAIS		,REGION			,COMUNA
									   ,CIUDAD		,ZONA		,DIRECCION		,CELULAR
									   ,FONO		,FONOHELP
									)   
									   
							VALUES (	@RUT		,@PAIS		,@REGION		,@COMUNA
									   ,@CIUDAD		,@ZONA		,@DIRECCION		,@CELULAR
									   ,@FONO		,@FONOHELP
									)     
		END 

	IF (@CORREOELECTRONICO != @EMAILOLD)
		BEGIN
			UPDATE LOTEPASES
				SET LOTEEMAIL = @CORREOELECTRONICO
			WHERE LOTEEMAIL = @EMAILOLD
		END
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_UPDATE_LABORALES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_LABORALES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_LABORALES_CTTA]
( @RUT                nvarchar(10) = NULL
, @CCOSTO            nvarchar(14) = NULL
, @GSANGRE          nvarchar(10) = NULL
, @ROL				nvarchar(50) = NULL
 ) AS 
BEGIN

	UPDATE WORKERS SET CCOSTO = @CCOSTO
					,  ROL	= @ROL
					,  GSANGRE = @GSANGRE  
	WHERE (RUT = @RUT)

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_UPDATE_PERSONALES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_PERSONALES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_UPDATE_PERSONALES_CTTA]
( @RUT                nvarchar(10) = NULL
, @NOMBRES            nvarchar(50) = NULL
, @APELLIDOS          nvarchar(50) = NULL
, @FECHNACIM          nvarchar(8) = NULL
, @EMPRESA            nvarchar(10) = NULL
, @SEXO               nvarchar(10) = NULL
, @EMAIL              nvarchar(50) = NULL
 ) AS 
BEGIN

   UPDATE [WORKERS]
      SET [NOMBRES]           = @NOMBRES
        , [APELLIDOS]         = @APELLIDOS
        , [FECHNACIM]         = @FECHNACIM
        , [SEXO]              = @SEXO
        , [EMAIL]             = @EMAIL
    WHERE [RUT]               = @RUT

END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_ZONA_PASE_DELETE_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_ZONA_PASE_DELETE_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_ZONA_PASE_DELETE_PASES_CTTA]
(
  @ID_PASE					INT
 ,@RUT						NVARCHAR(10)
 ,@CS_LOCALES_EXISTENTES	NVARCHAR(MAX)
) AS 
BEGIN
	DELETE
	FROM WORKERS_ZONA_PASE
	WHERE
		LOTENUM = @ID_PASE AND
		RUT = @RUT AND
		CHARINDEX(@CS_LOCALES_EXISTENTES, CONCAT('#', LOCAL, '#')) <= 0
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_ZONA_PASE_HST_INSERT_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_ZONA_PASE_HST_INSERT_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_ZONA_PASE_HST_INSERT_PASES_CTTA]
(
  @ID_PASE			INT
 ,@RUT				NVARCHAR(10)
 ,@ID_EMPRESA		NVARCHAR(10)
) AS 
BEGIN
	INSERT INTO WORKERS_ZONA_PASE_HST
	SELECT *
	FROM  WORKERS_ZONA_PASE
	WHERE
		LOTENUM = @ID_PASE AND
		RUT = @RUT AND
		EMPRESA = @ID_EMPRESA
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_ZONA_PASE_SELECT_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_ZONA_PASE_SELECT_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_ZONA_PASE_SELECT_PASES_CTTA]
(
   @RUT			    NVARCHAR(10)
  ,@DIVCOD          NVARCHAR(10)
  ,@ID_PASE			INT
  ,@IDEMPRESA		NVARCHAR(10)
) AS 
BEGIN
	DECLARE @EXISTE_FUNC BIT = 0
	DECLARE @LOCAL NVARCHAR(12) = ''
	DECLARE @ESTADO NVARCHAR(2) = ''
	DECLARE @DETALLE NVARCHAR(50) = ''
	DECLARE @CCHECKED BIT = 0
	DECLARE @CDISABLED BIT = 0

	IF(EXISTS(
		SELECT *
		FROM WORKERS_ZONA_PASE
		WHERE
			(LOTENUM = @ID_PASE) AND
			(RUT = @RUT) AND
			(EMPRESA = @IDEMPRESA)
	))
		BEGIN
			SET @EXISTE_FUNC = 1
		END

	SELECT
		TOP 1
		@ESTADO = LOTEESTADO
	FROM LOTEPASES
	WHERE LOTENUM = @ID_PASE

	CREATE TABLE #ZONAS_CONDUCCION (
		LOCAL		NVARCHAR(12)	 COLLATE DATABASE_DEFAULT NOT NULL, 
		DETALLE		NVARCHAR(50)	 COLLATE DATABASE_DEFAULT NOT NULL, 
		CHECKED		BIT,
		DISABLED	BIT
	)

	DECLARE cursor_loc CURSOR
	FOR
		SELECT L.LOCAL, L.DETALLE
		FROM LOCAL L
		WHERE
			(L.LOCALL = 'ACCESO') AND
			(L.ACTIVO = 'SI') AND
			(L.DIVISION = @DIVCOD)
		ORDER BY LOCAL

	OPEN cursor_loc

	FETCH NEXT FROM cursor_loc INTO 
		@LOCAL, @DETALLE

	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @CCHECKED = 0
			SET @CDISABLED = 0

			IF(@EXISTE_FUNC = 1)
				BEGIN
					IF(@LOCAL IS NOT NULL AND @LOCAL <> '' AND @RUT IS NOT NULL AND @RUT <> '')
						BEGIN
							IF(EXISTS(
								SELECT *
								FROM WORKERS_ZONA_PASE WZP
								WHERE
									(WZP.LOTENUM = @ID_PASE) AND
									(WZP.RUT = @RUT) AND
									(WZP.EMPRESA = @IDEMPRESA) AND
									(WZP.LOCAL = @LOCAL)
							))
								BEGIN
									SET @CCHECKED = 1
								END
						END
				END
			ELSE
				BEGIN
					IF(@LOCAL IS NOT NULL AND @LOCAL <> '' AND @RUT IS NOT NULL AND @RUT <> '')
						BEGIN
							IF(EXISTS(
								SELECT *
								FROM WORKERS_ZONA_AUT WZA
								WHERE
									(WZA.RUT = @RUT) AND
									(WZA.EMPRESA = @IDEMPRESA) AND
									(WZA.LOCAL = @LOCAL) AND
									(WZA.ACTIVO = 'SI')
							))
								BEGIN
									SET @CCHECKED = 1
								END
						END
				END

			IF(@ESTADO = 'SI' OR @ESTADO = 'RE' )
				BEGIN
					SET @CDISABLED = 1
				END

			IF(@CCHECKED = 1 OR @CDISABLED = 1)
				BEGIN
					INSERT INTO #ZONAS_CONDUCCION(LOCAL, DETALLE, CHECKED, DISABLED)
					VALUES(@LOCAL, @DETALLE, @CCHECKED, @CDISABLED)
				END
			
			FETCH NEXT FROM cursor_loc INTO 
				@LOCAL,@DETALLE
		END

	CLOSE cursor_loc

	DEALLOCATE cursor_loc

	SELECT
		LOCAL,
		DETALLE,
		CHECKED,
		DISABLED
	FROM #ZONAS_CONDUCCION

END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERS_ZONA_PASE_UPSERT_PASES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERS_ZONA_PASE_UPSERT_PASES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERS_ZONA_PASE_UPSERT_PASES_CTTA]
(
  @ID_PASE			INT
 ,@RUT			    NVARCHAR(10)
 ,@LOCAL			NVARCHAR(12)
 ,@IDEMPRESA		NVARCHAR(10)
 ,@USUARIO			NVARCHAR(10)
) AS 
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */

	IF(EXISTS(
		SELECT *
		FROM WORKERS_ZONA_PASE WZP
		WHERE
			WZP.LOTENUM = @ID_PASE AND
			WZP.RUT = @RUT AND
			WZP.EMPRESA = @IDEMPRESA AND
			WZP.LOCAL = @LOCAL
	))
		BEGIN
			UPDATE WORKERS_ZONA_PASE
			SET
				FECHAMOD = @CURR_FECHA,
				HORAMOD = @CURR_TIEMPOFULL,
				USUARIOMOD = @USUARIO
			WHERE
				LOTENUM = @ID_PASE AND
				RUT = @RUT AND
				EMPRESA = @IDEMPRESA AND
				LOCAL = @LOCAL
		END
	ELSE
		BEGIN
			INSERT INTO WORKERS_ZONA_PASE
			(
			  LOTENUM, RUT, EMPRESA, LOCAL, FECHACREACION, HORACREACION,
			  USUARIOCREACION, FECHAMOD, HORAMOD, USUARIOMOD)
			VALUES
			(
			  @ID_PASE, @RUT, @IDEMPRESA, @LOCAL, @CURR_FECHA,
			  @CURR_TIEMPOFULL, @USUARIO, @CURR_FECHA, @CURR_TIEMPOFULL, @USUARIO)
		END
END


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_BONO_RESUMEN_SELECT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_BONO_RESUMEN_SELECT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_BONO_RESUMEN_SELECT_CTTA]
(
 @DIVISION		NVARCHAR(4 ) = NULL
,@EMPRESA		NVARCHAR(10) = NULL
,@RUT			NVARCHAR(10) = NULL
,@TIPO_BONO		NVARCHAR(20) = NULL
,@PERIODO		NVARCHAR(6 ) = NULL
,@BONO			NVARCHAR(2 ) = NULL
)
AS
BEGIN

	SELECT			WB.RUT						,W.NOMBRES					,W.APELLIDOS			,WB.EMPRESA
				   ,E.ACRONIMO					,WB.DIVISION AS DIVCOD		,D.DIVISION				,WB.OST
				   ,WB.TURNO					,WB.DIAS_TRABAJO			,WB.DIAS_FAENA			,WB.DIAS_LICENCIA
				   ,WB.TOTAL_ASISTENCIA			,WB.PORCEN_ASIS_FINAL		,WB.PORCEN_ASIS_MIN		,WB.BONO
				   ,WB.VALOR					,WB.PERIODO
	FROM			WORKERSLOCAL_BONO_RESUMEN	WB  
	INNER JOIN		WORKERS W					ON WB.RUT		=	W.RUT  
	INNER JOIN		ENTERPRISE E				ON WB.EMPRESA	=	E.IDEMPRESA 
	INNER JOIN		A024_DIVISIONES D			ON WB.DIVISION	=	D.DIVCOD  
	WHERE			D.DIVCOD			=		@DIVISION
	AND				WB.EMPRESA			=		@EMPRESA
	AND				WB.RUT				=		ISNULL(@RUT, WB.RUT)
	AND				TIPO_BONO			=		@TIPO_BONO
	AND				WB.PERIODO			=		@PERIODO
	AND				WB.BONO				=		ISNULL(@BONO, WB.BONO)
	ORDER BY W.NOMBRES

 END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_DOC_PENDIENTES_SELECT]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_DOC_PENDIENTES_SELECT]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_DOC_PENDIENTES_SELECT]
(@IDEMPRESA NVARCHAR(10)) AS

BEGIN
SELECT D.DIVISION, COUNT(DW.RUT) AS CANTIDAD 
FROM DOCS_WORKERS DW INNER JOIN A024_DIVISIONES D ON D.DIVCOD = DW.DIVISION 
WHERE DW.EMPRESA = @IDEMPRESA AND DW.VALIDADO = 'NO' AND D.ACTIVO = 'SI' 
GROUP BY D.DIVISION 
ORDER BY D.DIVISION
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_SELECT_B]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_B]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_B]     
(@IDEMPRESA            NVARCHAR(10),
 @DIVCOD			   NVARCHAR(2) 					
) AS     
BEGIN    
 
SELECT DISTINCT RUT 
FROM WORKERSLOCAL 
WHERE EMPRESA = @IDEMPRESA AND DIVISION = @DIVCOD
        
END 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_SELECT_BY_RUT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_BY_RUT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_BY_RUT_CTTA]
(
 @RUT		NVARCHAR(10) = NULL
,@DIVISION	NVARCHAR(MAX)  = NULL
)
AS
BEGIN

		IF(ISNULL(@DIVISION,'') = '')
		BEGIN
			SELECT TOP 1 EMPRESA 
			FROM WORKERSLOCAL 
			WHERE (dbo.hoy(GETDATE()) BETWEEN FINIPASE AND FFINPASE) 
			AND (AUTOR IN ('SI','NO')) 
			AND (RUT = @RUT)
		END
		ELSE
		BEGIN
			SELECT TOP 1 EMPRESA 
			FROM WORKERSLOCAL 
			WHERE (dbo.hoy(GETDATE()) BETWEEN FINIPASE AND FFINPASE) 
			AND (AUTOR IN ('SI','NO')) 
			AND (RUT = @RUT)
			AND DIVISION IN (SELECT VALUE FROM STRING_SPLIT(@DIVISION,','))
		END

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_SELECT_C]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_C]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_C]     
(@IDEMPRESA            NVARCHAR(10),
 @DIVCOD			   NVARCHAR(2),
 @RUT				   NVARCHAR(10) 
) AS     
BEGIN    
 
SELECT TOP 1 AUTOR, VALIDADO 
FROM WORKERSLOCAL 
WHERE EMPRESA = @IDEMPRESA
AND DIVISION = @DIVCOD
AND RUT = @RUT
ORDER BY LOTE
        
END 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_SELECT_ENTERPRISE]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_ENTERPRISE]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_ENTERPRISE]       
(@IDEMPRESA            NVARCHAR(10) = NULL) AS       
BEGIN 

	DECLARE @MAXIMO INT           
	DECLARE @CONTADOR INT           
	DECLARE @DATO VARCHAR(10)          
	DECLARE @DATO2 VARCHAR  (10)          
	DECLARE @CONTADOR2 INT           
	DECLARE @MAXIMO2 INT           
          
	CREATE TABLE  #TEMP2 (          
	RUT VARCHAR(10)			COLLATE DATABASE_DEFAULT NOT NULL,       
	DIVISION VARCHAR (3)	COLLATE DATABASE_DEFAULT NOT NULL         
	)          
          
	CREATE TABLE #FINAL (          
	AUTOR VARCHAR(2)		 COLLATE DATABASE_DEFAULT NOT NULL,          
	VALIDO VARCHAR(2)		 COLLATE DATABASE_DEFAULT NOT NULL,          
	DIVISION VARCHAR (2)	 COLLATE DATABASE_DEFAULT NOT NULL          
	)         
  
	CREATE TABLE #ACREDITADOS (  
	SI_CANTIDAD INT,  
	DIVCOD VARCHAR(2)		 COLLATE DATABASE_DEFAULT NOT NULL,
	SI_VALIDO VARCHAR(2)	 COLLATE DATABASE_DEFAULT NOT NULL
	)  
  
	CREATE TABLE #NO_ACREDITADOS (  
	NO_CANTIDAD INT,  
	DIVCOD VARCHAR(2)		 COLLATE DATABASE_DEFAULT NOT NULL,
	NO_VALIDO VARCHAR(2)	 COLLATE DATABASE_DEFAULT NOT NULL
	)  
          
          
	SELECT           
	DISTINCT D.DIVCOD, D.DIVISION into #temp1          
	FROM WORKERSLOCAL WL WITH (NOLOCK)          
	INNER JOIN A024_DIVISIONES D ON WL.DIVISION = D.DIVCOD           
	WHERE WL.EMPRESA = @IDEMPRESA  AND D.ACTIVO = 'SI'          
          
	select  ROW_NUMBER() OVER(ORDER BY DIVCOD ASC) AS id , * INTO #TEMPNUMERADO from           
	#temp1          
          
          
	SET @CONTADOR = 1          
          
	SELECT @MAXIMO = MAX(id) FROM  #TEMPNUMERADO          
          
          
	WHILE ( @CONTADOR <= @MAXIMO )           
	BEGIN                 
          
	SELECT @DATO = DIVCOD FROM #TEMPNUMERADO          
	WHERE id = @CONTADOR          
            
	INSERT INTO #TEMP2           
	SELECT DISTINCT RUT, DIVISION          
	FROM WORKERSLOCAL WITH (NOLOCK)
	WHERE EMPRESA =@IDEMPRESA AND DIVISION = @DATO          
             
	SET @CONTADOR = @CONTADOR +1           
	END          
                   
	select  ROW_NUMBER() OVER(ORDER BY RUT ASC) AS id , * INTO #TEMPNUMERADO2 from           
	#TEMP2          
          
	SELECT @MAXIMO2 = ID FROM #TEMPNUMERADO2          
	SET @CONTADOR2 = 1             
          
	 WHILE ( @CONTADOR2 <= @MAXIMO2 )          
	 BEGIN          
             
	  SELECT @DATO2 = RUT  ,@DATO = DIVISION FROM #TEMPNUMERADO2           
	  WHERE id = @CONTADOR2          
          
	  INSERT INTO #FINAL          
	  SELECT TOP 1 AUTOR, VALIDADO , DIVISION          
	  FROM WORKERSLOCAL   WITH (NOLOCK)        
	  WHERE EMPRESA = @IDEMPRESA AND DIVISION = @DATO AND RUT = @DATO2 ORDER BY LOTE          
          
	  SET @CONTADOR2 = @CONTADOR2 +1          
	 END          
        
	 INSERT INTO #NO_ACREDITADOS  
	 SELECT COUNT (*)AS CANTIDAD_NO ,DIVISION as CODIGO_DIV, 'NO' AS VALIDO FROM  #FINAL           
	 WHERE AUTOR != 'SI'          
	 OR VALIDO != 'SI'          
	 GROUP BY DIVISION   
  
	 INSERT INTO #ACREDITADOS         
	 SELECT COUNT (*)AS CANTIDAD_SI, DIVISION as CODIGO_DIV , 'SI' AS VALIDO FROM  #FINAL           
	 WHERE AUTOR = 'SI'          
	 AND VALIDO = 'SI'          
	 GROUP BY DIVISION     
   
	SELECT ISNULL(A.SI_CANTIDAD,0) AS SI_CANTIDAD, ISNULL(SI_VALIDO,'SI') AS SI_VALIDO,ISNULL(A.DIVCOD,B.DIVCOD) AS CODIGO_DIV,ISNULL(B.NO_CANTIDAD,0) AS NO_CANTIDAD, ISNULL(B.NO_VALIDO,'NO') AS NO_VALIDO  
	FROM #ACREDITADOS A  
	FULL JOIN #NO_ACREDITADOS B  
	ON A.DIVCOD = B.DIVCOD  
  
          
END 
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_SELECT_ICERTRESUMEN_INFORMES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_ICERTRESUMEN_INFORMES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_ICERTRESUMEN_INFORMES_CTTA]
(
   @EMPRESA						NVARCHAR(10)
  ,@DIVISION					NVARCHAR(4)
  ,@SUMA_FUNCIONARIOS_CTTA		INT OUTPUT
  ,@SUMA_CERTIFICADOS_CTTA		INT OUTPUT
  ,@SUMA_NOCERTIFICADOS_CTTA	INT OUTPUT
  ,@SUMA_HISTORICO_CTTA			INT OUTPUT
  ,@SUMA_FUNCIONARIOS_MDTE		INT OUTPUT
  ,@SUMA_CERTIFICADOS_MDTE		INT OUTPUT
  ,@SUMA_NOCERTIFICADOS_MDTE	INT OUTPUT
  ,@SUMA_HISTORICO_MDTE			INT OUTPUT
) AS
BEGIN

	DECLARE @M_EMPRESA		NVARCHAR(10)
	DECLARE @M_ACRONIMO		NVARCHAR(50)
	DECLARE @M_MANDANTE		INT
	DECLARE @M_CONTEO_SI	INT
	DECLARE @M_CONTEO_NO	INT
	DECLARE @M_CONTEO_BL	INT


	CREATE TABLE #RESULTADOS (
		EMPRESA					NVARCHAR(12)	COLLATE DATABASE_DEFAULT NOT NULL, 
		ACRONIMO				NVARCHAR(50)	COLLATE DATABASE_DEFAULT NOT NULL, 
		MANDANTE				INT,
		CUENTA_FUNCIONARIOS		INT,
		CUENTA_CERTIFICADOS		INT,
		CUENTA_NOCERTIFICADOS	INT,
		CUENTA_HISTORICO		INT
	)
	
	DECLARE CursorResultados CURSOR
		FOR
	SELECT
		*
	FROM 
		(
			SELECT
				RUT,
				EMPRESA,
				ACRONIMO,
				VALIDADO,
				(
					SELECT
						COUNT(MANDANTE)
					FROM A027_MANDANTES
					WHERE 
						MANDANTE = EMPRESA AND
						MANDANTE <> '108'
				) AS MANDANTE
			FROM VW_WL_ACREDITADO
			WHERE
				DIVISION = @DIVISION AND
				EMPRESA = @EMPRESA
			UNION
			SELECT
				RUT,
				EMPRESA,
				ACRONIMO,
				VALIDADO,
				(
					SELECT
						COUNT(MANDANTE)
					FROM A027_MANDANTES
					WHERE
						MANDANTE = EMPRESA AND
						MANDANTE <> '108'
				) AS MANDANTE
			FROM VW_WL_NOMINA
			WHERE 
				DIVISION = @DIVISION AND
				EMPRESA = @EMPRESA
			UNION
			SELECT
				RUT,
				EMPRESA,
				ACRONIMO,
				'BL',
				(
					SELECT
						COUNT(MANDANTE)
					FROM A027_MANDANTES
					WHERE
						MANDANTE = EMPRESA AND
						MANDANTE <> '108'
				) AS MANDANTE
			FROM VW_WL_BLOQ
			WHERE
				DIVISION = @DIVISION AND
				EMPRESA = @EMPRESA
		) PVT
	PIVOT (
		COUNT(RUT)
		FOR [VALIDADO] IN ([SI],[NO],[BL]) 
	) AS P 
	ORDER BY ACRONIMO

	OPEN CursorResultados

	FETCH NEXT FROM CursorResultados INTO 
		@M_EMPRESA, 
		@M_ACRONIMO,
		@M_MANDANTE,
		@M_CONTEO_SI,
		@M_CONTEO_NO,
		@M_CONTEO_BL

	SET @SUMA_FUNCIONARIOS_CTTA = 0
	SET @SUMA_CERTIFICADOS_CTTA = 0
	SET @SUMA_NOCERTIFICADOS_CTTA = 0
	SET @SUMA_HISTORICO_CTTA = 0
	
	SET @SUMA_FUNCIONARIOS_MDTE = 0
	SET @SUMA_CERTIFICADOS_MDTE = 0
	SET @SUMA_NOCERTIFICADOS_MDTE = 0
	SET @SUMA_HISTORICO_MDTE = 0

	WHILE @@FETCH_STATUS = 0
		BEGIN

			INSERT INTO #RESULTADOS
					(
						EMPRESA,
						ACRONIMO,
						MANDANTE,
						CUENTA_FUNCIONARIOS,
						CUENTA_CERTIFICADOS,
						CUENTA_NOCERTIFICADOS,
						CUENTA_HISTORICO
					)
			  VALUES(
						@M_EMPRESA, 
						@M_ACRONIMO,
						@M_MANDANTE,
						@M_CONTEO_SI + @M_CONTEO_NO,
						@M_CONTEO_SI,
						@M_CONTEO_NO,
						@M_CONTEO_BL
					)
			
			IF(@M_MANDANTE > 0)
				BEGIN
					SET @SUMA_FUNCIONARIOS_MDTE = @SUMA_FUNCIONARIOS_MDTE + @M_CONTEO_SI + @M_CONTEO_NO
					SET @SUMA_CERTIFICADOS_MDTE = @SUMA_CERTIFICADOS_MDTE + @M_CONTEO_SI
					SET @SUMA_NOCERTIFICADOS_MDTE = @SUMA_NOCERTIFICADOS_MDTE + @M_CONTEO_NO
					SET @SUMA_HISTORICO_MDTE = @SUMA_HISTORICO_MDTE + @M_CONTEO_BL
				END

			SET @SUMA_FUNCIONARIOS_CTTA = @SUMA_FUNCIONARIOS_CTTA + @M_CONTEO_SI + @M_CONTEO_NO
			SET @SUMA_CERTIFICADOS_CTTA = @SUMA_CERTIFICADOS_CTTA + @M_CONTEO_SI
			SET @SUMA_NOCERTIFICADOS_CTTA = @SUMA_NOCERTIFICADOS_CTTA + @M_CONTEO_NO
			SET @SUMA_HISTORICO_CTTA = @SUMA_HISTORICO_CTTA + @M_CONTEO_BL

			FETCH NEXT FROM CursorResultados INTO 
				@M_EMPRESA, 
				@M_ACRONIMO,
				@M_MANDANTE,
				@M_CONTEO_SI,
				@M_CONTEO_NO,
				@M_CONTEO_BL
		END

	CLOSE CursorResultados

	DEALLOCATE CursorResultados

	SELECT
		EMPRESA,
		ACRONIMO,
		MANDANTE,
		CUENTA_FUNCIONARIOS,
		CUENTA_CERTIFICADOS,
		CUENTA_NOCERTIFICADOS,
		CUENTA_HISTORICO
	FROM #RESULTADOS

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_SELECT_ICERTRESUMENOST_INFORMES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_ICERTRESUMENOST_INFORMES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_ICERTRESUMENOST_INFORMES_CTTA]
(
   @EMPRESA						NVARCHAR(10)
  ,@DIVISION					NVARCHAR(4)
  ,@SUMA_FUNCIONARIOS_CTTA		INT OUTPUT
  ,@SUMA_CERTIFICADOS_CTTA		INT OUTPUT
  ,@SUMA_NOCERTIFICADOS_CTTA	INT OUTPUT
  ,@SUMA_HISTORICO_CTTA			INT OUTPUT
  ,@SUMA_FUNCIONARIOS_MDTE		INT OUTPUT
  ,@SUMA_CERTIFICADOS_MDTE		INT OUTPUT
  ,@SUMA_NOCERTIFICADOS_MDTE	INT OUTPUT
  ,@SUMA_HISTORICO_MDTE			INT OUTPUT
) AS
BEGIN

	DECLARE @M_OST			NVARCHAR(14)
	DECLARE @M_EMPRESA		NVARCHAR(10)
	DECLARE @M_ACRONIMO		NVARCHAR(50)
	DECLARE @M_MANDANTE		INT
	DECLARE @M_CONTEO_SI	INT
	DECLARE @M_CONTEO_NO	INT
	DECLARE @M_CONTEO_BL	INT


	CREATE TABLE #RESULTADOS (
		OST						NVARCHAR(14) COLLATE DATABASE_DEFAULT NOT NULL,
		EMPRESA					NVARCHAR(10) COLLATE DATABASE_DEFAULT NOT NULL,
		ACRONIMO				NVARCHAR(50) COLLATE DATABASE_DEFAULT NOT NULL,
		MANDANTE				INT,
		CUENTA_FUNCIONARIOS		INT,
		CUENTA_CERTIFICADOS		INT,
		CUENTA_NOCERTIFICADOS	INT,
		CUENTA_HISTORICO		INT
	)
	
	DECLARE CursorResultados CURSOR
		FOR
	SELECT * 
	FROM   (SELECT RUT, 
				   OST, 
				   EMPRESA, 
				   ACRONIMO, 
				   VALIDADO, 
				   (SELECT COUNT(MANDANTE) 
					FROM   A027_MANDANTES 
					WHERE  MANDANTE = EMPRESA 
						   AND MANDANTE <> '108') AS MANDANTE 
			FROM   VW_WL_ACREDITADO 
			WHERE  DIVISION = @DIVISION 
				   AND EMPRESA = @EMPRESA 
			UNION 
			SELECT RUT, 
				   OST, 
				   EMPRESA, 
				   ACRONIMO, 
				   VALIDADO, 
				   (SELECT COUNT(MANDANTE) 
					FROM   A027_MANDANTES 
					WHERE  MANDANTE = EMPRESA 
						   AND MANDANTE <> '108') AS MANDANTE 
			FROM   VW_WL_NOMINA 
			WHERE  DIVISION = @DIVISION 
				   AND EMPRESA = @EMPRESA 
			UNION 
			SELECT RUT, 
				   OST, 
				   EMPRESA, 
				   ACRONIMO, 
				   'BL', 
				   (SELECT COUNT(MANDANTE) 
					FROM   A027_MANDANTES 
					WHERE  MANDANTE = EMPRESA 
						   AND MANDANTE <> '108') AS MANDANTE 
			FROM   VW_WL_BLOQ 
			WHERE  DIVISION = @DIVISION 
				   AND EMPRESA = @EMPRESA) PVT 
		   PIVOT ( COUNT(RUT) 
				 FOR [VALIDADO] IN ([SI], [NO], [BL]) ) AS P 
	ORDER  BY ACRONIMO 

	OPEN CursorResultados

	FETCH NEXT FROM CursorResultados INTO
		@M_OST,
		@M_EMPRESA, 
		@M_ACRONIMO,
		@M_MANDANTE,
		@M_CONTEO_SI,
		@M_CONTEO_NO,
		@M_CONTEO_BL

	SET @SUMA_FUNCIONARIOS_CTTA = 0
	SET @SUMA_CERTIFICADOS_CTTA = 0
	SET @SUMA_NOCERTIFICADOS_CTTA = 0
	SET @SUMA_HISTORICO_CTTA = 0
	
	SET @SUMA_FUNCIONARIOS_MDTE = 0
	SET @SUMA_CERTIFICADOS_MDTE = 0
	SET @SUMA_NOCERTIFICADOS_MDTE = 0
	SET @SUMA_HISTORICO_MDTE = 0

	WHILE @@FETCH_STATUS = 0
		BEGIN

			INSERT INTO #RESULTADOS
					(
						OST,
						EMPRESA,
						ACRONIMO,
						MANDANTE,
						CUENTA_FUNCIONARIOS,
						CUENTA_CERTIFICADOS,
						CUENTA_NOCERTIFICADOS,
						CUENTA_HISTORICO
					)
			  VALUES(
						@M_OST,
						@M_EMPRESA, 
						@M_ACRONIMO,
						@M_MANDANTE,
						@M_CONTEO_SI + @M_CONTEO_NO,
						@M_CONTEO_SI,
						@M_CONTEO_NO,
						@M_CONTEO_BL
					)
			
			IF(@M_MANDANTE > 0)
				BEGIN
					SET @SUMA_FUNCIONARIOS_MDTE = @SUMA_FUNCIONARIOS_MDTE + @M_CONTEO_SI + @M_CONTEO_NO
					SET @SUMA_CERTIFICADOS_MDTE = @SUMA_CERTIFICADOS_MDTE + @M_CONTEO_SI
					SET @SUMA_NOCERTIFICADOS_MDTE = @SUMA_NOCERTIFICADOS_MDTE + @M_CONTEO_NO
					SET @SUMA_HISTORICO_MDTE = @SUMA_HISTORICO_MDTE + @M_CONTEO_BL
				END

			SET @SUMA_FUNCIONARIOS_CTTA = @SUMA_FUNCIONARIOS_CTTA + @M_CONTEO_SI + @M_CONTEO_NO
			SET @SUMA_CERTIFICADOS_CTTA = @SUMA_CERTIFICADOS_CTTA + @M_CONTEO_SI
			SET @SUMA_NOCERTIFICADOS_CTTA = @SUMA_NOCERTIFICADOS_CTTA + @M_CONTEO_NO
			SET @SUMA_HISTORICO_CTTA = @SUMA_HISTORICO_CTTA + @M_CONTEO_BL

			FETCH NEXT FROM CursorResultados INTO
				@M_OST,
				@M_EMPRESA, 
				@M_ACRONIMO,
				@M_MANDANTE,
				@M_CONTEO_SI,
				@M_CONTEO_NO,
				@M_CONTEO_BL
		END

	CLOSE CursorResultados

	DEALLOCATE CursorResultados

	SELECT
		OST,
		EMPRESA,
		ACRONIMO,
		MANDANTE,
		CUENTA_FUNCIONARIOS,
		CUENTA_CERTIFICADOS,
		CUENTA_NOCERTIFICADOS,
		CUENTA_HISTORICO
	FROM #RESULTADOS

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_SELECT_IFECHAEMPDIVISION_INFORMES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_IFECHAEMPDIVISION_INFORMES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_IFECHAEMPDIVISION_INFORMES_CTTA]
(
  @DIVISION				NVARCHAR(4)
 ,@EMPRESA				NVARCHAR(10)
 ,@ESTADO				NVARCHAR(2) = '' /*CERT*/
 ,@TEMP					NVARCHAR(1) = ''
 ,@CAMPOS_REPORT		NVARCHAR(500) OUTPUT
 ,@CAMPOS_CONDUCCION	NVARCHAR(500) OUTPUT
 ,@CAMPOS_DOC			NVARCHAR(500) OUTPUT
 ,@CAMPOS_FEC			NVARCHAR(500) OUTPUT
) AS
BEGIN
	DECLARE @HOY NVARCHAR(8) = dbo.hoy(getdate())
	DECLARE @ACRONIMO			NVARCHAR(50)
	DECLARE @CAMPOS_NCOM		NVARCHAR(500) = ''
	DECLARE @CAMPOS_COM			NVARCHAR(500) = ''
	DECLARE @CAMPOS_FEC_NCOM	NVARCHAR(500) = ''
	DECLARE @CAMPOS_FEC_COM		NVARCHAR(500) = ''
	DECLARE @CAMPOS_DCFEC_COM	NVARCHAR(500) = ''
	DECLARE @STR_ESTADO			NVARCHAR(100) = ''
	DECLARE @STR_CERT			NVARCHAR(100) = ''
	DECLARE @CAMPOS				NVARCHAR(500)
	DECLARE @VALIDADO			NVARCHAR(2)
	
	DECLARE @SQL1 NVARCHAR(MAX) = ''
	DECLARE @SQL2 NVARCHAR(MAX) = ''
	DECLARE @SQL3 NVARCHAR(MAX) = ''
	DECLARE @SQL4 NVARCHAR(MAX) = ''
	DECLARE @SQL5 NVARCHAR(MAX) = ''
	DECLARE @SQL6 NVARCHAR(MAX) = ''

	DECLARE @CRS_CAMPO NVARCHAR(30)
	DECLARE @CRS_CAMPO_BD NVARCHAR(30)
	DECLARE @CRS_ID_DOC_FEC INT
	DECLARE @CRS_ID_DOC INT
	DECLARE @CRS_TIPOPASE NVARCHAR(9)
	DECLARE @CRS_SUBEDOC NVARCHAR(2)
	DECLARE @CRS_TIPOPASEDOC NVARCHAR(9)
	DECLARE @CRS_ID_DOC_OPCION INT

	DECLARE @DISTINTO_C BIT
	DECLARE @TXT_CAMPOC NVARCHAR(50)

	SET @STR_ESTADO = ''
	SET @STR_CERT = ''
	SET @VALIDADO = NULL

	SET @CAMPOS_REPORT = ''
	SET @CAMPOS_CONDUCCION = ''
	SET @CAMPOS_DOC = ''
	SET @CAMPOS_FEC = ''

	IF(@ESTADO = 'SI')
		BEGIN
			SET @STR_ESTADO = ' AND WL.VALIDADO = ''SI'' '
			SET @STR_CERT = ' AND WL.AUTOR IN (''SI'',''NO'') '
			SET @VALIDADO = 'SI'
		END
	ELSE IF(@ESTADO = 'NO')
		BEGIN
			SET @STR_ESTADO = ' AND WL.VALIDADO = ''NO'' '
			SET @STR_CERT = ' AND WL.AUTOR IN (''SI'',''NO'') '
			SET @VALIDADO = 'NO'
		END
	ELSE IF(@ESTADO = 'BL')
		BEGIN
			SET @STR_CERT = ' AND WL.AUTOR = ''BL'' '
		END

	/**********[STR_CAMPOS]***************/

	DECLARE cursorCampos CURSOR
		FOR
	SELECT
		D.CAMPO,
		DF.CAMPO_BD,
		DF.ID_DOC_FEC,
		D.ID_DOC,
		DFT.TIPOPASE,
		D.SUBEDOC,
		DT.TIPOPASE AS TIPOPASEDOC,
		D.ID_DOC_OPCION
	FROM  DOCS_TIPOPASE AS DT
	INNER JOIN DOCS D
		ON DT.ID_DOC = D.ID_DOC
	LEFT OUTER JOIN DOCS_FEC DF
	INNER JOIN DOCS_FEC_TIPOPASE DFT
		ON DF.ID_DOC_FEC = DFT.ID_DOC_FEC
		ON D.ID_DOC = DF.ID_DOC_DEPEND
	WHERE
		(DF.ACTIVO = 'SI' OR D.ID_DOC = 62) AND
		(D.ACTIVO = 'SI' OR D.ID_DOC = 62) AND
		(D.ID_TIPO_PROPIETARIO = 1 OR D.ID_DOC = 62) AND
		(DF.VALIDO_MAYOR_HOY = 1 OR D.ID_DOC = 62) AND
		(DFT.TIPOPASE = 'TRABAJO' OR D.ID_DOC = 62) AND
		(DFT.DIVISION =  @DIVISION OR D.ID_DOC = 62) AND
		(DT.DIVISION =  @DIVISION) AND
		(DT.TIPOPASE = 'TRABAJO' OR DT.TIPOPASE = 'OPCIONAL' OR D.ID_DOC = 62)
	ORDER BY D.ORDEN ASC,  DF.ORDEN ASC
	
	OPEN cursorCampos

	FETCH NEXT FROM cursorCampos INTO 
		@CRS_CAMPO,
		@CRS_CAMPO_BD,
		@CRS_ID_DOC_FEC,
		@CRS_ID_DOC,
		@CRS_TIPOPASE,
		@CRS_SUBEDOC,
		@CRS_TIPOPASEDOC,
		@CRS_ID_DOC_OPCION

	SET @DISTINTO_C = 1
	SET @TXT_CAMPOC = ''

	WHILE @@FETCH_STATUS = 0
		BEGIN
			
			IF(@TXT_CAMPOC <> @CRS_CAMPO)
				BEGIN
					SET @DISTINTO_C = 1
				END
			ELSE
				BEGIN
					SET @DISTINTO_C = 0
				END

			SET @TXT_CAMPOC =  @CRS_CAMPO

			IF((@DISTINTO_C = 1 AND @CRS_SUBEDOC = 'SI' AND @CRS_TIPOPASEDOC = 'TRABAJO') OR (@CRS_ID_DOC = '62'))
				BEGIN

					SET @CAMPOS_REPORT = @CAMPOS_REPORT + ',' + @CRS_CAMPO

					IF(@CRS_ID_DOC_OPCION = 1)
						BEGIN
							SET @CAMPOS_CONDUCCION = @CAMPOS_CONDUCCION + ',' + @CRS_CAMPO
						END

					IF(@CRS_CAMPO_BD IS NOT NULL)
						BEGIN
							SET @CAMPOS_REPORT = @CAMPOS_REPORT + ',' + @CRS_CAMPO_BD

							IF(@CRS_ID_DOC_OPCION = 1)
								BEGIN
									SET @CAMPOS_CONDUCCION = @CAMPOS_CONDUCCION + ',' + @CRS_CAMPO_BD
								END
						END

				END
			ELSE
				BEGIN
					SET @CAMPOS_REPORT = @CAMPOS_REPORT + ',' + @CRS_CAMPO_BD

					IF(@CRS_ID_DOC_OPCION = 1)
						BEGIN
							SET @CAMPOS_CONDUCCION = @CAMPOS_CONDUCCION + ',' + @CRS_CAMPO_BD
						END
				END


			
			FETCH NEXT FROM cursorCampos INTO 
				@CRS_CAMPO,
				@CRS_CAMPO_BD,
				@CRS_ID_DOC_FEC,
				@CRS_ID_DOC,
				@CRS_TIPOPASE,
				@CRS_SUBEDOC,
				@CRS_TIPOPASEDOC,
				@CRS_ID_DOC_OPCION
		END

	CLOSE cursorCampos

	DEALLOCATE cursorCampos

	DECLARE cursorDocs CURSOR
		FOR
	SELECT
		D.CAMPO
	FROM DOCS D
	INNER JOIN DOCS_TIPOPASE DT
		ON D.ID_DOC = DT.ID_DOC
	WHERE (
				(DT.TIPOPASE = 'TRABAJO') OR
				(DT.TIPOPASE = 'OPCIONAL')
		  ) AND
		  (DT.DIVISION = @DIVISION) AND
		  (D.ACTIVO = 'SI') AND
		  (D.ID_TIPO_PROPIETARIO = 1 )
	ORDER BY CAMPO 
	
	OPEN cursorDocs

	FETCH NEXT FROM cursorDocs INTO 
		@CRS_CAMPO

	WHILE @@FETCH_STATUS = 0
		BEGIN
			
			SET @CAMPOS_DOC = @CAMPOS_DOC + ',' + @CRS_CAMPO		
			
			FETCH NEXT FROM cursorDocs INTO 
				@CRS_CAMPO
		END

	CLOSE cursorDocs

	DEALLOCATE cursorDocs


	DECLARE cursorFecs CURSOR
		FOR
	SELECT
		DF.CAMPO_BD
	FROM  DOCS_FEC DF
	INNER JOIN DOCS_FEC_TIPOPASE DFT
		ON DF.ID_DOC_FEC = DFT.ID_DOC_FEC
	WHERE
		(DFT.TIPOPASE = 'TRABAJO') AND
		(DFT.DIVISION = @DIVISION) AND
		(DF.VALIDO_MAYOR_HOY = 1)
	ORDER BY CAMPO_BD 
	
	OPEN cursorFecs

	FETCH NEXT FROM cursorFecs INTO 
		@CRS_CAMPO

	WHILE @@FETCH_STATUS = 0
		BEGIN
			
			SET @CAMPOS_FEC = @CAMPOS_FEC + ',' + @CRS_CAMPO		
			
			FETCH NEXT FROM cursorFecs INTO 
				@CRS_CAMPO
		END

	CLOSE cursorFecs

	DEALLOCATE cursorFecs

	/**********[CAMPOS]*********/
	
	SET @CAMPOS = NULL

	SET @CAMPOS_NCOM = '[SIN]'

	SET @CAMPOS = STUFF(
							(
								SELECT
									DISTINCT
										',' + D.CAMPO
								FROM DOCS D
								INNER JOIN	DOCS_TIPOPASE DT
									ON D.ID_DOC = DT.ID_DOC
								WHERE
									(DT.TIPOPASE = 'TRABAJO') AND
									(DT.DIVISION = @DIVISION) AND
									(D.ACTIVO = 'SI') AND
									(D.SUBEDOC = 'SI') AND
									(D.ID_TIPO_PROPIETARIO = 1) AND
									(D.COMUN = 0)
								FOR XML PATH('')
							), 1, 1, ''
					)
	
	IF(@CAMPOS IS NOT NULL)
		BEGIN
			SET @CAMPOS_NCOM = '[' + REPLACE(@CAMPOS, ',', '], [') + ']'
		END
	ELSE
		BEGIN
			SET @CAMPOS_NCOM = '[SIN]'
		END

	/************/

	SET @CAMPOS = NULL

	SET @CAMPOS_COM = '[SIN]'

	SET @CAMPOS = STUFF(
							(
								SELECT
									DISTINCT
										',' + D.CAMPO
								FROM DOCS D
								INNER JOIN	DOCS_TIPOPASE DT
									ON D.ID_DOC = DT.ID_DOC
								WHERE
									(DT.TIPOPASE = 'TRABAJO' OR (DT.TIPOPASE = 'OPCIONAL' AND D.ID_DOC = 62)) AND
									(DT.DIVISION = @DIVISION) AND
									(D.ACTIVO = 'SI') AND
									(D.SUBEDOC = 'SI') AND
									(D.ID_TIPO_PROPIETARIO = 1) AND
									(D.COMUN = 1)
								FOR XML PATH('')
							), 1, 1, ''
					)
	
	IF(@CAMPOS IS NOT NULL)
		BEGIN
			SET @CAMPOS_COM = '[' + REPLACE(@CAMPOS, ',', '], [') + ']'
		END
	ELSE
		BEGIN
			SET @CAMPOS_COM = '[SIN]'
		END

	/************/
	
	SET @CAMPOS = NULL

	SET @CAMPOS_FEC_NCOM = '[SIN]'

	SET @CAMPOS = STUFF(
						(
							SELECT
								DISTINCT
									',' + DOCS_FEC.CAMPO_BD
								FROM DOCS D
								INNER JOIN DOCS_TIPOPASE DT
									ON D.ID_DOC = DT.ID_DOC
								INNER JOIN DOCS_FEC
									ON DT.ID_DOC = DOCS_FEC.ID_DOC_DEPEND
								INNER JOIN DOCS_FEC_TIPOPASE
									ON DOCS_FEC.ID_DOC_FEC = DOCS_FEC_TIPOPASE.ID_DOC_FEC
								WHERE
									(D.ID_TIPO_PROPIETARIO = 1) AND
									(D.ACTIVO = 'SI') AND
									(DT.DIVISION = @DIVISION) AND
									(DOCS_FEC_TIPOPASE.DIVISION = @DIVISION) AND
									(D.COMUN = 0) AND
									(DOCS_FEC.COMUN = 0) 
							FOR XML PATH('')
						), 1, 1, ''
				) 
	
	IF(@CAMPOS IS NOT NULL)
		BEGIN
			SET @CAMPOS_FEC_NCOM = '[' + REPLACE(@CAMPOS, ',', '], [') + ']'
		END
	ELSE
		BEGIN
			SET @CAMPOS_FEC_NCOM = '[SIN]'
		END

	/************/

	SET @CAMPOS = NULL

	SET @CAMPOS_FEC_COM = '[SIN]'
				
	SET @CAMPOS = STUFF(
						(
							SELECT
								DISTINCT
									',' + DOCS_FEC.CAMPO_BD
								FROM DOCS D
								INNER JOIN DOCS_TIPOPASE DT
									ON D.ID_DOC = DT.ID_DOC
								INNER JOIN DOCS_FEC
									ON DT.ID_DOC = DOCS_FEC.ID_DOC_DEPEND
								INNER JOIN DOCS_FEC_TIPOPASE
									ON DOCS_FEC.ID_DOC_FEC = DOCS_FEC_TIPOPASE.ID_DOC_FEC
								WHERE
									(D.ID_TIPO_PROPIETARIO = 1) AND
									(D.ACTIVO = 'SI') AND
									(DT.DIVISION = @DIVISION) AND
									(DOCS_FEC_TIPOPASE.DIVISION = @DIVISION) AND
									(D.COMUN = 1) AND
									(DOCS_FEC.COMUN = 0)
							FOR XML PATH('')
						), 1, 1, ''
				)
	
	IF(@CAMPOS IS NOT NULL)
		BEGIN
			SET @CAMPOS_FEC_COM = '[' + REPLACE(@CAMPOS, ',', '], [') + ']'
		END
	ELSE
		BEGIN
			SET @CAMPOS_FEC_COM = '[SIN]'
		END
	/************/

	SET @CAMPOS = NULL

	SET @CAMPOS_DCFEC_COM = '[SIN]'

	SET @CAMPOS = STUFF(
						(
							SELECT
								DISTINCT
									',' + DOCS_FEC.CAMPO_BD
								FROM DOCS D
								INNER JOIN DOCS_TIPOPASE DT
									ON D.ID_DOC = DT.ID_DOC
								INNER JOIN DOCS_FEC
									ON DT.ID_DOC = DOCS_FEC.ID_DOC_DEPEND
								INNER JOIN DOCS_FEC_TIPOPASE
									ON DOCS_FEC.ID_DOC_FEC = DOCS_FEC_TIPOPASE.ID_DOC_FEC
								WHERE
									(D.ID_TIPO_PROPIETARIO = 1) AND
									(D.ACTIVO = 'SI') AND
									(DT.DIVISION = @DIVISION) AND
									(DOCS_FEC_TIPOPASE.DIVISION = @DIVISION) AND
									(D.COMUN = 1) AND
									(DOCS_FEC.COMUN = 1)
							FOR XML PATH('')
						), 1, 1, ''
				)
	
	IF(@CAMPOS IS NOT NULL)
		BEGIN
			SET @CAMPOS_DCFEC_COM = '[' + REPLACE(@CAMPOS, ',', '], [') + ']'
		END
	ELSE
		BEGIN
			SET @CAMPOS_DCFEC_COM = '[SIN]'
		END

	/************/

	DECLARE crsCabecera CURSOR FOR
		SELECT
			WL.EMPRESA,
			ACRONIMO
		FROM
			WORKERSLOCAL WL,
			ENTERPRISE
		WHERE
			DIVISION = @DIVISION AND
			WL.EMPRESA = IDEMPRESA AND
			WL.EMPRESA = @EMPRESA AND
			(
				(@TEMP = 'C' AND (EMPRESA NOT IN (SELECT MA7.MANDANTE FROM A027_MANDANTES AS MA7 WHERE MA7.ACTIVO = 'SI'))) OR
				(@TEMP = 'M' AND (EMPRESA  IN (SELECT MA7.MANDANTE FROM A027_MANDANTES AS MA7 WHERE MA7.ACTIVO = 'SI'))) OR
				(@TEMP = '')
				
			) AND
			(@VALIDADO IS NULL OR (WL.VALIDADO = @VALIDADO)) AND
			WL.AUTOR IN ('SI','NO')
		GROUP BY WL.EMPRESA, ACRONIMO
		ORDER BY ACRONIMO
	
	OPEN crsCabecera

	FETCH NEXT FROM crsCabecera
	INTO @EMPRESA, @ACRONIMO

	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @SQL1 = ''
			SET @SQL2 = ''
			SET @SQL3 = ''
			SET @SQL4 = ''
			SET @SQL5 = ''
			SET @SQL6 = ''
			
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('SELECT DISTINCT TOP 100 WL.RUT, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        ''' + @EMPRESA + ''' AS EMPRESA, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        ''' + @ACRONIMO + ''' AS ACRONIMO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        WD.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        WDC.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        DFW.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        DFWC.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        DCFWC.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        W.NOMBRES, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        W.APELLIDOS, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        ISNULL((SELECT TOP 1 LPF.LICONDLT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   LOTEPASESFUN AS LPF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN LOTEPASES AS LP ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON LPF.NLOTEPROC = LP.LOTENUM ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  ( LPF.SINOLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( LP.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( LPF.RUTLOTE = W.RUT ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( LPF.LICONDLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ''' + @HOY + ''' BETWEEN ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                           LOTEFINICIO AND LOTEFFINAL), ''NO'') ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        AS PASECONDUC, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        WL.VALIDADO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        WL.CONDUCTOR ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('FROM   WORKERSLOCAL AS WL ')) + ' '

			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DISTINCT DW.RUT AS RUTDOC, ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                                D.CAMPO, ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                                DW.ID_DOC ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                FROM   DOCS AS D ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_TIPOPASE AS DT ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                               ON D.ID_DOC = DT.ID_DOC ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_WORKERS AS DW ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                               ON D.ID_DOC = DW.ID_DOC ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                       INNER JOIN WORKERSLOCAL AS WL ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                               ON DW.RUT = WL.RUT ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                                  AND WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                                  AND DT.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                                  AND ''' + @HOY + ''' BETWEEN ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                                      WL.FINIPASE AND ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                                      WL.FFINPASE ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                                  AND AUTOR IN ( ''SI'', ''NO'' ) ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                                  AND DT.TIPOPASE = WL.TIPOPASE ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                WHERE  ( DT.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                          OR D.ID_DOC = 62 ) ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                          ' + @STR_ESTADO)) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                       AND ( DT.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                       AND ( D.ACTIVO = ''SI'' ) ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                       AND ( D.SUBEDOC = ''SI'' ) ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                       AND ( DW.EMPRESA = ''' + @EMPRESA + ''' ) ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                       AND ( D.COMUN = 0 )) PVT ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                               PIVOT ( COUNT(ID_DOC) ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO] IN (' + @CAMPOS_NCOM +') ) AS P) AS WD ')) + ' '
			SET @SQL2 = @SQL2 + ' ' + LTRIM(RTRIM('                    ON WD.RUTDOC = WL.RUT ')) + ' '

			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DISTINCT DW.RUT AS RUTDOC_COM, ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                                D.CAMPO, ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                                DW.ID_DOC ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                FROM   DOCS AS D ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_TIPOPASE AS DT ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                               ON D.ID_DOC = DT.ID_DOC ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_WORKERS AS DW ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                               ON D.ID_DOC = DW.ID_DOC ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                       INNER JOIN WORKERSLOCAL AS WL ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                               ON DW.RUT = WL.RUT ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                                  AND WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                                  AND DT.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                                  AND ''' + @HOY + ''' BETWEEN ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                                      WL.FINIPASE AND ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                                      WL.FFINPASE ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                                  AND AUTOR IN ( ''SI'', ''NO'' ) ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                                  AND DT.TIPOPASE = WL.TIPOPASE ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                WHERE  ( DT.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                          OR D.ID_DOC = 62 ) ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                          ' + @STR_ESTADO)) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                       AND ( DT.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                       AND ( D.ACTIVO = ''SI'' ) ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                       AND ( D.SUBEDOC = ''SI'' ) ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                       AND ( D.COMUN = 1 )) PVT ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                               PIVOT ( COUNT(ID_DOC) ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO] IN (' + @CAMPOS_COM +') ) AS P) AS WDC ')) + ' '
			SET @SQL3 = @SQL3 + ' ' + LTRIM(RTRIM('              ON WDC.RUTDOC_COM = WL.RUT ')) + ' '

			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DOCS_FEC.CAMPO_BD, ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                       DFW.RUT AS RUTDFW, ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                       DFW.FECHA ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                FROM   DOCS AS D ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_TIPOPASE AS DT ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                               ON D.ID_DOC = DT.ID_DOC ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_FEC ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                               ON DT.ID_DOC = ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                                  DOCS_FEC.ID_DOC_DEPEND ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_FEC_TIPOPASE ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                               ON DOCS_FEC.ID_DOC_FEC = ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                                  DOCS_FEC_TIPOPASE.ID_DOC_FEC ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_FEC_WORKERS AS DFW ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                               ON DFW.ID_DOC_FEC = ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                                  DOCS_FEC.ID_DOC_FEC ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                                  AND DFW.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                                  AND DFW.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                       INNER JOIN WORKERSLOCAL AS WL ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                               ON DFW.RUT = WL.RUT ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                                  AND WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                                  AND DFW.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                                  AND ''' + @HOY + ''' BETWEEN ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                                      WL.FINIPASE AND ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                                      WL.FFINPASE ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                                  AND AUTOR IN ( ''SI'', ''NO'' ) ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                                  AND DOCS_FEC_TIPOPASE.TIPOPASE ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                                      = ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                                      WL.TIPOPASE ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                WHERE  ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                       AND ( D.ACTIVO = N''SI'' ) ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                       AND ( DT.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                       AND ( DOCS_FEC_TIPOPASE.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                       AND ( D.COMUN = 0 ) ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                          ' + @STR_ESTADO)) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                       AND ( DOCS_FEC.COMUN = 0 )) AS PVT ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                               PIVOT ( MAX(FECHA) ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO_BD] IN (' + @CAMPOS_FEC_NCOM +') ) AS P) AS ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                       DFW ')) + ' '
			SET @SQL4 = @SQL4 + ' ' + LTRIM(RTRIM('                    ON DFW.RUTDFW = WL.RUT ')) + ' '

			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DOCS_FEC.CAMPO_BD, ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                       DFW.RUT AS RUT_DFWC, ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                       DFW.FECHA ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                FROM   DOCS AS D ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_TIPOPASE AS DT ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                               ON D.ID_DOC = DT.ID_DOC ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_FEC ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                               ON DT.ID_DOC = ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                                  DOCS_FEC.ID_DOC_DEPEND ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_FEC_TIPOPASE ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                               ON DOCS_FEC.ID_DOC_FEC = ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                                  DOCS_FEC_TIPOPASE.ID_DOC_FEC ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_FEC_WORKERS AS DFW ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                               ON DFW.ID_DOC_FEC = ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                                  DOCS_FEC.ID_DOC_FEC ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                                  AND DFW.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                       INNER JOIN WORKERSLOCAL AS WL ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                               ON DFW.RUT = WL.RUT ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                                  AND WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                                  AND DFW.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                                  AND ''' + @HOY + ''' BETWEEN ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                                      WL.FINIPASE AND ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                                      WL.FFINPASE ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                                  AND AUTOR IN ( ''SI'', ''NO'' ) ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('              AND DOCS_FEC_TIPOPASE.TIPOPASE ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                                      = ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                                      WL.TIPOPASE ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                WHERE  ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                          ' + @STR_ESTADO)) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                       AND ( D.ACTIVO = N''SI'' ) ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                       AND ( DT.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                       AND ( DOCS_FEC_TIPOPASE.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                       AND ( D.COMUN = 1 ) ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                       AND ( DOCS_FEC.COMUN = 0 )) AS PVT ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                               PIVOT ( MAX(FECHA) ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO_BD] IN (' + @CAMPOS_FEC_COM +') ) AS ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                               p) AS ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                                                           DFWC ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('                    ON DFWC.RUT_DFWC = WL.RUT ')) + ' '
			SET @SQL5 = @SQL5 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '

			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DOCS_FEC.CAMPO_BD, ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                       DFW.RUT AS RUTDCFWC, ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                       DFW.FECHA ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                FROM   DOCS AS D ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_TIPOPASE AS DT ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                               ON D.ID_DOC = DT.ID_DOC ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_FEC ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                               ON DT.ID_DOC = ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                                  DOCS_FEC.ID_DOC_DEPEND ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_FEC_TIPOPASE ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                               ON DOCS_FEC.ID_DOC_FEC = ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                                  DOCS_FEC_TIPOPASE.ID_DOC_FEC ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                       INNER JOIN DOCS_FEC_WORKERS AS DFW ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                               ON DFW.ID_DOC_FEC = ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                                  DOCS_FEC.ID_DOC_FEC ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                                  AND DFW.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                       INNER JOIN WORKERSLOCAL AS WL ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                               ON DFW.RUT = WL.RUT ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                                 AND WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                                  AND DFW.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                                  AND ''' + @HOY + ''' BETWEEN ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                                      WL.FINIPASE AND ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                                      WL.FFINPASE ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                                  AND AUTOR IN ( ''SI'', ''NO'' ) ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                                  AND DOCS_FEC_TIPOPASE.TIPOPASE = WL.TIPOPASE ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                WHERE  ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                       AND ( D.ACTIVO = N''SI'' ) ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                       AND ( DT.DIVISION = N''LB'' ) ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                       AND ( DOCS_FEC_TIPOPASE.DIVISION = N''LB'' ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                           ) ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                       AND ( D.COMUN = 1 ) ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                          ' + @STR_ESTADO)) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                       AND ( DOCS_FEC.COMUN = 1 )) AS PVT ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                               PIVOT ( MAX(FECHA) ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO_BD] IN (' + @CAMPOS_DCFEC_COM +') ) AS P) AS DCFWC ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('                    ON DCFWC.RUTDCFWC = WL.RUT ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('       INNER JOIN WORKERS AS W ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('               ON W.RUT = WL.RUT ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('       AND WL.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('       AND ''' + @HOY + ''' BETWEEN WL.FINIPASE AND WL.FFINPASE')) + ' '
			SET @SQL6 = @SQL6 + ' ' + LTRIM(RTRIM('       ' + @STR_CERT + ' ' + @STR_ESTADO))
			EXEC(@SQL1 + @SQL2 + @SQL3 + @SQL4 + @SQL5 + @SQL6)
						

			FETCH NEXT FROM crsCabecera
			INTO @EMPRESA, @ACRONIMO
		END
	
	CLOSE crsCabecera
	DEALLOCATE crsCabecera

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_SELECT_IFECHAFUNCDIVISION_INFORMES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_IFECHAFUNCDIVISION_INFORMES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_IFECHAFUNCDIVISION_INFORMES_CTTA]
(
  @DIVISION				NVARCHAR(4)
 ,@EMPRESA				NVARCHAR(10)
 ,@ESTADO				NVARCHAR(2) = '' /*CERT*/
 ,@CAMPOS_REPORT		NVARCHAR(500) OUTPUT
 ,@CAMPOS_CONDUCCION	NVARCHAR(500) OUTPUT
 ,@CAMPOS_DOC			NVARCHAR(500) OUTPUT
 ,@CAMPOS_FEC			NVARCHAR(500) OUTPUT
) AS
BEGIN
	DECLARE @HOY NVARCHAR(8) = dbo.hoy(getdate())
	DECLARE @CAMPOS_PVT_DOC		NVARCHAR(500) = ''
	DECLARE @CAMPOS_PVT_FEC		NVARCHAR(500) = ''
	DECLARE @CAMPOS				NVARCHAR(500)
	
	DECLARE @SQL1 NVARCHAR(MAX) = ''

	DECLARE @CRS_CAMPO NVARCHAR(30)
	DECLARE @CRS_CAMPO_BD NVARCHAR(30)
	DECLARE @CRS_ID_DOC_FEC INT
	DECLARE @CRS_ID_DOC INT
	DECLARE @CRS_TIPOPASE NVARCHAR(9)
	DECLARE @CRS_SUBEDOC NVARCHAR(2)
	DECLARE @CRS_TIPOPASEDOC NVARCHAR(9)
	DECLARE @CRS_ID_DOC_OPCION INT

	DECLARE @DISTINTO_C BIT
	DECLARE @TXT_CAMPOC NVARCHAR(50)


	SET @CAMPOS_REPORT = ''
	SET @CAMPOS_CONDUCCION = ''
	SET @CAMPOS_DOC = ''
	SET @CAMPOS_FEC = ''


	/**********[STR_CAMPOS]***************/

	DECLARE cursorCampos CURSOR
		FOR
	SELECT
		D.CAMPO,
		DF.CAMPO_BD,
		DF.ID_DOC_FEC,
		D.ID_DOC,
		DFT.TIPOPASE,
		D.SUBEDOC,
		DT.TIPOPASE AS TIPOPASEDOC,
		D.ID_DOC_OPCION
	FROM DOCS_TIPOPASE AS DT
	INNER JOIN DOCS AS D
		ON DT.ID_DOC = D.ID_DOC
	LEFT OUTER JOIN DOCS_FEC AS DF
		ON D.ID_DOC = DF.ID_DOC_DEPEND AND (DF.ACTIVO = N'SI')
	LEFT OUTER JOIN DOCS_FEC_TIPOPASE AS DFT
		ON DF.ID_DOC_FEC = DFT.ID_DOC_FEC AND (DFT.DIVISION =  @DIVISION)
	WHERE
		(D.ACTIVO = N'SI') AND
		(D.ID_TIPO_PROPIETARIO = 1) AND
		(DFT.TIPOPASE = N'TRABAJO' OR D.ID_DOC=64 OR D.ID_DOC = 62) AND
		(DT.DIVISION = @DIVISION) AND
		(DT.TIPOPASE = N'TRABAJO' OR DT.TIPOPASE = N'OPCIONAL')
	ORDER BY D.ORDEN ASC,  DF.ORDEN ASC
	
	OPEN cursorCampos

	FETCH NEXT FROM cursorCampos INTO 
		@CRS_CAMPO,
		@CRS_CAMPO_BD,
		@CRS_ID_DOC_FEC,
		@CRS_ID_DOC,
		@CRS_TIPOPASE,
		@CRS_SUBEDOC,
		@CRS_TIPOPASEDOC,
		@CRS_ID_DOC_OPCION

	SET @DISTINTO_C = 1
	SET @TXT_CAMPOC = ''

	WHILE @@FETCH_STATUS = 0
		BEGIN
			
			IF(@TXT_CAMPOC <> @CRS_CAMPO)
				BEGIN
					SET @DISTINTO_C = 1
				END
			ELSE
				BEGIN
					SET @DISTINTO_C = 0
				END

			SET @TXT_CAMPOC =  @CRS_CAMPO

			IF((@DISTINTO_C = 1 AND @CRS_SUBEDOC = 'SI' AND @CRS_TIPOPASEDOC = 'TRABAJO') OR (@CRS_ID_DOC = '62'))
				BEGIN

					SET @CAMPOS_REPORT = @CAMPOS_REPORT + ',' + @CRS_CAMPO

					IF(@CRS_ID_DOC_OPCION = 1)
						BEGIN
							SET @CAMPOS_CONDUCCION = @CAMPOS_CONDUCCION + ',' + @CRS_CAMPO
						END

					IF(@CRS_CAMPO_BD IS NOT NULL)
						BEGIN
							SET @CAMPOS_REPORT = @CAMPOS_REPORT + ',' + @CRS_CAMPO_BD

							IF(@CRS_ID_DOC_OPCION = 1)
								BEGIN
									SET @CAMPOS_CONDUCCION = @CAMPOS_CONDUCCION + ',' + @CRS_CAMPO_BD
								END
						END

				END
			ELSE
				BEGIN
					IF(@CRS_CAMPO_BD IS NOT NULL)
						BEGIN
							SET @CAMPOS_REPORT = @CAMPOS_REPORT + ',' + @CRS_CAMPO_BD

							IF(@CRS_ID_DOC_OPCION = 1)
								BEGIN
									SET @CAMPOS_CONDUCCION = @CAMPOS_CONDUCCION + ',' + @CRS_CAMPO_BD
								END
						END
				END


			
			FETCH NEXT FROM cursorCampos INTO 
				@CRS_CAMPO,
				@CRS_CAMPO_BD,
				@CRS_ID_DOC_FEC,
				@CRS_ID_DOC,
				@CRS_TIPOPASE,
				@CRS_SUBEDOC,
				@CRS_TIPOPASEDOC,
				@CRS_ID_DOC_OPCION
		END

	CLOSE cursorCampos

	DEALLOCATE cursorCampos

	DECLARE cursorDocs CURSOR
		FOR
	SELECT
		DISTINCT D.CAMPO
	FROM DOCS D
	INNER JOIN DOCS_TIPOPASE DT
		ON D.ID_DOC = DT.ID_DOC
	WHERE 
		((DT.TIPOPASE = 'TRABAJO') OR (DT.TIPOPASE = 'OPCIONAL')) AND
		(DT.DIVISION = @DIVISION) AND
		(D.ACTIVO = 'SI') AND
		(D.ID_TIPO_PROPIETARIO = 1 )
	ORDER BY D.CAMPO 
	
	OPEN cursorDocs

	FETCH NEXT FROM cursorDocs INTO 
		@CRS_CAMPO

	WHILE @@FETCH_STATUS = 0
		BEGIN
			
			SET @CAMPOS_DOC = @CAMPOS_DOC + ',' + @CRS_CAMPO		
			
			FETCH NEXT FROM cursorDocs INTO 
				@CRS_CAMPO
		END

	CLOSE cursorDocs

	DEALLOCATE cursorDocs


	DECLARE cursorFecs CURSOR
		FOR
	SELECT
		DISTINCT DF.CAMPO_BD
	FROM  DOCS_FEC DF
	INNER JOIN DOCS_FEC_TIPOPASE DFT
		ON DF.ID_DOC_FEC = DFT.ID_DOC_FEC
	WHERE
		(DFT.TIPOPASE = 'TRABAJO') AND
		(DFT.DIVISION = @DIVISION)
	ORDER BY DF.CAMPO_BD 
	
	OPEN cursorFecs

	FETCH NEXT FROM cursorFecs INTO 
		@CRS_CAMPO

	WHILE @@FETCH_STATUS = 0
		BEGIN
			
			SET @CAMPOS_FEC = @CAMPOS_FEC + ',' + @CRS_CAMPO		
			
			FETCH NEXT FROM cursorFecs INTO 
				@CRS_CAMPO
		END

	CLOSE cursorFecs

	DEALLOCATE cursorFecs

	/**********[CAMPOS]*********/


	SET @CAMPOS = NULL

	SET @CAMPOS_PVT_DOC = '[SIN]'

	
	SET @CAMPOS = STUFF(
						 (
							SELECT
								DISTINCT
									',' + D.CAMPO
							FROM DOCS D
							INNER JOIN DOCS_TIPOPASE DT
								ON D.ID_DOC = DT.ID_DOC
							WHERE
								(DT.TIPOPASE = 'TRABAJO' OR (DT.TIPOPASE = 'OPCIONAL' AND D.ID_DOC = 62)) AND
								(DT.DIVISION = @DIVISION) AND
								(D.ACTIVO = 'SI') AND
								(D.SUBEDOC = 'SI') AND
								(D.ID_TIPO_PROPIETARIO = 1)
						   FOR XML PATH('')
						  )
						  ,1,1,''
						 )

	IF(@CAMPOS IS NOT NULL)
		BEGIN
			SET @CAMPOS_PVT_DOC = '[' + REPLACE(@CAMPOS, ',', '], [') + ']'
		END
	ELSE
		BEGIN
			SET @CAMPOS_PVT_DOC = '[SIN]'
		END

	/************/
	
	SET @CAMPOS = NULL

	SET @CAMPOS_PVT_FEC = '[SIN]'

	SET @CAMPOS = STUFF(
						 (
							SELECT
								DISTINCT
									',' + DOCS_FEC.CAMPO_BD
							FROM DOCS D
							INNER JOIN DOCS_TIPOPASE DT
								ON D.ID_DOC = DT.ID_DOC
							INNER JOIN DOCS_FEC
								ON DT.ID_DOC = DOCS_FEC.ID_DOC_DEPEND
							INNER JOIN DOCS_FEC_TIPOPASE
								ON DOCS_FEC.ID_DOC_FEC = DOCS_FEC_TIPOPASE.ID_DOC_FEC
							WHERE
								(D.ID_TIPO_PROPIETARIO = 1) AND
								(D.ACTIVO = N'SI') AND
								(DT.DIVISION = @DIVISION) AND
								(DOCS_FEC_TIPOPASE.DIVISION = @DIVISION)
						   FOR XML PATH('')
						 )
						 ,1,1,''
					)
	
	IF(@CAMPOS IS NOT NULL)
		BEGIN
			SET @CAMPOS_PVT_FEC = '[' + REPLACE(@CAMPOS, ',', '], [') + ']'
		END
	ELSE
		BEGIN
			SET @CAMPOS_PVT_FEC = '[SIN]'
		END

	/************/
	--PRINT('@EMPRESA:' + @EMPRESA)
	--PRINT('@DIVISION:' + @DIVISION)
	--PRINT('@CAMPOS_PVT_DOC:' + @CAMPOS_PVT_DOC)
	--PRINT('@CAMPOS_PVT_FEC:' + @CAMPOS_PVT_FEC)
	--PRINT('@ESTADO:' + @ESTADO)
	--PRINT('@CAMPOS_REPORT:' + @CAMPOS_REPORT)
	--PRINT('@CAMPOS_CONDUCCION:' + @CAMPOS_CONDUCCION)
	--PRINT('@CAMPOS_DOC:' + @CAMPOS_DOC)
	--PRINT('@CAMPOS_FEC:' + @CAMPOS_FEC)

	/************/

	IF(@ESTADO = 'BL')
		BEGIN
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('SELECT TABLITA.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       W.ROL, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       COALESCE((SELECT TOP 1 [dbo].[fn_WL_Conductor] (W.RUT, ''' + @DIVISION + ''', ''' + @HOY + ''') FROM TAB_TIPOPASE_DIVISION), -1) AS CERT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('FROM   (SELECT WL.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               DOCS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               FECHAS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               ISNULL((SELECT TOP 1 LPF.LICONDLT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                       FROM   LOTEPASESFUN AS LPF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              INNER JOIN LOTEPASES AS LP ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                      ON LPF.NLOTEPROC = LP.LOTENUM ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                       WHERE  ( LPF.SINOLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              AND ( LP.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              AND ( LPF.RUTLOTE = WL.RUT ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              AND ( LPF.LICONDLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              AND ''' + @HOY + ''' BETWEEN LOTEFINICIO AND LOTEFFINAL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      ), ''NO'') ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               AS PASECONDUC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('        FROM   VW_WL_BLOQ WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   (SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               INNER JOIN VW_WL_BLOQ WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                       ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          AND ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               WL.EMPRESA = F.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          AND ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        WHERE  F.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND F.DIVISION = ( CASE ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                                    WHEN F.COMUN_DIV = ''SI'' THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                                    ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                                  END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( ( F.COMUN = 0 AND F.TIPOPASE = ''TRABAJO'' ) OR ( F.TIPOPASE = ''OPCIONAL'' AND F.ID_DOC = 62 ) ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               INNER JOIN VW_WL_BLOQ WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                       ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          AND ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND F.DIVISION = ( CASE ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                                    WHEN F.COMUN_DIV = ''SI'' THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                                    ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                                  END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND F.COMUN = 1 ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( F.TIPOPASE = ''TRABAJO'' OR F.ID_DOC = 62 )) PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       PIVOT ( COUNT(ID_DOC) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                             FOR [CAMPO] IN (' + @CAMPOS_PVT_DOC + ') ) AS p) AS DOCS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                            ON WL.RUT = DOCS.RUTD ')) + ' '

			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   (SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               INNER JOIN VW_WL_BLOQ WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                       ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('															 AND D.EMPRESA = WL.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        WHERE  D.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( DCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( DFCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               INNER JOIN VW_WL_BLOQ WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                       ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('															 AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                           AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( DCOMUN = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( DFCOMUN IN( 1, 0 ) )) AS PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       PIVOT ( MAX(FECHA) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                             FOR [CAMPO_BD] IN (' + @CAMPOS_PVT_FEC + ') ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AS p) AS FECHAS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                            ON WL.RUT = FECHAS.RUTF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('        WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               AND WL.DIVISION = ''' + @DIVISION + ''') AS TABLITA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       INNER JOIN WORKERS W ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               ON W.RUT = TABLITA.RUT '))
		END
	ELSE IF(@ESTADO = 'SI')
		BEGIN
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('SELECT WL.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       DOCS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       FECHAS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       ISNULL((SELECT TOP 1 LPF.LICONDLT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               FROM   LOTEPASESFUN AS LPF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      INNER JOIN LOTEPASES AS LP ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              ON LPF.NLOTEPROC = LP.LOTENUM ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               WHERE  ( LPF.SINOLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LP.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LPF.RUTLOTE = WL.RUT ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LPF.LICONDLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ''' + @HOY + ''' BETWEEN LOTEFINICIO AND LOTEFFINAL) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       , ''NO'') ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AS PASECONDUC, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       COALESCE((SELECT TOP 1 [dbo].[fn_WL_Conductor] (WL.RUT, ''' + @DIVISION + ''', ''' + @HOY + ''') FROM TAB_TIPOPASE_DIVISION), -1) AS CERT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('FROM   VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.EMPRESA = F.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  F.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND WL.VALIDADO = ''SI'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.DIVISION = ( CASE ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            WHEN F.COMUN_DIV = ''SI'' THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( ( F.COMUN = 0 AND F.TIPOPASE = ''TRABAJO'' ) OR ( F.TIPOPASE = ''OPCIONAL'' AND F.ID_DOC = 62 ) ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND WL.VALIDADO = ''SI'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.DIVISION = ( CASE')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('															WHEN F.COMUN_DIV = ''SI'' THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.COMUN = 1 ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( F.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                              OR F.ID_DOC = 62 )) PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                               PIVOT ( COUNT(ID_DOC) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO] IN (' + @CAMPOS_PVT_DOC + ') ) AS p) AS DOCS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                    ON WL.RUT = DOCS.RUTD ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                 INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.EMPRESA = WL.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  D.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND WL.VALIDADO = ''SI'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DFCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND WL.VALIDADO = ''SI'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DCOMUN = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DFCOMUN IN( 1, 0 ) )) AS PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                               PIVOT ( MAX(FECHA) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO_BD] IN (' + @CAMPOS_PVT_FEC + ') ) AS p) AS FECHAS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                    ON WL.RUT = FECHAS.RUTF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AND WL.VALIDADO = ''SI'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AND WL.AUTOR = ''SI'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AND WL.DIVISION = ''' + @DIVISION + ''' '))
		END
	ELSE IF(@ESTADO = 'NO')
		BEGIN
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('SELECT WL.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       DOCS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       FECHAS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       ISNULL((SELECT TOP 1 LPF.LICONDLT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               FROM   LOTEPASESFUN AS LPF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      INNER JOIN LOTEPASES AS LP ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              ON LPF.NLOTEPROC = LP.LOTENUM ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               WHERE  ( LPF.SINOLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LP.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LPF.RUTLOTE = WL.RUT ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LPF.LICONDLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ''' + @HOY + ''' BETWEEN LOTEFINICIO AND LOTEFFINAL) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       , ''NO'') ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AS PASECONDUC, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       COALESCE((SELECT TOP 1 [dbo].[fn_WL_Conductor] (WL.RUT, ''' + @DIVISION + ''', ''' + @HOY + ''') FROM TAB_TIPOPASE_DIVISION), -1) AS CERT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('FROM   VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.EMPRESA = F.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  F.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.DIVISION = ( CASE ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            WHEN F.COMUN_DIV = ''SI'' THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( ( F.COMUN = 0 AND F.TIPOPASE = ''TRABAJO'' ) OR ( F.TIPOPASE = ''OPCIONAL'' AND F.ID_DOC = 62 ) ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('            ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.DIVISION = ( CASE ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            WHEN F.COMUN_DIV = ''SI'' THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.COMUN = 1 ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( F.TIPOPASE = ''TRABAJO'' OR F.ID_DOC = 62 )) PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                               PIVOT ( COUNT(ID_DOC) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO] IN (' + @CAMPOS_PVT_DOC + ') ) AS p) AS DOCS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                    ON WL.RUT = DOCS.RUTD ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.EMPRESA = WL.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  D.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DFCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DCOMUN = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DFCOMUN IN( 1, 0 ) )) AS PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                               PIVOT ( MAX(FECHA) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO_BD] IN (' + @CAMPOS_PVT_FEC + ') ) AS p) AS FECHAS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                    ON WL.RUT = FECHAS.RUTF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AND WL.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AND WL.VALIDADO = ''NO'' ')) + ' '
		END
	ELSE /* @ESTADO = '' */
		BEGIN
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('SELECT WL.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       DOCS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       FECHAS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       ISNULL((SELECT TOP 1 LPF.LICONDLT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               FROM   LOTEPASESFUN AS LPF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      INNER JOIN LOTEPASES AS LP ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              ON LPF.NLOTEPROC = LP.LOTENUM ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               WHERE  ( LPF.SINOLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LP.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LPF.RUTLOTE = WL.RUT ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LPF.LICONDLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ''' + @HOY + ''' BETWEEN LOTEFINICIO AND LOTEFFINAL) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       , ''NO'') ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AS PASECONDUC, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       COALESCE((SELECT TOP 1 [dbo].[fn_WL_Conductor] (WL.RUT, ''' + @DIVISION + ''', ''' + @HOY + ''') FROM TAB_TIPOPASE_DIVISION), -1) AS CERT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('FROM   VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.EMPRESA = F.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  F.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.DIVISION = ( CASE ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            WHEN ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                           F.COMUN_DIV = ''SI'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( ( F.COMUN = 0 AND F.TIPOPASE = ''TRABAJO'' ) OR ( F.TIPOPASE = ''OPCIONAL'' AND F.ID_DOC = 62 ) ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.DIVISION = ( CASE ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            WHEN F.COMUN_DIV = ''SI'' THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.COMUN = 1 ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( F.TIPOPASE = ''TRABAJO'' OR F.ID_DOC = 62 )) PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                               PIVOT ( COUNT(ID_DOC) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO] IN (' + @CAMPOS_PVT_DOC + ') ) AS p) AS DOCS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                    ON WL.RUT = DOCS.RUTD ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.EMPRESA = WL.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  D.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DFCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DCOMUN = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DFCOMUN IN( 1, 0 ) )) AS PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                               PIVOT ( MAX(FECHA) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO_BD] IN (' + @CAMPOS_PVT_FEC + ') ) AS p) AS FECHAS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                    ON WL.RUT = FECHAS.RUTF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AND WL.DIVISION = ''' + @DIVISION + ''' ')) + ' '
		END

	EXEC(@SQL1)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_SELECT_IFECHAFUNCDIVISIONOST_INFORMES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_IFECHAFUNCDIVISIONOST_INFORMES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_IFECHAFUNCDIVISIONOST_INFORMES_CTTA]
(
  @DIVISION				NVARCHAR(4)
 ,@EMPRESA				NVARCHAR(10)
 ,@OST					NVARCHAR(14)
 ,@ESTADO				NVARCHAR(2) = '' /*CERT*/
 ,@CAMPOS_REPORT		NVARCHAR(500) OUTPUT
 ,@CAMPOS_CONDUCCION	NVARCHAR(500) OUTPUT
 ,@CAMPOS_DOC			NVARCHAR(500) OUTPUT
 ,@CAMPOS_FEC			NVARCHAR(500) OUTPUT
) AS
BEGIN
	DECLARE @HOY NVARCHAR(8) = dbo.hoy(getdate())
	DECLARE @CAMPOS_PVT_DOC		NVARCHAR(500) = ''
	DECLARE @CAMPOS_PVT_FEC		NVARCHAR(500) = ''
	DECLARE @CAMPOS				NVARCHAR(500)
	
	DECLARE @SQL1 NVARCHAR(MAX) = ''

	DECLARE @CRS_CAMPO NVARCHAR(30)
	DECLARE @CRS_CAMPO_BD NVARCHAR(30)
	DECLARE @CRS_ID_DOC_FEC INT
	DECLARE @CRS_ID_DOC INT
	DECLARE @CRS_TIPOPASE NVARCHAR(9)
	DECLARE @CRS_SUBEDOC NVARCHAR(2)
	DECLARE @CRS_TIPOPASEDOC NVARCHAR(9)
	DECLARE @CRS_ID_DOC_OPCION INT

	DECLARE @DISTINTO_C BIT
	DECLARE @TXT_CAMPOC NVARCHAR(50)


	SET @CAMPOS_REPORT = ''
	SET @CAMPOS_CONDUCCION = ''
	SET @CAMPOS_DOC = ''
	SET @CAMPOS_FEC = ''


	/**********[STR_CAMPOS]***************/

	DECLARE cursorCampos CURSOR
		FOR
	SELECT
		D.CAMPO,
		DF.CAMPO_BD,
		DF.ID_DOC_FEC,
		D.ID_DOC,
		DFT.TIPOPASE,
		D.SUBEDOC,
		DT.TIPOPASE AS TIPOPASEDOC,
		D.ID_DOC_OPCION
	FROM DOCS_TIPOPASE AS DT
	INNER JOIN DOCS AS D
		ON DT.ID_DOC = D.ID_DOC
	LEFT OUTER JOIN DOCS_FEC AS DF
		ON D.ID_DOC = DF.ID_DOC_DEPEND AND (DF.ACTIVO = N'SI')
	LEFT OUTER JOIN DOCS_FEC_TIPOPASE AS DFT
		ON DF.ID_DOC_FEC = DFT.ID_DOC_FEC AND (DFT.DIVISION =  @DIVISION)
	WHERE
		(D.ACTIVO = N'SI') AND
		(D.ID_TIPO_PROPIETARIO = 1) AND
		(DFT.TIPOPASE = N'TRABAJO' OR D.ID_DOC=64 OR D.ID_DOC = 62)  AND
		(DT.DIVISION =  @DIVISION) AND
		(DT.TIPOPASE = N'TRABAJO' OR DT.TIPOPASE = N'OPCIONAL')
	ORDER BY D.ORDEN ASC,  DF.ORDEN ASC
	
	OPEN cursorCampos

	FETCH NEXT FROM cursorCampos INTO 
		@CRS_CAMPO,
		@CRS_CAMPO_BD,
		@CRS_ID_DOC_FEC,
		@CRS_ID_DOC,
		@CRS_TIPOPASE,
		@CRS_SUBEDOC,
		@CRS_TIPOPASEDOC,
		@CRS_ID_DOC_OPCION

	SET @DISTINTO_C = 1
	SET @TXT_CAMPOC = ''

	WHILE @@FETCH_STATUS = 0
		BEGIN
			
			IF(@TXT_CAMPOC <> @CRS_CAMPO)
				BEGIN
					SET @DISTINTO_C = 1
				END
			ELSE
				BEGIN
					SET @DISTINTO_C = 0
				END

			SET @TXT_CAMPOC =  @CRS_CAMPO

			IF((@DISTINTO_C = 1 AND @CRS_SUBEDOC = 'SI' AND @CRS_TIPOPASEDOC = 'TRABAJO') OR (@CRS_ID_DOC = '62'))
				BEGIN

					SET @CAMPOS_REPORT = @CAMPOS_REPORT + ',' + @CRS_CAMPO

					IF(@CRS_ID_DOC_OPCION = 1)
						BEGIN
							SET @CAMPOS_CONDUCCION = @CAMPOS_CONDUCCION + ',' + @CRS_CAMPO
						END

					IF(@CRS_CAMPO_BD IS NOT NULL)
						BEGIN
							SET @CAMPOS_REPORT = @CAMPOS_REPORT + ',' + @CRS_CAMPO_BD

							IF(@CRS_ID_DOC_OPCION = 1)
								BEGIN
									SET @CAMPOS_CONDUCCION = @CAMPOS_CONDUCCION + ',' + @CRS_CAMPO_BD
								END
						END

				END
			ELSE
				BEGIN
					IF(@CRS_CAMPO_BD IS NOT NULL)
						BEGIN
							SET @CAMPOS_REPORT = @CAMPOS_REPORT + ',' + @CRS_CAMPO_BD

							IF(@CRS_ID_DOC_OPCION = 1)
								BEGIN
									SET @CAMPOS_CONDUCCION = @CAMPOS_CONDUCCION + ',' + @CRS_CAMPO_BD
								END
						END
				END


			
			FETCH NEXT FROM cursorCampos INTO 
				@CRS_CAMPO,
				@CRS_CAMPO_BD,
				@CRS_ID_DOC_FEC,
				@CRS_ID_DOC,
				@CRS_TIPOPASE,
				@CRS_SUBEDOC,
				@CRS_TIPOPASEDOC,
				@CRS_ID_DOC_OPCION
		END

	CLOSE cursorCampos

	DEALLOCATE cursorCampos

	DECLARE cursorDocs CURSOR
		FOR
	SELECT
		DISTINCT D.CAMPO
	FROM DOCS D
	INNER JOIN DOCS_TIPOPASE DT
		ON D.ID_DOC = DT.ID_DOC
	WHERE 
		((DT.TIPOPASE = 'TRABAJO') OR (DT.TIPOPASE = 'OPCIONAL')) AND
		(DT.DIVISION = @DIVISION) AND
		(D.ACTIVO = 'SI') AND
		(D.ID_TIPO_PROPIETARIO = 1 )
	ORDER BY D.CAMPO 
	
	OPEN cursorDocs

	FETCH NEXT FROM cursorDocs INTO 
		@CRS_CAMPO

	WHILE @@FETCH_STATUS = 0
		BEGIN
			
			SET @CAMPOS_DOC = @CAMPOS_DOC + ',' + @CRS_CAMPO		
			
			FETCH NEXT FROM cursorDocs INTO 
				@CRS_CAMPO
		END

	CLOSE cursorDocs

	DEALLOCATE cursorDocs


	DECLARE cursorFecs CURSOR
		FOR
	SELECT
		DISTINCT DF.CAMPO_BD
	FROM  DOCS_FEC DF
	INNER JOIN DOCS_FEC_TIPOPASE DFT
		ON DF.ID_DOC_FEC = DFT.ID_DOC_FEC
	WHERE
		(DFT.TIPOPASE = 'TRABAJO') AND
		(DFT.DIVISION = @DIVISION)
	ORDER BY DF.CAMPO_BD 
	
	OPEN cursorFecs

	FETCH NEXT FROM cursorFecs INTO 
		@CRS_CAMPO

	WHILE @@FETCH_STATUS = 0
		BEGIN
			
			SET @CAMPOS_FEC = @CAMPOS_FEC + ',' + @CRS_CAMPO		
			
			FETCH NEXT FROM cursorFecs INTO 
				@CRS_CAMPO
		END

	CLOSE cursorFecs

	DEALLOCATE cursorFecs

	/**********[CAMPOS]*********/


	SET @CAMPOS = NULL

	SET @CAMPOS_PVT_DOC = '[SIN]'

	SET @CAMPOS = STUFF(
							(
								SELECT
									DISTINCT
										',' + D.CAMPO
								FROM DOCS D
								INNER JOIN	DOCS_TIPOPASE DT
									ON D.ID_DOC = DT.ID_DOC
								WHERE
									(DT.TIPOPASE = 'TRABAJO' OR (DT.TIPOPASE = 'OPCIONAL' AND D.ID_DOC = 62)) AND
									(DT.DIVISION = @DIVISION) AND
									(D.ACTIVO = 'SI') AND
									(D.SUBEDOC = 'SI') AND
									(D.ID_TIPO_PROPIETARIO = 1)
								FOR XML PATH('')
							), 1, 1, ''
					)
	
	IF(@CAMPOS IS NOT NULL)
		BEGIN
			SET @CAMPOS_PVT_DOC = '[' + REPLACE(@CAMPOS, ',', '], [') + ']'
		END
	ELSE
		BEGIN
			SET @CAMPOS_PVT_DOC = '[SIN]'
		END

	/************/
	
	SET @CAMPOS = NULL

	SET @CAMPOS_PVT_FEC = '[SIN]'

	SET @CAMPOS = STUFF(
						(
							SELECT
								DISTINCT
									',' + DOCS_FEC.CAMPO_BD
								FROM DOCS D
								INNER JOIN DOCS_TIPOPASE DT
									ON D.ID_DOC = DT.ID_DOC
								INNER JOIN DOCS_FEC
									ON DT.ID_DOC = DOCS_FEC.ID_DOC_DEPEND
								INNER JOIN DOCS_FEC_TIPOPASE
									ON DOCS_FEC.ID_DOC_FEC = DOCS_FEC_TIPOPASE.ID_DOC_FEC
								WHERE
									(D.ID_TIPO_PROPIETARIO = 1) AND
									(D.ACTIVO = 'SI') AND
									(DT.DIVISION = @DIVISION) AND
									(DOCS_FEC_TIPOPASE.DIVISION = @DIVISION)
							FOR XML PATH('')
						), 1, 1, ''
				) 
	
	IF(@CAMPOS IS NOT NULL)
		BEGIN
			SET @CAMPOS_PVT_FEC = '[' + REPLACE(@CAMPOS, ',', '], [') + ']'
		END
	ELSE
		BEGIN
			SET @CAMPOS_PVT_FEC = '[SIN]'
		END

	/************/
	--PRINT('@DIVISION:' + @DIVISION)
	--PRINT('@EMPRESA:' + @EMPRESA)
	--PRINT('@ESTADO:' + @ESTADO)
	--PRINT('@OST:' + @OST)
	--PRINT('@CAMPOS_PVT_DOC:' + @CAMPOS_PVT_DOC)
	--PRINT('@CAMPOS_PVT_FEC:' + @CAMPOS_PVT_FEC)
	
	--PRINT('@CAMPOS_REPORT:' + @CAMPOS_REPORT)
	--PRINT('@CAMPOS_CONDUCCION:' + @CAMPOS_CONDUCCION)
	--PRINT('@CAMPOS_DOC:' + @CAMPOS_DOC)
	--PRINT('@CAMPOS_FEC:' + @CAMPOS_FEC)

	/************/

	IF(@ESTADO = 'BL')
		BEGIN
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('SELECT TABLITA.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       W.ROL, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       COALESCE((SELECT TOP 1 [dbo].[fn_WL_Conductor] (W.RUT, ''' + @DIVISION + ''', ''' + @HOY + ''') FROM TAB_TIPOPASE_DIVISION), -1) AS CERT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('FROM   (SELECT WL.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               DOCS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               FECHAS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               ISNULL((SELECT TOP 1 LPF.LICONDLT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                       FROM   LOTEPASESFUN AS LPF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              INNER JOIN LOTEPASES AS LP ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                      ON LPF.NLOTEPROC = LP.LOTENUM ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                       WHERE  ( LPF.SINOLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              AND ( LP.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              AND ( LPF.RUTLOTE = WL.RUT ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              AND ( LPF.LICONDLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              AND ''' + @HOY + ''' BETWEEN LOTEFINICIO AND LOTEFFINAL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      ), ''NO'') ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               AS PASECONDUC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('        FROM   VW_WL_BLOQ WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   (SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               INNER JOIN VW_WL_BLOQ WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                       ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          AND ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               WL.EMPRESA = F.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          AND ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        WHERE  F.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND F.DIVISION = ( CASE ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                                    WHEN F.COMUN_DIV = ''SI'' THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                                    ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                                  END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( ( F.COMUN = 0 AND F.TIPOPASE = ''TRABAJO'' ) OR ( F.TIPOPASE = ''OPCIONAL'' AND F.ID_DOC = 62 ) ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               INNER JOIN VW_WL_BLOQ WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                       ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          AND ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('    AND F.DIVISION = ( CASE ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                                    WHEN F.COMUN_DIV = ''SI'' THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                                    ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                                  END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND F.COMUN = 1 ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( F.TIPOPASE = ''TRABAJO'' OR F.ID_DOC = 62 )) PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       PIVOT ( COUNT(ID_DOC) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                             FOR [CAMPO] IN (' + @CAMPOS_PVT_DOC + ') ) AS p) AS DOCS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                            ON WL.RUT = DOCS.RUTD ')) + ' '

			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   (SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               INNER JOIN VW_WL_BLOQ WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                       ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('															 AND D.EMPRESA = WL.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        WHERE  D.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( DCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( DFCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                        D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               INNER JOIN VW_WL_BLOQ WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                       ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('															 AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                        WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( DCOMUN = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               AND ( DFCOMUN IN( 1, 0 ) )) AS PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       PIVOT ( MAX(FECHA) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                             FOR [CAMPO_BD] IN (' + @CAMPOS_PVT_FEC + ') ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AS p) AS FECHAS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                            ON WL.RUT = FECHAS.RUTF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('        WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' AND WL.OST= ''' + @OST + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               AND WL.DIVISION = ''' + @DIVISION + ''') AS TABLITA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       INNER JOIN WORKERS W ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               ON W.RUT = TABLITA.RUT '))
		END
	ELSE IF(@ESTADO = 'SI')
		BEGIN
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('SELECT WL.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       DOCS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       FECHAS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       ISNULL((SELECT TOP 1 LPF.LICONDLT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               FROM   LOTEPASESFUN AS LPF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      INNER JOIN LOTEPASES AS LP ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              ON LPF.NLOTEPROC = LP.LOTENUM ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               WHERE  ( LPF.SINOLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LP.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LPF.RUTLOTE = WL.RUT ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LPF.LICONDLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ''' + @HOY + ''' BETWEEN LOTEFINICIO AND LOTEFFINAL) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       , ''NO'') ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AS PASECONDUC, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       COALESCE((SELECT TOP 1 [dbo].[fn_WL_Conductor] (WL.RUT, ''' + @DIVISION + ''', ''' + @HOY + ''') FROM TAB_TIPOPASE_DIVISION), -1) AS CERT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('FROM   VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                         AND WL.EMPRESA = F.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  F.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND WL.VALIDADO = ''SI'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.DIVISION = ( CASE ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            WHEN F.COMUN_DIV = ''SI'' THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( ( F.COMUN = 0 AND F.TIPOPASE = ''TRABAJO'' ) OR ( F.TIPOPASE = ''OPCIONAL'' AND F.ID_DOC = 62 ) ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND WL.VALIDADO = ''SI'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.DIVISION = ( CASE')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('															WHEN F.COMUN_DIV = ''SI'' THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.COMUN = 1 ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( F.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                              OR F.ID_DOC = 62 )) PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                               PIVOT ( COUNT(ID_DOC) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO] IN (' + @CAMPOS_PVT_DOC + ') ) AS p) AS DOCS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                    ON WL.RUT = DOCS.RUTD ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('      FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.EMPRESA = WL.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  D.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND WL.VALIDADO = ''SI'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DFCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND WL.VALIDADO = ''SI'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DCOMUN = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DFCOMUN IN( 1, 0 ) )) AS PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                               PIVOT ( MAX(FECHA) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO_BD] IN (' + @CAMPOS_PVT_FEC + ') ) AS p) AS FECHAS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                    ON WL.RUT = FECHAS.RUTF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' AND WL.OST= ''' + @OST + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AND WL.VALIDADO = ''SI'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AND WL.AUTOR = ''SI'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AND WL.DIVISION = ''' + @DIVISION + ''' '))
		END
	ELSE IF(@ESTADO = 'NO')
		BEGIN
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('SELECT WL.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       DOCS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       FECHAS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       ISNULL((SELECT TOP 1 LPF.LICONDLT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               FROM   LOTEPASESFUN AS LPF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      INNER JOIN LOTEPASES AS LP ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              ON LPF.NLOTEPROC = LP.LOTENUM ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               WHERE  ( LPF.SINOLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LP.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LPF.RUTLOTE = WL.RUT ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LPF.LICONDLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ''' + @HOY + ''' BETWEEN LOTEFINICIO AND LOTEFFINAL) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       , ''NO'') ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AS PASECONDUC, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       COALESCE((SELECT TOP 1 [dbo].[fn_WL_Conductor] (WL.RUT, ''' + @DIVISION + ''', ''' + @HOY + ''') FROM TAB_TIPOPASE_DIVISION), -1) AS CERT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('FROM   VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.EMPRESA = F.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  F.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.DIVISION = ( CASE ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            WHEN F.COMUN_DIV = ''SI'' THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( ( F.COMUN = 0 AND F.TIPOPASE = ''TRABAJO'' ) OR ( F.TIPOPASE = ''OPCIONAL'' AND F.ID_DOC = 62 ) ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('  INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.DIVISION = ( CASE ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            WHEN F.COMUN_DIV = ''SI'' THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.COMUN = 1 ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( F.TIPOPASE = ''TRABAJO'' OR F.ID_DOC = 62 )) PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                               PIVOT ( COUNT(ID_DOC) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO] IN (' + @CAMPOS_PVT_DOC + ') ) AS p) AS DOCS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                    ON WL.RUT = DOCS.RUTD ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.EMPRESA = WL.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  D.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DFCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DCOMUN = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DFCOMUN IN( 1, 0 ) )) AS PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                               PIVOT ( MAX(FECHA) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO_BD] IN (' + @CAMPOS_PVT_FEC + ') ) AS p) AS FECHAS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                    ON WL.RUT = FECHAS.RUTF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' AND WL.OST= ''' + @OST + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AND WL.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AND WL.VALIDADO = ''NO'' ')) + ' '
		END
	ELSE /* @ESTADO = '' */
		BEGIN
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('SELECT WL.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       DOCS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       FECHAS.*, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       ISNULL((SELECT TOP 1 LPF.LICONDLT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               FROM   LOTEPASESFUN AS LPF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      INNER JOIN LOTEPASES AS LP ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                              ON LPF.NLOTEPROC = LP.LOTENUM ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('               WHERE  ( LPF.SINOLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LP.DIVISION = ''' + @DIVISION + ''' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LPF.RUTLOTE = WL.RUT ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ( LPF.LICONDLT = ''SI'' ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                      AND ''' + @HOY + ''' BETWEEN LOTEFINICIO AND LOTEFFINAL) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       , ''NO'') ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AS PASECONDUC, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       COALESCE((SELECT TOP 1 [dbo].[fn_WL_Conductor] (WL.RUT, ''' + @DIVISION + ''', ''' + @HOY + ''') FROM TAB_TIPOPASE_DIVISION), -1) AS CERT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('FROM   VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.EMPRESA = F.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  F.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.DIVISION = ( CASE ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            WHEN ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                           F.COMUN_DIV = ''SI'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( ( F.COMUN = 0 AND F.TIPOPASE = ''TRABAJO'' ) OR ( F.TIPOPASE = ''OPCIONAL'' AND F.ID_DOC = 62 ) ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                SELECT DISTINCT F.RUT AS RUTD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.CAMPO, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                F.ID_DOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_DOC_EMP F ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = F.RUTDOC ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND WL.DIVISION = F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.DIVISION = ( CASE ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            WHEN F.COMUN_DIV = ''SI'' THEN F.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                            ELSE ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                          END ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND F.COMUN = 1 ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( F.TIPOPASE = ''TRABAJO'' OR F.ID_DOC = 62 )) PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                               PIVOT ( COUNT(ID_DOC) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO] IN (' + @CAMPOS_PVT_DOC + ') ) AS p) AS DOCS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                    ON WL.RUT = DOCS.RUTD ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       LEFT OUTER JOIN (SELECT * ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                        FROM   (SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.EMPRESA = WL.EMPRESA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  D.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DFCOMUN = 0 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                UNION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                SELECT DISTINCT D.CAMPO_BD, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.RUT AS RUTF, ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                D.FECHA ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                FROM   VW_FEC_DIV AS D ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       INNER JOIN VW_WL_NOMINA WL ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                               ON WL.RUT = D.RUT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                                  AND D.DIVISION = WL.DIVISION ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.DIVISION = ''' + @DIVISION + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND D.TIPOPASE = ''TRABAJO'' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( D.ID_TIPO_PROPIETARIO = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DCOMUN = 1 ) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                       AND ( DFCOMUN IN( 1, 0 ) )) AS PVT ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                               PIVOT ( MAX(FECHA) ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                                     FOR [CAMPO_BD] IN (' + @CAMPOS_PVT_FEC + ') ) AS p) AS FECHAS ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('                    ON WL.RUT = FECHAS.RUTF ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('WHERE  WL.EMPRESA = ''' + @EMPRESA + ''' AND WL.OST= ''' + @OST + ''' ')) + ' '
			SET @SQL1 = @SQL1 + ' ' + LTRIM(RTRIM('       AND WL.DIVISION = ''' + @DIVISION + ''' ')) + ' '
		END

	EXEC(@SQL1)

END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_SELECT_LABORALES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_LABORALES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_LABORALES_CTTA] 
( @RUT                nvarchar(10) = NULL
, @EMPRESA            nvarchar(50) = NULL) AS 
BEGIN
	SELECT W.RUT		, W.TIPOPASE , D.DIVISION	, D.DIVCOD
		 , W.FINIPASE	, W.FFINPASE , W.QUIEN		, W.LOTE	
		 , W.OST		, W.AUTOR	 , W.EMPRESA	, E.ACRONIMO
		 , CASE WHEN (SELECT [dbo].[fn_WL_Certificado] (@RUT , W.EMPRESA , W.TIPOPASE, D.DIVCOD ,[dbo].[hoy](GETDATE()))) = 1 THEN 'true' ELSE 'false' END AS CERTFUN
	FROM WORKERSLOCAL AS W, A024_DIVISIONES AS D , ENTERPRISE AS E
	WHERE (D.DIVCOD = W.DIVISION) 
	AND (W.RUT = @RUT) 
	AND (W.EMPRESA = @EMPRESA)  
	AND (E.IDEMPRESA = W.EMPRESA)
	AND (dbo.hoy(GETDATE()) BETWEEN W.FINIPASE AND W.FFINPASE) ORDER BY W.LOTE
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_SELECT_ONE_RUT_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_ONE_RUT_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_SELECT_ONE_RUT_CTTA]
/*
EXEC V4MVC_WORKERSLOCAL_SELECT_ONE_RUT_CTTA '06641086',0
EXEC V4MVC_WORKERSLOCAL_SELECT_ONE_RUT_CTTA '89526892',0
*/
(
 @RUT			NVARCHAR(20) = NULL
,@RESTRICCIONES	INT
)
AS
BEGIN
DECLARE @DIVISION	NVARCHAR(MAX)
DECLARE @EMPRESA	NVARCHAR(20)
DECLARE @NOMBRE		NVARCHAR(100)
DECLARE @APELLIDOS	NVARCHAR(100)
DECLARE @AUTOR		NVARCHAR(4)

CREATE TABLE #WORKES (
EMPRESA				NVARCHAR(20)
,NOMBRES			NVARCHAR(100)
,APELLIDOS			NVARCHAR(100)
,AUTOR				NVARCHAR(4)
,PUEDE_PEDIR_PASE	NVARCHAR(10)
,RESTRICCION		INT
)
	IF EXISTS (
	SELECT  EMPRESA FROM WORKERS WHERE RUT = @RUT)
	BEGIN
		IF (@RESTRICCIONES <> 0 ) 
		BEGIN 
			SELECT @DIVISION = VALOR1 FROM PARAMETROS_V2 WHERE DESCRIPCION = 'Cursos Reserva Restricciones'
			DECLARE @QUERY		NVARCHAR (MAX)
			SET @QUERY = (' 
				INSERT INTO #WORKES
				(EMPRESA)
				SELECT   EMPRESA 
				FROM WORKERSLOCAL 
				WHERE (dbo.hoy(GETDATE()) BETWEEN FINIPASE AND FFINPASE) 
				AND (AUTOR IN (''SI'',''NO'')) 
				AND (RUT =  '''+  CAST(@RUT AS NVARCHAR)  + ''') AND ( DIVISION IN ( '+ @DIVISION +') )  
				')
				EXEC (@QUERY)
				IF EXISTS (
					SELECT EMPRESA FROM #WORKES
				)
					UPDATE #WORKES SET  EMPRESA  = @EMPRESA
				ELSE
					INSERT INTO #WORKES (EMPRESA) VALUES ('108')
				
		END
		ELSE
		BEGIN
			IF EXISTS (
				SELECT EMPRESA  FROM WORKERSLOCAL 
				WHERE (dbo.hoy(GETDATE()) BETWEEN FINIPASE AND FFINPASE) 
				AND (AUTOR IN ('SI','NO')) 
				AND (RUT =   @RUT) ) 
			BEGIN 
				INSERT INTO #WORKES
				(EMPRESA)
				SELECT TOP 1 EMPRESA  FROM WORKERSLOCAL 
				WHERE (dbo.hoy(GETDATE()) BETWEEN FINIPASE AND FFINPASE) 
				AND (AUTOR IN ('SI','NO')) 
				AND (RUT =   @RUT) 
			END
			ELSE	
				INSERT INTO #WORKES (EMPRESA) VALUES ('108') 
		END
		SELECT @NOMBRE=NOMBRES		,@APELLIDOS=APELLIDOS	,@AUTOR=AUTOR 
		FROM WORKERS WHERE RUT = @RUT

		UPDATE #WORKES
		SET NOMBRES = @NOMBRE     ,APELLIDOS=@APELLIDOS			,AUTOR= @AUTOR

		IF ( @AUTOR ='SI' OR @AUTOR = 'XX')
		BEGIN
			UPDATE #WORKES SET PUEDE_PEDIR_PASE = 'FALSE'
		END
		UPDATE #WORKES SET RESTRICCION = @RESTRICCIONES
		SELECT* , DBO.HOY(GETDATE()) AS FECHA , DBO.AHORA(GETDATE()) AS HORA  FROM #WORKES

	END
	ELSE
		SELECT '' AS Empresa ,DBO.HOY(GETDATE()) AS FECHA , DBO.AHORA(GETDATE()) AS HORA
END
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_UPDATE_BLOQUEO_LABORALES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_UPDATE_BLOQUEO_LABORALES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_UPDATE_BLOQUEO_LABORALES_CTTA]
( @RUT                nvarchar(10) = NULL
, @USUARIO            nvarchar(20) = NULL
, @DIVISION			  nvarchar(4) = NULL
, @LOTE			      int = NULL) AS 
BEGIN
	UPDATE WORKERSLOCAL SET AUTOR = 'BL'
						  , QUIEN = @USUARIO
						  , VALIDADO = 'NO'
						  , FECHAMOD = [dbo].[hoy](GETDATE())
						  , HORAMOD = [dbo].[ahora](GETDATE())
	WHERE (RUT = @RUT) AND 
		  (LOTE = @LOTE) AND 
		  (DIVISION = @DIVISION)
END

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID( N'[dbo].[V4MVC_WORKERSLOCAL_UPDATE_LABORALES_CTTA]' ) AND type IN ( N'P', N'FN' ))\nDROP PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_UPDATE_LABORALES_CTTA]\nGO\nCREATE PROCEDURE [dbo].[V4MVC_WORKERSLOCAL_UPDATE_LABORALES_CTTA]
( @RUT                nvarchar(10) = NULL
, @EMPRESA            nvarchar(50) = NULL
, @DIVISION			   nvarchar(4) = NULL	) AS 
BEGIN
	IF EXISTS(SELECT RUT FROM WORKERSLOCAL 
				WHERE RUT = @RUT AND 
				DIVISION = @DIVISION 
				AND LOTE = 0 
				AND EMPRESA = @EMPRESA)
		BEGIN
			UPDATE WORKERSLOCAL SET TIPOPASE = 'TRABAJO'
								  , FINIPASE = [dbo].[hoy](GETDATE())
								  , FFINPASE = [dbo].[hoy](DATEADD(MONTH,120,GETDATE()))
								  , AUTOR = 'NO'
								  , OST = 'NOMINA' 
			WHERE RUT = @RUT AND 
				  DIVISION = @DIVISION 
				  AND LOTE = 0 
				  AND EMPRESA = @EMPRESA
		END
	ELSE
		BEGIN
			INSERT INTO WORKERSLOCAL (RUT, EMPRESA, DIVISION, TIPOPASE
									, FINIPASE, FFINPASE, AUTOR, LOTE
									, OST) 
							VALUES (@RUT,@EMPRESA,@DIVISION,'TRABAJO'
									,[dbo].[hoy](GETDATE()),[dbo].[hoy](DATEADD(MONTH,120,GETDATE())),'NO', 0
									,'NOMINA')
		END

END

