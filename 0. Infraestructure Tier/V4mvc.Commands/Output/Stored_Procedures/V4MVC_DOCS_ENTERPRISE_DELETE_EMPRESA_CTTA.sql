CREATE PROCEDURE [dbo].[V4MVC_DOCS_ENTERPRISE_DELETE_EMPRESA_CTTA]
( 
  @ID			UNIQUEIDENTIFIER
 ,@ID_EMPRESA	NVARCHAR(10)
) AS 
BEGIN
	DECLARE @CURR_FECHA NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 112) /* yyyymmdd */
	DECLARE @CURR_TIEMPOFULL NVARCHAR(8) = convert(NVARCHAR(8), getdate(), 108) /* hh:mm:ss */
	
	DECLARE @NROOST NVARCHAR(14)
	DECLARE @DIVISION NVARCHAR(10)
	DECLARE @CUMPLE NVARCHAR(2) = 'NO'
	DECLARE @OCUMPLE NVARCHAR(2)

	DELETE
	FROM DOCS_ENTERPRISE
	WHERE ID = @ID
	
	DELETE
	FROM ARCHIVOS
	WHERE ID = @ID

	IF([dbo].[V4MVC_FGET_RESULTADO_EMPRESA](@ID_EMPRESA) = 1)
		BEGIN
			SET @CUMPLE = 'SI'
		END

	/*		DECLARE @IDEMPRESA NVARCHAR(10)
			DECLARE @ACRONIMO NVARCHAR(50)
			O.IDEMPRESA, E.ACRONIMO, CONVERT(NVARCHAR(20), O.FECHA_AVISOESE,113) AS FECHA_AVISO, AD.GLOSA
	*/
	DECLARE getEntry CURSOR FOR
	SELECT 
		O.NROOST,
		OD.DIVISION
	FROM OST O
	INNER JOIN OSTDIVLOCAL OD
		ON OD.EMPRESA = O.IDEMPRESA AND
		   OD.OST = O.NROOST AND
		   OD.ACTIVO = 'SI'
	LEFT OUTER JOIN ENTERPRISE E
		ON O.IDEMPRESA = E.IDEMPRESA
	LEFT OUTER JOIN A024_DIVISIONES AD
		ON OD.DIVISION = AD.DIVCOD
	WHERE
		O.AUTOR = 'SI' AND
		O.FECTERM >= dbo.hoy(getdate()) AND
		O.FECHA_AVISOESE IS NOT NULL AND
		O.IDEMPRESA = @ID_EMPRESA
	
	OPEN getEntry
	FETCH NEXT
	FROM getEntry INTO @NROOST, @DIVISION
	WHILE @@FETCH_STATUS = 0
		BEGIN
			SET @OCUMPLE = ''

			SELECT
				TOP 1
				@OCUMPLE = CUMPLE
			FROM LOG_CUMPLIMIENTO_EMPRESAS
			WHERE
				EMPRESA = @ID_EMPRESA AND
				DIVISION = @DIVISION
			ORDER BY ID DESC
			
			IF(@OCUMPLE = '')
				BEGIN
					INSERT INTO LOG_CUMPLIMIENTO_EMPRESAS
						  (
						   EMPRESA,OST,DIVISION,FECHA,HORA,CUMPLE)
					VALUES 
						  (
						   @ID_EMPRESA, @NROOST, @DIVISION, @CURR_FECHA,
						   @CURR_TIEMPOFULL, @CUMPLE)
				END
			ELSE
				BEGIN
					IF(@OCUMPLE <> @CUMPLE)
						BEGIN
							INSERT INTO LOG_CUMPLIMIENTO_EMPRESAS
									(
									  EMPRESA,OST,DIVISION,FECHA,HORA,CUMPLE)
							VALUES
							        (
									  @ID_EMPRESA, @NROOST, @DIVISION,
									  @CURR_FECHA, @CURR_TIEMPOFULL, @CUMPLE)
						END
				END
			FETCH NEXT
			FROM getEntry INTO @NROOST, @DIVISION
		END

	CLOSE getEntry
	DEALLOCATE getEntry
END

