CREATE PROCEDURE [dbo].[V4MVC_A142_RESERVAS_VALIDAR_FUNCIONARIO_CTTA]
(
 @RUT			NVARCHAR(10)
,@NOMBRES		NVARCHAR(50)
,@APELLIDOS		NVARCHAR(50)
,@EMPRESA		NVARCHAR(10)
,@CURSO			INT
,@CODIGO		INT
,@FECHA			NVARCHAR(8)
)
AS
BEGIN

	DECLARE @DATE_FECHA						DATETIME		= @FECHA
	DECLARE @MENSAJE						NVARCHAR(MAX)	= ''
	DECLARE @FECHARES						NVARCHAR(8)
	DECLARE @HORARES						NVARCHAR(8)
	DECLARE @DIAS_RETOMAR_REPROBADO			INT				= 0
	DECLARE @MESES_ANTES_RENOVACION			INT				= 0
	DECLARE @LIMITE_VECES_REPROBAR_ANIO		INT				= 0
	DECLARE @PARAMETRO						INT				= 0

	IF EXISTS(SELECT VALOR FROM A036_CURSOPARAMETROS WHERE (ID_PARAMETRO = 1))
	BEGIN SET @DIAS_RETOMAR_REPROBADO =  (SELECT VALOR FROM A036_CURSOPARAMETROS WHERE (ID_PARAMETRO = 1)) END

	IF EXISTS(SELECT VALOR FROM A036_CURSOPARAMETROS WHERE (ID_PARAMETRO = 2))
	BEGIN SET @MESES_ANTES_RENOVACION =  (SELECT VALOR FROM A036_CURSOPARAMETROS WHERE (ID_PARAMETRO = 2)) END

	IF EXISTS(SELECT VALOR FROM A036_CURSOPARAMETROS WHERE (ID_PARAMETRO = 3))
	BEGIN SET @LIMITE_VECES_REPROBAR_ANIO =  (SELECT VALOR FROM A036_CURSOPARAMETROS WHERE (ID_PARAMETRO = 3)) END

	IF NOT EXISTS (SELECT AUTOR FROM WORKERS WHERE RUT = @RUT)
	BEGIN
		INSERT INTO WORKERS (RUT, NOMBRES, APELLIDOS, EMPRESA) VALUES (@RUT, @NOMBRES, @APELLIDOS, @EMPRESA)
	END
		
	IF EXISTS (SELECT RUT FROM A142_RESERVAS WHERE (RUT=@RUT) AND (CURSO=@CURSO) AND (FINALIZADO = 'NO')  AND CODIGO = @CODIGO)
	BEGIN

		DECLARE @VAR_NOMBRES		NVARCHAR(50)
		DECLARE @VAR_APELLIDOS		NVARCHAR(50)
		DECLARE @VAR_FECHA			NVARCHAR(8)
		DECLARE @VAR_FECHAFINAL		NVARCHAR(8)
		DECLARE @VAR_HORA			NVARCHAR(8)

		SELECT	 @VAR_NOMBRES	= NOMBRES
				,@VAR_APELLIDOS = APELLIDOS 
				,@VAR_FECHA		= FECHA
				,@VAR_HORA		= HORA
		FROM	A142_RESERVAS 
		WHERE	RUT		=	@RUT 
		AND		CURSO	=	@CURSO 
		AND		FINALIZADO = 'NO'  
		AND		CODIGO = @CODIGO

		SET @MENSAJE = @MENSAJE + 'Reserva para ' + @VAR_NOMBRES + ' ' + @VAR_APELLIDOS + ' ya existe, para el curso con fecha'
		SET @FECHARES = @VAR_FECHA
		SET @HORARES = @VAR_HORA
		SET @PARAMETRO = 1

	END
	ELSE
	BEGIN

		IF EXISTS(	SELECT RUT 
					FROM	A142_RESERVAS 
					WHERE	RUT			=	@RUT 
					AND		CURSO		=	@CURSO 
					AND		FINALIZADO	= 'SI' 
					AND		ASISTIO		= 'NO' 
					AND		APROBO		= 'NO' 
					AND		FECHA		BETWEEN (SELECT CONVERT(NVARCHAR(8),DATEADD(DAY,(@DIAS_RETOMAR_REPROBADO * -1),@FECHA),112)) AND @FECHA)
		BEGIN
				SET @MENSAJE =  @RUT + ' ' + @NOMBRES + ' ' + @APELLIDOS + ' No puede reservar nuevamente para el mismo curso al que no asistio en periodo de ' + CAST(@DIAS_RETOMAR_REPROBADO AS VARCHAR) + ' Días.'
				SET @PARAMETRO = 2
		END

		IF EXISTS(	SELECT COUNT(*) 
					FROM		A142_RESERVAS 
					WHERE		RUT		=	@RUT 
					AND			CURSO	=	@CURSO 
					AND			ASISTIO =	'NO' 
					AND			APROBO =	'NO' 
					AND			FINALIZADO = 'SI' 
					AND			FECHA LIKE ''  + SUBSTRING(@FECHA,1,4) + '%'
		
		)
		BEGIN
			IF((SELECT COUNT(*) AS CUENTA 
					FROM		A142_RESERVAS 
					WHERE		RUT		=	@RUT 
					AND			CURSO	=	@CURSO 
					AND			ASISTIO =	'NO' 
					AND			APROBO =	'NO' 
					AND			FINALIZADO = 'SI' 
					AND			FECHA LIKE ''  + SUBSTRING(@FECHA,1,4) + '%') >= @LIMITE_VECES_REPROBAR_ANIO )
					BEGIN
						SET @MENSAJE = @RUT + ' ' + @NOMBRES +' '+ @APELLIDOS + ' No puede reservar para el mismo curso realizado y reprobado en el mismo año mas de ' + CAST(@LIMITE_VECES_REPROBAR_ANIO AS VARCHAR) + ' veces'
						SET @PARAMETRO = 3
					END
		END


		IF EXISTS(	SELECT RUT
					FROM	A142_RESERVAS 
					WHERE	RUT= @RUT 
					AND		APROBO	= 'SI' 
					AND		CURSO	= @CURSO 
					AND		FINALIZADO = 'SI' 
					AND		dbo.hoy(DATEADD(m,VENCIMIENTO - @MESES_ANTES_RENOVACION,FECHA)) > @FECHA)
		BEGIN
			SET @VAR_FECHAFINAL = ( SELECT dbo.hoy(DATEADD(m,VENCIMIENTO,FECHA)) 
									FROM A142_RESERVAS WHERE (RUT= @RUT) AND (APROBO = 'SI') AND (CURSO= @CURSO) AND (FINALIZADO = 'SI')    
									AND dbo.hoy(DATEADD(m,VENCIMIENTO - @MESES_ANTES_RENOVACION,FECHA)) > @FECHA  
								   )
			SET @MENSAJE = @RUT + ' ' + @NOMBRES + ' ' + @APELLIDOS + ' No puede reservar para el mismo curso realizado anteriormente que aun esta vigente hasta el ' + @VAR_FECHAFINAL + ' ,puede reservar ' + CAST(@MESES_ANTES_RENOVACION AS VARCHAR) + ' mes(es) antes que cumpla el vencimiento.'
 			SET @PARAMETRO = 4
		END

	END

	IF(@PARAMETRO = 0)
	BEGIN SELECT @PARAMETRO AS PARAMETRO END

	IF(@PARAMETRO = 1)
	BEGIN	SELECT @PARAMETRO AS PARAMETRO ,@MENSAJE AS MENSAJE ,@FECHARES AS FECHA, @HORARES AS HORA	END

	IF(@PARAMETRO = 2 OR @PARAMETRO = 3)
	BEGIN	SELECT @PARAMETRO AS PARAMETRO, @MENSAJE AS MENSAJE    END

	IF(@PARAMETRO = 4)
	BEGIN	SELECT @PARAMETRO AS PARAMETRO, @MENSAJE AS MENSAJE, @VAR_FECHAFINAL AS FECHA, @MESES_ANTES_RENOVACION AS MESES_RENOVACION  END

END
