<div class="modal inmodal" id="VisualizadorArchivos" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="min-width:60%">
        <div class="modal-content animated bounceInRight">
            <div class="modal-header modal-header-primary">
                <h5 class="modal-title" id="exampleModalLabel">@General._VisualizadorArchivo.Lbl_VisualizadorArchivo</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class="fa fa-times"></i></span>
                </button>
            </div>
            <div class="modal-body" id="fileContent">
                <!-- ko if: !($root.CONTENIDO_VACIO) -->
                <object data-bind="attr:{data: 'data:' + $root.TIPOCONTENIDO + ';base64,' + $root.CONTENIDO_BASE64, 'type': $root.TIPOCONTENIDO}" style="width:100%;height:100%;min-height:500px;" frameborder="1" marginheight="0" marginwidth="0"></object>
                <!-- /ko -->
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" data-dismiss="modal"><i class="fa fa-times"></i>&nbsp;@General._VisualizadorArchivo.Btn_Cerrar</button>
            </div>
        </div>
    </div>
</div>
<script>
    var ARCHIVO_ID = null;

    $("#VisualizadorArchivos").on('hidden.bs.modal', function () {
        
    });
    

    $("#VisualizadorArchivos").on("shown.bs.modal", function (e) {
        ARCHIVO_ID = $(e.relatedTarget).data('modal-guid');
        var data = JSON.stringify({
            ID: ARCHIVO_ID
        });
        $.when(obtenerArchivo(data))
            .then(succObtenerArchivo)
            .fail(errObtenerArchivo);
    });

    function ViewModelVisualizador(model) {
        ko.cleanNode($('#fileContent')[0]);
        var self = this;
        self.CONTENIDO_BASE64 = model.CONTENIDO_BASE64;
        self.TIPOCONTENIDO = model.TIPOCONTENIDO;
        self.CONTENIDO_VACIO = is_empty(model.CONTENIDO_BASE64);
    }

    function obtenerArchivo(data) {
        return $.ajax({
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: 'POST',
            url: '@Url.Action("ObtenerArchivo", "Master", new { Area = "" })',
            data: data
        });
    }

    function succObtenerArchivo(data) {
        if (data && data.OK) {
            var vm = new ViewModelVisualizador(data.model);
            ko.applyBindings(vm, $('#fileContent')[0]);
        }
        else {
            swal({
                title: '@Html.Raw(Resources.General.MsgErrorOccurredTryAgainLater)',
                timer: 3000,
                type: "error",
                showConfirmButton: true,
            }, function () {
                swal.close();
            });
        }
    }

    function errObtenerArchivo() {
        swal({
            title: '@Html.Raw(Resources.General.MsgErrorOccurredTryAgainLater)',
            timer: 3000,
            type: "error",
            showConfirmButton: true,
        }, function () {
            swal.close();
        });
    }

   

    
</script>

