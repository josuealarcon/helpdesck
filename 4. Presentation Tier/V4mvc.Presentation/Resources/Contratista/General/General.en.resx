<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="BtnYesBlock" xml:space="preserve">
    <value>Yes, Block</value>
  </data>
  <data name="BtnYesDelete" xml:space="preserve">
    <value>Yes, Delete</value>
  </data>
  <data name="BusesReservaOfficer" xml:space="preserve">
    <value>Officer(s)</value>
  </data>
  <data name="CancelText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="dayNames" xml:space="preserve">
    <value>['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']</value>
  </data>
  <data name="ErrorAjaxCall" xml:space="preserve">
    <value>An error has occurred try again</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="FileAttachedText" xml:space="preserve">
    <value>Attached File</value>
  </data>
  <data name="FileBrowse" xml:space="preserve">
    <value>Browse File</value>
  </data>
  <data name="FilePlaceholder" xml:space="preserve">
    <value>Select file</value>
  </data>
  <data name="GeneralLoadedFile" xml:space="preserve">
    <value>Loaded File</value>
  </data>
  <data name="GeneralUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="GoToPortalSite" xml:space="preserve">
    <value>Go to Portal site</value>
  </data>
  <data name="InformativeMsg" xml:space="preserve">
    <value>Useful info</value>
  </data>
  <data name="IsRequired" xml:space="preserve">
    <value>is required</value>
  </data>
  <data name="Label_GuideAsteriskMandatory" xml:space="preserve">
    <value>Fields preceeded by asterisk are mandatory</value>
  </data>
  <data name="LengthMax100Characters" xml:space="preserve">
    <value>must be 100 characters in length at most</value>
  </data>
  <data name="LengthMax10Characters" xml:space="preserve">
    <value>must be 10 characters in length at most</value>
  </data>
  <data name="LengthMax20Characters" xml:space="preserve">
    <value>must be 20 characters in length at most</value>
  </data>
  <data name="LengthMax30Characters" xml:space="preserve">
    <value>must be 30 characters in length at most</value>
  </data>
  <data name="LengthMax40Characters" xml:space="preserve">
    <value>must be 40 characters in length at most</value>
  </data>
  <data name="LengthMax4Characters" xml:space="preserve">
    <value>must be 4 characters in length at most</value>
  </data>
  <data name="LengthMax50Characters" xml:space="preserve">
    <value>must be 50 characters in length at most</value>
  </data>
  <data name="LengthMax5Characters" xml:space="preserve">
    <value>must be 5 characters in length at most</value>
  </data>
  <data name="LengthMax60Characters" xml:space="preserve">
    <value>must be 60 characters in length at most</value>
  </data>
  <data name="LengthMax70Characters" xml:space="preserve">
    <value>must be 70 characters in length at most</value>
  </data>
  <data name="LengthMax80Characters" xml:space="preserve">
    <value>must be 80 characters in length at most</value>
  </data>
  <data name="LengthMax90Characters" xml:space="preserve">
    <value>must be 90 characters in length at most</value>
  </data>
  <data name="LiteralNo" xml:space="preserve">
    <value>NO</value>
  </data>
  <data name="LiteralYes" xml:space="preserve">
    <value>YES</value>
  </data>
  <data name="monthNames" xml:space="preserve">
    <value>['January', 'February', 'March', 'April', 'May', 'June','July', 'August', 'September', 'October', 'November', 'December']</value>
  </data>
  <data name="monthNamesShort" xml:space="preserve">
    <value>['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']</value>
  </data>
  <data name="MsgAddressCharactersMax50" xml:space="preserve">
    <value>The Address must have a maximum of 50 characters</value>
  </data>
  <data name="MsgAddressCharactersMin5" xml:space="preserve">
    <value>The Address must have a minimum of 5 characters</value>
  </data>
  <data name="MsgAnErrorOccurredTryAgainLater" xml:space="preserve">
    <value>An Error Occurred Try Again Later</value>
  </data>
  <data name="MsgBlockDivision" xml:space="preserve">
    <value>Are you sure you want to block this division?</value>
  </data>
  <data name="MsgBloodGroupCharactersMax10" xml:space="preserve">
    <value>The blood group must have 10 characters maximum</value>
  </data>
  <data name="MsgBloodGroupCharactersMin2" xml:space="preserve">
    <value>The blood group must have 2 characters minimu</value>
  </data>
  <data name="MsgConditionRemoveRegister" xml:space="preserve">
    <value>Are you sure you want to delete the record?</value>
  </data>
  <data name="MsgContinue" xml:space="preserve">
    <value>Continuar</value>
  </data>
  <data name="MsgContinueDel" xml:space="preserve">
    <value>Do you wish to proceed to delete?</value>
  </data>
  <data name="MsgContinueSave" xml:space="preserve">
    <value>Do you wish to proceed and save?</value>
  </data>
  <data name="MsgCostCenterCharactersMax10" xml:space="preserve">
    <value>The Cost Center must be 10 characters maximum</value>
  </data>
  <data name="MsgDataDeleted" xml:space="preserve">
    <value>Data deleted successfully</value>
  </data>
  <data name="MsgDataSaved" xml:space="preserve">
    <value>Data saved correctly</value>
  </data>
  <data name="MsgDataUpdatedCorrectly" xml:space="preserve">
    <value>Data Updated Correctly</value>
  </data>
  <data name="MsgDateendRequired" xml:space="preserve">
    <value>End date is required</value>
  </data>
  <data name="MsgDatestartRequired" xml:space="preserve">
    <value>The start date is required</value>
  </data>
  <data name="MsgDeletionSuccessfullyDone" xml:space="preserve">
    <value>Deletion performed succesfully</value>
  </data>
  <data name="MsgDisputeEnteredCorrectly" xml:space="preserve">
    <value>Dispute Entered Correctly</value>
  </data>
  <data name="MsgDocumentDeletedSuccessfully" xml:space="preserve">
    <value>Document deleted successfully</value>
  </data>
  <data name="MsgDocumentSavedSuccessfully" xml:space="preserve">
    <value>The document was saved successfully</value>
  </data>
  <data name="MsgEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="MsgEditar" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="MsgEmailCharactersMax50" xml:space="preserve">
    <value>The Email must have a maximum of 50 characters</value>
  </data>
  <data name="MsgEmailCharactersMin5" xml:space="preserve">
    <value>The Email must have a minimum of 5 characters</value>
  </data>
  <data name="MsgEnddateGreaterStartdate" xml:space="preserve">
    <value>The end date must be greater than the start date</value>
  </data>
  <data name="MsgEnterAddress" xml:space="preserve">
    <value>Enter Address</value>
  </data>
  <data name="MsgEnterBloodGroup" xml:space="preserve">
    <value>Enter blood group</value>
  </data>
  <data name="MsgEnterCostCenter" xml:space="preserve">
    <value>Enter Cost Center</value>
  </data>
  <data name="MsgEnterEmail" xml:space="preserve">
    <value>Enter your email address</value>
  </data>
  <data name="MsgEnterLastName" xml:space="preserve">
    <value>Enter Last Name</value>
  </data>
  <data name="MsgEnterName" xml:space="preserve">
    <value>Enter Name</value>
  </data>
  <data name="MsgEnterRUT" xml:space="preserve">
    <value>Enter RUT</value>
  </data>
  <data name="MsgEnterRUTOfficials" xml:space="preserve">
    <value>Enter RUT Officials</value>
  </data>
  <data name="MsgEnterValidEmail" xml:space="preserve">
    <value>Enter a valid email address</value>
  </data>
  <data name="MsgErrorOccurredTryAgain" xml:space="preserve">
    <value>An error occurred. Please try again</value>
  </data>
  <data name="MsgErrorOccurredTryAgainLater" xml:space="preserve">
    <value>An error has occurred try again later</value>
  </data>
  <data name="MsgExtensionFileNotAllowed" xml:space="preserve">
    <value>The type of file extension format is not allowed in the selected document type</value>
  </data>
  <data name="MsgExtensionFileNotAllowed_Short" xml:space="preserve">
    <value>Extension not allowed</value>
  </data>
  <data name="MsgFileExceds4MB" xml:space="preserve">
    <value>The size of the uploaded file exceeds the allowed 4MB,should do a bigger compression process</value>
  </data>
  <data name="MsgFileExceds4MB_Short" xml:space="preserve">
    <value>File size greater than 4Mb</value>
  </data>
  <data name="MsgFileExcedsMaximumAllowedCharacter" xml:space="preserve">
    <value>Could not be loaded. The file name exceeds the maximum allowed character of 45 characters</value>
  </data>
  <data name="MsgFileExcedsMaximumAllowedCharacter_Short" xml:space="preserve">
    <value>Filename exceeds 45 characters in length</value>
  </data>
  <data name="MsgLastNameCharactersMax50" xml:space="preserve">
    <value>Last Names must be 50 characters maximum</value>
  </data>
  <data name="MsgLastNameCharactersMin3" xml:space="preserve">
    <value>Last Names must be 3 characters minimum</value>
  </data>
  <data name="MsgNameCharactersMax50" xml:space="preserve">
    <value>Names must be 50 characters maximum</value>
  </data>
  <data name="MsgNameCharactersMin3" xml:space="preserve">
    <value>Names must be 3 characters minimum</value>
  </data>
  <data name="MsgNew" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="MsgPositionCharactersMax50" xml:space="preserve">
    <value>The Position must be 50 characters maximum</value>
  </data>
  <data name="MsgPositionCharactersMin3" xml:space="preserve">
    <value>The Position must be 3 characters minimum</value>
  </data>
  <data name="MsgRemoveDriving" xml:space="preserve">
    <value>Are you sure you want to remove the driving pass in this division?</value>
  </data>
  <data name="MsgRUTCharactersMax15" xml:space="preserve">
    <value>The RUT must have a maximum  of 15 characters</value>
  </data>
  <data name="MsgRUTCharactersMax9" xml:space="preserve">
    <value>The RUT must be 9 characters maximum</value>
  </data>
  <data name="MsgRUTCharactersMin8" xml:space="preserve">
    <value>The RUT must have a minimum of 8 characters</value>
  </data>
  <data name="MsgRUTExisting" xml:space="preserve">
    <value>RUT existing</value>
  </data>
  <data name="MsgRUTInvalid" xml:space="preserve">
    <value>Invalid RUT</value>
  </data>
  <data name="MsgSelectCity" xml:space="preserve">
    <value>Select City</value>
  </data>
  <data name="MsgSelectCommune" xml:space="preserve">
    <value>Select Commune</value>
  </data>
  <data name="MsgSelectCountry" xml:space="preserve">
    <value>Select Country</value>
  </data>
  <data name="MsgSelectDateBirth" xml:space="preserve">
    <value>Select Date of Birth</value>
  </data>
  <data name="MsgSelectGender" xml:space="preserve">
    <value>Select Gender</value>
  </data>
  <data name="MsgSelectRegion" xml:space="preserve">
    <value>Select Region</value>
  </data>
  <data name="MsgTerminateToWorker" xml:space="preserve">
    <value>Do you want to terminate the worker of your company?, To do so, you must upload the document Settlement and enter the reason, In the event that this belongs to the Quellaveco operation, the settlement is direct</value>
  </data>
  <data name="MsgTheRUTCharactersMax10" xml:space="preserve">
    <value>The RUT must be 10 characters maximum</value>
  </data>
  <data name="MsgTheRUTCharactersMin8" xml:space="preserve">
    <value>The RUT must be 8 characters minimum</value>
  </data>
  <data name="NoEntriesWereFound" xml:space="preserve">
    <value>No Entries were found</value>
  </data>
  <data name="SaveText" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SexFemenine" xml:space="preserve">
    <value>Femenine</value>
  </data>
  <data name="SexMasculine" xml:space="preserve">
    <value>Masculine</value>
  </data>
  <data name="SuccessAjaxCall" xml:space="preserve">
    <value>Data updated correctly</value>
  </data>
  <data name="SwalConfirmButtonCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="SwalConfirmButtonDelete" xml:space="preserve">
    <value>Yes, Delete</value>
  </data>
  <data name="TextDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="TextFieldsAsteriskObligatory" xml:space="preserve">
    <value>The fields marked with an asterisk are obligatory</value>
  </data>
  <data name="TextInformation" xml:space="preserve">
    <value>Information</value>
  </data>
</root>